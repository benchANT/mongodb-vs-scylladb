bin/ycsb run scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=52.27.21.157,44.230.88.51,54.185.181.164 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=Z0tmi4DGW6kvjOF -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=500000000 -p operationcount=999900000 -target 87500 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p measurementtype=hdrhistogram  -p hdrhistogram.fileoutput=true  -p hdrhistogram.output.path=/home/developer/results/ 
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.27.21.157,44.230.88.51,54.185.181.164 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=Z0tmi4DGW6kvjOF -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=500000000 -p operationcount=999900000 -target 87500 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p measurementtype=hdrhistogram -p hdrhistogram.fileoutput=true -p hdrhistogram.output.path=/home/developer/results/ -t
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.27.21.157,44.230.88.51,54.185.181.164 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=Z0tmi4DGW6kvjOF -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=500000000 -p operationcount=999900000 -target 87500 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p measurementtype=hdrhistogram -p hdrhistogram.fileoutput=true -p hdrhistogram.output.path=/home/developer/results/ -t
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
Starting test.
[Thread-9] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
Maximum execution time specified as: 1800 secs
[Thread-9] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
2023-04-30 20:14:46:971 0 sec: 0 operations; est completion in 0 second 
[Thread-9] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-9] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-9] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-9] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.230.88.51:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.185.181.164:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.27.21.157:9042 added
[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: a6bee33f-7243-4968-9ffd-53424ef153ca

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.230.88.51; Rack: us-west-2b

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.27.21.157; Rack: us-west-2c

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /54.185.181.164; Rack: us-west-2a

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: QUORUM

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field5=? WHERE y_id=?;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field5=? WHERE y_id=?;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field7=? WHERE y_id=?;'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field7=? WHERE y_id=?;'
2023-04-30 20:14:56:955 10 sec: 681328 operations; 68132.8 current ops/sec; est completion in 4 hours 4 minutes [READ: Count=647188, Max=76671, Min=834, Avg=2061.19, 90=2695, 99=5247, 99.9=17423, 99.99=53855] [UPDATE: Count=34435, Max=75007, Min=850, Avg=1837.27, 90=2311, 99=4731, 99.9=19711, 99.99=58911] 
2023-04-30 20:15:06:955 20 sec: 1455206 operations; 77387.8 current ops/sec; est completion in 3 hours 48 minutes [READ: Count=735242, Max=30191, Min=804, Avg=1948.33, 90=2595, 99=3587, 99.9=6247, 99.99=21919] [UPDATE: Count=38554, Max=23599, Min=884, Avg=1713.48, 90=2221, 99=2863, 99.9=5831, 99.99=18767] 
2023-04-30 20:15:16:955 30 sec: 2229930 operations; 77472.4 current ops/sec; est completion in 3 hours 43 minutes [READ: Count=735808, Max=9559, Min=836, Avg=1946.25, 90=2601, 99=3621, 99.9=5495, 99.99=6947] [UPDATE: Count=38835, Max=9855, Min=912, Avg=1713.5, 90=2223, 99=2873, 99.9=5167, 99.99=6663] 
2023-04-30 20:15:26:955 40 sec: 2999959 operations; 77002.9 current ops/sec; est completion in 3 hours 41 minutes [READ: Count=731444, Max=43359, Min=772, Avg=1958.33, 90=2613, 99=3879, 99.9=6191, 99.99=22863] [UPDATE: Count=38593, Max=23055, Min=828, Avg=1719.55, 90=2231, 99=3069, 99.9=5643, 99.99=19551] 
2023-04-30 20:15:36:955 50 sec: 3767864 operations; 76790.5 current ops/sec; est completion in 3 hours 40 minutes [READ: Count=729666, Max=32159, Min=794, Avg=1963.65, 90=2617, 99=3893, 99.9=6179, 99.99=23775] [UPDATE: Count=38260, Max=24847, Min=870, Avg=1725.32, 90=2237, 99=3083, 99.9=5767, 99.99=15127] 
2023-04-30 20:15:46:955 60 sec: 4541416 operations; 77355.2 current ops/sec; est completion in 3 hours 39 minutes [READ: Count=734656, Max=14095, Min=851, Avg=1949.37, 90=2601, 99=3779, 99.9=5783, 99.99=7283] [UPDATE: Count=38924, Max=10783, Min=881, Avg=1713.05, 90=2223, 99=2991, 99.9=5411, 99.99=6843] 
2023-04-30 20:15:56:955 70 sec: 5310564 operations; 76914.8 current ops/sec; est completion in 3 hours 38 minutes [READ: Count=730548, Max=49759, Min=797, Avg=1960.57, 90=2615, 99=3869, 99.9=6043, 99.99=25135] [UPDATE: Count=38558, Max=36255, Min=819, Avg=1723.78, 90=2239, 99=3095, 99.9=5335, 99.99=15823] 
2023-04-30 20:16:06:955 80 sec: 6081891 operations; 77132.7 current ops/sec; est completion in 3 hours 37 minutes [READ: Count=732806, Max=30687, Min=821, Avg=1954.98, 90=2605, 99=3777, 99.9=5959, 99.99=23599] [UPDATE: Count=38527, Max=23631, Min=850, Avg=1719.23, 90=2225, 99=3061, 99.9=5603, 99.99=20895] 
2023-04-30 20:16:16:955 90 sec: 6853559 operations; 77166.8 current ops/sec; est completion in 3 hours 37 minutes [READ: Count=733028, Max=9063, Min=872, Avg=1954.12, 90=2615, 99=3783, 99.9=5567, 99.99=6807] [UPDATE: Count=38630, Max=7015, Min=870, Avg=1718.08, 90=2233, 99=2999, 99.9=5147, 99.99=6279] 
2023-04-30 20:16:26:955 100 sec: 7621186 operations; 76762.7 current ops/sec; est completion in 3 hours 37 minutes [READ: Count=729027, Max=26959, Min=815, Avg=1964.48, 90=2619, 99=3851, 99.9=6439, 99.99=22735] [UPDATE: Count=38618, Max=24351, Min=871, Avg=1726, 90=2243, 99=3031, 99.9=5967, 99.99=21231] 
2023-04-30 20:16:36:955 110 sec: 8389555 operations; 76836.9 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=729991, Max=34943, Min=790, Avg=1962.29, 90=2611, 99=3881, 99.9=6419, 99.99=22735] [UPDATE: Count=38369, Max=23503, Min=801, Avg=1728.96, 90=2239, 99=3081, 99.9=5835, 99.99=20991] 
2023-04-30 20:16:46:955 120 sec: 9159793 operations; 77023.8 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=732162, Max=14295, Min=847, Avg=1957.45, 90=2613, 99=3839, 99.9=5847, 99.99=7295] [UPDATE: Count=38068, Max=6735, Min=879, Avg=1723.03, 90=2237, 99=3053, 99.9=5575, 99.99=6459] 
2023-04-30 20:16:56:955 130 sec: 9919785 operations; 75999.2 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=722237, Max=46495, Min=810, Avg=1984.99, 90=2707, 99=3959, 99.9=6423, 99.99=24671] [UPDATE: Count=37791, Max=24623, Min=817, Avg=1727.86, 90=2287, 99=3089, 99.9=5687, 99.99=17247] 
2023-04-30 20:17:06:955 140 sec: 10671854 operations; 75206.9 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=714622, Max=45375, Min=791, Avg=2005.84, 90=2777, 99=4131, 99.9=6091, 99.99=25247] [UPDATE: Count=37431, Max=23327, Min=819, Avg=1748.02, 90=2375, 99=3189, 99.9=5771, 99.99=21071] 
2023-04-30 20:17:16:955 150 sec: 11415105 operations; 74325.1 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=705806, Max=10151, Min=836, Avg=2029.69, 90=2905, 99=4435, 99.9=6199, 99.99=7851] [UPDATE: Count=37412, Max=7495, Min=863, Avg=1770.65, 90=2477, 99=3231, 99.9=5467, 99.99=6583] 
2023-04-30 20:17:26:955 160 sec: 12154468 operations; 73936.3 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=702499, Max=32367, Min=792, Avg=2040.3, 90=2913, 99=4595, 99.9=6695, 99.99=23103] [UPDATE: Count=36906, Max=28831, Min=853, Avg=1779.09, 90=2477, 99=3337, 99.9=5847, 99.99=19951] 
2023-04-30 20:17:36:955 170 sec: 12894025 operations; 73955.7 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=702589, Max=46847, Min=791, Avg=2039.98, 90=2901, 99=4447, 99.9=7011, 99.99=22543] [UPDATE: Count=36930, Max=20191, Min=802, Avg=1774.11, 90=2473, 99=3231, 99.9=5483, 99.99=16415] 
2023-04-30 20:17:46:955 180 sec: 13644476 operations; 75045.1 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=713036, Max=9815, Min=788, Avg=2009.98, 90=2803, 99=4159, 99.9=5883, 99.99=7159] [UPDATE: Count=37418, Max=7163, Min=849, Avg=1755.51, 90=2423, 99=3155, 99.9=5303, 99.99=6327] 
2023-04-30 20:17:56:955 190 sec: 14401839 operations; 75736.3 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=719417, Max=49087, Min=797, Avg=1992.19, 90=2711, 99=4027, 99.9=6163, 99.99=25439] [UPDATE: Count=37968, Max=24927, Min=788, Avg=1728.98, 90=2339, 99=3003, 99.9=5587, 99.99=20319] 
2023-04-30 20:18:06:955 200 sec: 15160741 operations; 75890.2 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=720765, Max=50911, Min=784, Avg=1988.29, 90=2713, 99=4021, 99.9=5915, 99.99=25871] [UPDATE: Count=38124, Max=25263, Min=830, Avg=1723.88, 90=2333, 99=2979, 99.9=5403, 99.99=15775] 
2023-04-30 20:18:16:955 210 sec: 15922338 operations; 76159.7 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=723666, Max=11391, Min=823, Avg=1981.07, 90=2707, 99=3967, 99.9=5807, 99.99=7015] [UPDATE: Count=37908, Max=6951, Min=837, Avg=1718.43, 90=2319, 99=2993, 99.9=5555, 99.99=6335] 
2023-04-30 20:18:26:955 220 sec: 16680005 operations; 75766.7 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=719854, Max=44607, Min=812, Avg=1991.43, 90=2715, 99=4063, 99.9=6287, 99.99=23967] [UPDATE: Count=37810, Max=24671, Min=862, Avg=1727.04, 90=2337, 99=3033, 99.9=5811, 99.99=18751] 
2023-04-30 20:18:36:955 230 sec: 17437043 operations; 75703.8 current ops/sec; est completion in 3 hours 35 minutes [READ: Count=719163, Max=29759, Min=772, Avg=1993.07, 90=2713, 99=4023, 99.9=6679, 99.99=23391] [UPDATE: Count=37834, Max=24495, Min=856, Avg=1731.58, 90=2335, 99=3063, 99.9=6207, 99.99=18927] 
2023-04-30 20:18:46:955 240 sec: 18196561 operations; 75951.8 current ops/sec; est completion in 3 hours 35 minutes [READ: Count=721562, Max=19759, Min=827, Avg=1986.41, 90=2713, 99=3993, 99.9=6103, 99.99=12487] [UPDATE: Count=37991, Max=12775, Min=844, Avg=1724.05, 90=2331, 99=3003, 99.9=5531, 99.99=7335] 
2023-04-30 20:18:56:955 250 sec: 18955397 operations; 75883.6 current ops/sec; est completion in 3 hours 35 minutes [READ: Count=720995, Max=49727, Min=823, Avg=1988.27, 90=2709, 99=3989, 99.9=6283, 99.99=25023] [UPDATE: Count=37844, Max=24863, Min=794, Avg=1724.69, 90=2325, 99=3019, 99.9=5663, 99.99=18207] 
2023-04-30 20:19:06:955 260 sec: 19714248 operations; 75885.1 current ops/sec; est completion in 3 hours 35 minutes [READ: Count=720926, Max=46303, Min=802, Avg=1988.28, 90=2713, 99=3963, 99.9=6123, 99.99=23551] [UPDATE: Count=37960, Max=23503, Min=802, Avg=1724.95, 90=2325, 99=2981, 99.9=5815, 99.99=19903] 
2023-04-30 20:19:16:955 270 sec: 20474706 operations; 76045.8 current ops/sec; est completion in 3 hours 35 minutes [READ: Count=722320, Max=9279, Min=842, Avg=1983.81, 90=2715, 99=3977, 99.9=5911, 99.99=7167] [UPDATE: Count=38127, Max=7075, Min=879, Avg=1727.75, 90=2343, 99=3019, 99.9=5727, 99.99=6635] 
2023-04-30 20:19:26:955 280 sec: 21232026 operations; 75732 current ops/sec; est completion in 3 hours 35 minutes [READ: Count=719464, Max=30975, Min=827, Avg=1992.38, 90=2719, 99=3987, 99.9=6175, 99.99=23807] [UPDATE: Count=37823, Max=21855, Min=817, Avg=1727.68, 90=2343, 99=2989, 99.9=5419, 99.99=15655] 
2023-04-30 20:19:36:955 290 sec: 21998122 operations; 76609.6 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=727912, Max=48447, Min=792, Avg=1968.79, 90=2653, 99=3937, 99.9=6351, 99.99=25087] [UPDATE: Count=38258, Max=23087, Min=845, Avg=1720.48, 90=2257, 99=3071, 99.9=6071, 99.99=18031] 
2023-04-30 20:19:46:955 300 sec: 22775749 operations; 77762.7 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=738599, Max=9759, Min=847, Avg=1939.2, 90=2599, 99=3757, 99.9=5907, 99.99=7299] [UPDATE: Count=38986, Max=7443, Min=860, Avg=1704.9, 90=2221, 99=3025, 99.9=5655, 99.99=6419] 
2023-04-30 20:19:56:955 310 sec: 23550099 operations; 77435 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=735521, Max=49183, Min=803, Avg=1947.4, 90=2603, 99=3805, 99.9=6295, 99.99=24623] [UPDATE: Count=38822, Max=24735, Min=847, Avg=1710.36, 90=2233, 99=3039, 99.9=5807, 99.99=19535] 
2023-04-30 20:20:06:955 320 sec: 24322021 operations; 77192.2 current ops/sec; est completion in 3 hours 33 minutes [READ: Count=733275, Max=47327, Min=801, Avg=1953.76, 90=2609, 99=3889, 99.9=6231, 99.99=25327] [UPDATE: Count=38661, Max=23247, Min=873, Avg=1712.57, 90=2221, 99=3085, 99.9=5451, 99.99=11871] 
2023-04-30 20:20:16:955 330 sec: 25097246 operations; 77522.5 current ops/sec; est completion in 3 hours 33 minutes [READ: Count=736187, Max=14871, Min=805, Avg=1944.95, 90=2605, 99=3767, 99.9=5743, 99.99=7043] [UPDATE: Count=39023, Max=8279, Min=856, Avg=1714.08, 90=2237, 99=2967, 99.9=5235, 99.99=6075] 
2023-04-30 20:20:26:955 340 sec: 25870102 operations; 77285.6 current ops/sec; est completion in 3 hours 33 minutes [READ: Count=733893, Max=30447, Min=826, Avg=1950.98, 90=2605, 99=3855, 99.9=6175, 99.99=23359] [UPDATE: Count=38995, Max=24911, Min=858, Avg=1719.94, 90=2223, 99=3057, 99.9=5907, 99.99=22575] 
2023-04-30 20:20:36:955 350 sec: 26642148 operations; 77204.6 current ops/sec; est completion in 3 hours 33 minutes [READ: Count=733629, Max=36959, Min=822, Avg=1952.89, 90=2605, 99=3843, 99.9=6635, 99.99=22879] [UPDATE: Count=38417, Max=25535, Min=822, Avg=1720.26, 90=2225, 99=3109, 99.9=6131, 99.99=22799] 
2023-04-30 20:20:46:955 360 sec: 27416602 operations; 77445.4 current ops/sec; est completion in 3 hours 32 minutes [READ: Count=735541, Max=9807, Min=833, Avg=1947.18, 90=2605, 99=3829, 99.9=5967, 99.99=7787] [UPDATE: Count=38900, Max=8343, Min=862, Avg=1710.65, 90=2227, 99=3055, 99.9=5695, 99.99=7003] 
2023-04-30 20:20:56:955 370 sec: 28189177 operations; 77257.5 current ops/sec; est completion in 3 hours 32 minutes [READ: Count=733885, Max=37567, Min=774, Avg=1951.33, 90=2605, 99=3795, 99.9=6095, 99.99=22591] [UPDATE: Count=38709, Max=22623, Min=829, Avg=1724.33, 90=2233, 99=3135, 99.9=6011, 99.99=21215] 
2023-04-30 20:21:06:955 380 sec: 28961342 operations; 77216.5 current ops/sec; est completion in 3 hours 32 minutes [READ: Count=733162, Max=33439, Min=802, Avg=1952.76, 90=2605, 99=3795, 99.9=6467, 99.99=23503] [UPDATE: Count=38996, Max=23903, Min=886, Avg=1720.94, 90=2231, 99=3001, 99.9=6095, 99.99=22431] 
2023-04-30 20:21:16:955 390 sec: 29735697 operations; 77435.5 current ops/sec; est completion in 3 hours 32 minutes [READ: Count=735351, Max=13759, Min=861, Avg=1947.19, 90=2607, 99=3837, 99.9=5979, 99.99=8455] [UPDATE: Count=39014, Max=12703, Min=824, Avg=1716.5, 90=2229, 99=3049, 99.9=5547, 99.99=7915] 
2023-04-30 20:21:26:955 400 sec: 30507604 operations; 77190.7 current ops/sec; est completion in 3 hours 31 minutes [READ: Count=733171, Max=46047, Min=795, Avg=1953.41, 90=2607, 99=3801, 99.9=6247, 99.99=23247] [UPDATE: Count=38703, Max=22079, Min=798, Avg=1720.01, 90=2235, 99=3027, 99.9=5799, 99.99=17391] 
2023-04-30 20:21:36:958 410 sec: 31278478 operations; 77087.4 current ops/sec; est completion in 3 hours 31 minutes [READ: Count=732289, Max=31439, Min=806, Avg=1956.18, 90=2607, 99=3861, 99.9=6187, 99.99=24175] [UPDATE: Count=38573, Max=25343, Min=823, Avg=1720.1, 90=2225, 99=3059, 99.9=6023, 99.99=18591] 
2023-04-30 20:21:46:955 420 sec: 32053878 operations; 77540 current ops/sec; est completion in 3 hours 31 minutes [READ: Count=736840, Max=10719, Min=833, Avg=1944.55, 90=2601, 99=3779, 99.9=5839, 99.99=7991] [UPDATE: Count=38555, Max=6643, Min=835, Avg=1709.06, 90=2221, 99=3009, 99.9=5455, 99.99=6263] 
2023-04-30 20:21:56:955 430 sec: 32826405 operations; 77252.7 current ops/sec; est completion in 3 hours 31 minutes [READ: Count=733991, Max=47007, Min=783, Avg=1951.86, 90=2603, 99=3777, 99.9=6259, 99.99=30831] [UPDATE: Count=38571, Max=24751, Min=799, Avg=1716.5, 90=2229, 99=3003, 99.9=5743, 99.99=7459] 
2023-04-30 20:22:06:955 440 sec: 33598042 operations; 77163.7 current ops/sec; est completion in 3 hours 30 minutes [READ: Count=733365, Max=44831, Min=818, Avg=1953.85, 90=2607, 99=3771, 99.9=6295, 99.99=24767] [UPDATE: Count=38263, Max=24831, Min=835, Avg=1722.21, 90=2233, 99=3027, 99.9=5959, 99.99=22735] 
2023-04-30 20:22:16:955 450 sec: 34372639 operations; 77459.7 current ops/sec; est completion in 3 hours 30 minutes [READ: Count=735854, Max=8847, Min=838, Avg=1946.72, 90=2605, 99=3815, 99.9=5911, 99.99=7007] [UPDATE: Count=38718, Max=6599, Min=867, Avg=1711.19, 90=2223, 99=3029, 99.9=5427, 99.99=6351] 
2023-04-30 20:22:26:955 460 sec: 35144894 operations; 77225.5 current ops/sec; est completion in 3 hours 30 minutes [READ: Count=733524, Max=31295, Min=827, Avg=1952.49, 90=2603, 99=3839, 99.9=6079, 99.99=23935] [UPDATE: Count=38779, Max=21727, Min=793, Avg=1718.94, 90=2223, 99=3049, 99.9=5759, 99.99=17663] 
2023-04-30 20:22:36:955 470 sec: 35915173 operations; 77027.9 current ops/sec; est completion in 3 hours 30 minutes [READ: Count=731828, Max=27999, Min=798, Avg=1957.79, 90=2609, 99=3869, 99.9=6319, 99.99=22495] [UPDATE: Count=38412, Max=22079, Min=824, Avg=1718.82, 90=2223, 99=3063, 99.9=5687, 99.99=20495] 
2023-04-30 20:22:46:955 480 sec: 36688967 operations; 77379.4 current ops/sec; est completion in 3 hours 30 minutes [READ: Count=734843, Max=10775, Min=855, Avg=1948.79, 90=2607, 99=3765, 99.9=6075, 99.99=7335] [UPDATE: Count=38937, Max=7091, Min=858, Avg=1712.52, 90=2225, 99=2959, 99.9=5663, 99.99=6759] 
2023-04-30 20:22:56:955 490 sec: 37460860 operations; 77189.3 current ops/sec; est completion in 3 hours 29 minutes [READ: Count=733265, Max=29503, Min=818, Avg=1953.28, 90=2611, 99=3813, 99.9=6115, 99.99=22463] [UPDATE: Count=38611, Max=23999, Min=846, Avg=1722.51, 90=2229, 99=3057, 99.9=5723, 99.99=21183] 
2023-04-30 20:23:06:955 500 sec: 38230157 operations; 76929.7 current ops/sec; est completion in 3 hours 29 minutes [READ: Count=730744, Max=32703, Min=808, Avg=1960.02, 90=2613, 99=3855, 99.9=6427, 99.99=24143] [UPDATE: Count=38598, Max=26207, Min=804, Avg=1725.11, 90=2235, 99=3005, 99.9=6143, 99.99=20447] 
2023-04-30 20:23:16:955 510 sec: 39003791 operations; 77363.4 current ops/sec; est completion in 3 hours 29 minutes [READ: Count=735112, Max=9735, Min=849, Avg=1949.18, 90=2605, 99=3809, 99.9=6063, 99.99=7303] [UPDATE: Count=38430, Max=20895, Min=865, Avg=1715.66, 90=2233, 99=2995, 99.9=6027, 99.99=13487] 
2023-04-30 20:23:26:955 520 sec: 39772397 operations; 76860.6 current ops/sec; est completion in 3 hours 29 minutes [READ: Count=729918, Max=27807, Min=824, Avg=1961.58, 90=2613, 99=3859, 99.9=6683, 99.99=22863] [UPDATE: Count=38786, Max=22927, Min=828, Avg=1727.68, 90=2241, 99=3067, 99.9=5855, 99.99=22335] 
2023-04-30 20:23:36:955 530 sec: 40541246 operations; 76884.9 current ops/sec; est completion in 3 hours 29 minutes [READ: Count=730417, Max=27919, Min=844, Avg=1961.53, 90=2613, 99=3855, 99.9=6575, 99.99=23039] [UPDATE: Count=38399, Max=22719, Min=811, Avg=1718.54, 90=2225, 99=3027, 99.9=5955, 99.99=18927] 
2023-04-30 20:23:46:955 540 sec: 41311570 operations; 77032.4 current ops/sec; est completion in 3 hours 28 minutes [READ: Count=731628, Max=20415, Min=812, Avg=1957.57, 90=2619, 99=3875, 99.9=6115, 99.99=8059] [UPDATE: Count=38688, Max=17295, Min=879, Avg=1721.32, 90=2239, 99=3055, 99.9=5527, 99.99=7507] 
2023-04-30 20:23:56:955 550 sec: 42082109 operations; 77053.9 current ops/sec; est completion in 3 hours 28 minutes [READ: Count=732001, Max=36863, Min=779, Avg=1957.08, 90=2611, 99=3793, 99.9=6331, 99.99=24143] [UPDATE: Count=38542, Max=24719, Min=785, Avg=1718.89, 90=2229, 99=2973, 99.9=5911, 99.99=18991] 
2023-04-30 20:24:06:955 560 sec: 42852883 operations; 77077.4 current ops/sec; est completion in 3 hours 28 minutes [READ: Count=732455, Max=31423, Min=802, Avg=1956.37, 90=2609, 99=3765, 99.9=6299, 99.99=22559] [UPDATE: Count=38379, Max=20447, Min=870, Avg=1718.56, 90=2235, 99=2959, 99.9=5819, 99.99=13607] 
2023-04-30 20:24:16:955 570 sec: 43624938 operations; 77205.5 current ops/sec; est completion in 3 hours 28 minutes [READ: Count=733519, Max=16527, Min=837, Avg=1952.82, 90=2613, 99=3767, 99.9=5867, 99.99=7463] [UPDATE: Count=38491, Max=13423, Min=861, Avg=1721.73, 90=2241, 99=3017, 99.9=5483, 99.99=6843] 
2023-04-30 20:24:26:955 580 sec: 44394101 operations; 76916.3 current ops/sec; est completion in 3 hours 28 minutes [READ: Count=730851, Max=47967, Min=811, Avg=1960.53, 90=2611, 99=3833, 99.9=6211, 99.99=27711] [UPDATE: Count=38295, Max=22415, Min=818, Avg=1722, 90=2239, 99=3041, 99.9=5575, 99.99=14991] 
2023-04-30 20:24:36:955 590 sec: 45160993 operations; 76689.2 current ops/sec; est completion in 3 hours 27 minutes [READ: Count=728314, Max=30767, Min=797, Avg=1966.36, 90=2623, 99=3909, 99.9=6627, 99.99=23519] [UPDATE: Count=38592, Max=23119, Min=791, Avg=1729.77, 90=2247, 99=3103, 99.9=5955, 99.99=15079] 
2023-04-30 20:24:46:955 600 sec: 45932548 operations; 77155.5 current ops/sec; est completion in 3 hours 27 minutes [READ: Count=733248, Max=14575, Min=831, Avg=1954.34, 90=2609, 99=3793, 99.9=5995, 99.99=8447] [UPDATE: Count=38299, Max=13719, Min=872, Avg=1716.86, 90=2225, 99=2981, 99.9=5591, 99.99=7311] 
2023-04-30 20:24:56:955 610 sec: 46701648 operations; 76910 current ops/sec; est completion in 3 hours 27 minutes [READ: Count=730775, Max=28303, Min=811, Avg=1960.49, 90=2617, 99=3827, 99.9=6183, 99.99=22975] [UPDATE: Count=38334, Max=23679, Min=837, Avg=1725.02, 90=2239, 99=3091, 99.9=5903, 99.99=21599] 
2023-04-30 20:25:06:955 620 sec: 47468724 operations; 76707.6 current ops/sec; est completion in 3 hours 27 minutes [READ: Count=728966, Max=32543, Min=794, Avg=1965.64, 90=2621, 99=3877, 99.9=6443, 99.99=24095] [UPDATE: Count=38103, Max=25519, Min=858, Avg=1729.62, 90=2239, 99=3057, 99.9=6243, 99.99=22015] 
2023-04-30 20:25:16:955 630 sec: 48238684 operations; 76996 current ops/sec; est completion in 3 hours 27 minutes [READ: Count=731377, Max=10655, Min=804, Avg=1958.25, 90=2621, 99=3831, 99.9=6063, 99.99=7615] [UPDATE: Count=38577, Max=7479, Min=885, Avg=1726.16, 90=2239, 99=3093, 99.9=5675, 99.99=6555] 
2023-04-30 20:25:26:955 640 sec: 49005860 operations; 76717.6 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=728845, Max=40287, Min=814, Avg=1965.6, 90=2619, 99=3805, 99.9=6523, 99.99=22879] [UPDATE: Count=38340, Max=21087, Min=830, Avg=1727.45, 90=2243, 99=2999, 99.9=5991, 99.99=16191] 
2023-04-30 20:25:36:955 650 sec: 49773281 operations; 76742.1 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=728880, Max=27727, Min=759, Avg=1965.03, 90=2621, 99=3815, 99.9=6483, 99.99=22399] [UPDATE: Count=38531, Max=24751, Min=815, Avg=1726.08, 90=2237, 99=3013, 99.9=5767, 99.99=20895] 
2023-04-30 20:25:46:955 660 sec: 50543706 operations; 77042.5 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=732042, Max=11367, Min=856, Avg=1957.23, 90=2615, 99=3807, 99.9=6007, 99.99=7351] [UPDATE: Count=38393, Max=7715, Min=884, Avg=1720.4, 90=2237, 99=3003, 99.9=5655, 99.99=6807] 
2023-04-30 20:25:56:955 670 sec: 51312237 operations; 76853.1 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=730447, Max=43871, Min=781, Avg=1961.93, 90=2613, 99=3827, 99.9=6371, 99.99=22639] [UPDATE: Count=38072, Max=23087, Min=848, Avg=1724.39, 90=2235, 99=2963, 99.9=5943, 99.99=19167] 
2023-04-30 20:26:06:955 680 sec: 52079502 operations; 76726.5 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=728918, Max=43007, Min=834, Avg=1965.48, 90=2617, 99=3855, 99.9=6531, 99.99=22991] [UPDATE: Count=38370, Max=22719, Min=837, Avg=1725.69, 90=2237, 99=3041, 99.9=5947, 99.99=16095] 
2023-04-30 20:26:16:955 690 sec: 52848881 operations; 76937.9 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=730808, Max=10359, Min=836, Avg=1960.11, 90=2623, 99=3849, 99.9=5991, 99.99=7475] [UPDATE: Count=38550, Max=8391, Min=871, Avg=1720.73, 90=2239, 99=3007, 99.9=5643, 99.99=6663] 
2023-04-30 20:26:26:955 700 sec: 53616058 operations; 76717.7 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=728974, Max=45535, Min=822, Avg=1965.5, 90=2625, 99=3867, 99.9=6343, 99.99=22751] [UPDATE: Count=38213, Max=21615, Min=815, Avg=1728.15, 90=2241, 99=3107, 99.9=5955, 99.99=19823] 
2023-04-30 20:26:36:955 710 sec: 54382322 operations; 76626.4 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=727862, Max=44095, Min=813, Avg=1967.98, 90=2621, 99=3871, 99.9=6771, 99.99=23759] [UPDATE: Count=38419, Max=25295, Min=793, Avg=1728.28, 90=2243, 99=3031, 99.9=6023, 99.99=22335] 
2023-04-30 20:26:46:955 720 sec: 55152660 operations; 77033.8 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=731783, Max=10447, Min=844, Avg=1957.53, 90=2623, 99=3827, 99.9=5967, 99.99=7523] [UPDATE: Count=38499, Max=9007, Min=883, Avg=1720.37, 90=2239, 99=3065, 99.9=5599, 99.99=7039] 
2023-04-30 20:26:56:955 730 sec: 55918528 operations; 76586.8 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=727893, Max=48863, Min=757, Avg=1968.79, 90=2627, 99=3849, 99.9=6351, 99.99=24031] [UPDATE: Count=38017, Max=24191, Min=804, Avg=1731.51, 90=2245, 99=3069, 99.9=5879, 99.99=20511] 
2023-04-30 20:27:06:955 740 sec: 56670032 operations; 75150.4 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=714095, Max=33951, Min=886, Avg=2006.18, 90=2747, 99=4111, 99.9=6395, 99.99=22735] [UPDATE: Count=37419, Max=22623, Min=898, Avg=1771.35, 90=2403, 99=3157, 99.9=5879, 99.99=20111] 
2023-04-30 20:27:16:955 750 sec: 57423946 operations; 75391.4 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=715910, Max=10871, Min=898, Avg=1999.93, 90=2743, 99=4057, 99.9=5959, 99.99=7223] [UPDATE: Count=37995, Max=8527, Min=893, Avg=1764.56, 90=2381, 99=3169, 99.9=5659, 99.99=6707] 
2023-04-30 20:27:26:955 760 sec: 58176859 operations; 75291.3 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=715317, Max=38047, Min=887, Avg=2002.48, 90=2737, 99=4131, 99.9=6243, 99.99=22607] [UPDATE: Count=37591, Max=24831, Min=897, Avg=1767.52, 90=2373, 99=3271, 99.9=6135, 99.99=21967] 
2023-04-30 20:27:36:955 770 sec: 58933656 operations; 75679.7 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=718831, Max=29023, Min=819, Avg=1992.3, 90=2709, 99=4035, 99.9=6619, 99.99=23183] [UPDATE: Count=37908, Max=23919, Min=816, Avg=1758.17, 90=2347, 99=3219, 99.9=6403, 99.99=20047] 
2023-04-30 20:27:46:955 780 sec: 59704489 operations; 77083.3 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=732536, Max=23183, Min=828, Avg=1956.21, 90=2615, 99=3827, 99.9=6447, 99.99=13279] [UPDATE: Count=38361, Max=19631, Min=828, Avg=1716.78, 90=2233, 99=3031, 99.9=6027, 99.99=10463] 
2023-04-30 20:27:56:955 790 sec: 60473911 operations; 76942.2 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=730867, Max=29919, Min=811, Avg=1959.66, 90=2615, 99=3845, 99.9=6411, 99.99=22575] [UPDATE: Count=38534, Max=23007, Min=819, Avg=1726.16, 90=2241, 99=3013, 99.9=5903, 99.99=18703] 
2023-04-30 20:28:06:955 800 sec: 61243617 operations; 76970.6 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=731267, Max=35103, Min=822, Avg=1959.02, 90=2615, 99=3815, 99.9=6207, 99.99=23487] [UPDATE: Count=38436, Max=23631, Min=771, Avg=1722.58, 90=2235, 99=3031, 99.9=6099, 99.99=19599] 
2023-04-30 20:28:16:955 810 sec: 62014368 operations; 77075.1 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=732404, Max=8831, Min=820, Avg=1956.42, 90=2621, 99=3855, 99.9=5943, 99.99=7243] [UPDATE: Count=38358, Max=6979, Min=857, Avg=1718.35, 90=2229, 99=3059, 99.9=5523, 99.99=6487] 
2023-04-30 20:28:26:955 820 sec: 62783763 operations; 76939.5 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=731127, Max=31151, Min=780, Avg=1959.85, 90=2615, 99=3871, 99.9=6247, 99.99=23327] [UPDATE: Count=38288, Max=22847, Min=868, Avg=1721.91, 90=2233, 99=3091, 99.9=5683, 99.99=19679] 
2023-04-30 20:28:36:955 830 sec: 63552995 operations; 76923.2 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=730766, Max=28191, Min=798, Avg=1960.37, 90=2615, 99=3855, 99.9=6551, 99.99=23247] [UPDATE: Count=38453, Max=22079, Min=838, Avg=1721.83, 90=2231, 99=3049, 99.9=6191, 99.99=20911] 
2023-04-30 20:28:46:955 840 sec: 64324450 operations; 77145.5 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=732913, Max=11023, Min=830, Avg=1954.62, 90=2617, 99=3819, 99.9=6011, 99.99=7479] [UPDATE: Count=38516, Max=8479, Min=837, Avg=1718.89, 90=2241, 99=2993, 99.9=5519, 99.99=6639] 
2023-04-30 20:28:56:955 850 sec: 65094463 operations; 77001.3 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=731460, Max=30879, Min=776, Avg=1958.54, 90=2607, 99=3805, 99.9=6651, 99.99=24415] [UPDATE: Count=38594, Max=23487, Min=851, Avg=1718.03, 90=2227, 99=2969, 99.9=6119, 99.99=17631] 
2023-04-30 20:29:06:955 860 sec: 65863495 operations; 76903.2 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=730418, Max=31519, Min=797, Avg=1960.85, 90=2613, 99=3873, 99.9=6587, 99.99=23999] [UPDATE: Count=38638, Max=24719, Min=835, Avg=1723.19, 90=2229, 99=3017, 99.9=6467, 99.99=21119] 
2023-04-30 20:29:16:955 870 sec: 66635341 operations; 77184.6 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=733193, Max=14023, Min=821, Avg=1953.79, 90=2615, 99=3831, 99.9=5839, 99.99=7203] [UPDATE: Count=38545, Max=23583, Min=888, Avg=1719.14, 90=2229, 99=3047, 99.9=5583, 99.99=10943] 
2023-04-30 20:29:26:955 880 sec: 67402150 operations; 76680.9 current ops/sec; est completion in 3 hours 22 minutes [READ: Count=728602, Max=34367, Min=802, Avg=1966.43, 90=2619, 99=3879, 99.9=6939, 99.99=23231] [UPDATE: Count=38248, Max=23343, Min=801, Avg=1726.29, 90=2229, 99=3037, 99.9=6231, 99.99=20191] 
2023-04-30 20:29:36:955 890 sec: 68170868 operations; 76871.8 current ops/sec; est completion in 3 hours 22 minutes [READ: Count=730344, Max=29407, Min=810, Avg=1961.47, 90=2611, 99=3787, 99.9=7303, 99.99=22623] [UPDATE: Count=38411, Max=23615, Min=847, Avg=1725.3, 90=2227, 99=2987, 99.9=6991, 99.99=22543] 
2023-04-30 20:29:46:955 900 sec: 68941833 operations; 77096.5 current ops/sec; est completion in 3 hours 22 minutes [READ: Count=732441, Max=10951, Min=840, Avg=1956.05, 90=2609, 99=3795, 99.9=6167, 99.99=7695] [UPDATE: Count=38526, Max=7675, Min=857, Avg=1716.82, 90=2227, 99=2945, 99.9=5727, 99.99=7263] 
2023-04-30 20:29:56:955 910 sec: 69709709 operations; 76787.6 current ops/sec; est completion in 3 hours 22 minutes [READ: Count=729600, Max=29199, Min=806, Avg=1963.75, 90=2619, 99=3893, 99.9=6399, 99.99=22079] [UPDATE: Count=38298, Max=22815, Min=804, Avg=1724.84, 90=2235, 99=3019, 99.9=6071, 99.99=21023] 
2023-04-30 20:30:06:955 920 sec: 70474036 operations; 76432.7 current ops/sec; est completion in 3 hours 22 minutes [READ: Count=725938, Max=50367, Min=849, Avg=1973.79, 90=2649, 99=3863, 99.9=6359, 99.99=24399] [UPDATE: Count=38372, Max=26031, Min=866, Avg=1718.65, 90=2247, 99=2967, 99.9=5699, 99.99=16943] 
2023-04-30 20:30:16:955 930 sec: 71228238 operations; 75420.2 current ops/sec; est completion in 3 hours 22 minutes [READ: Count=716457, Max=10543, Min=899, Avg=2000.61, 90=2727, 99=4057, 99.9=5927, 99.99=7167] [UPDATE: Count=37672, Max=24319, Min=910, Avg=1738.52, 90=2319, 99=3051, 99.9=5787, 99.99=11223] 
2023-04-30 20:30:26:955 940 sec: 71978669 operations; 75043.1 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=712936, Max=47455, Min=890, Avg=2010.27, 90=2719, 99=4107, 99.9=7135, 99.99=25135] [UPDATE: Count=37623, Max=24623, Min=900, Avg=1745.33, 90=2325, 99=3055, 99.9=6375, 99.99=20991] 
2023-04-30 20:30:36:955 950 sec: 72719902 operations; 74123.3 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=704179, Max=47615, Min=896, Avg=2036.24, 90=2777, 99=4343, 99.9=6835, 99.99=23935] [UPDATE: Count=36994, Max=24703, Min=918, Avg=1754.76, 90=2377, 99=3179, 99.9=6295, 99.99=21167] 
2023-04-30 20:30:46:955 960 sec: 73458395 operations; 73849.3 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=701352, Max=9895, Min=937, Avg=2044.24, 90=2783, 99=4279, 99.9=6183, 99.99=7683] [UPDATE: Count=37105, Max=8019, Min=903, Avg=1754.66, 90=2411, 99=3049, 99.9=5547, 99.99=7271] 
2023-04-30 20:30:56:955 970 sec: 74195078 operations; 73668.3 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=699805, Max=28943, Min=917, Avg=2049.34, 90=2777, 99=4203, 99.9=6375, 99.99=24127] [UPDATE: Count=36892, Max=23519, Min=876, Avg=1756.35, 90=2403, 99=3067, 99.9=5863, 99.99=18703] 
2023-04-30 20:31:06:955 980 sec: 74931538 operations; 73646 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=700158, Max=46783, Min=910, Avg=2049.61, 90=2769, 99=4275, 99.9=6407, 99.99=23583] [UPDATE: Count=36307, Max=24671, Min=901, Avg=1757.8, 90=2417, 99=2987, 99.9=5987, 99.99=13903] 
2023-04-30 20:31:16:955 990 sec: 75669885 operations; 73834.7 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=701442, Max=11071, Min=922, Avg=2044.24, 90=2771, 99=4175, 99.9=6247, 99.99=7963] [UPDATE: Count=36899, Max=8615, Min=898, Avg=1760.17, 90=2417, 99=3021, 99.9=5727, 99.99=7211] 
2023-04-30 20:31:26:955 1000 sec: 76406749 operations; 73686.4 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=699985, Max=27055, Min=917, Avg=2048.35, 90=2767, 99=4183, 99.9=6479, 99.99=21151] [UPDATE: Count=36870, Max=23711, Min=900, Avg=1764.6, 90=2411, 99=2937, 99.9=6095, 99.99=20735] 
2023-04-30 20:31:36:955 1010 sec: 77142212 operations; 73546.3 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=698383, Max=47647, Min=880, Avg=2052.73, 90=2771, 99=4283, 99.9=6759, 99.99=25551] [UPDATE: Count=37088, Max=23999, Min=891, Avg=1762.23, 90=2411, 99=2923, 99.9=6151, 99.99=21487] 
2023-04-30 20:31:46:955 1020 sec: 77876056 operations; 73384.4 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=697143, Max=72127, Min=924, Avg=2056.81, 90=2765, 99=4175, 99.9=6311, 99.99=68991] [UPDATE: Count=36684, Max=70335, Min=935, Avg=1772.66, 90=2403, 99=2915, 99.9=6211, 99.99=54175] 
2023-04-30 20:31:56:955 1030 sec: 78611742 operations; 73568.6 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=699179, Max=49343, Min=900, Avg=2051.76, 90=2771, 99=4203, 99.9=6483, 99.99=24223] [UPDATE: Count=36588, Max=24623, Min=908, Avg=1761.12, 90=2409, 99=2907, 99.9=5835, 99.99=21167] 
2023-04-30 20:32:06:955 1040 sec: 79346966 operations; 73522.4 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=698485, Max=31599, Min=903, Avg=2053.26, 90=2775, 99=4271, 99.9=6755, 99.99=25167] [UPDATE: Count=36704, Max=23231, Min=893, Avg=1761.62, 90=2413, 99=2967, 99.9=6151, 99.99=18367] 
2023-04-30 20:32:16:955 1050 sec: 80087155 operations; 74018.9 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=703546, Max=10031, Min=859, Avg=2038.87, 90=2765, 99=4171, 99.9=5979, 99.99=7243] [UPDATE: Count=36640, Max=7879, Min=904, Avg=1759.7, 90=2405, 99=3027, 99.9=5507, 99.99=6751] 
2023-04-30 20:32:26:955 1060 sec: 80839646 operations; 75249.1 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=714660, Max=43263, Min=776, Avg=2004.89, 90=2707, 99=3995, 99.9=6483, 99.99=24015] [UPDATE: Count=37814, Max=23663, Min=818, Avg=1745.67, 90=2349, 99=3029, 99.9=5951, 99.99=18383] 
2023-04-30 20:32:36:955 1070 sec: 81587063 operations; 74741.7 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=710277, Max=50335, Min=775, Avg=2018.68, 90=2717, 99=4003, 99.9=6771, 99.99=48223] [UPDATE: Count=37155, Max=48575, Min=814, Avg=1750.81, 90=2349, 99=3025, 99.9=6179, 99.99=47295] 
2023-04-30 20:32:46:955 1080 sec: 82326487 operations; 73942.4 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=702397, Max=10599, Min=802, Avg=2041.49, 90=2801, 99=4111, 99.9=6103, 99.99=7635] [UPDATE: Count=37007, Max=8119, Min=816, Avg=1753.69, 90=2421, 99=3039, 99.9=5795, 99.99=7307] 
2023-04-30 20:32:56:955 1090 sec: 83063928 operations; 73744.1 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=700548, Max=34879, Min=780, Avg=2046.98, 90=2795, 99=4195, 99.9=6267, 99.99=23647] [UPDATE: Count=36895, Max=24095, Min=797, Avg=1759.23, 90=2421, 99=3063, 99.9=5671, 99.99=17839] 
2023-04-30 20:33:06:955 1100 sec: 83801281 operations; 73735.3 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=700629, Max=46239, Min=779, Avg=2047.27, 90=2809, 99=4307, 99.9=6439, 99.99=22575] [UPDATE: Count=36740, Max=23775, Min=806, Avg=1757.37, 90=2427, 99=3057, 99.9=5867, 99.99=21263] 
2023-04-30 20:33:16:955 1110 sec: 84542902 operations; 74162.1 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=704347, Max=9543, Min=803, Avg=2035.49, 90=2795, 99=4199, 99.9=6071, 99.99=7447] [UPDATE: Count=37264, Max=7303, Min=865, Avg=1747.98, 90=2429, 99=3063, 99.9=5807, 99.99=6543] 
2023-04-30 20:33:26:955 1120 sec: 85281832 operations; 73893 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=702008, Max=46719, Min=769, Avg=2043.23, 90=2781, 99=4231, 99.9=6311, 99.99=25455] [UPDATE: Count=36904, Max=25727, Min=814, Avg=1748.62, 90=2409, 99=2935, 99.9=5663, 99.99=19919] 
2023-04-30 20:33:36:955 1130 sec: 86020607 operations; 73877.5 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=702042, Max=31519, Min=773, Avg=2042.89, 90=2783, 99=4179, 99.9=6347, 99.99=22719] [UPDATE: Count=36741, Max=24815, Min=811, Avg=1761.26, 90=2419, 99=3003, 99.9=5915, 99.99=23567] 
2023-04-30 20:33:46:955 1140 sec: 86766115 operations; 74550.8 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=708447, Max=9591, Min=781, Avg=2024.34, 90=2765, 99=4087, 99.9=6203, 99.99=7871] [UPDATE: Count=37066, Max=7783, Min=839, Avg=1747.3, 90=2397, 99=3065, 99.9=6015, 99.99=7031] 
2023-04-30 20:33:56:955 1150 sec: 87521907 operations; 75579.2 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=717969, Max=38303, Min=804, Avg=1996.08, 90=2705, 99=3999, 99.9=6403, 99.99=23151] [UPDATE: Count=37824, Max=23343, Min=815, Avg=1738.51, 90=2347, 99=2999, 99.9=5835, 99.99=15831] 
2023-04-30 20:34:06:955 1160 sec: 88275348 operations; 75344.1 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=715780, Max=29839, Min=806, Avg=2002.23, 90=2717, 99=3973, 99.9=6047, 99.99=22575] [UPDATE: Count=37665, Max=24495, Min=810, Avg=1744.41, 90=2355, 99=3035, 99.9=5823, 99.99=21967] 
2023-04-30 20:34:16:955 1170 sec: 89043768 operations; 76842 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=729889, Max=12703, Min=820, Avg=1962.21, 90=2649, 99=3895, 99.9=6047, 99.99=8295] [UPDATE: Count=38542, Max=11431, Min=848, Avg=1730.33, 90=2279, 99=3145, 99.9=5975, 99.99=8079] 
2023-04-30 20:34:26:955 1180 sec: 89808916 operations; 76514.8 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=726774, Max=30815, Min=801, Avg=1970.59, 90=2657, 99=3943, 99.9=6687, 99.99=22831] [UPDATE: Count=38369, Max=24319, Min=815, Avg=1735.81, 90=2291, 99=3171, 99.9=5947, 99.99=20831] 
2023-04-30 20:34:36:955 1190 sec: 90571097 operations; 76218.1 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=724144, Max=44607, Min=792, Avg=1978.24, 90=2671, 99=3955, 99.9=6567, 99.99=24047] [UPDATE: Count=38020, Max=23327, Min=816, Avg=1742.83, 90=2299, 99=3221, 99.9=5979, 99.99=19855] 
2023-04-30 20:34:46:955 1200 sec: 91339802 operations; 76870.5 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=729956, Max=9767, Min=824, Avg=1961.64, 90=2649, 99=3819, 99.9=5711, 99.99=7035] [UPDATE: Count=38714, Max=10999, Min=849, Avg=1727.53, 90=2277, 99=3129, 99.9=5267, 99.99=6907] 
2023-04-30 20:34:56:955 1210 sec: 92107158 operations; 76735.6 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=729178, Max=33215, Min=795, Avg=1964.93, 90=2633, 99=3929, 99.9=6703, 99.99=25375] [UPDATE: Count=38228, Max=25743, Min=848, Avg=1729.61, 90=2265, 99=3087, 99.9=5883, 99.99=20847] 
2023-04-30 20:35:06:955 1220 sec: 92874378 operations; 76722 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=728768, Max=33151, Min=767, Avg=1965.34, 90=2635, 99=3951, 99.9=6383, 99.99=24815] [UPDATE: Count=38438, Max=24655, Min=841, Avg=1730.18, 90=2267, 99=3115, 99.9=5795, 99.99=16303] 
2023-04-30 20:35:16:955 1230 sec: 93643999 operations; 76962.1 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=731316, Max=11263, Min=825, Avg=1958.96, 90=2637, 99=3907, 99.9=5871, 99.99=7251] [UPDATE: Count=38304, Max=7427, Min=838, Avg=1728.22, 90=2267, 99=3137, 99.9=5691, 99.99=6855] 
2023-04-30 20:35:26:955 1240 sec: 94409919 operations; 76592 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=727420, Max=31087, Min=785, Avg=1968.6, 90=2637, 99=3837, 99.9=6547, 99.99=23535] [UPDATE: Count=38509, Max=26047, Min=822, Avg=1735.61, 90=2279, 99=3069, 99.9=5947, 99.99=16495] 
2023-04-30 20:35:36:955 1250 sec: 95175759 operations; 76584 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=727353, Max=31183, Min=799, Avg=1968.9, 90=2631, 99=3911, 99.9=6567, 99.99=23487] [UPDATE: Count=38496, Max=24335, Min=849, Avg=1734.96, 90=2267, 99=3113, 99.9=5755, 99.99=16975] 
2023-04-30 20:35:46:955 1260 sec: 95945830 operations; 77007.1 current ops/sec; est completion in 3 hours 17 minutes [READ: Count=731565, Max=9047, Min=818, Avg=1957.89, 90=2625, 99=3865, 99.9=6019, 99.99=7183] [UPDATE: Count=38475, Max=7163, Min=856, Avg=1726.62, 90=2259, 99=3037, 99.9=5739, 99.99=6815] 
2023-04-30 20:35:56:955 1270 sec: 96713307 operations; 76747.7 current ops/sec; est completion in 3 hours 17 minutes [READ: Count=729094, Max=47839, Min=787, Avg=1964.36, 90=2631, 99=3849, 99.9=6343, 99.99=24655] [UPDATE: Count=38407, Max=24655, Min=792, Avg=1736.4, 90=2273, 99=3107, 99.9=5687, 99.99=16543] 
2023-04-30 20:36:06:955 1280 sec: 97480684 operations; 76737.7 current ops/sec; est completion in 3 hours 17 minutes [READ: Count=729122, Max=30351, Min=795, Avg=1964.57, 90=2627, 99=3865, 99.9=6203, 99.99=23663] [UPDATE: Count=38253, Max=26063, Min=851, Avg=1735.9, 90=2275, 99=3087, 99.9=5695, 99.99=17007] 
2023-04-30 20:36:16:955 1290 sec: 98250901 operations; 77021.7 current ops/sec; est completion in 3 hours 17 minutes [READ: Count=731702, Max=9727, Min=825, Avg=1957.54, 90=2625, 99=3823, 99.9=5779, 99.99=6899] [UPDATE: Count=38475, Max=15719, Min=821, Avg=1728.33, 90=2259, 99=3093, 99.9=5687, 99.99=8823] 
2023-04-30 20:36:26:955 1300 sec: 99016226 operations; 76532.5 current ops/sec; est completion in 3 hours 17 minutes [READ: Count=726908, Max=33279, Min=798, Avg=1970.07, 90=2631, 99=3879, 99.9=6931, 99.99=23967] [UPDATE: Count=38452, Max=24335, Min=841, Avg=1734.83, 90=2265, 99=3051, 99.9=5915, 99.99=20655] 
2023-04-30 20:36:36:955 1310 sec: 99779510 operations; 76328.4 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=724850, Max=51679, Min=808, Avg=1975.59, 90=2647, 99=3931, 99.9=6471, 99.99=25791] [UPDATE: Count=38440, Max=24959, Min=836, Avg=1739.01, 90=2279, 99=3149, 99.9=6095, 99.99=15575] 
2023-04-30 20:36:46:955 1320 sec: 100549661 operations; 77015.1 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=731455, Max=10199, Min=826, Avg=1957.71, 90=2623, 99=3799, 99.9=5743, 99.99=7007] [UPDATE: Count=38698, Max=8559, Min=838, Avg=1727.43, 90=2257, 99=3029, 99.9=5535, 99.99=6587] 
2023-04-30 20:36:56:955 1330 sec: 101316750 operations; 76708.9 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=728853, Max=30687, Min=805, Avg=1965.55, 90=2631, 99=3861, 99.9=6055, 99.99=23231] [UPDATE: Count=38244, Max=23343, Min=808, Avg=1733.39, 90=2267, 99=3097, 99.9=5431, 99.99=22543] 
2023-04-30 20:37:06:955 1340 sec: 102082915 operations; 76616.5 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=728205, Max=29791, Min=821, Avg=1967.9, 90=2635, 99=3895, 99.9=6391, 99.99=23135] [UPDATE: Count=37931, Max=22863, Min=841, Avg=1732.39, 90=2269, 99=3135, 99.9=5831, 99.99=17135] 
2023-04-30 20:37:16:955 1350 sec: 102852080 operations; 76916.5 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=730877, Max=9679, Min=848, Avg=1959.85, 90=2627, 99=3853, 99.9=6147, 99.99=7179] [UPDATE: Count=38312, Max=7311, Min=867, Avg=1735.25, 90=2271, 99=3117, 99.9=5819, 99.99=6703] 
2023-04-30 20:37:26:955 1360 sec: 103619557 operations; 76747.7 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=729120, Max=46591, Min=776, Avg=1964.67, 90=2625, 99=3841, 99.9=6099, 99.99=25551] [UPDATE: Count=38347, Max=16431, Min=845, Avg=1729.33, 90=2265, 99=3123, 99.9=5375, 99.99=8327] 
2023-04-30 20:37:36:955 1370 sec: 104379019 operations; 75946.2 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=721523, Max=29311, Min=786, Avg=1985.14, 90=2667, 99=3945, 99.9=6963, 99.99=23951] [UPDATE: Count=37950, Max=24287, Min=836, Avg=1754.06, 90=2307, 99=3221, 99.9=6207, 99.99=20159] 
2023-04-30 20:37:46:955 1380 sec: 105142382 operations; 76336.3 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=725449, Max=11271, Min=824, Avg=1974.93, 90=2669, 99=3913, 99.9=5923, 99.99=7639] [UPDATE: Count=37916, Max=7323, Min=810, Avg=1744.36, 90=2297, 99=3249, 99.9=5675, 99.99=7079] 
2023-04-30 20:37:56:955 1390 sec: 105892943 operations; 75056.1 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=712706, Max=48927, Min=815, Avg=2009.99, 90=2761, 99=4071, 99.9=6175, 99.99=24239] [UPDATE: Count=37877, Max=22015, Min=842, Avg=1752.16, 90=2371, 99=3179, 99.9=5599, 99.99=18815] 
2023-04-30 20:38:06:955 1400 sec: 106643279 operations; 75033.6 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=712659, Max=32543, Min=811, Avg=2010.76, 90=2749, 99=4123, 99.9=6235, 99.99=23567] [UPDATE: Count=37657, Max=23535, Min=838, Avg=1748.76, 90=2371, 99=3151, 99.9=5751, 99.99=19903] 
2023-04-30 20:38:16:955 1410 sec: 107396874 operations; 75359.5 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=715925, Max=10119, Min=818, Avg=2001.91, 90=2747, 99=4191, 99.9=6207, 99.99=7567] [UPDATE: Count=37645, Max=6871, Min=803, Avg=1743.26, 90=2369, 99=3157, 99.9=5871, 99.99=6687] 
2023-04-30 20:38:26:955 1420 sec: 108149368 operations; 75249.4 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=714852, Max=37343, Min=789, Avg=2004.96, 90=2749, 99=4263, 99.9=6451, 99.99=24895] [UPDATE: Count=37684, Max=22847, Min=807, Avg=1742.64, 90=2359, 99=3263, 99.9=5659, 99.99=13855] 
2023-04-30 20:38:36:955 1430 sec: 108901063 operations; 75169.5 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=714069, Max=31439, Min=767, Avg=2006.66, 90=2733, 99=4219, 99.9=6563, 99.99=22463] [UPDATE: Count=37606, Max=24095, Min=838, Avg=1751.42, 90=2365, 99=3107, 99.9=6139, 99.99=20495] 
2023-04-30 20:38:46:955 1440 sec: 109657501 operations; 75643.8 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=718555, Max=10047, Min=818, Avg=1994.47, 90=2721, 99=4007, 99.9=6051, 99.99=7491] [UPDATE: Count=37879, Max=7803, Min=853, Avg=1737.09, 90=2353, 99=2991, 99.9=5603, 99.99=6831] 
2023-04-30 20:38:56:955 1450 sec: 110411514 operations; 75401.3 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=716394, Max=47647, Min=811, Avg=2000.76, 90=2725, 99=4107, 99.9=6427, 99.99=25279] [UPDATE: Count=37641, Max=23167, Min=842, Avg=1741.73, 90=2359, 99=3065, 99.9=5707, 99.99=15743] 
2023-04-30 20:39:06:955 1460 sec: 111163066 operations; 75155.2 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=714147, Max=41407, Min=804, Avg=2007.33, 90=2735, 99=4147, 99.9=6215, 99.99=23407] [UPDATE: Count=37402, Max=24575, Min=817, Avg=1746.99, 90=2361, 99=3159, 99.9=5859, 99.99=19695] 
2023-04-30 20:39:16:955 1470 sec: 111911075 operations; 74800.9 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=710883, Max=9471, Min=816, Avg=2016.69, 90=2767, 99=4179, 99.9=6079, 99.99=7367] [UPDATE: Count=37105, Max=7327, Min=828, Avg=1756.99, 90=2411, 99=3327, 99.9=5863, 99.99=6783] 
2023-04-30 20:39:26:955 1480 sec: 112646184 operations; 73510.9 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=698627, Max=45343, Min=789, Avg=2052.64, 90=2861, 99=4355, 99.9=7139, 99.99=23983] [UPDATE: Count=36464, Max=24271, Min=806, Avg=1777.38, 90=2499, 99=3397, 99.9=6739, 99.99=20239] 
2023-04-30 20:39:36:955 1490 sec: 113380755 operations; 73457.1 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=697861, Max=40383, Min=807, Avg=2054.29, 90=2857, 99=4403, 99.9=7003, 99.99=23215] [UPDATE: Count=36732, Max=24079, Min=790, Avg=1779.35, 90=2503, 99=3421, 99.9=6871, 99.99=22447] 
2023-04-30 20:39:46:955 1500 sec: 114119661 operations; 73890.6 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=701706, Max=10599, Min=809, Avg=2042.13, 90=2857, 99=4383, 99.9=5983, 99.99=8447] [UPDATE: Count=37178, Max=8559, Min=795, Avg=1771.61, 90=2497, 99=3535, 99.9=5751, 99.99=7547] 
2023-04-30 20:39:56:955 1510 sec: 114858305 operations; 73864.4 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=701666, Max=45823, Min=746, Avg=2042.89, 90=2853, 99=4291, 99.9=6431, 99.99=23839] [UPDATE: Count=36995, Max=24799, Min=781, Avg=1771.14, 90=2505, 99=3355, 99.9=5867, 99.99=22191] 
2023-04-30 20:40:06:955 1520 sec: 115611029 operations; 75272.4 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=714951, Max=50879, Min=774, Avg=2003.38, 90=2771, 99=4079, 99.9=6495, 99.99=25471] [UPDATE: Count=37766, Max=25087, Min=799, Avg=1760.54, 90=2385, 99=3377, 99.9=6111, 99.99=23407] 
2023-04-30 20:40:16:955 1530 sec: 116362877 operations; 75184.8 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=714393, Max=26367, Min=815, Avg=2005.45, 90=2777, 99=4127, 99.9=6083, 99.99=24159] [UPDATE: Count=37450, Max=24815, Min=842, Avg=1767.09, 90=2411, 99=3415, 99.9=5643, 99.99=23983] 
2023-04-30 20:40:26:955 1540 sec: 117113260 operations; 75038.3 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=712619, Max=37311, Min=805, Avg=2009.83, 90=2795, 99=4159, 99.9=6935, 99.99=23439] [UPDATE: Count=37776, Max=21119, Min=782, Avg=1764.17, 90=2419, 99=3391, 99.9=6399, 99.99=14495] 
2023-04-30 20:40:36:955 1550 sec: 117849577 operations; 73631.7 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=699606, Max=33599, Min=767, Avg=2048.42, 90=2997, 99=4311, 99.9=7131, 99.99=23631] [UPDATE: Count=36710, Max=23439, Min=819, Avg=1793.09, 90=2623, 99=3489, 99.9=6487, 99.99=16879] 
2023-04-30 20:40:46:955 1560 sec: 118589143 operations; 73956.6 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=702568, Max=8831, Min=820, Avg=2039.24, 90=2997, 99=4283, 99.9=5947, 99.99=7235] [UPDATE: Count=36952, Max=7635, Min=810, Avg=1787.65, 90=2609, 99=3481, 99.9=5683, 99.99=6775] 
2023-04-30 20:40:56:955 1570 sec: 119325429 operations; 73628.6 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=699493, Max=48191, Min=805, Avg=2048.68, 90=3001, 99=4331, 99.9=6559, 99.99=27423] [UPDATE: Count=36809, Max=24111, Min=796, Avg=1792.04, 90=2619, 99=3501, 99.9=5995, 99.99=17551] 
2023-04-30 20:41:06:955 1580 sec: 120074081 operations; 74865.2 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=711154, Max=36575, Min=820, Avg=2014.08, 90=2813, 99=4207, 99.9=6979, 99.99=23503] [UPDATE: Count=37514, Max=24271, Min=845, Avg=1772.55, 90=2443, 99=3419, 99.9=6319, 99.99=18095] 
2023-04-30 20:41:16:955 1590 sec: 120832152 operations; 75807.1 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=720255, Max=9431, Min=820, Avg=1989.25, 90=2741, 99=4091, 99.9=5967, 99.99=7311] [UPDATE: Count=37829, Max=7727, Min=839, Avg=1747.89, 90=2349, 99=3399, 99.9=5731, 99.99=6623] 
2023-04-30 20:41:26:955 1600 sec: 121605006 operations; 77285.4 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=734287, Max=49087, Min=811, Avg=1950.49, 90=2593, 99=3813, 99.9=6243, 99.99=24239] [UPDATE: Count=38556, Max=25023, Min=857, Avg=1726.49, 90=2225, 99=3061, 99.9=6051, 99.99=21727] 
2023-04-30 20:41:36:955 1610 sec: 122374808 operations; 76980.2 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=731784, Max=30431, Min=806, Avg=1958.57, 90=2601, 99=3885, 99.9=6559, 99.99=24207] [UPDATE: Count=38020, Max=23695, Min=804, Avg=1724.75, 90=2231, 99=3081, 99.9=6079, 99.99=13687] 
2023-04-30 20:41:46:955 1620 sec: 123148601 operations; 77379.3 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=735305, Max=12319, Min=839, Avg=1948.32, 90=2599, 99=3823, 99.9=5947, 99.99=7771] [UPDATE: Count=38491, Max=8215, Min=829, Avg=1720.05, 90=2231, 99=3061, 99.9=5655, 99.99=7015] 
2023-04-30 20:41:56:955 1630 sec: 123920203 operations; 77160.2 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=733166, Max=47263, Min=753, Avg=1953.69, 90=2603, 99=3831, 99.9=6239, 99.99=24623] [UPDATE: Count=38447, Max=24847, Min=831, Avg=1727.86, 90=2243, 99=3099, 99.9=5799, 99.99=20511] 
2023-04-30 20:42:06:955 1640 sec: 124676973 operations; 75677 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=718703, Max=28399, Min=807, Avg=1992.4, 90=2727, 99=4071, 99.9=6015, 99.99=22959] [UPDATE: Count=38078, Max=23071, Min=818, Avg=1758.32, 90=2375, 99=3249, 99.9=5599, 99.99=19007] 
2023-04-30 20:42:16:955 1650 sec: 125436669 operations; 75969.6 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=721631, Max=10783, Min=818, Avg=1984.84, 90=2725, 99=4001, 99.9=5667, 99.99=7007] [UPDATE: Count=38026, Max=7531, Min=836, Avg=1747.32, 90=2371, 99=3107, 99.9=5223, 99.99=6371] 
2023-04-30 20:42:26:955 1660 sec: 126190576 operations; 75390.7 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=716323, Max=50655, Min=819, Avg=2000.15, 90=2737, 99=4167, 99.9=6127, 99.99=24879] [UPDATE: Count=37589, Max=24767, Min=841, Avg=1758.75, 90=2369, 99=3275, 99.9=5611, 99.99=17391] 
2023-04-30 20:42:36:955 1670 sec: 126946776 operations; 75620 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=718434, Max=48095, Min=822, Avg=1993.95, 90=2723, 99=4115, 99.9=6475, 99.99=24991] [UPDATE: Count=37757, Max=24063, Min=833, Avg=1757.4, 90=2361, 99=3285, 99.9=6087, 99.99=16943] 
2023-04-30 20:42:46:955 1680 sec: 127702907 operations; 75613.1 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=718672, Max=17839, Min=819, Avg=1993.91, 90=2723, 99=4015, 99.9=6075, 99.99=12071] [UPDATE: Count=37401, Max=19199, Min=845, Avg=1760.02, 90=2367, 99=3127, 99.9=6023, 99.99=13975] 
2023-04-30 20:42:56:955 1690 sec: 128457305 operations; 75439.8 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=716445, Max=37823, Min=819, Avg=1998.4, 90=2717, 99=4087, 99.9=7183, 99.99=24351] [UPDATE: Count=38067, Max=24303, Min=830, Avg=1763.8, 90=2377, 99=3097, 99.9=6359, 99.99=20543] 
2023-04-30 20:43:06:955 1700 sec: 129213389 operations; 75608.4 current ops/sec; est completion in 3 hours 10 minutes [READ: Count=718312, Max=48191, Min=792, Avg=1994.17, 90=2721, 99=4003, 99.9=6267, 99.99=25055] [UPDATE: Count=37729, Max=23263, Min=818, Avg=1758.03, 90=2369, 99=3123, 99.9=5703, 99.99=15951] 
2023-04-30 20:43:16:955 1710 sec: 129971726 operations; 75833.7 current ops/sec; est completion in 3 hours 10 minutes [READ: Count=720467, Max=10103, Min=810, Avg=1988.17, 90=2713, 99=3991, 99.9=6147, 99.99=7523] [UPDATE: Count=37889, Max=7423, Min=854, Avg=1754.95, 90=2363, 99=3097, 99.9=5695, 99.99=7007] 
2023-04-30 20:43:26:955 1720 sec: 130727219 operations; 75549.3 current ops/sec; est completion in 3 hours 10 minutes [READ: Count=717796, Max=46143, Min=793, Avg=1995.7, 90=2719, 99=4041, 99.9=6259, 99.99=23775] [UPDATE: Count=37681, Max=20095, Min=852, Avg=1759.63, 90=2371, 99=3101, 99.9=5819, 99.99=17359] 
2023-04-30 20:43:36:955 1730 sec: 131481381 operations; 75416.2 current ops/sec; est completion in 3 hours 10 minutes [READ: Count=716559, Max=45023, Min=790, Avg=1998.8, 90=2721, 99=4085, 99.9=6687, 99.99=24351] [UPDATE: Count=37610, Max=24815, Min=850, Avg=1769.99, 90=2377, 99=3127, 99.9=6191, 99.99=19887] 
2023-04-30 20:43:46:955 1740 sec: 132239474 operations; 75809.3 current ops/sec; est completion in 3 hours 10 minutes [READ: Count=719870, Max=16239, Min=832, Avg=1989.06, 90=2715, 99=3997, 99.9=5907, 99.99=7423] [UPDATE: Count=38208, Max=7323, Min=868, Avg=1753.22, 90=2357, 99=3095, 99.9=5591, 99.99=6567] 
2023-04-30 20:43:56:955 1750 sec: 132995213 operations; 75573.9 current ops/sec; est completion in 3 hours 10 minutes [READ: Count=717993, Max=43935, Min=792, Avg=1994.84, 90=2717, 99=4011, 99.9=6419, 99.99=21935] [UPDATE: Count=37744, Max=22303, Min=794, Avg=1763.85, 90=2367, 99=3127, 99.9=6371, 99.99=21071] 
2023-04-30 20:44:06:955 1760 sec: 133754153 operations; 75894 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=720875, Max=50591, Min=817, Avg=1986.58, 90=2695, 99=3991, 99.9=6231, 99.99=24543] [UPDATE: Count=38094, Max=26159, Min=813, Avg=1752.95, 90=2343, 99=3099, 99.9=5539, 99.99=23839] 
2023-04-30 20:44:16:955 1770 sec: 134531274 operations; 77712.1 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=738399, Max=10231, Min=839, Avg=1940.36, 90=2593, 99=3793, 99.9=6135, 99.99=7351] [UPDATE: Count=38704, Max=7159, Min=853, Avg=1706.43, 90=2223, 99=3009, 99.9=5555, 99.99=6687] 
2023-04-30 20:44:26:955 1780 sec: 135305007 operations; 77373.3 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=735090, Max=27967, Min=808, Avg=1948.68, 90=2595, 99=3809, 99.9=6307, 99.99=22591] [UPDATE: Count=38652, Max=23359, Min=838, Avg=1716.95, 90=2219, 99=3001, 99.9=5871, 99.99=21279] 
2023-04-30 20:44:36:957 1790 sec: 136077849 operations; 77261.02 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=734301, Max=49567, Min=776, Avg=1950.85, 90=2599, 99=3849, 99.9=6439, 99.99=25039] [UPDATE: Count=38574, Max=25487, Min=827, Avg=1718.05, 90=2221, 99=3053, 99.9=5903, 99.99=22703] 
Maximum time elapsed. Requesting stop for the workload.
Stop requested for workload. Now Joining!
2023-04-30 20:44:46:955 1800 sec: 136867427 operations; 78981.49 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=750129, Max=13703, Min=788, Avg=1909.75, 90=2569, 99=3779, 99.9=6151, 99.99=7355] [UPDATE: Count=39370, Max=7651, Min=808, Avg=1679.73, 90=2199, 99=2993, 99.9=5771, 99.99=6847] 
Still waiting for thread Thread-41 to complete. Workload status: true
2023-04-30 20:44:49:188 1802 sec: 136868867 operations; 644.58 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=1366, Max=7067, Min=854, Avg=1575.67, 90=2065, 99=2641, 99.9=6807, 99.99=7067] [CLEANUP: Count=150, Max=2217983, Min=0, Avg=14781.07, 90=2, 99=29, 99.9=2217983, 99.99=2217983] [UPDATE: Count=0, Max=0, Min=9223372036854775807, Avg=?, 90=0, 99=0, 99.9=0, 99.99=0] 
[OVERALL], RunTime(ms), 1802233
[OVERALL], Throughput(ops/sec), 75944.04663547943
[TOTAL_GCS_PS_Scavenge], Count, 6405
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 18200
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.009858325754772
[TOTAL_GCS_PS_MarkSweep], Count, 2
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 61
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.0033846899929143455
[TOTAL_GCs], Count, 6407
[TOTAL_GC_TIME], Time(ms), 18261
[TOTAL_GC_TIME_%], Time(%), 1.0132430157476864
[READ], Operations, 130026889
[READ], AverageLatency(us), 1982.7101432689049
[READ], MinLatency(us), 746
[READ], MaxLatency(us), 76671
[READ], 95thPercentileLatency(us), 2983
[READ], 99thPercentileLatency(us), 3981
[READ], Return=OK, 130026889
[CLEANUP], Operations, 150
[CLEANUP], AverageLatency(us), 14781.073333333334
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2217983
[CLEANUP], 95thPercentileLatency(us), 6
[CLEANUP], 99thPercentileLatency(us), 29
[UPDATE], Operations, 6841978
[UPDATE], AverageLatency(us), 1736.9572787284612
[UPDATE], MinLatency(us), 771
[UPDATE], MaxLatency(us), 75007
[UPDATE], 95thPercentileLatency(us), 2533
[UPDATE], 99thPercentileLatency(us), 3143
[UPDATE], Return=OK, 6841978
