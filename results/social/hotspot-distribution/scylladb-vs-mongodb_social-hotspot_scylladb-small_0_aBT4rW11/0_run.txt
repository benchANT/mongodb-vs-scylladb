bin/ycsb run scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=52.27.21.157,44.230.88.51,54.185.181.164 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=Z0tmi4DGW6kvjOF -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=500000000 -p operationcount=999900000 -target 87500 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p measurementtype=hdrhistogram  -p hdrhistogram.fileoutput=true  -p hdrhistogram.output.path=/home/developer/results/ 
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.27.21.157,44.230.88.51,54.185.181.164 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=Z0tmi4DGW6kvjOF -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=500000000 -p operationcount=999900000 -target 87500 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p measurementtype=hdrhistogram -p hdrhistogram.fileoutput=true -p hdrhistogram.output.path=/home/developer/results/ -t
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.27.21.157,44.230.88.51,54.185.181.164 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=Z0tmi4DGW6kvjOF -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=500000000 -p operationcount=999900000 -target 87500 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p measurementtype=hdrhistogram -p hdrhistogram.fileoutput=true -p hdrhistogram.output.path=/home/developer/results/ -t
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
Starting test.
[Thread-9] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
[Thread-9] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
Maximum execution time specified as: 1800 secs
2023-04-30 20:14:46:272 0 sec: 0 operations; est completion in 0 second 
[Thread-9] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-9] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-9] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-9] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.230.88.51:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.185.181.164:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.27.21.157:9042 added
[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: a6bee33f-7243-4968-9ffd-53424ef153ca

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.230.88.51; Rack: us-west-2b

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.27.21.157; Rack: us-west-2c

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /54.185.181.164; Rack: us-west-2a

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: QUORUM

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field4=? WHERE y_id=?;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field7=? WHERE y_id=?;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field0=? WHERE y_id=?;'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field7=? WHERE y_id=?;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field7=? WHERE y_id=?;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field5=? WHERE y_id=?;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field5=? WHERE y_id=?;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='UPDATE usertable SET field5=? WHERE y_id=?;'
2023-04-30 20:14:56:256 10 sec: 699204 operations; 69913.41 current ops/sec; est completion in 3 hours 58 minutes [READ: Count=664198, Max=61823, Min=798, Avg=2013.13, 90=2645, 99=4971, 99.9=19151, 99.99=51007] [UPDATE: Count=35235, Max=59359, Min=816, Avg=1772.28, 90=2253, 99=4191, 99.9=19663, 99.99=46047] 
2023-04-30 20:15:06:256 20 sec: 1479418 operations; 78029.2 current ops/sec; est completion in 3 hours 44 minutes [READ: Count=741016, Max=31007, Min=795, Avg=1932.86, 90=2583, 99=3543, 99.9=5223, 99.99=22719] [UPDATE: Count=39102, Max=22111, Min=817, Avg=1696.15, 90=2207, 99=2867, 99.9=4627, 99.99=18143] 
2023-04-30 20:15:16:256 30 sec: 2260238 operations; 78082 current ops/sec; est completion in 3 hours 40 minutes [READ: Count=742060, Max=9519, Min=802, Avg=1931.04, 90=2589, 99=3587, 99.9=5631, 99.99=7055] [UPDATE: Count=38766, Max=7015, Min=798, Avg=1699.18, 90=2211, 99=2917, 99.9=5403, 99.99=6727] 
2023-04-30 20:15:26:256 40 sec: 3036298 operations; 77606 current ops/sec; est completion in 3 hours 38 minutes [READ: Count=737463, Max=31631, Min=771, Avg=1943.13, 90=2597, 99=3791, 99.9=6203, 99.99=23295] [UPDATE: Count=38602, Max=24815, Min=823, Avg=1704.95, 90=2223, 99=3027, 99.9=5575, 99.99=17471] 
2023-04-30 20:15:36:256 50 sec: 3811216 operations; 77491.8 current ops/sec; est completion in 3 hours 37 minutes [READ: Count=736114, Max=33087, Min=789, Avg=1946.08, 90=2599, 99=3777, 99.9=6791, 99.99=23183] [UPDATE: Count=38805, Max=24287, Min=790, Avg=1708.62, 90=2221, 99=2989, 99.9=6135, 99.99=18127] 
2023-04-30 20:15:46:256 60 sec: 4589686 operations; 77847 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=739449, Max=13767, Min=815, Avg=1937.32, 90=2591, 99=3713, 99.9=6135, 99.99=7779] [UPDATE: Count=39013, Max=7979, Min=841, Avg=1698.65, 90=2205, 99=2933, 99.9=5791, 99.99=7363] 
2023-04-30 20:15:56:256 70 sec: 5364567 operations; 77488.1 current ops/sec; est completion in 3 hours 36 minutes [READ: Count=736461, Max=49151, Min=787, Avg=1945.9, 90=2597, 99=3821, 99.9=6483, 99.99=25631] [UPDATE: Count=38405, Max=45471, Min=800, Avg=1710.03, 90=2213, 99=2979, 99.9=6283, 99.99=24223] 
2023-04-30 20:16:06:256 80 sec: 6141505 operations; 77693.8 current ops/sec; est completion in 3 hours 35 minutes [READ: Count=737855, Max=30975, Min=791, Avg=1940.99, 90=2587, 99=3761, 99.9=6203, 99.99=22959] [UPDATE: Count=39086, Max=22383, Min=789, Avg=1705.39, 90=2207, 99=2995, 99.9=5891, 99.99=21231] 
2023-04-30 20:16:16:256 90 sec: 6917598 operations; 77609.3 current ops/sec; est completion in 3 hours 35 minutes [READ: Count=737425, Max=13711, Min=813, Avg=1943.04, 90=2603, 99=3841, 99.9=5855, 99.99=7831] [UPDATE: Count=38683, Max=7327, Min=841, Avg=1706.67, 90=2219, 99=3001, 99.9=5415, 99.99=6475] 
2023-04-30 20:16:26:256 100 sec: 7690574 operations; 77297.6 current ops/sec; est completion in 3 hours 35 minutes [READ: Count=734179, Max=33759, Min=786, Avg=1950.75, 90=2609, 99=3887, 99.9=6135, 99.99=22799] [UPDATE: Count=38795, Max=19231, Min=757, Avg=1716.86, 90=2233, 99=3069, 99.9=5835, 99.99=18287] 
2023-04-30 20:16:36:256 110 sec: 8464028 operations; 77345.4 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=734707, Max=36543, Min=771, Avg=1949.67, 90=2603, 99=3823, 99.9=6303, 99.99=23103] [UPDATE: Count=38770, Max=24079, Min=820, Avg=1712.62, 90=2217, 99=3043, 99.9=5819, 99.99=18463] 
2023-04-30 20:16:46:256 120 sec: 9239270 operations; 77524.2 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=736570, Max=14327, Min=800, Avg=1945.02, 90=2605, 99=3817, 99.9=5955, 99.99=8263] [UPDATE: Count=38675, Max=8975, Min=819, Avg=1712.24, 90=2225, 99=3005, 99.9=5699, 99.99=7695] 
2023-04-30 20:16:56:256 130 sec: 10003401 operations; 76413.1 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=725790, Max=46207, Min=770, Avg=1973.74, 90=2685, 99=3975, 99.9=6167, 99.99=25199] [UPDATE: Count=38312, Max=23455, Min=801, Avg=1728.7, 90=2273, 99=3087, 99.9=5751, 99.99=21775] 
2023-04-30 20:17:06:256 140 sec: 10761833 operations; 75843.2 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=720614, Max=43935, Min=781, Avg=1989.23, 90=2743, 99=4051, 99.9=5955, 99.99=24047] [UPDATE: Count=37794, Max=24511, Min=821, Avg=1728.4, 90=2325, 99=3123, 99.9=5423, 99.99=20095] 
2023-04-30 20:17:16:256 150 sec: 11509004 operations; 74717.1 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=709715, Max=12095, Min=805, Avg=2019.17, 90=2877, 99=4411, 99.9=6231, 99.99=7879] [UPDATE: Count=37494, Max=8263, Min=800, Avg=1758.51, 90=2457, 99=3187, 99.9=5647, 99.99=6891] 
2023-04-30 20:17:26:256 160 sec: 12253717 operations; 74471.3 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=707310, Max=34079, Min=761, Avg=2025.93, 90=2883, 99=4543, 99.9=6663, 99.99=22735] [UPDATE: Count=37384, Max=27711, Min=812, Avg=1762.68, 90=2455, 99=3209, 99.9=5851, 99.99=20847] 
2023-04-30 20:17:36:256 170 sec: 12999055 operations; 74533.8 current ops/sec; est completion in 3 hours 35 minutes [READ: Count=708045, Max=45503, Min=788, Avg=2023.7, 90=2863, 99=4415, 99.9=6587, 99.99=23935] [UPDATE: Count=37293, Max=25519, Min=823, Avg=1769.35, 90=2459, 99=3249, 99.9=6091, 99.99=22367] 
2023-04-30 20:17:46:256 180 sec: 13752722 operations; 75366.7 current ops/sec; est completion in 3 hours 35 minutes [READ: Count=715974, Max=12183, Min=807, Avg=2001.46, 90=2793, 99=4191, 99.9=5951, 99.99=7371] [UPDATE: Count=37673, Max=6955, Min=817, Avg=1747.68, 90=2407, 99=3169, 99.9=5511, 99.99=6611] 
2023-04-30 20:17:56:256 190 sec: 14515165 operations; 76244.3 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=724333, Max=44127, Min=789, Avg=1979.07, 90=2687, 99=3977, 99.9=5891, 99.99=25471] [UPDATE: Count=38146, Max=26767, Min=806, Avg=1715.17, 90=2299, 99=3027, 99.9=5451, 99.99=21103] 
2023-04-30 20:18:06:256 200 sec: 15279008 operations; 76384.3 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=725623, Max=45823, Min=788, Avg=1975.41, 90=2681, 99=3931, 99.9=6087, 99.99=25631] [UPDATE: Count=38200, Max=25951, Min=795, Avg=1712.57, 90=2291, 99=2967, 99.9=5527, 99.99=20543] 
2023-04-30 20:18:16:256 210 sec: 16045222 operations; 76621.4 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=728173, Max=10951, Min=772, Avg=1969.04, 90=2681, 99=3909, 99.9=5703, 99.99=8247] [UPDATE: Count=38037, Max=9055, Min=810, Avg=1709.21, 90=2297, 99=2947, 99.9=5287, 99.99=6511] 
2023-04-30 20:18:26:256 220 sec: 16807566 operations; 76234.4 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=724469, Max=32639, Min=771, Avg=1979.29, 90=2685, 99=4067, 99.9=6211, 99.99=22783] [UPDATE: Count=37877, Max=23727, Min=802, Avg=1713.66, 90=2295, 99=3001, 99.9=5619, 99.99=19967] 
2023-04-30 20:18:36:256 230 sec: 17570511 operations; 76294.5 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=724447, Max=30895, Min=782, Avg=1977.61, 90=2685, 99=3975, 99.9=6263, 99.99=23759] [UPDATE: Count=38489, Max=24847, Min=818, Avg=1719.05, 90=2299, 99=2971, 99.9=5783, 99.99=22287] 
2023-04-30 20:18:46:256 240 sec: 18335548 operations; 76503.7 current ops/sec; est completion in 3 hours 34 minutes [READ: Count=726484, Max=10159, Min=795, Avg=1972.48, 90=2689, 99=3921, 99.9=5583, 99.99=6915] [UPDATE: Count=38521, Max=15095, Min=827, Avg=1709.49, 90=2295, 99=2955, 99.9=5035, 99.99=7411] 
2023-04-30 20:18:56:256 250 sec: 19099030 operations; 76348.2 current ops/sec; est completion in 3 hours 33 minutes [READ: Count=725409, Max=49343, Min=787, Avg=1976.3, 90=2679, 99=4013, 99.9=6491, 99.99=23839] [UPDATE: Count=38125, Max=23919, Min=797, Avg=1710.86, 90=2283, 99=2943, 99.9=6023, 99.99=20623] 
2023-04-30 20:19:06:256 260 sec: 19861962 operations; 76293.2 current ops/sec; est completion in 3 hours 33 minutes [READ: Count=724835, Max=44415, Min=769, Avg=1977.61, 90=2681, 99=3975, 99.9=6275, 99.99=23695] [UPDATE: Count=38068, Max=24831, Min=775, Avg=1717.1, 90=2295, 99=2983, 99.9=5871, 99.99=21199] 
2023-04-30 20:19:16:256 270 sec: 20627176 operations; 76521.4 current ops/sec; est completion in 3 hours 33 minutes [READ: Count=727322, Max=9703, Min=794, Avg=1971.53, 90=2683, 99=3959, 99.9=5919, 99.99=7171] [UPDATE: Count=37887, Max=7463, Min=829, Avg=1712.93, 90=2297, 99=2935, 99.9=5591, 99.99=6887] 
2023-04-30 20:19:26:256 280 sec: 21389340 operations; 76216.4 current ops/sec; est completion in 3 hours 33 minutes [READ: Count=724205, Max=32799, Min=783, Avg=1979.37, 90=2687, 99=4025, 99.9=6155, 99.99=24287] [UPDATE: Count=38003, Max=23423, Min=791, Avg=1721.95, 90=2313, 99=3079, 99.9=5771, 99.99=19151] 
2023-04-30 20:19:36:256 290 sec: 22159908 operations; 77056.8 current ops/sec; est completion in 3 hours 33 minutes [READ: Count=731696, Max=47711, Min=762, Avg=1957.86, 90=2639, 99=3921, 99.9=6323, 99.99=24079] [UPDATE: Count=38857, Max=24063, Min=801, Avg=1705.66, 90=2251, 99=2963, 99.9=5499, 99.99=15503] 
2023-04-30 20:19:46:256 300 sec: 22942312 operations; 78240.4 current ops/sec; est completion in 3 hours 32 minutes [READ: Count=743029, Max=10471, Min=805, Avg=1927.38, 90=2589, 99=3787, 99.9=5747, 99.99=7135] [UPDATE: Count=39357, Max=9447, Min=824, Avg=1693.54, 90=2207, 99=2995, 99.9=5319, 99.99=6591] 
2023-04-30 20:19:56:256 310 sec: 23720400 operations; 77808.8 current ops/sec; est completion in 3 hours 32 minutes [READ: Count=739072, Max=48255, Min=805, Avg=1937.87, 90=2597, 99=3845, 99.9=6355, 99.99=24479] [UPDATE: Count=39047, Max=27263, Min=835, Avg=1707.56, 90=2217, 99=3053, 99.9=5875, 99.99=19327] 
2023-04-30 20:20:06:256 320 sec: 24498760 operations; 77836 current ops/sec; est completion in 3 hours 32 minutes [READ: Count=739223, Max=47199, Min=777, Avg=1937.31, 90=2595, 99=3823, 99.9=6027, 99.99=25007] [UPDATE: Count=39122, Max=24751, Min=771, Avg=1703.69, 90=2217, 99=3099, 99.9=5559, 99.99=20927] 
2023-04-30 20:20:16:256 330 sec: 25276970 operations; 77821 current ops/sec; est completion in 3 hours 32 minutes [READ: Count=739181, Max=16319, Min=779, Avg=1937.82, 90=2603, 99=3821, 99.9=5819, 99.99=7271] [UPDATE: Count=39014, Max=13319, Min=839, Avg=1701.96, 90=2215, 99=3021, 99.9=5423, 99.99=7375] 
2023-04-30 20:20:26:256 340 sec: 26055984 operations; 77901.4 current ops/sec; est completion in 3 hours 31 minutes [READ: Count=740069, Max=27631, Min=789, Avg=1935.87, 90=2593, 99=3769, 99.9=6135, 99.99=23263] [UPDATE: Count=38982, Max=23455, Min=826, Avg=1697.86, 90=2205, 99=2959, 99.9=5747, 99.99=17215] 
2023-04-30 20:20:36:256 350 sec: 26834372 operations; 77838.8 current ops/sec; est completion in 3 hours 31 minutes [READ: Count=739820, Max=45823, Min=763, Avg=1936.66, 90=2589, 99=3751, 99.9=6411, 99.99=23215] [UPDATE: Count=38533, Max=24719, Min=781, Avg=1712.18, 90=2225, 99=3089, 99.9=6131, 99.99=24079] 
2023-04-30 20:20:46:256 360 sec: 27614469 operations; 78009.7 current ops/sec; est completion in 3 hours 31 minutes [READ: Count=741022, Max=10423, Min=813, Avg=1933.21, 90=2593, 99=3795, 99.9=5975, 99.99=7395] [UPDATE: Count=39072, Max=8567, Min=833, Avg=1696.59, 90=2209, 99=3017, 99.9=5639, 99.99=7391] 
2023-04-30 20:20:56:256 370 sec: 28391845 operations; 77737.6 current ops/sec; est completion in 3 hours 31 minutes [READ: Count=738614, Max=38399, Min=801, Avg=1939.39, 90=2591, 99=3763, 99.9=6571, 99.99=22415] [UPDATE: Count=38801, Max=23647, Min=828, Avg=1710.74, 90=2217, 99=2995, 99.9=6275, 99.99=21759] 
2023-04-30 20:21:06:256 380 sec: 29169396 operations; 77755.1 current ops/sec; est completion in 3 hours 30 minutes [READ: Count=738963, Max=32511, Min=792, Avg=1939.12, 90=2591, 99=3799, 99.9=6307, 99.99=22447] [UPDATE: Count=38570, Max=22431, Min=780, Avg=1707.81, 90=2217, 99=2999, 99.9=5759, 99.99=21247] 
2023-04-30 20:21:16:256 390 sec: 29950531 operations; 78113.5 current ops/sec; est completion in 3 hours 30 minutes [READ: Count=742070, Max=9959, Min=800, Avg=1930.36, 90=2591, 99=3739, 99.9=5799, 99.99=7219] [UPDATE: Count=39041, Max=7679, Min=845, Avg=1698.58, 90=2221, 99=3019, 99.9=5347, 99.99=6843] 
2023-04-30 20:21:26:256 400 sec: 30727440 operations; 77690.9 current ops/sec; est completion in 3 hours 30 minutes [READ: Count=738281, Max=47423, Min=801, Avg=1940.85, 90=2597, 99=3753, 99.9=6163, 99.99=31711] [UPDATE: Count=38628, Max=22495, Min=817, Avg=1706.22, 90=2225, 99=2999, 99.9=5703, 99.99=17183] 
2023-04-30 20:21:36:256 410 sec: 31502946 operations; 77550.6 current ops/sec; est completion in 3 hours 30 minutes [READ: Count=736402, Max=30287, Min=780, Avg=1944.7, 90=2595, 99=3863, 99.9=6391, 99.99=24239] [UPDATE: Count=39105, Max=22831, Min=814, Avg=1706.4, 90=2207, 99=3101, 99.9=5755, 99.99=16311] 
2023-04-30 20:21:46:256 420 sec: 32282575 operations; 77962.9 current ops/sec; est completion in 3 hours 29 minutes [READ: Count=740646, Max=11167, Min=805, Avg=1934.12, 90=2593, 99=3789, 99.9=5927, 99.99=7859] [UPDATE: Count=38981, Max=8431, Min=782, Avg=1700.89, 90=2209, 99=3025, 99.9=5663, 99.99=7027] 
2023-04-30 20:21:56:256 430 sec: 33060983 operations; 77840.8 current ops/sec; est completion in 3 hours 29 minutes [READ: Count=740031, Max=47519, Min=782, Avg=1936.81, 90=2585, 99=3731, 99.9=6227, 99.99=25727] [UPDATE: Count=38407, Max=24015, Min=795, Avg=1708.37, 90=2213, 99=3019, 99.9=5911, 99.99=21327] 
2023-04-30 20:22:06:256 440 sec: 33837905 operations; 77692.2 current ops/sec; est completion in 3 hours 29 minutes [READ: Count=737660, Max=49183, Min=799, Avg=1941.13, 90=2593, 99=3785, 99.9=6047, 99.99=24975] [UPDATE: Count=39230, Max=25679, Min=785, Avg=1704.71, 90=2225, 99=2993, 99.9=5363, 99.99=17743] 
2023-04-30 20:22:16:256 450 sec: 34617762 operations; 77985.7 current ops/sec; est completion in 3 hours 29 minutes [READ: Count=740712, Max=8935, Min=811, Avg=1933.5, 90=2595, 99=3767, 99.9=5555, 99.99=6667] [UPDATE: Count=39135, Max=6411, Min=805, Avg=1702.31, 90=2215, 99=3061, 99.9=5215, 99.99=6023] 
2023-04-30 20:22:26:256 460 sec: 35395019 operations; 77725.7 current ops/sec; est completion in 3 hours 28 minutes [READ: Count=738526, Max=30399, Min=800, Avg=1939.68, 90=2591, 99=3785, 99.9=6171, 99.99=23711] [UPDATE: Count=38697, Max=26927, Min=796, Avg=1713.28, 90=2223, 99=3067, 99.9=6091, 99.99=23407] 
2023-04-30 20:22:36:256 470 sec: 36168899 operations; 77388 current ops/sec; est completion in 3 hours 28 minutes [READ: Count=735624, Max=30767, Min=810, Avg=1948.34, 90=2597, 99=3861, 99.9=6871, 99.99=22991] [UPDATE: Count=38311, Max=23647, Min=794, Avg=1712.15, 90=2217, 99=3041, 99.9=5839, 99.99=21983] 
2023-04-30 20:22:46:256 480 sec: 36947594 operations; 77869.5 current ops/sec; est completion in 3 hours 28 minutes [READ: Count=739642, Max=15663, Min=798, Avg=1936.39, 90=2595, 99=3765, 99.9=5871, 99.99=7095] [UPDATE: Count=39055, Max=6855, Min=806, Avg=1705.26, 90=2223, 99=3005, 99.9=5511, 99.99=6667] 
2023-04-30 20:22:56:256 490 sec: 37723460 operations; 77586.6 current ops/sec; est completion in 3 hours 28 minutes [READ: Count=736928, Max=30623, Min=775, Avg=1943.54, 90=2599, 99=3819, 99.9=6203, 99.99=22031] [UPDATE: Count=38952, Max=24015, Min=797, Avg=1709.88, 90=2221, 99=2999, 99.9=5699, 99.99=21583] 
2023-04-30 20:23:06:256 500 sec: 38499395 operations; 77593.5 current ops/sec; est completion in 3 hours 28 minutes [READ: Count=737353, Max=30479, Min=761, Avg=1943.4, 90=2597, 99=3789, 99.9=6427, 99.99=23071] [UPDATE: Count=38593, Max=25263, Min=776, Avg=1707.01, 90=2219, 99=2969, 99.9=6011, 99.99=19103] 
2023-04-30 20:23:16:256 510 sec: 39278094 operations; 77862.11 current ops/sec; est completion in 3 hours 27 minutes [READ: Count=739913, Max=10607, Min=813, Avg=1936.51, 90=2595, 99=3809, 99.9=5807, 99.99=7367] [UPDATE: Count=38784, Max=7051, Min=830, Avg=1700.65, 90=2213, 99=3025, 99.9=5431, 99.99=6547] 
2023-04-30 20:23:26:256 520 sec: 40054416 operations; 77639.96 current ops/sec; est completion in 3 hours 27 minutes [READ: Count=737574, Max=28127, Min=784, Avg=1942.15, 90=2595, 99=3765, 99.9=6175, 99.99=22927] [UPDATE: Count=38729, Max=22991, Min=795, Avg=1711.34, 90=2221, 99=3039, 99.9=5811, 99.99=20111] 
2023-04-30 20:23:36:256 530 sec: 40827241 operations; 77282.5 current ops/sec; est completion in 3 hours 27 minutes [READ: Count=734545, Max=30767, Min=779, Avg=1951.29, 90=2603, 99=3839, 99.9=6727, 99.99=23519] [UPDATE: Count=38306, Max=23423, Min=807, Avg=1713.66, 90=2225, 99=3045, 99.9=6099, 99.99=14831] 
2023-04-30 20:23:46:256 540 sec: 41601405 operations; 77416.4 current ops/sec; est completion in 3 hours 27 minutes [READ: Count=735450, Max=19903, Min=813, Avg=1947.95, 90=2611, 99=3855, 99.9=6031, 99.99=7675] [UPDATE: Count=38687, Max=7335, Min=805, Avg=1708.08, 90=2229, 99=3027, 99.9=5567, 99.99=7135] 
2023-04-30 20:23:56:256 550 sec: 42376004 operations; 77459.9 current ops/sec; est completion in 3 hours 27 minutes [READ: Count=735657, Max=47007, Min=775, Avg=1946.95, 90=2599, 99=3833, 99.9=6379, 99.99=24143] [UPDATE: Count=38977, Max=24287, Min=817, Avg=1707.86, 90=2217, 99=2969, 99.9=5687, 99.99=14919] 
2023-04-30 20:24:06:256 560 sec: 43151647 operations; 77564.3 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=737075, Max=28479, Min=775, Avg=1944.09, 90=2597, 99=3749, 99.9=6231, 99.99=23055] [UPDATE: Count=38557, Max=22879, Min=797, Avg=1707.91, 90=2213, 99=2981, 99.9=5695, 99.99=20447] 
2023-04-30 20:24:16:256 570 sec: 43927623 operations; 77597.6 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=737200, Max=13743, Min=808, Avg=1943.19, 90=2605, 99=3767, 99.9=6027, 99.99=7535] [UPDATE: Count=38769, Max=12647, Min=827, Avg=1711.34, 90=2231, 99=3003, 99.9=5531, 99.99=6995] 
2023-04-30 20:24:26:256 580 sec: 44702744 operations; 77512.1 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=736440, Max=44767, Min=781, Avg=1945.6, 90=2597, 99=3785, 99.9=6147, 99.99=25471] [UPDATE: Count=38681, Max=19871, Min=816, Avg=1705.14, 90=2215, 99=2947, 99.9=5431, 99.99=14591] 
2023-04-30 20:24:36:256 590 sec: 45476346 operations; 77360.2 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=734670, Max=31391, Min=797, Avg=1949.34, 90=2605, 99=3825, 99.9=6503, 99.99=24239] [UPDATE: Count=38936, Max=23903, Min=789, Avg=1713.57, 90=2223, 99=3027, 99.9=6127, 99.99=21519] 
2023-04-30 20:24:46:256 600 sec: 46252133 operations; 77578.7 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=736893, Max=16431, Min=818, Avg=1943.62, 90=2597, 99=3803, 99.9=6171, 99.99=9607] [UPDATE: Count=38876, Max=12263, Min=794, Avg=1712.06, 90=2223, 99=3033, 99.9=5963, 99.99=10335] 
2023-04-30 20:24:56:256 610 sec: 47025143 operations; 77301 current ops/sec; est completion in 3 hours 26 minutes [READ: Count=734227, Max=29231, Min=788, Avg=1950.87, 90=2607, 99=3841, 99.9=6299, 99.99=23087] [UPDATE: Count=38808, Max=23695, Min=837, Avg=1713.8, 90=2225, 99=3047, 99.9=5591, 99.99=21183] 
2023-04-30 20:25:06:256 620 sec: 47797227 operations; 77208.4 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=733649, Max=31199, Min=767, Avg=1953.06, 90=2609, 99=3913, 99.9=6171, 99.99=23743] [UPDATE: Count=38410, Max=24079, Min=804, Avg=1714.85, 90=2225, 99=3069, 99.9=5515, 99.99=17183] 
2023-04-30 20:25:16:256 630 sec: 48573497 operations; 77627 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=737468, Max=10287, Min=801, Avg=1942.66, 90=2601, 99=3779, 99.9=5951, 99.99=7395] [UPDATE: Count=38816, Max=6827, Min=832, Avg=1706.05, 90=2225, 99=2965, 99.9=5499, 99.99=6695] 
2023-04-30 20:25:26:256 640 sec: 49345915 operations; 77241.8 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=734050, Max=42591, Min=754, Avg=1952.15, 90=2605, 99=3825, 99.9=6263, 99.99=22783] [UPDATE: Count=38352, Max=22319, Min=807, Avg=1717.01, 90=2223, 99=2999, 99.9=5735, 99.99=19791] 
2023-04-30 20:25:36:256 650 sec: 50117463 operations; 77154.8 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=732939, Max=30959, Min=753, Avg=1954.52, 90=2611, 99=3841, 99.9=6551, 99.99=22463] [UPDATE: Count=38606, Max=22399, Min=835, Avg=1717.11, 90=2227, 99=3017, 99.9=6007, 99.99=19279] 
2023-04-30 20:25:46:256 660 sec: 50893087 operations; 77562.4 current ops/sec; est completion in 3 hours 25 minutes [READ: Count=736995, Max=14015, Min=805, Avg=1944.02, 90=2603, 99=3789, 99.9=5971, 99.99=8255] [UPDATE: Count=38636, Max=13447, Min=834, Avg=1710.38, 90=2217, 99=2987, 99.9=5695, 99.99=6711] 
2023-04-30 20:25:56:256 670 sec: 51666397 operations; 77331 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=734520, Max=39935, Min=789, Avg=1949.92, 90=2601, 99=3803, 99.9=6279, 99.99=23167] [UPDATE: Count=38776, Max=24463, Min=828, Avg=1715.91, 90=2215, 99=3009, 99.9=6019, 99.99=20799] 
2023-04-30 20:26:06:256 680 sec: 52438423 operations; 77202.6 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=733427, Max=34623, Min=793, Avg=1953.1, 90=2603, 99=3833, 99.9=6427, 99.99=22815] [UPDATE: Count=38605, Max=22687, Min=799, Avg=1719.15, 90=2221, 99=3007, 99.9=6095, 99.99=20975] 
2023-04-30 20:26:16:256 690 sec: 53213364 operations; 77494.1 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=735983, Max=9935, Min=810, Avg=1946.03, 90=2607, 99=3763, 99.9=5939, 99.99=7459] [UPDATE: Count=38887, Max=17487, Min=833, Avg=1712.19, 90=2225, 99=2987, 99.9=5851, 99.99=10767] 
2023-04-30 20:26:26:256 700 sec: 53984097 operations; 77073.3 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=732183, Max=40159, Min=797, Avg=1956.36, 90=2611, 99=3907, 99.9=6871, 99.99=22847] [UPDATE: Count=38623, Max=22815, Min=795, Avg=1718.84, 90=2225, 99=3003, 99.9=6019, 99.99=22079] 
2023-04-30 20:26:36:256 710 sec: 54754491 operations; 77039.4 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=731883, Max=45599, Min=765, Avg=1957.33, 90=2609, 99=3891, 99.9=6431, 99.99=24319] [UPDATE: Count=38518, Max=25247, Min=789, Avg=1720.56, 90=2237, 99=3021, 99.9=5927, 99.99=22911] 
2023-04-30 20:26:46:256 720 sec: 55529342 operations; 77485.1 current ops/sec; est completion in 3 hours 24 minutes [READ: Count=736164, Max=9855, Min=789, Avg=1946.15, 90=2613, 99=3757, 99.9=5835, 99.99=7003] [UPDATE: Count=38612, Max=21375, Min=824, Avg=1714.32, 90=2221, 99=3015, 99.9=5903, 99.99=14311] 
2023-04-30 20:26:56:256 730 sec: 56300046 operations; 77070.4 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=732447, Max=43551, Min=788, Avg=1955.92, 90=2609, 99=3813, 99.9=6979, 99.99=22447] [UPDATE: Count=38329, Max=23215, Min=787, Avg=1725.12, 90=2237, 99=3003, 99.9=6771, 99.99=20463] 
2023-04-30 20:27:06:256 740 sec: 57057132 operations; 75708.6 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=719258, Max=31167, Min=788, Avg=1991.94, 90=2751, 99=4107, 99.9=6319, 99.99=22943] [UPDATE: Count=37811, Max=21951, Min=793, Avg=1747.7, 90=2389, 99=3191, 99.9=5759, 99.99=18031] 
2023-04-30 20:27:16:256 750 sec: 57816630 operations; 75949.8 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=721775, Max=11175, Min=808, Avg=1985.22, 90=2743, 99=4071, 99.9=5995, 99.99=7347] [UPDATE: Count=37721, Max=10039, Min=835, Avg=1749.02, 90=2389, 99=3185, 99.9=5487, 99.99=6559] 
2023-04-30 20:27:26:256 760 sec: 58573860 operations; 75723 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=719536, Max=29823, Min=800, Avg=1991.1, 90=2745, 99=4127, 99.9=6579, 99.99=23135] [UPDATE: Count=37651, Max=21359, Min=786, Avg=1757.26, 90=2393, 99=3217, 99.9=6355, 99.99=18863] 
2023-04-30 20:27:36:256 770 sec: 59332723 operations; 75886.3 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=720854, Max=41055, Min=772, Avg=1987.1, 90=2721, 99=4135, 99.9=7259, 99.99=23391] [UPDATE: Count=38076, Max=24063, Min=810, Avg=1746.1, 90=2363, 99=3159, 99.9=6323, 99.99=19663] 
2023-04-30 20:27:46:256 780 sec: 60111317 operations; 77859.4 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=739733, Max=8927, Min=801, Avg=1936.87, 90=2593, 99=3755, 99.9=6175, 99.99=7359] [UPDATE: Count=38835, Max=7075, Min=827, Avg=1699.13, 90=2205, 99=2907, 99.9=5731, 99.99=6791] 
2023-04-30 20:27:56:256 790 sec: 60885836 operations; 77451.9 current ops/sec; est completion in 3 hours 23 minutes [READ: Count=735702, Max=34111, Min=787, Avg=1946.79, 90=2597, 99=3797, 99.9=6479, 99.99=22639] [UPDATE: Count=38835, Max=24399, Min=829, Avg=1714.05, 90=2209, 99=2967, 99.9=6367, 99.99=22543] 
2023-04-30 20:28:06:256 800 sec: 61659566 operations; 77373 current ops/sec; est completion in 3 hours 22 minutes [READ: Count=735346, Max=39327, Min=771, Avg=1949.03, 90=2601, 99=3859, 99.9=6407, 99.99=23311] [UPDATE: Count=38366, Max=23967, Min=778, Avg=1710.11, 90=2215, 99=3033, 99.9=5927, 99.99=21087] 
2023-04-30 20:28:16:256 810 sec: 62436089 operations; 77652.3 current ops/sec; est completion in 3 hours 22 minutes [READ: Count=737501, Max=12567, Min=820, Avg=1941.96, 90=2603, 99=3767, 99.9=6035, 99.99=7727] [UPDATE: Count=39018, Max=11863, Min=829, Avg=1707.13, 90=2217, 99=3003, 99.9=5915, 99.99=7803] 
2023-04-30 20:28:26:256 820 sec: 63211186 operations; 77509.7 current ops/sec; est completion in 3 hours 22 minutes [READ: Count=736495, Max=45311, Min=749, Avg=1945.83, 90=2597, 99=3805, 99.9=6331, 99.99=23199] [UPDATE: Count=38612, Max=22159, Min=792, Avg=1702.64, 90=2209, 99=2987, 99.9=5363, 99.99=16383] 
2023-04-30 20:28:36:256 830 sec: 63985299 operations; 77411.3 current ops/sec; est completion in 3 hours 22 minutes [READ: Count=735483, Max=30431, Min=795, Avg=1948.1, 90=2595, 99=3829, 99.9=6803, 99.99=23247] [UPDATE: Count=38629, Max=25647, Min=793, Avg=1709.25, 90=2207, 99=2933, 99.9=6383, 99.99=23023] 
2023-04-30 20:28:46:256 840 sec: 64762336 operations; 77703.7 current ops/sec; est completion in 3 hours 22 minutes [READ: Count=738230, Max=11975, Min=814, Avg=1940.69, 90=2595, 99=3745, 99.9=6027, 99.99=7787] [UPDATE: Count=38798, Max=12255, Min=821, Avg=1704.72, 90=2209, 99=2981, 99.9=5771, 99.99=6951] 
2023-04-30 20:28:56:256 850 sec: 65536951 operations; 77461.5 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=736298, Max=31487, Min=781, Avg=1946.78, 90=2595, 99=3807, 99.9=6315, 99.99=24143] [UPDATE: Count=38349, Max=22527, Min=811, Avg=1707.78, 90=2207, 99=2975, 99.9=5947, 99.99=20063] 
2023-04-30 20:29:06:256 860 sec: 66309634 operations; 77268.3 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=734204, Max=32655, Min=813, Avg=1951.81, 90=2599, 99=3903, 99.9=6639, 99.99=25311] [UPDATE: Count=38490, Max=25087, Min=813, Avg=1709.07, 90=2209, 99=3015, 99.9=6211, 99.99=20879] 
2023-04-30 20:29:16:256 870 sec: 67085694 operations; 77606 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=737231, Max=12127, Min=810, Avg=1943.28, 90=2597, 99=3801, 99.9=6115, 99.99=7363] [UPDATE: Count=38826, Max=12047, Min=814, Avg=1704.62, 90=2203, 99=2973, 99.9=5975, 99.99=6999] 
2023-04-30 20:29:26:259 880 sec: 67861519 operations; 77551.48 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=737416, Max=35359, Min=770, Avg=1944.57, 90=2591, 99=3741, 99.9=6471, 99.99=22719] [UPDATE: Count=38444, Max=22975, Min=808, Avg=1702.84, 90=2199, 99=2877, 99.9=5631, 99.99=18239] 
2023-04-30 20:29:36:256 890 sec: 68635409 operations; 77419.97 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=735398, Max=27455, Min=788, Avg=1947.83, 90=2595, 99=3753, 99.9=6543, 99.99=22255] [UPDATE: Count=38472, Max=24047, Min=824, Avg=1710.8, 90=2201, 99=2955, 99.9=6231, 99.99=20383] 
2023-04-30 20:29:46:256 900 sec: 69410166 operations; 77475.7 current ops/sec; est completion in 3 hours 21 minutes [READ: Count=735568, Max=10927, Min=820, Avg=1946.7, 90=2597, 99=3825, 99.9=6371, 99.99=8367] [UPDATE: Count=39139, Max=8783, Min=834, Avg=1706.27, 90=2209, 99=2971, 99.9=5999, 99.99=7231] 
2023-04-30 20:29:56:256 910 sec: 70182314 operations; 77214.8 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=733757, Max=30511, Min=788, Avg=1952.85, 90=2605, 99=3863, 99.9=6487, 99.99=22143] [UPDATE: Count=38408, Max=23407, Min=807, Avg=1716.83, 90=2215, 99=3069, 99.9=6063, 99.99=18127] 
2023-04-30 20:30:06:256 920 sec: 70951017 operations; 76870.3 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=730626, Max=49823, Min=790, Avg=1962.25, 90=2625, 99=3903, 99.9=6803, 99.99=25023] [UPDATE: Count=38084, Max=22623, Min=812, Avg=1710.82, 90=2227, 99=2951, 99.9=5983, 99.99=18079] 
2023-04-30 20:30:16:256 930 sec: 71709475 operations; 75845.8 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=720591, Max=10263, Min=810, Avg=1989.12, 90=2719, 99=4029, 99.9=5971, 99.99=7207] [UPDATE: Count=37863, Max=7595, Min=845, Avg=1729.86, 90=2307, 99=3037, 99.9=5595, 99.99=6759] 
2023-04-30 20:30:26:256 940 sec: 72466764 operations; 75728.9 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=719275, Max=44735, Min=799, Avg=1992.45, 90=2709, 99=4099, 99.9=6491, 99.99=25615] [UPDATE: Count=37997, Max=25359, Min=832, Avg=1729.66, 90=2299, 99=3049, 99.9=6063, 99.99=14791] 
2023-04-30 20:30:36:256 950 sec: 73213661 operations; 74689.7 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=709456, Max=47263, Min=807, Avg=2020.87, 90=2767, 99=4387, 99.9=6735, 99.99=23935] [UPDATE: Count=37438, Max=25535, Min=845, Avg=1740.33, 90=2333, 99=3135, 99.9=6107, 99.99=19871] 
2023-04-30 20:30:46:256 960 sec: 73956890 operations; 74322.9 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=706357, Max=10039, Min=882, Avg=2031.31, 90=2789, 99=4259, 99.9=6223, 99.99=7379] [UPDATE: Count=36874, Max=8415, Min=877, Avg=1737.81, 90=2361, 99=2943, 99.9=5799, 99.99=7011] 
2023-04-30 20:30:56:256 970 sec: 74698267 operations; 74137.7 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=704092, Max=30879, Min=867, Avg=2036.12, 90=2779, 99=4235, 99.9=6555, 99.99=24399] [UPDATE: Count=37291, Max=24495, Min=877, Avg=1750.36, 90=2373, 99=3019, 99.9=6243, 99.99=23423] 
2023-04-30 20:31:06:256 980 sec: 75439891 operations; 74162.4 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=704683, Max=47679, Min=882, Avg=2035.26, 90=2769, 99=4271, 99.9=6303, 99.99=23935] [UPDATE: Count=36959, Max=24159, Min=886, Avg=1750.81, 90=2371, 99=3003, 99.9=5879, 99.99=19119] 
2023-04-30 20:31:16:256 990 sec: 76183249 operations; 74335.8 current ops/sec; est completion in 3 hours 20 minutes [READ: Count=705730, Max=10015, Min=881, Avg=2030.75, 90=2771, 99=4175, 99.9=6387, 99.99=8015] [UPDATE: Count=37608, Max=8447, Min=870, Avg=1747.23, 90=2379, 99=2853, 99.9=5967, 99.99=7395] 
2023-04-30 20:31:26:256 1000 sec: 76923978 operations; 74072.9 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=703544, Max=28655, Min=869, Avg=2038.26, 90=2773, 99=4235, 99.9=6603, 99.99=22799] [UPDATE: Count=37184, Max=25311, Min=871, Avg=1745.22, 90=2359, 99=2851, 99.9=5843, 99.99=18783] 
2023-04-30 20:31:36:256 1010 sec: 77663347 operations; 73936.9 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=702416, Max=48543, Min=903, Avg=2041.69, 90=2777, 99=4267, 99.9=6739, 99.99=26591] [UPDATE: Count=36949, Max=24239, Min=873, Avg=1753.48, 90=2379, 99=2943, 99.9=5991, 99.99=20655] 
2023-04-30 20:31:46:256 1020 sec: 78407924 operations; 74457.7 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=707499, Max=10447, Min=880, Avg=2027.37, 90=2765, 99=4091, 99.9=6091, 99.99=7363] [UPDATE: Count=37079, Max=6683, Min=894, Avg=1740.4, 90=2357, 99=2855, 99.9=5487, 99.99=6411] 
2023-04-30 20:31:56:256 1030 sec: 79147346 operations; 73942.2 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=702353, Max=49183, Min=876, Avg=2041.49, 90=2781, 99=4239, 99.9=6363, 99.99=24799] [UPDATE: Count=37083, Max=24607, Min=874, Avg=1755.06, 90=2381, 99=2969, 99.9=6139, 99.99=17407] 
2023-04-30 20:32:06:256 1040 sec: 79886957 operations; 73961.1 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=702582, Max=29711, Min=876, Avg=2041, 90=2777, 99=4295, 99.9=6711, 99.99=24159] [UPDATE: Count=37029, Max=25615, Min=885, Avg=1754.11, 90=2377, 99=2925, 99.9=5959, 99.99=21039] 
2023-04-30 20:32:16:256 1050 sec: 80629841 operations; 74288.4 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=706156, Max=10103, Min=841, Avg=2031.77, 90=2773, 99=4211, 99.9=6099, 99.99=7471] [UPDATE: Count=36715, Max=8375, Min=856, Avg=1746.08, 90=2367, 99=2925, 99.9=5699, 99.99=6579] 
2023-04-30 20:32:26:256 1060 sec: 81388772 operations; 75893.1 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=720805, Max=40831, Min=772, Avg=1988.2, 90=2675, 99=3897, 99.9=6579, 99.99=24143] [UPDATE: Count=38125, Max=24671, Min=841, Avg=1725.04, 90=2285, 99=2861, 99.9=5863, 99.99=22447] 
2023-04-30 20:32:36:256 1070 sec: 82145709 operations; 75693.7 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=719160, Max=48639, Min=798, Avg=1993.09, 90=2685, 99=3987, 99.9=6511, 99.99=23359] [UPDATE: Count=37785, Max=22415, Min=831, Avg=1733.63, 90=2307, 99=2971, 99.9=6127, 99.99=18559] 
2023-04-30 20:32:46:256 1080 sec: 82889109 operations; 74340 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=706348, Max=12935, Min=822, Avg=2030.46, 90=2787, 99=4207, 99.9=6299, 99.99=7719] [UPDATE: Count=37035, Max=7755, Min=791, Avg=1746.69, 90=2381, 99=3039, 99.9=5923, 99.99=7063] 
2023-04-30 20:32:56:256 1090 sec: 83631828 operations; 74271.9 current ops/sec; est completion in 3 hours 19 minutes [READ: Count=705710, Max=32687, Min=748, Avg=2032.46, 90=2775, 99=4167, 99.9=6351, 99.99=23695] [UPDATE: Count=37022, Max=22623, Min=783, Avg=1745.02, 90=2371, 99=2971, 99.9=5835, 99.99=19887] 
2023-04-30 20:33:06:256 1100 sec: 84373875 operations; 74204.7 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=705206, Max=41023, Min=758, Avg=2033.99, 90=2793, 99=4279, 99.9=6487, 99.99=22543] [UPDATE: Count=36864, Max=25311, Min=820, Avg=1751.7, 90=2391, 99=3143, 99.9=5967, 99.99=22239] 
2023-04-30 20:33:16:256 1110 sec: 85115910 operations; 74203.5 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=705231, Max=38367, Min=777, Avg=2034.35, 90=2783, 99=4271, 99.9=6331, 99.99=36639] [UPDATE: Count=36786, Max=37439, Min=789, Avg=1744.64, 90=2381, 99=3069, 99.9=5979, 99.99=36767] 
2023-04-30 20:33:26:256 1120 sec: 85858845 operations; 74293.5 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=705970, Max=44383, Min=793, Avg=2031.72, 90=2769, 99=4219, 99.9=6187, 99.99=23535] [UPDATE: Count=36954, Max=24591, Min=816, Avg=1746.57, 90=2379, 99=3037, 99.9=5731, 99.99=17583] 
2023-04-30 20:33:36:256 1130 sec: 86601360 operations; 74251.5 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=705414, Max=31743, Min=808, Avg=2032.94, 90=2763, 99=4207, 99.9=6199, 99.99=23279] [UPDATE: Count=37110, Max=25583, Min=835, Avg=1747.25, 90=2379, 99=3025, 99.9=5787, 99.99=19455] 
2023-04-30 20:33:46:256 1140 sec: 87350273 operations; 74891.3 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=711413, Max=10399, Min=801, Avg=2015.23, 90=2753, 99=4127, 99.9=6107, 99.99=7999] [UPDATE: Count=37485, Max=8839, Min=821, Avg=1738.25, 90=2365, 99=2981, 99.9=5635, 99.99=7559] 
2023-04-30 20:33:56:256 1150 sec: 88109837 operations; 75956.4 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=721217, Max=38943, Min=791, Avg=1986.29, 90=2689, 99=3999, 99.9=6163, 99.99=23839] [UPDATE: Count=38354, Max=22143, Min=804, Avg=1729.53, 90=2309, 99=2963, 99.9=5867, 99.99=18623] 
2023-04-30 20:34:06:256 1160 sec: 88868738 operations; 75890.1 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=720718, Max=32543, Min=802, Avg=1987.94, 90=2695, 99=3949, 99.9=6187, 99.99=22831] [UPDATE: Count=38179, Max=19263, Min=798, Avg=1731.2, 90=2315, 99=2961, 99.9=5523, 99.99=16911] 
2023-04-30 20:34:16:256 1170 sec: 89640964 operations; 77214.88 current ops/sec; est completion in 3 hours 18 minutes [READ: Count=733349, Max=10383, Min=796, Avg=1952.99, 90=2637, 99=3865, 99.9=5943, 99.99=7191] [UPDATE: Count=38880, Max=8559, Min=800, Avg=1713.94, 90=2263, 99=3071, 99.9=5647, 99.99=6759] 
2023-04-30 20:34:26:256 1180 sec: 90411401 operations; 77051.41 current ops/sec; est completion in 3 hours 17 minutes [READ: Count=731940, Max=42143, Min=774, Avg=1956.86, 90=2639, 99=3891, 99.9=6383, 99.99=22079] [UPDATE: Count=38516, Max=23743, Min=780, Avg=1727.29, 90=2269, 99=3183, 99.9=6055, 99.99=19935] 
2023-04-30 20:34:36:256 1190 sec: 91178987 operations; 76758.6 current ops/sec; est completion in 3 hours 17 minutes [READ: Count=729405, Max=44575, Min=779, Avg=1964.2, 90=2649, 99=3885, 99.9=6583, 99.99=24751] [UPDATE: Count=38193, Max=23935, Min=797, Avg=1731.97, 90=2287, 99=3179, 99.9=6063, 99.99=16279] 
2023-04-30 20:34:46:256 1200 sec: 91950496 operations; 77150.9 current ops/sec; est completion in 3 hours 17 minutes [READ: Count=732987, Max=9935, Min=793, Avg=1954.07, 90=2639, 99=3855, 99.9=5751, 99.99=6959] [UPDATE: Count=38524, Max=8367, Min=818, Avg=1727.1, 90=2273, 99=3123, 99.9=5555, 99.99=6639] 
2023-04-30 20:34:56:256 1210 sec: 92723241 operations; 77274.5 current ops/sec; est completion in 3 hours 17 minutes [READ: Count=734521, Max=30415, Min=781, Avg=1951.19, 90=2617, 99=3847, 99.9=6519, 99.99=24655] [UPDATE: Count=38211, Max=24687, Min=802, Avg=1717.85, 90=2241, 99=3089, 99.9=6343, 99.99=21055] 
2023-04-30 20:35:06:256 1220 sec: 93495441 operations; 77220 current ops/sec; est completion in 3 hours 17 minutes [READ: Count=734015, Max=35103, Min=768, Avg=1952.61, 90=2617, 99=3875, 99.9=6503, 99.99=24239] [UPDATE: Count=38172, Max=22479, Min=766, Avg=1717.1, 90=2245, 99=3109, 99.9=6251, 99.99=12975] 
2023-04-30 20:35:16:256 1230 sec: 94270175 operations; 77473.4 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=736574, Max=11207, Min=796, Avg=1946, 90=2623, 99=3847, 99.9=5755, 99.99=7131] [UPDATE: Count=38155, Max=6983, Min=822, Avg=1714.59, 90=2249, 99=3087, 99.9=5347, 99.99=6463] 
2023-04-30 20:35:26:256 1240 sec: 95040210 operations; 77003.5 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=731524, Max=42847, Min=776, Avg=1958.3, 90=2627, 99=3891, 99.9=6123, 99.99=23887] [UPDATE: Count=38512, Max=24799, Min=798, Avg=1721.28, 90=2247, 99=3077, 99.9=5603, 99.99=15071] 
2023-04-30 20:35:36:256 1250 sec: 95811587 operations; 77137.7 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=732789, Max=36287, Min=782, Avg=1954.54, 90=2617, 99=3831, 99.9=6487, 99.99=23471] [UPDATE: Count=38603, Max=24175, Min=794, Avg=1724.53, 90=2251, 99=3109, 99.9=5659, 99.99=22975] 
2023-04-30 20:35:46:256 1260 sec: 96586853 operations; 77526.6 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=736647, Max=11039, Min=799, Avg=1944.59, 90=2613, 99=3785, 99.9=5899, 99.99=7223] [UPDATE: Count=38606, Max=7151, Min=811, Avg=1718.06, 90=2247, 99=3049, 99.9=5439, 99.99=6315] 
2023-04-30 20:35:56:256 1270 sec: 97358130 operations; 77127.7 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=732777, Max=45247, Min=772, Avg=1954.91, 90=2619, 99=3865, 99.9=6275, 99.99=24527] [UPDATE: Count=38510, Max=25055, Min=781, Avg=1723.21, 90=2251, 99=3167, 99.9=5787, 99.99=20479] 
2023-04-30 20:36:06:256 1280 sec: 98130159 operations; 77195.18 current ops/sec; est completion in 3 hours 16 minutes [READ: Count=733249, Max=33439, Min=777, Avg=1952.99, 90=2615, 99=3833, 99.9=6335, 99.99=23279] [UPDATE: Count=38801, Max=23247, Min=796, Avg=1722.13, 90=2243, 99=3113, 99.9=5919, 99.99=19823] 
2023-04-30 20:36:16:256 1290 sec: 98904204 operations; 77412.24 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=735544, Max=9183, Min=795, Avg=1947.96, 90=2615, 99=3815, 99.9=5855, 99.99=6839] [UPDATE: Count=38463, Max=6831, Min=799, Avg=1714.71, 90=2241, 99=3047, 99.9=5491, 99.99=6471] 
2023-04-30 20:36:26:256 1300 sec: 99675580 operations; 77137.6 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=732734, Max=31391, Min=781, Avg=1954.44, 90=2613, 99=3827, 99.9=6471, 99.99=23199] [UPDATE: Count=38662, Max=23135, Min=807, Avg=1725.71, 90=2239, 99=3085, 99.9=6011, 99.99=19647] 
2023-04-30 20:36:36:256 1310 sec: 100444542 operations; 76896.2 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=730757, Max=47423, Min=789, Avg=1961.03, 90=2633, 99=3867, 99.9=6531, 99.99=24927] [UPDATE: Count=38203, Max=25167, Min=797, Avg=1722.39, 90=2259, 99=3097, 99.9=5943, 99.99=18895] 
2023-04-30 20:36:46:256 1320 sec: 101218443 operations; 77390.1 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=735153, Max=10047, Min=796, Avg=1948.14, 90=2613, 99=3799, 99.9=5871, 99.99=7075] [UPDATE: Count=38717, Max=8083, Min=792, Avg=1720.41, 90=2241, 99=3103, 99.9=5623, 99.99=6619] 
2023-04-30 20:36:56:256 1330 sec: 101989075 operations; 77063.2 current ops/sec; est completion in 3 hours 15 minutes [READ: Count=732277, Max=28991, Min=776, Avg=1956.48, 90=2623, 99=3845, 99.9=6311, 99.99=22991] [UPDATE: Count=38389, Max=23023, Min=779, Avg=1724.39, 90=2251, 99=3115, 99.9=5899, 99.99=15391] 
2023-04-30 20:37:06:256 1340 sec: 102761840 operations; 77276.5 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=734079, Max=30831, Min=768, Avg=1951.23, 90=2615, 99=3811, 99.9=6067, 99.99=23039] [UPDATE: Count=38673, Max=22911, Min=816, Avg=1717.83, 90=2251, 99=3065, 99.9=5623, 99.99=21823] 
2023-04-30 20:37:16:256 1350 sec: 103535604 operations; 77376.4 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=735023, Max=9255, Min=803, Avg=1948.59, 90=2617, 99=3799, 99.9=6007, 99.99=7223] [UPDATE: Count=38670, Max=23839, Min=826, Avg=1720.84, 90=2255, 99=3075, 99.9=5559, 99.99=9255] 
2023-04-30 20:37:26:256 1360 sec: 104304944 operations; 76934 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=730771, Max=46431, Min=762, Avg=1959.68, 90=2615, 99=3851, 99.9=6895, 99.99=24639] [UPDATE: Count=38592, Max=23711, Min=795, Avg=1731.14, 90=2255, 99=3161, 99.9=6423, 99.99=17791] 
2023-04-30 20:37:36:256 1370 sec: 105067795 operations; 76285.1 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=724852, Max=40831, Min=777, Avg=1976.19, 90=2657, 99=3945, 99.9=7619, 99.99=23983] [UPDATE: Count=38078, Max=23023, Min=801, Avg=1742.4, 90=2289, 99=3189, 99.9=5843, 99.99=21231] 
2023-04-30 20:37:46:256 1380 sec: 105836035 operations; 76824 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=730077, Max=11071, Min=788, Avg=1962.48, 90=2653, 99=3893, 99.9=5855, 99.99=7855] [UPDATE: Count=38129, Max=8207, Min=805, Avg=1731.18, 90=2277, 99=3251, 99.9=5715, 99.99=6999] 
2023-04-30 20:37:56:256 1390 sec: 106591891 operations; 75585.6 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=718416, Max=48799, Min=784, Avg=1995.51, 90=2725, 99=4033, 99.9=6367, 99.99=25247] [UPDATE: Count=37456, Max=21903, Min=783, Avg=1742.31, 90=2325, 99=3103, 99.9=5927, 99.99=18191] 
2023-04-30 20:38:06:256 1400 sec: 107347160 operations; 75526.9 current ops/sec; est completion in 3 hours 14 minutes [READ: Count=717753, Max=31407, Min=797, Avg=1997.37, 90=2725, 99=4051, 99.9=6359, 99.99=22975] [UPDATE: Count=37513, Max=22671, Min=808, Avg=1739.45, 90=2343, 99=3099, 99.9=6095, 99.99=21119] 
2023-04-30 20:38:16:256 1410 sec: 108104981 operations; 75782.1 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=720059, Max=9943, Min=774, Avg=1990.95, 90=2723, 99=4155, 99.9=6099, 99.99=7499] [UPDATE: Count=37749, Max=8099, Min=796, Avg=1728.24, 90=2325, 99=3041, 99.9=5787, 99.99=6711] 
2023-04-30 20:38:26:256 1420 sec: 108861268 operations; 75628.7 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=718510, Max=47263, Min=769, Avg=1995.14, 90=2729, 99=4315, 99.9=6763, 99.99=23375] [UPDATE: Count=37764, Max=30063, Min=766, Avg=1729.79, 90=2321, 99=3097, 99.9=5995, 99.99=20991] 
2023-04-30 20:38:36:256 1430 sec: 109618449 operations; 75718.1 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=719613, Max=30207, Min=759, Avg=1992.42, 90=2705, 99=4143, 99.9=6711, 99.99=23007] [UPDATE: Count=37601, Max=20495, Min=778, Avg=1732.79, 90=2329, 99=3079, 99.9=5983, 99.99=16295] 
2023-04-30 20:38:46:256 1440 sec: 110378316 operations; 75986.7 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=721790, Max=10647, Min=777, Avg=1985.35, 90=2699, 99=4015, 99.9=6031, 99.99=7375] [UPDATE: Count=38066, Max=7619, Min=815, Avg=1729.38, 90=2325, 99=2995, 99.9=5539, 99.99=6635] 
2023-04-30 20:38:56:256 1450 sec: 111136767 operations; 75845.1 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=720307, Max=41631, Min=783, Avg=1989.33, 90=2701, 99=4045, 99.9=6431, 99.99=24767] [UPDATE: Count=38147, Max=22047, Min=817, Avg=1729.24, 90=2311, 99=2991, 99.9=5783, 99.99=18479] 
2023-04-30 20:39:06:256 1460 sec: 111894337 operations; 75757 current ops/sec; est completion in 3 hours 13 minutes [READ: Count=719751, Max=45151, Min=787, Avg=1991.22, 90=2705, 99=4059, 99.9=6323, 99.99=23455] [UPDATE: Count=37816, Max=23791, Min=786, Avg=1734.98, 90=2321, 99=3063, 99.9=5875, 99.99=20031] 
2023-04-30 20:39:16:256 1470 sec: 112649675 operations; 75533.8 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=717696, Max=9639, Min=793, Avg=1997.44, 90=2729, 99=4055, 99.9=6079, 99.99=7459] [UPDATE: Count=37626, Max=6979, Min=826, Avg=1736.14, 90=2347, 99=3231, 99.9=5671, 99.99=6799] 
2023-04-30 20:39:26:256 1480 sec: 113391036 operations; 74136.1 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=704155, Max=42143, Min=761, Avg=2035.47, 90=2855, 99=4387, 99.9=6575, 99.99=23567] [UPDATE: Count=37216, Max=24143, Min=798, Avg=1763.01, 90=2461, 99=3509, 99.9=6287, 99.99=20687] 
2023-04-30 20:39:36:256 1490 sec: 114131625 operations; 74058.9 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=703629, Max=45503, Min=767, Avg=2037.13, 90=2857, 99=4327, 99.9=6415, 99.99=22799] [UPDATE: Count=36975, Max=23951, Min=799, Avg=1773.07, 90=2483, 99=3495, 99.9=7035, 99.99=21791] 
2023-04-30 20:39:46:256 1500 sec: 114874465 operations; 74284 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=705893, Max=10615, Min=774, Avg=2031.39, 90=2853, 99=4439, 99.9=6107, 99.99=8359] [UPDATE: Count=36942, Max=9167, Min=792, Avg=1757.49, 90=2439, 99=3565, 99.9=5847, 99.99=8455] 
2023-04-30 20:39:56:256 1510 sec: 115616615 operations; 74215 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=704874, Max=47647, Min=797, Avg=2033.01, 90=2849, 99=4323, 99.9=6523, 99.99=24207] [UPDATE: Count=37279, Max=23439, Min=785, Avg=1767.11, 90=2463, 99=3507, 99.9=6291, 99.99=21295] 
2023-04-30 20:40:06:256 1520 sec: 116370819 operations; 75420.4 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=716310, Max=49055, Min=784, Avg=2000.12, 90=2775, 99=4227, 99.9=6535, 99.99=25903] [UPDATE: Count=37898, Max=23631, Min=781, Avg=1745.31, 90=2375, 99=3481, 99.9=5779, 99.99=19503] 
2023-04-30 20:40:16:256 1530 sec: 117130122 operations; 75930.3 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=721229, Max=10055, Min=802, Avg=1986.06, 90=2761, 99=4099, 99.9=5963, 99.99=7439] [UPDATE: Count=38062, Max=8367, Min=823, Avg=1745.29, 90=2361, 99=3489, 99.9=5755, 99.99=6875] 
2023-04-30 20:40:26:256 1540 sec: 117885904 operations; 75578.2 current ops/sec; est completion in 3 hours 12 minutes [READ: Count=717868, Max=34399, Min=774, Avg=1995.08, 90=2769, 99=4147, 99.9=6479, 99.99=23279] [UPDATE: Count=37898, Max=25151, Min=801, Avg=1757.06, 90=2387, 99=3495, 99.9=6051, 99.99=20015] 
2023-04-30 20:40:36:256 1550 sec: 118624616 operations; 73871.2 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=701952, Max=35967, Min=755, Avg=2041.46, 90=2987, 99=4355, 99.9=8155, 99.99=24895] [UPDATE: Count=36783, Max=26367, Min=796, Avg=1792.02, 90=2621, 99=3499, 99.9=6759, 99.99=24703] 
2023-04-30 20:40:46:256 1560 sec: 119369546 operations; 74493 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=707891, Max=10767, Min=778, Avg=2024.47, 90=2979, 99=4223, 99.9=6023, 99.99=7843] [UPDATE: Count=36959, Max=21119, Min=795, Avg=1778.19, 90=2611, 99=3483, 99.9=5671, 99.99=10271] 
2023-04-30 20:40:56:256 1570 sec: 120107988 operations; 73844.2 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=701848, Max=47423, Min=779, Avg=2042.49, 90=2997, 99=4355, 99.9=7287, 99.99=26927] [UPDATE: Count=36611, Max=25071, Min=801, Avg=1784.19, 90=2621, 99=3509, 99.9=6203, 99.99=20895] 
2023-04-30 20:41:06:256 1580 sec: 120859883 operations; 75189.5 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=714459, Max=50335, Min=790, Avg=2005.8, 90=2823, 99=4211, 99.9=6799, 99.99=24735] [UPDATE: Count=37488, Max=23759, Min=823, Avg=1754.36, 90=2429, 99=3481, 99.9=5863, 99.99=20031] 
2023-04-30 20:41:16:256 1590 sec: 121620595 operations; 76071.2 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=722607, Max=9775, Min=771, Avg=1982.3, 90=2751, 99=4127, 99.9=6143, 99.99=7559] [UPDATE: Count=38097, Max=7299, Min=822, Avg=1742.96, 90=2355, 99=3475, 99.9=5915, 99.99=6711] 
2023-04-30 20:41:26:259 1600 sec: 122398183 operations; 77727.71 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=738715, Max=48639, Min=777, Avg=1939.85, 90=2575, 99=3809, 99.9=6619, 99.99=23343] [UPDATE: Count=38880, Max=24175, Min=804, Avg=1706.57, 90=2203, 99=3027, 99.9=5763, 99.99=10527] 
2023-04-30 20:41:36:256 1610 sec: 123174166 operations; 77629.35 current ops/sec; est completion in 3 hours 11 minutes [READ: Count=737213, Max=33759, Min=772, Avg=1942.24, 90=2583, 99=3801, 99.9=6367, 99.99=23791] [UPDATE: Count=38742, Max=24655, Min=793, Avg=1713.68, 90=2219, 99=3039, 99.9=5843, 99.99=20239] 
2023-04-30 20:41:46:256 1620 sec: 123952177 operations; 77801.1 current ops/sec; est completion in 3 hours 10 minutes [READ: Count=739004, Max=13031, Min=800, Avg=1937.87, 90=2585, 99=3793, 99.9=5999, 99.99=8167] [UPDATE: Count=39025, Max=13143, Min=827, Avg=1710.45, 90=2217, 99=3043, 99.9=5735, 99.99=6907] 
2023-04-30 20:41:56:256 1630 sec: 124729277 operations; 77710 current ops/sec; est completion in 3 hours 10 minutes [READ: Count=738427, Max=46783, Min=789, Avg=1939.99, 90=2581, 99=3781, 99.9=6091, 99.99=24911] [UPDATE: Count=38630, Max=21919, Min=795, Avg=1716.02, 90=2223, 99=3063, 99.9=6135, 99.99=20447] 
2023-04-30 20:42:06:256 1640 sec: 125490218 operations; 76094.1 current ops/sec; est completion in 3 hours 10 minutes [READ: Count=723036, Max=29871, Min=800, Avg=1981.41, 90=2705, 99=4099, 99.9=6607, 99.99=23551] [UPDATE: Count=37982, Max=24591, Min=783, Avg=1743.59, 90=2325, 99=3159, 99.9=6035, 99.99=21119] 
2023-04-30 20:42:16:256 1650 sec: 126253366 operations; 76314.8 current ops/sec; est completion in 3 hours 10 minutes [READ: Count=724851, Max=9607, Min=798, Avg=1975.99, 90=2709, 99=4069, 99.9=5979, 99.99=7323] [UPDATE: Count=38282, Max=7811, Min=818, Avg=1737.13, 90=2333, 99=3153, 99.9=5595, 99.99=7139] 
2023-04-30 20:42:26:256 1660 sec: 127012417 operations; 75905.1 current ops/sec; est completion in 3 hours 10 minutes [READ: Count=721054, Max=48895, Min=772, Avg=1986.47, 90=2723, 99=4155, 99.9=6427, 99.99=24207] [UPDATE: Count=38021, Max=25311, Min=792, Avg=1749.79, 90=2347, 99=3263, 99.9=6283, 99.99=19615] 
2023-04-30 20:42:36:256 1670 sec: 127773590 operations; 76117.3 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=723418, Max=49983, Min=773, Avg=1980.88, 90=2709, 99=4099, 99.9=6483, 99.99=25103] [UPDATE: Count=37712, Max=24127, Min=803, Avg=1745.33, 90=2325, 99=3267, 99.9=6267, 99.99=17535] 
2023-04-30 20:42:46:256 1680 sec: 128540742 operations; 76715.2 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=728620, Max=15111, Min=796, Avg=1965.62, 90=2683, 99=3729, 99.9=5783, 99.99=11671] [UPDATE: Count=38526, Max=14367, Min=814, Avg=1729.41, 90=2321, 99=3065, 99.9=5291, 99.99=6943] 
2023-04-30 20:42:56:256 1690 sec: 129303299 operations; 76255.7 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=724426, Max=45951, Min=759, Avg=1977.37, 90=2697, 99=3913, 99.9=6471, 99.99=23519] [UPDATE: Count=38198, Max=24159, Min=806, Avg=1741.38, 90=2329, 99=3111, 99.9=5995, 99.99=17871] 
2023-04-30 20:43:06:256 1700 sec: 130063889 operations; 76059 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=722694, Max=45503, Min=766, Avg=1982.4, 90=2707, 99=4017, 99.9=6299, 99.99=25263] [UPDATE: Count=37832, Max=22927, Min=803, Avg=1747.12, 90=2351, 99=3127, 99.9=5783, 99.99=7323] 
2023-04-30 20:43:16:256 1710 sec: 130826050 operations; 76216.1 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=724239, Max=10407, Min=799, Avg=1978.16, 90=2703, 99=4025, 99.9=6159, 99.99=7811] [UPDATE: Count=37934, Max=9807, Min=822, Avg=1743.94, 90=2345, 99=3147, 99.9=5619, 99.99=7543] 
2023-04-30 20:43:26:256 1720 sec: 131586442 operations; 76039.2 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=722361, Max=42335, Min=772, Avg=1982.98, 90=2705, 99=4019, 99.9=6079, 99.99=23695] [UPDATE: Count=38032, Max=23583, Min=832, Avg=1746.59, 90=2333, 99=3123, 99.9=5747, 99.99=19983] 
2023-04-30 20:43:36:256 1730 sec: 132345709 operations; 75926.7 current ops/sec; est completion in 3 hours 9 minutes [READ: Count=721643, Max=40703, Min=767, Avg=1985.38, 90=2703, 99=4035, 99.9=6415, 99.99=24399] [UPDATE: Count=37627, Max=24879, Min=771, Avg=1757.61, 90=2353, 99=3159, 99.9=5955, 99.99=23647] 
2023-04-30 20:43:46:256 1740 sec: 133107445 operations; 76173.6 current ops/sec; est completion in 3 hours 8 minutes [READ: Count=724030, Max=14775, Min=794, Avg=1979.32, 90=2705, 99=4027, 99.9=5823, 99.99=7415] [UPDATE: Count=37668, Max=10551, Min=819, Avg=1744.54, 90=2335, 99=3135, 99.9=5407, 99.99=6287] 
2023-04-30 20:43:56:256 1750 sec: 133868043 operations; 76059.8 current ops/sec; est completion in 3 hours 8 minutes [READ: Count=722677, Max=37375, Min=796, Avg=1982.2, 90=2701, 99=4005, 99.9=6215, 99.99=22671] [UPDATE: Count=37946, Max=21855, Min=797, Avg=1749.95, 90=2341, 99=3171, 99.9=5779, 99.99=19519] 
2023-04-30 20:44:06:256 1760 sec: 134629130 operations; 76108.7 current ops/sec; est completion in 3 hours 8 minutes [READ: Count=722718, Max=49343, Min=778, Avg=1981.07, 90=2695, 99=4029, 99.9=6203, 99.99=24223] [UPDATE: Count=38383, Max=26063, Min=779, Avg=1747.99, 90=2329, 99=3153, 99.9=5927, 99.99=23695] 
2023-04-30 20:44:16:256 1770 sec: 135409592 operations; 78046.2 current ops/sec; est completion in 3 hours 8 minutes [READ: Count=741401, Max=9335, Min=804, Avg=1931.77, 90=2583, 99=3823, 99.9=6007, 99.99=7475] [UPDATE: Count=39043, Max=7899, Min=803, Avg=1705.61, 90=2223, 99=2999, 99.9=5831, 99.99=7027] 
2023-04-30 20:44:26:256 1780 sec: 136188656 operations; 77906.4 current ops/sec; est completion in 3 hours 8 minutes [READ: Count=740349, Max=29727, Min=774, Avg=1935.44, 90=2577, 99=3739, 99.9=6527, 99.99=22991] [UPDATE: Count=38729, Max=23087, Min=801, Avg=1702, 90=2205, 99=2975, 99.9=6011, 99.99=18495] 
2023-04-30 20:44:36:256 1790 sec: 136967790 operations; 77913.4 current ops/sec; est completion in 3 hours 7 minutes [READ: Count=740227, Max=55551, Min=777, Avg=1935.17, 90=2577, 99=3785, 99.9=6299, 99.99=25087] [UPDATE: Count=38900, Max=25135, Min=791, Avg=1705.13, 90=2207, 99=2983, 99.9=5767, 99.99=17935] 
Maximum time elapsed. Requesting stop for the workload.
Stop requested for workload. Now Joining!
2023-04-30 20:44:46:256 1800 sec: 137747982 operations; 78019.2 current ops/sec; est completion in 3 hours 7 minutes [READ: Count=741193, Max=8311, Min=796, Avg=1932.62, 90=2583, 99=3735, 99.9=5843, 99.99=6995] [UPDATE: Count=38977, Max=7579, Min=802, Avg=1700.98, 90=2213, 99=3001, 99.9=5683, 99.99=6751] 
Still waiting for thread Thread-63 to complete. Workload status: true
2023-04-30 20:44:48:489 1802 sec: 137749382 operations; 626.68 current ops/sec; est completion in 3 hours 8 minutes [READ: Count=1318, Max=4515, Min=867, Avg=1847.38, 90=2559, 99=3237, 99.9=3725, 99.99=4515] [CLEANUP: Count=150, Max=2215935, Min=0, Avg=14767.37, 90=2, 99=10, 99.9=2215935, 99.99=2215935] [UPDATE: Count=0, Max=0, Min=9223372036854775807, Avg=?, 90=0, 99=0, 99.9=0, 99.99=0] 
[OVERALL], RunTime(ms), 1802233
[OVERALL], Throughput(ops/sec), 76432.61553861237
[TOTAL_GCS_PS_Scavenge], Count, 6380
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 18177
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0085821311672798
[TOTAL_GCS_PS_MarkSweep], Count, 2
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 50
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.002774336059765857
[TOTAL_GCs], Count, 6382
[TOTAL_GC_TIME], Time(ms), 18227
[TOTAL_GC_TIME_%], Time(%), 1.0113564672270454
[READ], Operations, 130869766
[READ], AverageLatency(us), 1970.10189069185
[READ], MinLatency(us), 748
[READ], MaxLatency(us), 61823
[READ], 95thPercentileLatency(us), 2973
[READ], 99thPercentileLatency(us), 3967
[READ], Return=OK, 130869766
[CLEANUP], Operations, 150
[CLEANUP], AverageLatency(us), 14767.366666666667
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2215935
[CLEANUP], 95thPercentileLatency(us), 7
[CLEANUP], 99thPercentileLatency(us), 10
[UPDATE], Operations, 6879616
[UPDATE], AverageLatency(us), 1724.9334525357228
[UPDATE], MinLatency(us), 757
[UPDATE], MaxLatency(us), 59359
[UPDATE], 95thPercentileLatency(us), 2503
[UPDATE], 99thPercentileLatency(us), 3135
[UPDATE], Return=OK, 6879616
