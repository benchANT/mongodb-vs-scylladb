bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=52.9.198.65,184.169.172.112,54.215.180.221 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=vwyDOxj4VcK09rk -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.9.198.65,184.169.172.112,54.215.180.221 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=vwyDOxj4VcK09rk -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.9.198.65,184.169.172.112,54.215.180.221 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=vwyDOxj4VcK09rk -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
Starting test.
[Thread-51] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
2023-03-07 13:45:21:915 0 sec: 0 operations; est completion in 0 second 
[Thread-51] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
[Thread-51] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-51] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-51] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-51] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_1' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.241.215.79:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.215.180.221:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /13.52.49.235:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.9.198.65:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /184.169.172.112:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.241.4.23:9042 added
[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: b8571bed-ae3b-4850-a0a3-6fa68a701036

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.241.215.79; Rack: us-west-1a

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.215.180.221; Rack: us-west-1c

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.241.4.23; Rack: us-west-1a-virtual1

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /13.52.49.235; Rack: us-west-1c

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /52.9.198.65; Rack: us-west-1a-virtual1

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /184.169.172.112; Rack: us-west-1a

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-03-07 13:45:31:900 10 sec: 1570443 operations; 157044.3 current ops/sec; est completion in 1 hour 45 minutes [INSERT: Count=1570589, Max=177023, Min=207, Avg=2355.87, 90=4559, 99=22015, 99.9=54207, 99.99=151423] 
2023-03-07 13:45:41:900 20 sec: 3744020 operations; 217357.7 current ops/sec; est completion in 1 hour 28 minutes [INSERT: Count=2173535, Max=69375, Min=214, Avg=1837, 90=3465, 99=15303, 99.9=33887, 99.99=52095] 
2023-03-07 13:45:51:900 30 sec: 6014858 operations; 227083.8 current ops/sec; est completion in 1 hour 22 minutes [INSERT: Count=2270837, Max=47743, Min=214, Avg=1759.29, 90=3303, 99=14327, 99.9=28223, 99.99=39103] 
2023-03-07 13:46:01:900 40 sec: 8277193 operations; 226233.5 current ops/sec; est completion in 1 hour 19 minutes [INSERT: Count=2262335, Max=58495, Min=214, Avg=1765.53, 90=3371, 99=13703, 99.9=26255, 99.99=35551] 
2023-03-07 13:46:11:900 50 sec: 10552351 operations; 227515.8 current ops/sec; est completion in 1 hour 18 minutes [INSERT: Count=2275143, Max=54015, Min=214, Avg=1756.11, 90=3321, 99=13111, 99.9=25295, 99.99=37503] 
2023-03-07 13:46:21:900 60 sec: 12844348 operations; 229199.7 current ops/sec; est completion in 1 hour 16 minutes [INSERT: Count=2292089, Max=61855, Min=216, Avg=1743.07, 90=3409, 99=11495, 99.9=23295, 99.99=36127] 
2023-03-07 13:46:31:900 70 sec: 15069627 operations; 222527.9 current ops/sec; est completion in 1 hour 16 minutes [INSERT: Count=2225185, Max=52575, Min=221, Avg=1795.45, 90=2911, 99=8767, 99.9=21375, 99.99=34303] 
2023-03-07 13:46:41:900 80 sec: 17366061 operations; 229643.4 current ops/sec; est completion in 1 hour 15 minutes [INSERT: Count=2296470, Max=64575, Min=220, Avg=1739.68, 90=3219, 99=11943, 99.9=23631, 99.99=36255] 
2023-03-07 13:46:51:900 90 sec: 19679231 operations; 231317 current ops/sec; est completion in 1 hour 14 minutes [INSERT: Count=2313159, Max=37023, Min=199, Avg=1727.09, 90=3409, 99=11479, 99.9=20847, 99.99=28639] 
2023-03-07 13:47:01:900 100 sec: 21964030 operations; 228479.9 current ops/sec; est completion in 1 hour 14 minutes [INSERT: Count=2284775, Max=56831, Min=216, Avg=1748.65, 90=3505, 99=11719, 99.9=23135, 99.99=33343] 
2023-03-07 13:47:11:900 110 sec: 24244254 operations; 228022.4 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2280137, Max=51935, Min=211, Avg=1751.69, 90=3435, 99=12031, 99.9=24111, 99.99=38431] 
2023-03-07 13:47:21:900 120 sec: 26531706 operations; 228745.2 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2287544, Max=44511, Min=216, Avg=1746.83, 90=3319, 99=10791, 99.9=21951, 99.99=31839] 
2023-03-07 13:47:31:900 130 sec: 28733878 operations; 220217.2 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2202152, Max=47423, Min=221, Avg=1814.28, 90=2893, 99=7819, 99.9=18335, 99.99=29375] 
2023-03-07 13:47:41:900 140 sec: 30930939 operations; 219706.1 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2197085, Max=45663, Min=234, Avg=1818.59, 90=2949, 99=8375, 99.9=20959, 99.99=39423] 
2023-03-07 13:47:51:900 150 sec: 33188853 operations; 225791.4 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2257943, Max=57727, Min=220, Avg=1769.4, 90=3085, 99=10863, 99.9=25839, 99.99=36767] 
2023-03-07 13:48:01:900 160 sec: 35472323 operations; 228347 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2283429, Max=45151, Min=208, Avg=1749.52, 90=3309, 99=13647, 99.9=26175, 99.99=35871] 
2023-03-07 13:48:11:900 170 sec: 37776024 operations; 230370.1 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2303713, Max=76223, Min=220, Avg=1734.21, 90=3315, 99=11871, 99.9=23519, 99.99=35647] 
2023-03-07 13:48:21:900 180 sec: 40060051 operations; 228402.7 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2284025, Max=50335, Min=220, Avg=1749.04, 90=3215, 99=11959, 99.9=25263, 99.99=38239] 
2023-03-07 13:48:31:900 190 sec: 42302009 operations; 224195.8 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2241957, Max=73023, Min=222, Avg=1782.15, 90=2993, 99=9399, 99.9=21167, 99.99=34143] 
2023-03-07 13:48:41:900 200 sec: 44574754 operations; 227274.5 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2272749, Max=50687, Min=218, Avg=1757.82, 90=3213, 99=13119, 99.9=29007, 99.99=41247] 
2023-03-07 13:48:51:900 210 sec: 46870298 operations; 229554.4 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2295525, Max=65791, Min=217, Avg=1740.29, 90=3393, 99=11335, 99.9=24271, 99.99=36351] 
2023-03-07 13:49:01:900 220 sec: 49108478 operations; 223818 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2238173, Max=68095, Min=219, Avg=1785.02, 90=3503, 99=13007, 99.9=26687, 99.99=42751] 
2023-03-07 13:49:11:900 230 sec: 51371698 operations; 226322 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2263231, Max=53407, Min=217, Avg=1765.23, 90=3337, 99=11799, 99.9=24447, 99.99=41055] 
2023-03-07 13:49:21:900 240 sec: 53593014 operations; 222131.6 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2221323, Max=72511, Min=207, Avg=1798.84, 90=3313, 99=12431, 99.9=23743, 99.99=45119] 
2023-03-07 13:49:31:900 250 sec: 55726395 operations; 213338.1 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2133374, Max=47007, Min=220, Avg=1872.83, 90=3063, 99=9591, 99.9=21743, 99.99=38271] 
2023-03-07 13:49:41:900 260 sec: 57813653 operations; 208725.8 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2087270, Max=107199, Min=232, Avg=1914.34, 90=2947, 99=11087, 99.9=26511, 99.99=64767] 
2023-03-07 13:49:51:900 270 sec: 60016627 operations; 220297.4 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2202965, Max=87039, Min=226, Avg=1813.61, 90=2927, 99=8511, 99.9=20143, 99.99=44223] 
2023-03-07 13:50:01:900 280 sec: 62232643 operations; 221601.6 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2216024, Max=33087, Min=236, Avg=1802.94, 90=2883, 99=8847, 99.9=18927, 99.99=27711] 
2023-03-07 13:50:11:900 290 sec: 64466298 operations; 223365.5 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2233646, Max=162175, Min=230, Avg=1788.7, 90=2933, 99=8663, 99.9=19183, 99.99=82431] 
2023-03-07 13:50:21:900 300 sec: 66703407 operations; 223710.9 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2237112, Max=40927, Min=222, Avg=1785.72, 90=2939, 99=8639, 99.9=17871, 99.99=27439] 
2023-03-07 13:50:31:900 310 sec: 68953776 operations; 225036.9 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2250384, Max=162175, Min=213, Avg=1775.48, 90=3203, 99=12711, 99.9=28095, 99.99=80255] 
2023-03-07 13:50:41:900 320 sec: 71175283 operations; 222150.7 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2221482, Max=49759, Min=219, Avg=1798.58, 90=3119, 99=10167, 99.9=20671, 99.99=28879] 
2023-03-07 13:50:51:900 330 sec: 73454899 operations; 227961.6 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2279600, Max=158463, Min=207, Avg=1752.1, 90=3107, 99=10175, 99.9=20975, 99.99=70207] 
2023-03-07 13:51:01:900 340 sec: 75732808 operations; 227790.9 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2277922, Max=50655, Min=220, Avg=1754.12, 90=3353, 99=12959, 99.9=24607, 99.99=35679] 
2023-03-07 13:51:11:900 350 sec: 77992514 operations; 225970.6 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2259679, Max=168191, Min=216, Avg=1767.79, 90=3421, 99=11951, 99.9=24111, 99.99=92031] 
2023-03-07 13:51:21:900 360 sec: 80259383 operations; 226686.9 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2266871, Max=54623, Min=222, Avg=1762.7, 90=3349, 99=11063, 99.9=25215, 99.99=36287] 
2023-03-07 13:51:31:900 370 sec: 82537954 operations; 227857.1 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2278612, Max=43999, Min=220, Avg=1753.06, 90=3203, 99=11167, 99.9=22543, 99.99=32591] 
2023-03-07 13:51:41:900 380 sec: 84816057 operations; 227810.3 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2278070, Max=48703, Min=223, Avg=1754.04, 90=3269, 99=10727, 99.9=22031, 99.99=34751] 
2023-03-07 13:51:51:900 390 sec: 87036250 operations; 222019.3 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2220202, Max=40959, Min=214, Avg=1799.66, 90=3095, 99=9511, 99.9=20111, 99.99=30847] 
2023-03-07 13:52:01:900 400 sec: 89242415 operations; 220616.5 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2206167, Max=31215, Min=221, Avg=1811.03, 90=2971, 99=7971, 99.9=17535, 99.99=24799] 
2023-03-07 13:52:11:900 410 sec: 91454386 operations; 221197.1 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2211950, Max=210943, Min=220, Avg=1805.99, 90=2953, 99=8927, 99.9=20127, 99.99=126271] 
2023-03-07 13:52:21:900 420 sec: 93705770 operations; 225138.4 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2251400, Max=90239, Min=214, Avg=1774.68, 90=3179, 99=10679, 99.9=21679, 99.99=44479] 
2023-03-07 13:52:31:900 430 sec: 95977176 operations; 227140.6 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2271406, Max=86527, Min=226, Avg=1758.95, 90=3195, 99=11423, 99.9=23791, 99.99=37599] 
2023-03-07 13:52:41:900 440 sec: 98264882 operations; 228770.6 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2287698, Max=60703, Min=202, Avg=1746.39, 90=3287, 99=11967, 99.9=23519, 99.99=40415] 
2023-03-07 13:52:51:900 450 sec: 100548015 operations; 228313.3 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2283145, Max=76735, Min=210, Avg=1749.91, 90=3335, 99=11951, 99.9=23087, 99.99=36991] 
2023-03-07 13:53:01:900 460 sec: 102811342 operations; 226332.7 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2263307, Max=46655, Min=219, Avg=1765.14, 90=3125, 99=10255, 99.9=21071, 99.99=33343] 
2023-03-07 13:53:11:900 470 sec: 105047940 operations; 223659.8 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2236607, Max=99135, Min=217, Avg=1786.37, 90=3097, 99=9791, 99.9=20431, 99.99=39807] 
2023-03-07 13:53:21:900 480 sec: 107303489 operations; 225554.9 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2255559, Max=54463, Min=210, Avg=1771.34, 90=3251, 99=12711, 99.9=25855, 99.99=40863] 
2023-03-07 13:53:31:900 490 sec: 109542034 operations; 223854.5 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2238565, Max=82431, Min=214, Avg=1784.71, 90=3323, 99=12239, 99.9=28991, 99.99=48223] 
2023-03-07 13:53:41:900 500 sec: 111799107 operations; 225707.3 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2257080, Max=52447, Min=222, Avg=1770.02, 90=3267, 99=11463, 99.9=22911, 99.99=37215] 
2023-03-07 13:53:51:900 510 sec: 114053420 operations; 225431.3 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2254300, Max=53471, Min=215, Avg=1772.31, 90=3287, 99=12175, 99.9=24783, 99.99=35775] 
2023-03-07 13:54:01:900 520 sec: 116299411 operations; 224599.1 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2246002, Max=44959, Min=215, Avg=1778.73, 90=3295, 99=11919, 99.9=22799, 99.99=33407] 
2023-03-07 13:54:11:900 530 sec: 118541495 operations; 224208.4 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2242063, Max=50015, Min=219, Avg=1781.94, 90=3059, 99=9823, 99.9=23183, 99.99=33823] 
2023-03-07 13:54:21:900 540 sec: 120710428 operations; 216893.3 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2168947, Max=94911, Min=227, Avg=1842.29, 90=2935, 99=8535, 99.9=17663, 99.99=38975] 
2023-03-07 13:54:31:900 550 sec: 122881469 operations; 217104.1 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2171022, Max=37375, Min=227, Avg=1840.35, 90=2873, 99=8303, 99.9=19007, 99.99=31199] 
2023-03-07 13:54:41:900 560 sec: 125076429 operations; 219496 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2194949, Max=101247, Min=229, Avg=1820.06, 90=2901, 99=8303, 99.9=21151, 99.99=30687] 
2023-03-07 13:54:51:900 570 sec: 127277342 operations; 220091.3 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2200925, Max=93887, Min=231, Avg=1815.47, 90=2899, 99=8383, 99.9=18975, 99.99=29999] 
2023-03-07 13:55:01:914 580 sec: 129496994 operations; 221654.88 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2219646, Max=101119, Min=238, Avg=1800.32, 90=2907, 99=8031, 99.9=18271, 99.99=30303] 
2023-03-07 13:55:11:900 590 sec: 131696085 operations; 220217.4 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2199031, Max=89663, Min=234, Avg=1814.99, 90=2857, 99=8711, 99.9=23951, 99.99=42687] 
2023-03-07 13:55:21:900 600 sec: 133901424 operations; 220533.9 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2205404, Max=52255, Min=232, Avg=1813.2, 90=2879, 99=8255, 99.9=18911, 99.99=46559] 
2023-03-07 13:55:31:900 610 sec: 136092300 operations; 219087.6 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2190868, Max=103295, Min=230, Avg=1823.64, 90=2875, 99=7915, 99.9=18495, 99.99=60991] 
2023-03-07 13:55:41:900 620 sec: 138287851 operations; 219555.1 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2195591, Max=101375, Min=228, Avg=1819.77, 90=2861, 99=8623, 99.9=18335, 99.99=34911] 
2023-03-07 13:55:51:900 630 sec: 140480919 operations; 219306.8 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2193025, Max=62623, Min=231, Avg=1821.85, 90=2901, 99=8655, 99.9=21455, 99.99=39263] 
2023-03-07 13:56:01:900 640 sec: 142675770 operations; 219485.1 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2194797, Max=42079, Min=232, Avg=1818.07, 90=2921, 99=8455, 99.9=19967, 99.99=35679] 
2023-03-07 13:56:11:900 650 sec: 144865630 operations; 218986 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2189914, Max=141055, Min=238, Avg=1826.71, 90=2815, 99=8383, 99.9=21199, 99.99=79871] 
2023-03-07 13:56:21:900 660 sec: 147043616 operations; 217798.6 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2177975, Max=82367, Min=232, Avg=1834.48, 90=2817, 99=8263, 99.9=18207, 99.99=30639] 
2023-03-07 13:56:31:900 670 sec: 149246623 operations; 220300.7 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2203004, Max=33151, Min=242, Avg=1813.61, 90=2805, 99=7843, 99.9=17615, 99.99=26367] 
2023-03-07 13:56:41:900 680 sec: 151452239 operations; 220561.6 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2205616, Max=37439, Min=229, Avg=1811.4, 90=2905, 99=7903, 99.9=18143, 99.99=25567] 
2023-03-07 13:56:51:900 690 sec: 153640513 operations; 218827.4 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2188287, Max=32207, Min=236, Avg=1825.94, 90=2951, 99=7675, 99.9=19231, 99.99=27055] 
2023-03-07 13:57:01:900 700 sec: 155815756 operations; 217524.3 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2175233, Max=39807, Min=223, Avg=1836.75, 90=2849, 99=7751, 99.9=19727, 99.99=31775] 
2023-03-07 13:57:11:900 710 sec: 158029130 operations; 221337.4 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2213375, Max=38239, Min=223, Avg=1805.08, 90=3043, 99=8959, 99.9=21551, 99.99=29151] 
2023-03-07 13:57:21:900 720 sec: 160258990 operations; 222986 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2229850, Max=67903, Min=215, Avg=1791.2, 90=3009, 99=11343, 99.9=24159, 99.99=33567] 
2023-03-07 13:57:31:900 730 sec: 162506066 operations; 224707.6 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2247076, Max=97983, Min=231, Avg=1778.21, 90=3239, 99=11783, 99.9=23455, 99.99=38303] 
2023-03-07 13:57:41:900 740 sec: 164752310 operations; 224624.4 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2246251, Max=45151, Min=214, Avg=1778.87, 90=3247, 99=12191, 99.9=24287, 99.99=34911] 
2023-03-07 13:57:51:900 750 sec: 166994058 operations; 224174.8 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2241755, Max=94847, Min=212, Avg=1781.94, 90=3157, 99=11055, 99.9=21935, 99.99=47487] 
2023-03-07 13:58:01:900 760 sec: 169220218 operations; 222616 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2226162, Max=74943, Min=222, Avg=1795, 90=3087, 99=10031, 99.9=19055, 99.99=30399] 
2023-03-07 13:58:11:900 770 sec: 171469960 operations; 224974.2 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2249726, Max=87743, Min=217, Avg=1775.7, 90=3031, 99=10295, 99.9=19759, 99.99=30879] 
2023-03-07 13:58:21:900 780 sec: 173405498 operations; 193553.8 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=1935558, Max=1358847, Min=211, Avg=2064.6, 90=3277, 99=12631, 99.9=22623, 99.99=1349631] 
2023-03-07 13:58:31:900 790 sec: 175663625 operations; 225812.7 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2258117, Max=60703, Min=226, Avg=1769.04, 90=3309, 99=10967, 99.9=21119, 99.99=33567] 
2023-03-07 13:58:41:900 800 sec: 177905407 operations; 224178.2 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2241780, Max=46879, Min=216, Avg=1782.42, 90=3303, 99=11791, 99.9=24207, 99.99=35807] 
2023-03-07 13:58:51:900 810 sec: 180161333 operations; 225592.6 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2255884, Max=52959, Min=211, Avg=1770.55, 90=3059, 99=11447, 99.9=25679, 99.99=39199] 
2023-03-07 13:59:01:900 820 sec: 182397624 operations; 223629.1 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2236327, Max=52927, Min=222, Avg=1786.96, 90=3039, 99=10423, 99.9=22639, 99.99=31263] 
2023-03-07 13:59:11:900 830 sec: 184603452 operations; 220582.8 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2205842, Max=45439, Min=221, Avg=1811.33, 90=2963, 99=8967, 99.9=20799, 99.99=29935] 
2023-03-07 13:59:21:900 840 sec: 186768356 operations; 216490.4 current ops/sec; est completion in 1 hour [INSERT: Count=2164899, Max=111039, Min=222, Avg=1845.49, 90=2893, 99=8423, 99.9=22351, 99.99=71999] 
2023-03-07 13:59:31:900 850 sec: 188954641 operations; 218628.5 current ops/sec; est completion in 1 hour [INSERT: Count=2186309, Max=95295, Min=225, Avg=1827.51, 90=2939, 99=9399, 99.9=25087, 99.99=40735] 
2023-03-07 13:59:41:900 860 sec: 191169866 operations; 221522.5 current ops/sec; est completion in 1 hour [INSERT: Count=2215201, Max=41407, Min=203, Avg=1803.57, 90=2921, 99=9415, 99.9=21599, 99.99=29183] 
2023-03-07 13:59:51:900 870 sec: 193406361 operations; 223649.5 current ops/sec; est completion in 1 hour [INSERT: Count=2236498, Max=41983, Min=225, Avg=1786.27, 90=2907, 99=8815, 99.9=22127, 99.99=30415] 
2023-03-07 14:00:01:900 880 sec: 195623499 operations; 221713.8 current ops/sec; est completion in 1 hour [INSERT: Count=2217135, Max=60959, Min=211, Avg=1802.11, 90=2979, 99=9343, 99.9=18319, 99.99=29231] 
2023-03-07 14:00:11:900 890 sec: 197810767 operations; 218726.8 current ops/sec; est completion in 1 hour [INSERT: Count=2187249, Max=103615, Min=210, Avg=1826.68, 90=2963, 99=9255, 99.9=20031, 99.99=44255] 
2023-03-07 14:00:21:900 900 sec: 200008178 operations; 219741.1 current ops/sec; est completion in 1 hour [INSERT: Count=2197437, Max=40287, Min=223, Avg=1818.22, 90=2973, 99=8127, 99.9=21055, 99.99=32543] 
2023-03-07 14:00:31:900 910 sec: 202210036 operations; 220185.8 current ops/sec; est completion in 59 minutes [INSERT: Count=2201863, Max=122175, Min=222, Avg=1814.52, 90=3119, 99=9463, 99.9=21791, 99.99=87039] 
2023-03-07 14:00:41:900 920 sec: 204443622 operations; 223358.6 current ops/sec; est completion in 59 minutes [INSERT: Count=2233564, Max=55359, Min=216, Avg=1788.38, 90=3235, 99=9975, 99.9=21023, 99.99=41311] 
2023-03-07 14:00:51:900 930 sec: 206692271 operations; 224864.9 current ops/sec; est completion in 59 minutes [INSERT: Count=2248667, Max=137855, Min=210, Avg=1776.98, 90=3377, 99=11823, 99.9=22271, 99.99=130559] 
2023-03-07 14:01:01:900 940 sec: 208968169 operations; 227589.8 current ops/sec; est completion in 59 minutes [INSERT: Count=2275892, Max=112447, Min=220, Avg=1755.39, 90=3299, 99=12151, 99.9=26239, 99.99=53951] 
2023-03-07 14:01:11:906 950 sec: 211210875 operations; 224136.12 current ops/sec; est completion in 59 minutes [INSERT: Count=2242660, Max=63199, Min=205, Avg=1780.11, 90=3279, 99=13423, 99.9=27407, 99.99=38111] 
2023-03-07 14:01:21:900 960 sec: 213451895 operations; 224236.54 current ops/sec; est completion in 58 minutes [INSERT: Count=2241060, Max=102207, Min=223, Avg=1783.82, 90=3075, 99=11143, 99.9=21855, 99.99=40447] 
2023-03-07 14:01:31:900 970 sec: 215677702 operations; 222580.7 current ops/sec; est completion in 58 minutes [INSERT: Count=2225811, Max=43167, Min=212, Avg=1794.94, 90=3013, 99=9847, 99.9=21007, 99.99=38559] 
2023-03-07 14:01:41:900 980 sec: 217885626 operations; 220792.4 current ops/sec; est completion in 58 minutes [INSERT: Count=2207915, Max=96447, Min=213, Avg=1809.94, 90=3069, 99=9575, 99.9=23999, 99.99=48287] 
2023-03-07 14:01:51:900 990 sec: 220105111 operations; 221948.5 current ops/sec; est completion in 58 minutes [INSERT: Count=2219501, Max=47391, Min=224, Avg=1800.12, 90=2991, 99=9239, 99.9=22799, 99.99=40543] 
2023-03-07 14:02:01:900 1000 sec: 222325269 operations; 222015.8 current ops/sec; est completion in 58 minutes [INSERT: Count=2220140, Max=69183, Min=219, Avg=1799.59, 90=3107, 99=11783, 99.9=27327, 99.99=50175] 
2023-03-07 14:02:11:900 1010 sec: 224590665 operations; 226539.6 current ops/sec; est completion in 58 minutes [INSERT: Count=2265404, Max=86719, Min=212, Avg=1763.47, 90=3161, 99=12071, 99.9=24047, 99.99=50175] 
2023-03-07 14:02:21:900 1020 sec: 226860160 operations; 226949.5 current ops/sec; est completion in 57 minutes [INSERT: Count=2269494, Max=46719, Min=212, Avg=1760.37, 90=3325, 99=11759, 99.9=23327, 99.99=36863] 
2023-03-07 14:02:31:900 1030 sec: 229107239 operations; 224707.9 current ops/sec; est completion in 57 minutes [INSERT: Count=2247104, Max=86655, Min=223, Avg=1777.99, 90=3125, 99=9943, 99.9=19215, 99.99=29071] 
2023-03-07 14:02:41:900 1040 sec: 231353176 operations; 224593.7 current ops/sec; est completion in 57 minutes [INSERT: Count=2245903, Max=81087, Min=217, Avg=1778.75, 90=3099, 99=9551, 99.9=20431, 99.99=31423] 
2023-03-07 14:02:51:900 1050 sec: 233608719 operations; 225554.3 current ops/sec; est completion in 57 minutes [INSERT: Count=2255545, Max=46399, Min=210, Avg=1771.34, 90=3185, 99=9215, 99.9=18031, 99.99=23999] 
2023-03-07 14:03:01:900 1060 sec: 235860249 operations; 225153 current ops/sec; est completion in 57 minutes [INSERT: Count=2251532, Max=69695, Min=218, Avg=1774.6, 90=3057, 99=9623, 99.9=19007, 99.99=34751] 
2023-03-07 14:03:11:900 1070 sec: 238094711 operations; 223446.2 current ops/sec; est completion in 57 minutes [INSERT: Count=2234468, Max=51743, Min=230, Avg=1788.05, 90=3269, 99=11071, 99.9=21583, 99.99=35711] 
2023-03-07 14:03:21:900 1080 sec: 240334438 operations; 223972.7 current ops/sec; est completion in 56 minutes [INSERT: Count=2239685, Max=99327, Min=215, Avg=1777.5, 90=3299, 99=11463, 99.9=24559, 99.99=40607] 
2023-03-07 14:03:31:900 1090 sec: 242583570 operations; 224913.2 current ops/sec; est completion in 56 minutes [INSERT: Count=2249158, Max=58655, Min=212, Avg=1782.51, 90=3233, 99=11447, 99.9=24367, 99.99=49119] 
2023-03-07 14:03:41:900 1100 sec: 244821527 operations; 223795.7 current ops/sec; est completion in 56 minutes [INSERT: Count=2237970, Max=55839, Min=212, Avg=1785.17, 90=3077, 99=11223, 99.9=23231, 99.99=33279] 
2023-03-07 14:03:51:900 1110 sec: 247055792 operations; 223426.5 current ops/sec; est completion in 56 minutes [INSERT: Count=2234253, Max=40415, Min=227, Avg=1788.31, 90=2999, 99=9759, 99.9=21535, 99.99=29807] 
2023-03-07 14:04:01:900 1120 sec: 249274408 operations; 221861.6 current ops/sec; est completion in 56 minutes [INSERT: Count=2218628, Max=41631, Min=219, Avg=1800.86, 90=2989, 99=8759, 99.9=18943, 99.99=25903] 
2023-03-07 14:04:11:900 1130 sec: 251455175 operations; 218076.7 current ops/sec; est completion in 56 minutes [INSERT: Count=2180764, Max=102079, Min=225, Avg=1832.09, 90=2891, 99=7739, 99.9=18687, 99.99=31503] 
2023-03-07 14:04:21:900 1140 sec: 253645574 operations; 219039.9 current ops/sec; est completion in 55 minutes [INSERT: Count=2190397, Max=34559, Min=235, Avg=1824.1, 90=2835, 99=7751, 99.9=17039, 99.99=20959] 
2023-03-07 14:04:31:900 1150 sec: 255836553 operations; 219097.9 current ops/sec; est completion in 55 minutes [INSERT: Count=2190971, Max=110143, Min=239, Avg=1823.22, 90=2859, 99=8111, 99.9=20495, 99.99=69887] 
2023-03-07 14:04:41:900 1160 sec: 258038054 operations; 220150.1 current ops/sec; est completion in 55 minutes [INSERT: Count=2201505, Max=34943, Min=230, Avg=1815.06, 90=2885, 99=8367, 99.9=18207, 99.99=25711] 
2023-03-07 14:04:51:900 1170 sec: 260233362 operations; 219530.8 current ops/sec; est completion in 55 minutes [INSERT: Count=2195305, Max=106047, Min=231, Avg=1819.87, 90=2861, 99=8171, 99.9=18943, 99.99=33119] 
2023-03-07 14:05:01:900 1180 sec: 262446146 operations; 221278.4 current ops/sec; est completion in 55 minutes [INSERT: Count=2212783, Max=44447, Min=247, Avg=1805.85, 90=2817, 99=7415, 99.9=18959, 99.99=38911] 
2023-03-07 14:05:11:900 1190 sec: 264619966 operations; 217382 current ops/sec; est completion in 55 minutes [INSERT: Count=2173818, Max=129343, Min=224, Avg=1837.91, 90=2855, 99=8287, 99.9=19775, 99.99=72831] 
2023-03-07 14:05:21:900 1200 sec: 266793387 operations; 217342.1 current ops/sec; est completion in 54 minutes [INSERT: Count=2173425, Max=242687, Min=237, Avg=1838.37, 90=2811, 99=7555, 99.9=17695, 99.99=170879] 
2023-03-07 14:05:31:900 1210 sec: 268988437 operations; 219505 current ops/sec; est completion in 54 minutes [INSERT: Count=2195049, Max=110271, Min=230, Avg=1820.15, 90=2863, 99=7143, 99.9=16199, 99.99=56063] 
2023-03-07 14:05:41:900 1220 sec: 271188410 operations; 219997.3 current ops/sec; est completion in 54 minutes [INSERT: Count=2199975, Max=36319, Min=247, Avg=1816.08, 90=2841, 99=7575, 99.9=16895, 99.99=23615] 
2023-03-07 14:05:51:900 1230 sec: 273322726 operations; 213431.6 current ops/sec; est completion in 54 minutes [INSERT: Count=2134319, Max=64031, Min=237, Avg=1871.99, 90=2921, 99=7807, 99.9=21311, 99.99=32591] 
2023-03-07 14:06:01:900 1240 sec: 275510713 operations; 218798.7 current ops/sec; est completion in 54 minutes [INSERT: Count=2187991, Max=91391, Min=239, Avg=1826.15, 90=2861, 99=7687, 99.9=17679, 99.99=30511] 
2023-03-07 14:06:11:900 1250 sec: 277675221 operations; 216450.8 current ops/sec; est completion in 54 minutes [INSERT: Count=2164512, Max=124927, Min=252, Avg=1845.75, 90=2865, 99=7859, 99.9=18703, 99.99=41951] 
2023-03-07 14:06:21:900 1260 sec: 279869928 operations; 219470.7 current ops/sec; est completion in 54 minutes [INSERT: Count=2194701, Max=118335, Min=232, Avg=1820.42, 90=2891, 99=7603, 99.9=15887, 99.99=40703] 
2023-03-07 14:06:31:900 1270 sec: 282042502 operations; 217257.4 current ops/sec; est completion in 53 minutes [INSERT: Count=2172583, Max=177279, Min=229, Avg=1839.16, 90=2853, 99=7655, 99.9=19183, 99.99=95999] 
2023-03-07 14:06:41:900 1280 sec: 284221315 operations; 217881.3 current ops/sec; est completion in 53 minutes [INSERT: Count=2178804, Max=55423, Min=240, Avg=1833.6, 90=2843, 99=7663, 99.9=19151, 99.99=47007] 
2023-03-07 14:06:51:900 1290 sec: 286409214 operations; 218789.9 current ops/sec; est completion in 53 minutes [INSERT: Count=2187905, Max=181887, Min=227, Avg=1826.29, 90=2845, 99=7123, 99.9=17775, 99.99=129215] 
2023-03-07 14:07:01:900 1300 sec: 288563573 operations; 215435.9 current ops/sec; est completion in 53 minutes [INSERT: Count=2154356, Max=256511, Min=240, Avg=1854.57, 90=2851, 99=7339, 99.9=17647, 99.99=167295] 
2023-03-07 14:07:11:900 1310 sec: 290745634 operations; 218206.1 current ops/sec; est completion in 53 minutes [INSERT: Count=2182059, Max=169471, Min=239, Avg=1831.05, 90=2853, 99=7639, 99.9=17199, 99.99=100351] 
2023-03-07 14:07:21:900 1320 sec: 292912634 operations; 216700 current ops/sec; est completion in 53 minutes [INSERT: Count=2167008, Max=45823, Min=238, Avg=1843.82, 90=2857, 99=7319, 99.9=18255, 99.99=35551] 
2023-03-07 14:07:31:900 1330 sec: 295087800 operations; 217516.6 current ops/sec; est completion in 52 minutes [INSERT: Count=2175154, Max=41535, Min=243, Avg=1836.77, 90=2789, 99=7819, 99.9=19007, 99.99=35679] 
2023-03-07 14:07:41:900 1340 sec: 297305951 operations; 221815.1 current ops/sec; est completion in 52 minutes [INSERT: Count=2218143, Max=48639, Min=244, Avg=1801.24, 90=2801, 99=7503, 99.9=17647, 99.99=32671] 
2023-03-07 14:07:51:900 1350 sec: 299478617 operations; 217266.6 current ops/sec; est completion in 52 minutes [INSERT: Count=2172665, Max=194687, Min=226, Avg=1838.94, 90=2805, 99=8007, 99.9=18575, 99.99=119231] 
2023-03-07 14:08:01:900 1360 sec: 301663238 operations; 218462.1 current ops/sec; est completion in 52 minutes [INSERT: Count=2184637, Max=127167, Min=232, Avg=1828.75, 90=2831, 99=7551, 99.9=18351, 99.99=40927] 
2023-03-07 14:08:11:900 1370 sec: 303848571 operations; 218533.3 current ops/sec; est completion in 52 minutes [INSERT: Count=2185324, Max=133759, Min=225, Avg=1828.45, 90=2797, 99=7291, 99.9=20911, 99.99=72127] 
2023-03-07 14:08:21:900 1380 sec: 306049656 operations; 220108.5 current ops/sec; est completion in 52 minutes [INSERT: Count=2201081, Max=32735, Min=232, Avg=1815.09, 90=2843, 99=7755, 99.9=15799, 99.99=22351] 
2023-03-07 14:08:31:900 1390 sec: 308228665 operations; 217900.9 current ops/sec; est completion in 52 minutes [INSERT: Count=2179015, Max=40447, Min=242, Avg=1833.67, 90=2825, 99=8143, 99.9=16927, 99.99=22767] 
2023-03-07 14:08:41:900 1400 sec: 310416125 operations; 218746 current ops/sec; est completion in 51 minutes [INSERT: Count=2187465, Max=36063, Min=237, Avg=1826.59, 90=2791, 99=7275, 99.9=17311, 99.99=28175] 
2023-03-07 14:08:51:900 1410 sec: 312610453 operations; 219432.8 current ops/sec; est completion in 51 minutes [INSERT: Count=2194322, Max=123519, Min=223, Avg=1820.75, 90=2839, 99=7311, 99.9=18127, 99.99=94399] 
2023-03-07 14:09:01:900 1420 sec: 314780000 operations; 216954.7 current ops/sec; est completion in 51 minutes [INSERT: Count=2169545, Max=55839, Min=248, Avg=1841.57, 90=2873, 99=8223, 99.9=19023, 99.99=29679] 
2023-03-07 14:09:11:900 1430 sec: 316973953 operations; 219395.3 current ops/sec; est completion in 51 minutes [INSERT: Count=2193962, Max=46495, Min=238, Avg=1821.12, 90=2819, 99=7443, 99.9=17071, 99.99=38111] 
2023-03-07 14:09:21:900 1440 sec: 319166398 operations; 219244.5 current ops/sec; est completion in 51 minutes [INSERT: Count=2192436, Max=92735, Min=246, Avg=1822.35, 90=2823, 99=7203, 99.9=17279, 99.99=28175] 
2023-03-07 14:09:31:900 1450 sec: 321344295 operations; 217789.7 current ops/sec; est completion in 51 minutes [INSERT: Count=2177903, Max=163455, Min=238, Avg=1834.45, 90=2821, 99=7059, 99.9=17695, 99.99=95487] 
2023-03-07 14:09:41:900 1460 sec: 323516723 operations; 217242.8 current ops/sec; est completion in 50 minutes [INSERT: Count=2172418, Max=64735, Min=241, Avg=1839.28, 90=2851, 99=7635, 99.9=19119, 99.99=26735] 
2023-03-07 14:09:51:900 1470 sec: 325688871 operations; 217214.8 current ops/sec; est completion in 50 minutes [INSERT: Count=2172152, Max=35007, Min=233, Avg=1839.35, 90=2837, 99=7423, 99.9=17055, 99.99=26351] 
2023-03-07 14:10:01:900 1480 sec: 327877170 operations; 218829.9 current ops/sec; est completion in 50 minutes [INSERT: Count=2188307, Max=81343, Min=241, Avg=1825.82, 90=2881, 99=7819, 99.9=17999, 99.99=27231] 
2023-03-07 14:10:11:900 1490 sec: 330078779 operations; 220160.9 current ops/sec; est completion in 50 minutes [INSERT: Count=2201609, Max=34271, Min=237, Avg=1814.73, 90=2843, 99=7803, 99.9=18783, 99.99=23791] 
2023-03-07 14:10:21:900 1500 sec: 332263388 operations; 218460.9 current ops/sec; est completion in 50 minutes [INSERT: Count=2184594, Max=138623, Min=238, Avg=1828.92, 90=2855, 99=7291, 99.9=19727, 99.99=58719] 
2023-03-07 14:10:31:900 1510 sec: 334425791 operations; 216240.3 current ops/sec; est completion in 50 minutes [INSERT: Count=2162405, Max=43647, Min=232, Avg=1847.67, 90=2883, 99=8863, 99.9=19775, 99.99=34367] 
2023-03-07 14:10:41:900 1520 sec: 336615841 operations; 219005 current ops/sec; est completion in 49 minutes [INSERT: Count=2190063, Max=56511, Min=217, Avg=1824.3, 90=2917, 99=8631, 99.9=19903, 99.99=32159] 
2023-03-07 14:10:51:900 1530 sec: 338825569 operations; 220972.8 current ops/sec; est completion in 49 minutes [INSERT: Count=2209727, Max=136831, Min=218, Avg=1808.04, 90=2865, 99=8775, 99.9=19919, 99.99=83391] 
2023-03-07 14:11:01:900 1540 sec: 341067089 operations; 224152 current ops/sec; est completion in 49 minutes [INSERT: Count=2241520, Max=35679, Min=229, Avg=1782.38, 90=2897, 99=8647, 99.9=18991, 99.99=27311] 
2023-03-07 14:11:11:900 1550 sec: 343269738 operations; 220264.9 current ops/sec; est completion in 49 minutes [INSERT: Count=2202642, Max=59423, Min=233, Avg=1813.92, 90=2921, 99=9631, 99.9=24591, 99.99=40767] 
2023-03-07 14:11:21:900 1560 sec: 345486476 operations; 221673.8 current ops/sec; est completion in 49 minutes [INSERT: Count=2216747, Max=39263, Min=223, Avg=1802.25, 90=2967, 99=8703, 99.9=18223, 99.99=27599] 
2023-03-07 14:11:31:900 1570 sec: 347686003 operations; 219952.7 current ops/sec; est completion in 49 minutes [INSERT: Count=2199521, Max=39551, Min=224, Avg=1816.52, 90=2957, 99=7947, 99.9=18015, 99.99=27631] 
2023-03-07 14:11:41:900 1580 sec: 349897336 operations; 221133.3 current ops/sec; est completion in 48 minutes [INSERT: Count=2211340, Max=47263, Min=222, Avg=1806.82, 90=2945, 99=8535, 99.9=21663, 99.99=32895] 
2023-03-07 14:11:51:900 1590 sec: 352049426 operations; 215209 current ops/sec; est completion in 48 minutes [INSERT: Count=2152080, Max=196991, Min=195, Avg=1856.49, 90=3003, 99=9815, 99.9=26271, 99.99=134015] 
2023-03-07 14:12:01:900 1600 sec: 354293511 operations; 224408.5 current ops/sec; est completion in 48 minutes [INSERT: Count=2244081, Max=53727, Min=210, Avg=1780.32, 90=2973, 99=9423, 99.9=19839, 99.99=29263] 
2023-03-07 14:12:11:900 1610 sec: 356527319 operations; 223380.8 current ops/sec; est completion in 48 minutes [INSERT: Count=2233821, Max=105343, Min=214, Avg=1788.4, 90=3105, 99=10223, 99.9=20751, 99.99=35231] 
2023-03-07 14:12:21:900 1620 sec: 358743077 operations; 221575.8 current ops/sec; est completion in 48 minutes [INSERT: Count=2215749, Max=216831, Min=211, Avg=1803.22, 90=3099, 99=9999, 99.9=21135, 99.99=179967] 
2023-03-07 14:12:31:900 1630 sec: 360961721 operations; 221864.4 current ops/sec; est completion in 48 minutes [INSERT: Count=2218655, Max=174207, Min=213, Avg=1800.85, 90=3243, 99=10375, 99.9=22959, 99.99=99711] 
2023-03-07 14:12:41:900 1640 sec: 363181720 operations; 221999.9 current ops/sec; est completion in 47 minutes [INSERT: Count=2219989, Max=45215, Min=219, Avg=1799.73, 90=3217, 99=11375, 99.9=24047, 99.99=35071] 
2023-03-07 14:12:51:900 1650 sec: 365428644 operations; 224692.4 current ops/sec; est completion in 47 minutes [INSERT: Count=2246927, Max=108159, Min=221, Avg=1778.09, 90=3075, 99=9911, 99.9=20911, 99.99=38623] 
2023-03-07 14:13:01:900 1660 sec: 367679799 operations; 225115.5 current ops/sec; est completion in 47 minutes [INSERT: Count=2251154, Max=54783, Min=226, Avg=1774.69, 90=3105, 99=11303, 99.9=24095, 99.99=42367] 
2023-03-07 14:13:11:900 1670 sec: 369946913 operations; 226711.4 current ops/sec; est completion in 47 minutes [INSERT: Count=2267083, Max=42623, Min=220, Avg=1759.66, 90=3097, 99=10167, 99.9=21487, 99.99=30383] 
2023-03-07 14:13:21:900 1680 sec: 372192020 operations; 224510.7 current ops/sec; est completion in 47 minutes [INSERT: Count=2245139, Max=103807, Min=221, Avg=1782.14, 90=2985, 99=10503, 99.9=24511, 99.99=42271] 
2023-03-07 14:13:31:900 1690 sec: 374445176 operations; 225315.6 current ops/sec; est completion in 47 minutes [INSERT: Count=2253149, Max=53791, Min=227, Avg=1772.99, 90=2999, 99=9159, 99.9=17903, 99.99=26191] 
2023-03-07 14:13:41:900 1700 sec: 376656690 operations; 221151.4 current ops/sec; est completion in 46 minutes [INSERT: Count=2211520, Max=41343, Min=220, Avg=1806.56, 90=2913, 99=9591, 99.9=21519, 99.99=28527] 
2023-03-07 14:13:51:900 1710 sec: 378847869 operations; 219117.9 current ops/sec; est completion in 46 minutes [INSERT: Count=2191180, Max=41567, Min=224, Avg=1823.62, 90=2971, 99=9095, 99.9=23951, 99.99=32623] 
2023-03-07 14:14:01:900 1720 sec: 381032099 operations; 218423 current ops/sec; est completion in 46 minutes [INSERT: Count=2184227, Max=40799, Min=227, Avg=1829.21, 90=2835, 99=7887, 99.9=22527, 99.99=34431] 
2023-03-07 14:14:11:900 1730 sec: 383237171 operations; 220507.2 current ops/sec; est completion in 46 minutes [INSERT: Count=2205077, Max=103551, Min=240, Avg=1811.96, 90=2777, 99=7083, 99.9=18159, 99.99=32255] 
2023-03-07 14:14:21:900 1740 sec: 385438153 operations; 220098.2 current ops/sec; est completion in 46 minutes [INSERT: Count=2200970, Max=236543, Min=226, Avg=1815.11, 90=2807, 99=7723, 99.9=18575, 99.99=173055] 
2023-03-07 14:14:31:900 1750 sec: 387663267 operations; 222511.4 current ops/sec; est completion in 46 minutes [INSERT: Count=2225125, Max=43711, Min=236, Avg=1795.77, 90=2889, 99=7607, 99.9=17807, 99.99=25343] 
2023-03-07 14:14:41:900 1760 sec: 389887530 operations; 222426.3 current ops/sec; est completion in 45 minutes [INSERT: Count=2224256, Max=33343, Min=236, Avg=1796.17, 90=2829, 99=7347, 99.9=17247, 99.99=23247] 
2023-03-07 14:14:51:900 1770 sec: 392117546 operations; 223001.6 current ops/sec; est completion in 45 minutes [INSERT: Count=2230018, Max=53375, Min=223, Avg=1791.7, 90=2939, 99=8231, 99.9=18751, 99.99=28527] 
2023-03-07 14:15:01:900 1780 sec: 394328917 operations; 221137.1 current ops/sec; est completion in 45 minutes [INSERT: Count=2211371, Max=110975, Min=224, Avg=1806.69, 90=2923, 99=8895, 99.9=18191, 99.99=31855] 
2023-03-07 14:15:11:900 1790 sec: 396544786 operations; 221586.9 current ops/sec; est completion in 45 minutes [INSERT: Count=2215878, Max=108735, Min=222, Avg=1803.11, 90=2931, 99=8807, 99.9=17615, 99.99=30447] 
2023-03-07 14:15:21:900 1800 sec: 398742560 operations; 219777.4 current ops/sec; est completion in 45 minutes [INSERT: Count=2197772, Max=93119, Min=228, Avg=1817.75, 90=2949, 99=8511, 99.9=18927, 99.99=31231] 
2023-03-07 14:15:31:900 1810 sec: 400895196 operations; 215263.6 current ops/sec; est completion in 45 minutes [INSERT: Count=2152644, Max=118335, Min=227, Avg=1856.2, 90=2999, 99=9127, 99.9=24047, 99.99=45759] 
2023-03-07 14:15:41:900 1820 sec: 403070939 operations; 217574.3 current ops/sec; est completion in 44 minutes [INSERT: Count=2175723, Max=120319, Min=228, Avg=1836.3, 90=2865, 99=7995, 99.9=18687, 99.99=115711] 
2023-03-07 14:15:51:900 1830 sec: 405214074 operations; 214313.5 current ops/sec; est completion in 44 minutes [INSERT: Count=2143140, Max=42623, Min=246, Avg=1864.42, 90=2825, 99=7219, 99.9=20575, 99.99=28303] 
2023-03-07 14:16:01:900 1840 sec: 407409618 operations; 219554.4 current ops/sec; est completion in 44 minutes [INSERT: Count=2195550, Max=121343, Min=242, Avg=1819.78, 90=2803, 99=7055, 99.9=17743, 99.99=34175] 
2023-03-07 14:16:11:900 1850 sec: 409608380 operations; 219876.2 current ops/sec; est completion in 44 minutes [INSERT: Count=2198760, Max=50975, Min=231, Avg=1817.08, 90=2895, 99=7663, 99.9=17455, 99.99=25903] 
2023-03-07 14:16:21:900 1860 sec: 411816287 operations; 220790.7 current ops/sec; est completion in 44 minutes [INSERT: Count=2207905, Max=179455, Min=224, Avg=1809.58, 90=2895, 99=7899, 99.9=19391, 99.99=93119] 
2023-03-07 14:16:31:900 1870 sec: 414024997 operations; 220871 current ops/sec; est completion in 44 minutes [INSERT: Count=2208703, Max=169983, Min=225, Avg=1808.87, 90=2913, 99=8495, 99.9=18527, 99.99=73727] 
2023-03-07 14:16:41:900 1880 sec: 416210228 operations; 218523.1 current ops/sec; est completion in 43 minutes [INSERT: Count=2185237, Max=57023, Min=228, Avg=1828.31, 90=2977, 99=9375, 99.9=19295, 99.99=44767] 
2023-03-07 14:16:51:900 1890 sec: 418450472 operations; 224024.4 current ops/sec; est completion in 43 minutes [INSERT: Count=2240243, Max=161791, Min=224, Avg=1783.42, 90=2885, 99=8887, 99.9=19759, 99.99=55327] 
2023-03-07 14:17:01:900 1900 sec: 420662007 operations; 221153.5 current ops/sec; est completion in 43 minutes [INSERT: Count=2211537, Max=190847, Min=211, Avg=1806.43, 90=3057, 99=9319, 99.9=23455, 99.99=129663] 
2023-03-07 14:17:11:900 1910 sec: 422911233 operations; 224922.6 current ops/sec; est completion in 43 minutes [INSERT: Count=2249234, Max=102463, Min=212, Avg=1776, 90=3167, 99=10623, 99.9=20815, 99.99=34719] 
2023-03-07 14:17:21:900 1920 sec: 425167268 operations; 225603.5 current ops/sec; est completion in 43 minutes [INSERT: Count=2256032, Max=98623, Min=223, Avg=1771.33, 90=3307, 99=11687, 99.9=23695, 99.99=43231] 
2023-03-07 14:17:31:900 1930 sec: 427423922 operations; 225665.4 current ops/sec; est completion in 43 minutes [INSERT: Count=2256649, Max=177663, Min=198, Avg=1770.03, 90=3351, 99=10935, 99.9=22431, 99.99=109631] 
2023-03-07 14:17:41:900 1940 sec: 429688243 operations; 226432.1 current ops/sec; est completion in 42 minutes [INSERT: Count=2264291, Max=37567, Min=220, Avg=1763.68, 90=3177, 99=10535, 99.9=22367, 99.99=29167] 
2023-03-07 14:17:51:900 1950 sec: 431914570 operations; 222632.7 current ops/sec; est completion in 42 minutes [INSERT: Count=2226348, Max=67967, Min=221, Avg=1795.5, 90=3179, 99=11695, 99.9=26063, 99.99=39711] 
2023-03-07 14:18:01:900 1960 sec: 434172111 operations; 225754.1 current ops/sec; est completion in 42 minutes [INSERT: Count=2257550, Max=45951, Min=221, Avg=1769.9, 90=3077, 99=9863, 99.9=21071, 99.99=35071] 
2023-03-07 14:18:11:900 1970 sec: 436409437 operations; 223732.6 current ops/sec; est completion in 42 minutes [INSERT: Count=2237317, Max=45247, Min=222, Avg=1785.55, 90=3043, 99=10199, 99.9=22991, 99.99=37983] 
2023-03-07 14:18:21:900 1980 sec: 438633160 operations; 222372.3 current ops/sec; est completion in 42 minutes [INSERT: Count=2223735, Max=58943, Min=221, Avg=1796.8, 90=3035, 99=9759, 99.9=20495, 99.99=47103] 
2023-03-07 14:18:31:900 1990 sec: 440858600 operations; 222544 current ops/sec; est completion in 42 minutes [INSERT: Count=2225437, Max=60031, Min=218, Avg=1795.36, 90=3103, 99=9871, 99.9=22431, 99.99=33951] 
2023-03-07 14:18:41:900 2000 sec: 443068802 operations; 221020.2 current ops/sec; est completion in 41 minutes [INSERT: Count=2210194, Max=44223, Min=217, Avg=1807.62, 90=3109, 99=10967, 99.9=20991, 99.99=29759] 
2023-03-07 14:18:51:900 2010 sec: 445287657 operations; 221885.5 current ops/sec; est completion in 41 minutes [INSERT: Count=2218854, Max=43167, Min=210, Avg=1800.71, 90=2969, 99=8807, 99.9=21455, 99.99=28431] 
2023-03-07 14:19:01:900 2020 sec: 447478778 operations; 219112.1 current ops/sec; est completion in 41 minutes [INSERT: Count=2191125, Max=108287, Min=213, Avg=1823.36, 90=2853, 99=7359, 99.9=18575, 99.99=51295] 
2023-03-07 14:19:11:900 2030 sec: 449669795 operations; 219101.7 current ops/sec; est completion in 41 minutes [INSERT: Count=2191024, Max=36959, Min=225, Avg=1823.65, 90=2895, 99=8003, 99.9=22319, 99.99=27231] 
2023-03-07 14:19:21:900 2040 sec: 451937867 operations; 226807.2 current ops/sec; est completion in 41 minutes [INSERT: Count=2268064, Max=99007, Min=220, Avg=1761.53, 90=2961, 99=8399, 99.9=18559, 99.99=36287] 
2023-03-07 14:19:31:900 2050 sec: 454169086 operations; 223121.9 current ops/sec; est completion in 41 minutes [INSERT: Count=2231229, Max=103551, Min=224, Avg=1790.57, 90=3025, 99=9615, 99.9=19887, 99.99=96319] 
2023-03-07 14:19:41:900 2060 sec: 456423831 operations; 225474.5 current ops/sec; est completion in 40 minutes [INSERT: Count=2254736, Max=44159, Min=224, Avg=1771.95, 90=3097, 99=9511, 99.9=20111, 99.99=28607] 
2023-03-07 14:19:51:900 2070 sec: 458714933 operations; 229110.2 current ops/sec; est completion in 40 minutes [INSERT: Count=2291107, Max=36575, Min=226, Avg=1743.69, 90=3145, 99=9551, 99.9=19199, 99.99=25647] 
2023-03-07 14:20:01:900 2080 sec: 460942466 operations; 222753.3 current ops/sec; est completion in 40 minutes [INSERT: Count=2227525, Max=50847, Min=227, Avg=1793.68, 90=3201, 99=10767, 99.9=22799, 99.99=34399] 
2023-03-07 14:20:11:900 2090 sec: 463183232 operations; 224076.6 current ops/sec; est completion in 40 minutes [INSERT: Count=2240769, Max=100927, Min=205, Avg=1782.98, 90=3041, 99=9871, 99.9=20479, 99.99=46463] 
2023-03-07 14:20:21:900 2100 sec: 465421275 operations; 223804.3 current ops/sec; est completion in 40 minutes [INSERT: Count=2238049, Max=43615, Min=223, Avg=1785.04, 90=3109, 99=10135, 99.9=20479, 99.99=33183] 
2023-03-07 14:20:31:900 2110 sec: 467671425 operations; 225015 current ops/sec; est completion in 40 minutes [INSERT: Count=2250147, Max=97727, Min=233, Avg=1775.66, 90=3081, 99=9911, 99.9=21487, 99.99=38111] 
2023-03-07 14:20:41:900 2120 sec: 469912354 operations; 224092.9 current ops/sec; est completion in 39 minutes [INSERT: Count=2240926, Max=37727, Min=227, Avg=1782.69, 90=3019, 99=9631, 99.9=20911, 99.99=28047] 
2023-03-07 14:20:51:900 2130 sec: 472158021 operations; 224566.7 current ops/sec; est completion in 39 minutes [INSERT: Count=2245674, Max=53887, Min=225, Avg=1779.25, 90=3045, 99=9615, 99.9=19823, 99.99=30383] 
2023-03-07 14:21:01:900 2140 sec: 474387888 operations; 222986.7 current ops/sec; est completion in 39 minutes [INSERT: Count=2229863, Max=44767, Min=220, Avg=1791.57, 90=3127, 99=9967, 99.9=21599, 99.99=30127] 
2023-03-07 14:21:11:900 2150 sec: 476628841 operations; 224095.3 current ops/sec; est completion in 39 minutes [INSERT: Count=2240958, Max=37343, Min=221, Avg=1782.87, 90=3137, 99=9511, 99.9=19695, 99.99=28431] 
2023-03-07 14:21:21:900 2160 sec: 478851452 operations; 222261.1 current ops/sec; est completion in 39 minutes [INSERT: Count=2222604, Max=128383, Min=220, Avg=1797.62, 90=2991, 99=9711, 99.9=20607, 99.99=64639] 
2023-03-07 14:21:31:900 2170 sec: 481078910 operations; 222745.8 current ops/sec; est completion in 39 minutes [INSERT: Count=2227473, Max=45759, Min=224, Avg=1793.73, 90=2915, 99=9071, 99.9=19503, 99.99=28559] 
2023-03-07 14:21:41:900 2180 sec: 483307472 operations; 222856.2 current ops/sec; est completion in 38 minutes [INSERT: Count=2228543, Max=61215, Min=217, Avg=1792.47, 90=3061, 99=9895, 99.9=24511, 99.99=34335] 
2023-03-07 14:21:51:900 2190 sec: 485550918 operations; 224344.6 current ops/sec; est completion in 38 minutes [INSERT: Count=2243449, Max=83583, Min=221, Avg=1780.8, 90=3087, 99=11007, 99.9=22975, 99.99=35743] 
2023-03-07 14:22:01:900 2200 sec: 487759776 operations; 220885.8 current ops/sec; est completion in 38 minutes [INSERT: Count=2208856, Max=80255, Min=222, Avg=1808.41, 90=3133, 99=11599, 99.9=25183, 99.99=36607] 
2023-03-07 14:22:11:900 2210 sec: 490022648 operations; 226287.2 current ops/sec; est completion in 38 minutes [INSERT: Count=2262879, Max=55423, Min=220, Avg=1766.06, 90=3199, 99=11015, 99.9=21759, 99.99=44479] 
2023-03-07 14:22:21:900 2220 sec: 492282423 operations; 225977.5 current ops/sec; est completion in 38 minutes [INSERT: Count=2259772, Max=152447, Min=215, Avg=1767.95, 90=3173, 99=10367, 99.9=21903, 99.99=81471] 
2023-03-07 14:22:31:900 2230 sec: 494483358 operations; 220093.5 current ops/sec; est completion in 38 minutes [INSERT: Count=2200939, Max=99007, Min=226, Avg=1815.33, 90=3123, 99=10863, 99.9=23423, 99.99=40703] 
2023-03-07 14:22:41:900 2240 sec: 496736892 operations; 225353.4 current ops/sec; est completion in 37 minutes [INSERT: Count=2253532, Max=46079, Min=221, Avg=1772.84, 90=3009, 99=9855, 99.9=20959, 99.99=30463] 
2023-03-07 14:22:51:900 2250 sec: 498949816 operations; 221292.4 current ops/sec; est completion in 37 minutes [INSERT: Count=2212935, Max=50143, Min=220, Avg=1805.22, 90=3143, 99=10751, 99.9=20863, 99.99=27263] 
2023-03-07 14:23:01:900 2260 sec: 501188542 operations; 223872.6 current ops/sec; est completion in 37 minutes [INSERT: Count=2238735, Max=54495, Min=230, Avg=1784.81, 90=2979, 99=10583, 99.9=21247, 99.99=28591] 
2023-03-07 14:23:11:903 2270 sec: 503426683 operations; 223746.98 current ops/sec; est completion in 37 minutes [INSERT: Count=2238112, Max=41279, Min=229, Avg=1783.35, 90=2961, 99=8967, 99.9=20223, 99.99=28927] 
2023-03-07 14:23:21:900 2280 sec: 505631212 operations; 220519.06 current ops/sec; est completion in 37 minutes [INSERT: Count=2204532, Max=166911, Min=220, Avg=1814.09, 90=2953, 99=9559, 99.9=21791, 99.99=97215] 
2023-03-07 14:23:31:900 2290 sec: 507863811 operations; 223259.9 current ops/sec; est completion in 37 minutes [INSERT: Count=2232599, Max=35743, Min=223, Avg=1789.45, 90=2991, 99=8559, 99.9=18895, 99.99=26687] 
2023-03-07 14:23:41:900 2300 sec: 510057293 operations; 219348.2 current ops/sec; est completion in 36 minutes [INSERT: Count=2193494, Max=51967, Min=223, Avg=1821.54, 90=2907, 99=8071, 99.9=17631, 99.99=42879] 
2023-03-07 14:23:51:900 2310 sec: 512220177 operations; 216288.4 current ops/sec; est completion in 36 minutes [INSERT: Count=2162869, Max=49983, Min=232, Avg=1846.23, 90=2855, 99=8231, 99.9=20543, 99.99=32719] 
2023-03-07 14:24:01:900 2320 sec: 514398152 operations; 217797.5 current ops/sec; est completion in 36 minutes [INSERT: Count=2177995, Max=114751, Min=230, Avg=1835.5, 90=2789, 99=7923, 99.9=21647, 99.99=45599] 
2023-03-07 14:24:11:900 2330 sec: 516591183 operations; 219303.1 current ops/sec; est completion in 36 minutes [INSERT: Count=2193012, Max=70655, Min=243, Avg=1821.84, 90=2825, 99=7671, 99.9=20063, 99.99=31455] 
2023-03-07 14:24:21:900 2340 sec: 518784501 operations; 219331.8 current ops/sec; est completion in 36 minutes [INSERT: Count=2193316, Max=123391, Min=229, Avg=1821.61, 90=2837, 99=7759, 99.9=20431, 99.99=78655] 
2023-03-07 14:24:31:900 2350 sec: 520960116 operations; 217561.5 current ops/sec; est completion in 36 minutes [INSERT: Count=2175623, Max=72255, Min=236, Avg=1836.43, 90=2841, 99=7919, 99.9=18847, 99.99=30111] 
2023-03-07 14:24:41:900 2360 sec: 523176625 operations; 221650.9 current ops/sec; est completion in 35 minutes [INSERT: Count=2216506, Max=35007, Min=240, Avg=1802.55, 90=2841, 99=7467, 99.9=17167, 99.99=24367] 
2023-03-07 14:24:51:900 2370 sec: 525369133 operations; 219250.8 current ops/sec; est completion in 35 minutes [INSERT: Count=2192505, Max=130751, Min=239, Avg=1822.3, 90=2851, 99=7839, 99.9=17791, 99.99=52767] 
2023-03-07 14:25:01:900 2380 sec: 527541728 operations; 217259.5 current ops/sec; est completion in 35 minutes [INSERT: Count=2172604, Max=107839, Min=237, Avg=1839.02, 90=2861, 99=7335, 99.9=19711, 99.99=41599] 
2023-03-07 14:25:11:900 2390 sec: 529733308 operations; 219158 current ops/sec; est completion in 35 minutes [INSERT: Count=2191574, Max=133503, Min=246, Avg=1823.05, 90=2817, 99=7243, 99.9=18399, 99.99=33503] 
2023-03-07 14:25:21:900 2400 sec: 531917803 operations; 218449.5 current ops/sec; est completion in 35 minutes [INSERT: Count=2184501, Max=74175, Min=243, Avg=1829.02, 90=2865, 99=8343, 99.9=21967, 99.99=31087] 
2023-03-07 14:25:31:900 2410 sec: 534106235 operations; 218843.2 current ops/sec; est completion in 35 minutes [INSERT: Count=2188421, Max=118527, Min=231, Avg=1825.67, 90=2829, 99=7355, 99.9=20383, 99.99=58143] 
2023-03-07 14:25:41:900 2420 sec: 536278034 operations; 217179.9 current ops/sec; est completion in 34 minutes [INSERT: Count=2171799, Max=39999, Min=254, Avg=1839.67, 90=2801, 99=7075, 99.9=18799, 99.99=28175] 
2023-03-07 14:25:51:900 2430 sec: 538479025 operations; 220099.1 current ops/sec; est completion in 34 minutes [INSERT: Count=2200992, Max=181375, Min=235, Avg=1815.07, 90=2793, 99=7591, 99.9=17487, 99.99=93311] 
2023-03-07 14:26:01:900 2440 sec: 540660718 operations; 218169.3 current ops/sec; est completion in 34 minutes [INSERT: Count=2181695, Max=143487, Min=242, Avg=1831.49, 90=2855, 99=7487, 99.9=19775, 99.99=58847] 
2023-03-07 14:26:11:900 2450 sec: 542830964 operations; 217024.6 current ops/sec; est completion in 34 minutes [INSERT: Count=2170246, Max=211711, Min=239, Avg=1840.99, 90=2811, 99=7155, 99.9=18351, 99.99=148351] 
2023-03-07 14:26:21:900 2460 sec: 545020292 operations; 218932.8 current ops/sec; est completion in 34 minutes [INSERT: Count=2189327, Max=72895, Min=239, Avg=1824.94, 90=2795, 99=7131, 99.9=18543, 99.99=33695] 
2023-03-07 14:26:31:900 2470 sec: 547185541 operations; 216524.9 current ops/sec; est completion in 34 minutes [INSERT: Count=2165251, Max=212223, Min=226, Avg=1845.29, 90=2863, 99=8003, 99.9=20239, 99.99=144639] 
2023-03-07 14:26:41:900 2480 sec: 549388203 operations; 220266.2 current ops/sec; est completion in 33 minutes [INSERT: Count=2202661, Max=27663, Min=243, Avg=1813.84, 90=2843, 99=7627, 99.9=17487, 99.99=22959] 
2023-03-07 14:26:51:900 2490 sec: 551572812 operations; 218460.9 current ops/sec; est completion in 33 minutes [INSERT: Count=2184611, Max=37791, Min=248, Avg=1828.96, 90=2769, 99=7231, 99.9=17743, 99.99=25455] 
2023-03-07 14:27:01:900 2500 sec: 553776189 operations; 220337.7 current ops/sec; est completion in 33 minutes [INSERT: Count=2203376, Max=39999, Min=240, Avg=1813.29, 90=2793, 99=7479, 99.9=17551, 99.99=25951] 
2023-03-07 14:27:11:900 2510 sec: 555951645 operations; 217545.6 current ops/sec; est completion in 33 minutes [INSERT: Count=2175461, Max=46815, Min=247, Avg=1836.48, 90=2851, 99=8091, 99.9=20879, 99.99=32095] 
2023-03-07 14:27:21:900 2520 sec: 558139697 operations; 218805.2 current ops/sec; est completion in 33 minutes [INSERT: Count=2188048, Max=184447, Min=241, Avg=1826.09, 90=2801, 99=6875, 99.9=20159, 99.99=111295] 
2023-03-07 14:27:31:900 2530 sec: 560325445 operations; 218574.8 current ops/sec; est completion in 33 minutes [INSERT: Count=2185743, Max=97279, Min=238, Avg=1827.96, 90=2797, 99=7003, 99.9=17183, 99.99=53631] 
2023-03-07 14:27:41:900 2540 sec: 562537437 operations; 221199.2 current ops/sec; est completion in 32 minutes [INSERT: Count=2211989, Max=51871, Min=239, Avg=1806.3, 90=2823, 99=7231, 99.9=17791, 99.99=45791] 
2023-03-07 14:27:51:900 2550 sec: 564732844 operations; 219540.7 current ops/sec; est completion in 32 minutes [INSERT: Count=2195405, Max=115519, Min=242, Avg=1819.89, 90=2835, 99=7703, 99.9=18655, 99.99=40703] 
2023-03-07 14:28:01:900 2560 sec: 566930757 operations; 219791.3 current ops/sec; est completion in 32 minutes [INSERT: Count=2197924, Max=93119, Min=232, Avg=1817.78, 90=2773, 99=6791, 99.9=16591, 99.99=36479] 
2023-03-07 14:28:11:900 2570 sec: 569111315 operations; 218055.8 current ops/sec; est completion in 32 minutes [INSERT: Count=2180588, Max=41183, Min=242, Avg=1832.21, 90=2805, 99=7591, 99.9=16247, 99.99=36447] 
2023-03-07 14:28:21:900 2580 sec: 571274614 operations; 216329.9 current ops/sec; est completion in 32 minutes [INSERT: Count=2163267, Max=73471, Min=244, Avg=1846.97, 90=2851, 99=7771, 99.9=23375, 99.99=43519] 
2023-03-07 14:28:31:900 2590 sec: 573484900 operations; 221028.6 current ops/sec; est completion in 32 minutes [INSERT: Count=2210283, Max=133247, Min=240, Avg=1807.66, 90=2785, 99=6959, 99.9=15463, 99.99=45183] 
2023-03-07 14:28:41:900 2600 sec: 575640758 operations; 215585.8 current ops/sec; est completion in 31 minutes [INSERT: Count=2155863, Max=40447, Min=233, Avg=1853.26, 90=2849, 99=7623, 99.9=19103, 99.99=24863] 
2023-03-07 14:28:51:900 2610 sec: 577828794 operations; 218803.6 current ops/sec; est completion in 31 minutes [INSERT: Count=2188025, Max=38463, Min=246, Avg=1826.04, 90=2857, 99=7935, 99.9=19615, 99.99=26847] 
2023-03-07 14:29:01:900 2620 sec: 580019481 operations; 219068.7 current ops/sec; est completion in 31 minutes [INSERT: Count=2190693, Max=163327, Min=233, Avg=1823.78, 90=2835, 99=7971, 99.9=19455, 99.99=83135] 
2023-03-07 14:29:11:900 2630 sec: 582209509 operations; 219002.8 current ops/sec; est completion in 31 minutes [INSERT: Count=2190027, Max=53631, Min=237, Avg=1824.3, 90=2825, 99=7171, 99.9=20607, 99.99=27791] 
2023-03-07 14:29:21:900 2640 sec: 584358962 operations; 214945.3 current ops/sec; est completion in 31 minutes [INSERT: Count=2149456, Max=148991, Min=235, Avg=1858.81, 90=2797, 99=7431, 99.9=20735, 99.99=91455] 
2023-03-07 14:29:31:900 2650 sec: 586538528 operations; 217956.6 current ops/sec; est completion in 31 minutes [INSERT: Count=2179567, Max=101183, Min=232, Avg=1833.2, 90=2821, 99=7863, 99.9=21471, 99.99=36159] 
2023-03-07 14:29:41:900 2660 sec: 588729534 operations; 219100.6 current ops/sec; est completion in 30 minutes [INSERT: Count=2191004, Max=34207, Min=248, Avg=1823.49, 90=2821, 99=7855, 99.9=18639, 99.99=25151] 
2023-03-07 14:29:51:900 2670 sec: 590924361 operations; 219482.7 current ops/sec; est completion in 30 minutes [INSERT: Count=2194835, Max=52479, Min=236, Avg=1820.39, 90=2841, 99=7359, 99.9=19343, 99.99=28095] 
2023-03-07 14:30:01:900 2680 sec: 593106182 operations; 218182.1 current ops/sec; est completion in 30 minutes [INSERT: Count=2181808, Max=100671, Min=238, Avg=1831.24, 90=2847, 99=7183, 99.9=19519, 99.99=48287] 
2023-03-07 14:30:11:900 2690 sec: 595331612 operations; 222543 current ops/sec; est completion in 30 minutes [INSERT: Count=2225436, Max=38367, Min=229, Avg=1795.27, 90=2815, 99=7451, 99.9=15615, 99.99=28511] 
2023-03-07 14:30:21:900 2700 sec: 597504246 operations; 217263.4 current ops/sec; est completion in 30 minutes [INSERT: Count=2172633, Max=182783, Min=232, Avg=1838.99, 90=2789, 99=7639, 99.9=21567, 99.99=141567] 
2023-03-07 14:30:31:900 2710 sec: 599692524 operations; 218827.8 current ops/sec; est completion in 30 minutes [INSERT: Count=2188276, Max=36735, Min=241, Avg=1825.8, 90=2825, 99=6991, 99.9=17327, 99.99=25487] 
2023-03-07 14:30:41:900 2720 sec: 601886645 operations; 219412.1 current ops/sec; est completion in 30 minutes [INSERT: Count=2194124, Max=32207, Min=248, Avg=1820.97, 90=2793, 99=7155, 99.9=18479, 99.99=24895] 
2023-03-07 14:30:51:900 2730 sec: 604069773 operations; 218312.8 current ops/sec; est completion in 29 minutes [INSERT: Count=2183134, Max=45823, Min=245, Avg=1830.08, 90=2813, 99=7107, 99.9=18271, 99.99=28143] 
2023-03-07 14:31:01:900 2740 sec: 606266880 operations; 219710.7 current ops/sec; est completion in 29 minutes [INSERT: Count=2197101, Max=88127, Min=237, Avg=1818.55, 90=2817, 99=7127, 99.9=17423, 99.99=29711] 
2023-03-07 14:31:11:900 2750 sec: 608406897 operations; 214001.7 current ops/sec; est completion in 29 minutes [INSERT: Count=2140016, Max=214399, Min=234, Avg=1866.84, 90=2807, 99=7759, 99.9=23583, 99.99=135551] 
2023-03-07 14:31:21:900 2760 sec: 610613449 operations; 220655.2 current ops/sec; est completion in 29 minutes [INSERT: Count=2206549, Max=45759, Min=233, Avg=1810.68, 90=2867, 99=7639, 99.9=17119, 99.99=25263] 
2023-03-07 14:31:31:900 2770 sec: 612800262 operations; 218681.3 current ops/sec; est completion in 29 minutes [INSERT: Count=2186818, Max=44927, Min=237, Avg=1827.17, 90=2833, 99=7899, 99.9=19935, 99.99=40799] 
2023-03-07 14:31:41:900 2780 sec: 614980817 operations; 218055.5 current ops/sec; est completion in 29 minutes [INSERT: Count=2180557, Max=36543, Min=245, Avg=1832.32, 90=2801, 99=7339, 99.9=17727, 99.99=29487] 
2023-03-07 14:31:51:900 2790 sec: 617109247 operations; 212843 current ops/sec; est completion in 28 minutes [INSERT: Count=2128428, Max=290815, Min=231, Avg=1877.26, 90=2793, 99=7195, 99.9=22511, 99.99=215423] 
2023-03-07 14:32:01:900 2800 sec: 619279562 operations; 217031.5 current ops/sec; est completion in 28 minutes [INSERT: Count=2170318, Max=184703, Min=240, Avg=1840.87, 90=2793, 99=7375, 99.9=21983, 99.99=112127] 
2023-03-07 14:32:11:900 2810 sec: 621458664 operations; 217910.2 current ops/sec; est completion in 28 minutes [INSERT: Count=2179094, Max=46911, Min=245, Avg=1833.56, 90=2853, 99=7603, 99.9=20927, 99.99=41247] 
2023-03-07 14:32:21:900 2820 sec: 623628737 operations; 217007.3 current ops/sec; est completion in 28 minutes [INSERT: Count=2170072, Max=133375, Min=225, Avg=1841.12, 90=2853, 99=7419, 99.9=18175, 99.99=52607] 
2023-03-07 14:32:31:900 2830 sec: 625835718 operations; 220698.1 current ops/sec; est completion in 28 minutes [INSERT: Count=2206982, Max=31679, Min=243, Avg=1810.28, 90=2855, 99=7339, 99.9=17295, 99.99=24271] 
2023-03-07 14:32:41:900 2840 sec: 628046988 operations; 221127 current ops/sec; est completion in 28 minutes [INSERT: Count=2211278, Max=41151, Min=240, Avg=1806.92, 90=2817, 99=7379, 99.9=15799, 99.99=37119] 
2023-03-07 14:32:51:900 2850 sec: 630205290 operations; 215830.2 current ops/sec; est completion in 27 minutes [INSERT: Count=2158292, Max=117759, Min=240, Avg=1851.19, 90=2819, 99=7391, 99.9=21135, 99.99=43743] 
2023-03-07 14:33:01:900 2860 sec: 632375650 operations; 217036 current ops/sec; est completion in 27 minutes [INSERT: Count=2170368, Max=79999, Min=242, Avg=1840.89, 90=2773, 99=7123, 99.9=20799, 99.99=36319] 
2023-03-07 14:33:11:900 2870 sec: 634560600 operations; 218495 current ops/sec; est completion in 27 minutes [INSERT: Count=2184952, Max=37471, Min=246, Avg=1828.54, 90=2805, 99=7575, 99.9=18575, 99.99=29167] 
2023-03-07 14:33:21:900 2880 sec: 636757176 operations; 219657.6 current ops/sec; est completion in 27 minutes [INSERT: Count=2196567, Max=153599, Min=241, Avg=1818.94, 90=2819, 99=7459, 99.9=18239, 99.99=66879] 
2023-03-07 14:33:31:900 2890 sec: 638942367 operations; 218519.1 current ops/sec; est completion in 27 minutes [INSERT: Count=2185201, Max=121919, Min=240, Avg=1828.49, 90=2817, 99=7287, 99.9=17311, 99.99=46431] 
2023-03-07 14:33:41:900 2900 sec: 641130095 operations; 218772.8 current ops/sec; est completion in 27 minutes [INSERT: Count=2187715, Max=54079, Min=236, Avg=1826.16, 90=2863, 99=7711, 99.9=18223, 99.99=44415] 
2023-03-07 14:33:51:900 2910 sec: 643336587 operations; 220649.2 current ops/sec; est completion in 26 minutes [INSERT: Count=2206495, Max=74751, Min=240, Avg=1810.81, 90=2847, 99=7563, 99.9=17951, 99.99=31583] 
2023-03-07 14:34:01:900 2920 sec: 645539372 operations; 220278.5 current ops/sec; est completion in 26 minutes [INSERT: Count=2203031, Max=82047, Min=241, Avg=1813.78, 90=2765, 99=7307, 99.9=19583, 99.99=28815] 
2023-03-07 14:34:11:900 2930 sec: 647726238 operations; 218686.6 current ops/sec; est completion in 26 minutes [INSERT: Count=2186629, Max=35231, Min=241, Avg=1827.03, 90=2775, 99=6947, 99.9=17519, 99.99=30911] 
2023-03-07 14:34:21:900 2940 sec: 649924579 operations; 219834.1 current ops/sec; est completion in 26 minutes [INSERT: Count=2198342, Max=114623, Min=232, Avg=1817.41, 90=2811, 99=7259, 99.9=18335, 99.99=39711] 
2023-03-07 14:34:31:900 2950 sec: 652090005 operations; 216542.6 current ops/sec; est completion in 26 minutes [INSERT: Count=2165415, Max=154367, Min=239, Avg=1845.06, 90=2815, 99=8351, 99.9=21967, 99.99=84479] 
2023-03-07 14:34:41:900 2960 sec: 654277735 operations; 218773 current ops/sec; est completion in 26 minutes [INSERT: Count=2187737, Max=31887, Min=235, Avg=1826.29, 90=2823, 99=7763, 99.9=17855, 99.99=22991] 
2023-03-07 14:34:51:900 2970 sec: 656460924 operations; 218318.9 current ops/sec; est completion in 25 minutes [INSERT: Count=2183183, Max=36255, Min=237, Avg=1830.07, 90=2853, 99=7515, 99.9=20287, 99.99=26511] 
2023-03-07 14:35:01:900 2980 sec: 658671478 operations; 221055.4 current ops/sec; est completion in 25 minutes [INSERT: Count=2210557, Max=34015, Min=245, Avg=1807.01, 90=2839, 99=7587, 99.9=18495, 99.99=26047] 
2023-03-07 14:35:11:900 2990 sec: 660851817 operations; 218033.9 current ops/sec; est completion in 25 minutes [INSERT: Count=2180332, Max=111615, Min=244, Avg=1832.88, 90=2819, 99=7647, 99.9=17551, 99.99=26959] 
2023-03-07 14:35:21:900 3000 sec: 663038500 operations; 218668.3 current ops/sec; est completion in 25 minutes [INSERT: Count=2186689, Max=154623, Min=231, Avg=1827.2, 90=2771, 99=6635, 99.9=17983, 99.99=91967] 
2023-03-07 14:35:31:900 3010 sec: 665211243 operations; 217274.3 current ops/sec; est completion in 25 minutes [INSERT: Count=2172744, Max=38143, Min=247, Avg=1838.84, 90=2803, 99=7435, 99.9=20351, 99.99=27727] 
2023-03-07 14:35:41:900 3020 sec: 667409414 operations; 219817.1 current ops/sec; est completion in 25 minutes [INSERT: Count=2198179, Max=43615, Min=241, Avg=1817.48, 90=2819, 99=7459, 99.9=18111, 99.99=34655] 
2023-03-07 14:35:51:900 3030 sec: 669596669 operations; 218725.5 current ops/sec; est completion in 24 minutes [INSERT: Count=2187250, Max=83071, Min=234, Avg=1826.8, 90=2811, 99=7519, 99.9=18767, 99.99=68927] 
2023-03-07 14:36:01:900 3040 sec: 671717205 operations; 212053.6 current ops/sec; est completion in 24 minutes [INSERT: Count=2120537, Max=243711, Min=219, Avg=1883.95, 90=2895, 99=8147, 99.9=24239, 99.99=167167] 
2023-03-07 14:36:11:900 3050 sec: 673911879 operations; 219467.4 current ops/sec; est completion in 24 minutes [INSERT: Count=2194670, Max=217727, Min=235, Avg=1820.68, 90=2837, 99=7379, 99.9=17695, 99.99=142719] 
2023-03-07 14:36:21:900 3060 sec: 676099447 operations; 218756.8 current ops/sec; est completion in 24 minutes [INSERT: Count=2187570, Max=161151, Min=227, Avg=1826.43, 90=2833, 99=7647, 99.9=18255, 99.99=111295] 
2023-03-07 14:36:31:900 3070 sec: 678289502 operations; 219005.5 current ops/sec; est completion in 24 minutes [INSERT: Count=2190054, Max=105535, Min=215, Avg=1824.35, 90=2819, 99=7187, 99.9=17055, 99.99=58143] 
2023-03-07 14:36:41:900 3080 sec: 680488735 operations; 219923.3 current ops/sec; est completion in 24 minutes [INSERT: Count=2199230, Max=29663, Min=247, Avg=1816.72, 90=2777, 99=7175, 99.9=16911, 99.99=26719] 
2023-03-07 14:36:51:900 3090 sec: 682640479 operations; 215174.4 current ops/sec; est completion in 23 minutes [INSERT: Count=2151742, Max=246783, Min=242, Avg=1856.83, 90=2777, 99=6963, 99.9=18431, 99.99=187391] 
2023-03-07 14:37:01:900 3100 sec: 684815036 operations; 217455.7 current ops/sec; est completion in 23 minutes [INSERT: Count=2174561, Max=43487, Min=246, Avg=1837.03, 90=2795, 99=7871, 99.9=19775, 99.99=37535] 
2023-03-07 14:37:11:900 3110 sec: 687013504 operations; 219846.8 current ops/sec; est completion in 23 minutes [INSERT: Count=2198469, Max=31839, Min=235, Avg=1817.51, 90=2791, 99=7415, 99.9=18319, 99.99=24943] 
2023-03-07 14:37:21:900 3120 sec: 689206077 operations; 219257.3 current ops/sec; est completion in 23 minutes [INSERT: Count=2192566, Max=43007, Min=241, Avg=1822.31, 90=2847, 99=7875, 99.9=18879, 99.99=26943] 
2023-03-07 14:37:31:900 3130 sec: 691398418 operations; 219234.1 current ops/sec; est completion in 23 minutes [INSERT: Count=2192349, Max=119679, Min=240, Avg=1822.48, 90=2837, 99=7155, 99.9=18015, 99.99=34239] 
2023-03-07 14:37:41:900 3140 sec: 693616415 operations; 221799.7 current ops/sec; est completion in 23 minutes [INSERT: Count=2217989, Max=51359, Min=238, Avg=1801.28, 90=2825, 99=7103, 99.9=18399, 99.99=27535] 
2023-03-07 14:37:51:900 3150 sec: 695796756 operations; 218034.1 current ops/sec; est completion in 22 minutes [INSERT: Count=2180341, Max=43647, Min=247, Avg=1832.47, 90=2823, 99=7615, 99.9=18511, 99.99=33279] 
2023-03-07 14:38:01:900 3160 sec: 697968574 operations; 217181.8 current ops/sec; est completion in 22 minutes [INSERT: Count=2171827, Max=127423, Min=239, Avg=1839.68, 90=2803, 99=7467, 99.9=18559, 99.99=36319] 
2023-03-07 14:38:11:900 3170 sec: 700165765 operations; 219719.1 current ops/sec; est completion in 22 minutes [INSERT: Count=2197184, Max=182015, Min=234, Avg=1818.42, 90=2783, 99=6939, 99.9=16735, 99.99=92095] 
2023-03-07 14:38:21:900 3180 sec: 702342455 operations; 217669 current ops/sec; est completion in 22 minutes [INSERT: Count=2176697, Max=232575, Min=223, Avg=1835.55, 90=2821, 99=7035, 99.9=17823, 99.99=165247] 
2023-03-07 14:38:31:900 3190 sec: 704555105 operations; 221265 current ops/sec; est completion in 22 minutes [INSERT: Count=2212654, Max=40319, Min=242, Avg=1805.72, 90=2847, 99=6935, 99.9=17887, 99.99=25343] 
2023-03-07 14:38:41:900 3200 sec: 706751637 operations; 219653.2 current ops/sec; est completion in 22 minutes [INSERT: Count=2196523, Max=40511, Min=227, Avg=1818.89, 90=2877, 99=7307, 99.9=17775, 99.99=36127] 
2023-03-07 14:38:51:900 3210 sec: 708933443 operations; 218180.6 current ops/sec; est completion in 21 minutes [INSERT: Count=2181801, Max=38015, Min=234, Avg=1831.3, 90=2829, 99=7323, 99.9=17951, 99.99=24623] 
2023-03-07 14:39:01:900 3220 sec: 711087326 operations; 215388.3 current ops/sec; est completion in 21 minutes [INSERT: Count=2153890, Max=277759, Min=216, Avg=1854.91, 90=2813, 99=7539, 99.9=21087, 99.99=204671] 
2023-03-07 14:39:11:900 3230 sec: 713283048 operations; 219572.2 current ops/sec; est completion in 21 minutes [INSERT: Count=2195726, Max=89727, Min=243, Avg=1819.56, 90=2809, 99=7279, 99.9=17103, 99.99=26079] 
2023-03-07 14:39:21:900 3240 sec: 715472128 operations; 218908 current ops/sec; est completion in 21 minutes [INSERT: Count=2189077, Max=90303, Min=242, Avg=1825.2, 90=2819, 99=7435, 99.9=19599, 99.99=28671] 
2023-03-07 14:39:31:900 3250 sec: 717618826 operations; 214669.8 current ops/sec; est completion in 21 minutes [INSERT: Count=2146692, Max=211711, Min=222, Avg=1861.27, 90=2839, 99=8003, 99.9=22127, 99.99=137215] 
2023-03-07 14:39:41:900 3260 sec: 719801247 operations; 218242.1 current ops/sec; est completion in 21 minutes [INSERT: Count=2182429, Max=46271, Min=238, Avg=1830.71, 90=2849, 99=7459, 99.9=19567, 99.99=37087] 
2023-03-07 14:39:51:900 3270 sec: 721998989 operations; 219774.2 current ops/sec; est completion in 21 minutes [INSERT: Count=2197744, Max=43583, Min=248, Avg=1817.95, 90=2823, 99=7051, 99.9=17167, 99.99=27023] 
2023-03-07 14:40:01:900 3280 sec: 724198245 operations; 219925.6 current ops/sec; est completion in 20 minutes [INSERT: Count=2199255, Max=69119, Min=239, Avg=1816.69, 90=2815, 99=7287, 99.9=18287, 99.99=43967] 
2023-03-07 14:40:11:900 3290 sec: 726355833 operations; 215758.8 current ops/sec; est completion in 20 minutes [INSERT: Count=2157592, Max=168959, Min=235, Avg=1851.67, 90=2805, 99=8471, 99.9=19535, 99.99=96511] 
2023-03-07 14:40:21:900 3300 sec: 728532169 operations; 217633.6 current ops/sec; est completion in 20 minutes [INSERT: Count=2176321, Max=173055, Min=228, Avg=1835.98, 90=2857, 99=7687, 99.9=19039, 99.99=107007] 
2023-03-07 14:40:31:900 3310 sec: 730717904 operations; 218573.5 current ops/sec; est completion in 20 minutes [INSERT: Count=2185746, Max=79807, Min=230, Avg=1828.01, 90=2847, 99=7463, 99.9=19311, 99.99=70719] 
2023-03-07 14:40:41:900 3320 sec: 732925424 operations; 220752 current ops/sec; est completion in 20 minutes [INSERT: Count=2207509, Max=41663, Min=225, Avg=1809.65, 90=2819, 99=7583, 99.9=17071, 99.99=26079] 
2023-03-07 14:40:51:900 3330 sec: 735118444 operations; 219302 current ops/sec; est completion in 20 minutes [INSERT: Count=2193023, Max=49087, Min=229, Avg=1822.06, 90=2901, 99=8079, 99.9=17999, 99.99=41471] 
2023-03-07 14:41:01:900 3340 sec: 737324097 operations; 220565.3 current ops/sec; est completion in 19 minutes [INSERT: Count=2205657, Max=40991, Min=213, Avg=1811.38, 90=2989, 99=8479, 99.9=20079, 99.99=30543] 
2023-03-07 14:41:11:900 3350 sec: 739542153 operations; 221805.6 current ops/sec; est completion in 19 minutes [INSERT: Count=2218056, Max=191615, Min=208, Avg=1801.31, 90=2999, 99=8591, 99.9=17135, 99.99=107775] 
2023-03-07 14:41:21:900 3360 sec: 741748067 operations; 220591.4 current ops/sec; est completion in 19 minutes [INSERT: Count=2205910, Max=152191, Min=209, Avg=1811.11, 90=2993, 99=8903, 99.9=21327, 99.99=79103] 
2023-03-07 14:41:31:900 3370 sec: 743949050 operations; 220098.3 current ops/sec; est completion in 19 minutes [INSERT: Count=2200987, Max=106751, Min=219, Avg=1815.28, 90=2957, 99=9223, 99.9=22175, 99.99=53727] 
2023-03-07 14:41:41:900 3380 sec: 746191098 operations; 224204.8 current ops/sec; est completion in 19 minutes [INSERT: Count=2242051, Max=36543, Min=231, Avg=1781.99, 90=2871, 99=8255, 99.9=16479, 99.99=23999] 
2023-03-07 14:41:51:900 3390 sec: 748392653 operations; 220155.5 current ops/sec; est completion in 19 minutes [INSERT: Count=2201557, Max=124223, Min=245, Avg=1814.76, 90=2841, 99=8287, 99.9=21167, 99.99=42623] 
2023-03-07 14:42:01:900 3400 sec: 750609899 operations; 221724.6 current ops/sec; est completion in 18 minutes [INSERT: Count=2217246, Max=37791, Min=236, Avg=1801.88, 90=2829, 99=7991, 99.9=18399, 99.99=27455] 
2023-03-07 14:42:11:900 3410 sec: 752840801 operations; 223090.2 current ops/sec; est completion in 18 minutes [INSERT: Count=2230894, Max=35135, Min=236, Avg=1790.88, 90=2871, 99=8487, 99.9=17887, 99.99=25775] 
2023-03-07 14:42:21:900 3420 sec: 755069898 operations; 222909.7 current ops/sec; est completion in 18 minutes [INSERT: Count=2229093, Max=86335, Min=229, Avg=1792.3, 90=2839, 99=8495, 99.9=21679, 99.99=31663] 
2023-03-07 14:42:31:900 3430 sec: 757276920 operations; 220702.2 current ops/sec; est completion in 18 minutes [INSERT: Count=2207033, Max=281599, Min=221, Avg=1810.29, 90=2773, 99=8079, 99.9=19199, 99.99=203007] 
2023-03-07 14:42:41:900 3440 sec: 759466879 operations; 218995.9 current ops/sec; est completion in 18 minutes [INSERT: Count=2189959, Max=58015, Min=238, Avg=1824.39, 90=2851, 99=8295, 99.9=21423, 99.99=30959] 
2023-03-07 14:42:51:900 3450 sec: 761690371 operations; 222349.2 current ops/sec; est completion in 18 minutes [INSERT: Count=2223487, Max=45471, Min=238, Avg=1796.8, 90=2815, 99=8607, 99.9=19727, 99.99=28895] 
2023-03-07 14:43:01:900 3460 sec: 763903095 operations; 221272.4 current ops/sec; est completion in 17 minutes [INSERT: Count=2212722, Max=139263, Min=217, Avg=1805.64, 90=2903, 99=8303, 99.9=21103, 99.99=91647] 
2023-03-07 14:43:11:900 3470 sec: 766122420 operations; 221932.5 current ops/sec; est completion in 17 minutes [INSERT: Count=2219327, Max=36863, Min=233, Avg=1800.25, 90=2933, 99=8287, 99.9=18495, 99.99=26767] 
2023-03-07 14:43:21:900 3480 sec: 768313725 operations; 219130.5 current ops/sec; est completion in 17 minutes [INSERT: Count=2191303, Max=107455, Min=226, Avg=1823.33, 90=2887, 99=7519, 99.9=18655, 99.99=33311] 
2023-03-07 14:43:31:900 3490 sec: 770483815 operations; 217009 current ops/sec; est completion in 17 minutes [INSERT: Count=2170098, Max=136575, Min=235, Avg=1841.05, 90=2769, 99=7727, 99.9=17903, 99.99=40159] 
2023-03-07 14:43:41:900 3500 sec: 772650369 operations; 216655.4 current ops/sec; est completion in 17 minutes [INSERT: Count=2166549, Max=45087, Min=239, Avg=1844.12, 90=2825, 99=7795, 99.9=18639, 99.99=28959] 
2023-03-07 14:43:51:900 3510 sec: 774837329 operations; 218696 current ops/sec; est completion in 17 minutes [INSERT: Count=2186964, Max=76543, Min=235, Avg=1826.98, 90=2853, 99=7611, 99.9=20687, 99.99=34527] 
2023-03-07 14:44:01:900 3520 sec: 777021982 operations; 218465.3 current ops/sec; est completion in 16 minutes [INSERT: Count=2184645, Max=64607, Min=237, Avg=1828.81, 90=2869, 99=7695, 99.9=20959, 99.99=35839] 
2023-03-07 14:44:11:900 3530 sec: 779205102 operations; 218312 current ops/sec; est completion in 16 minutes [INSERT: Count=2183125, Max=113855, Min=231, Avg=1830.08, 90=2871, 99=7751, 99.9=18927, 99.99=34687] 
2023-03-07 14:44:21:900 3540 sec: 781335064 operations; 212996.2 current ops/sec; est completion in 16 minutes [INSERT: Count=2129962, Max=98495, Min=235, Avg=1875.82, 90=2901, 99=8011, 99.9=22575, 99.99=47679] 
2023-03-07 14:44:31:900 3550 sec: 783527392 operations; 219232.8 current ops/sec; est completion in 16 minutes [INSERT: Count=2192328, Max=155903, Min=227, Avg=1822.52, 90=2847, 99=7287, 99.9=18287, 99.99=68159] 
2023-03-07 14:44:41:900 3560 sec: 785702708 operations; 217531.6 current ops/sec; est completion in 16 minutes [INSERT: Count=2175326, Max=46975, Min=245, Avg=1836.72, 90=2837, 99=7391, 99.9=21519, 99.99=27279] 
2023-03-07 14:44:51:900 3570 sec: 787869289 operations; 216658.1 current ops/sec; est completion in 16 minutes [INSERT: Count=2166577, Max=69247, Min=233, Avg=1844, 90=2829, 99=8039, 99.9=20047, 99.99=28319] 
2023-03-07 14:45:01:900 3580 sec: 790034535 operations; 216524.6 current ops/sec; est completion in 15 minutes [INSERT: Count=2165238, Max=151167, Min=236, Avg=1845.27, 90=2841, 99=7939, 99.9=23439, 99.99=77311] 
2023-03-07 14:45:11:900 3590 sec: 792198619 operations; 216408.4 current ops/sec; est completion in 15 minutes [INSERT: Count=2164083, Max=100031, Min=229, Avg=1846.21, 90=2863, 99=7663, 99.9=18847, 99.99=95295] 
2023-03-07 14:45:21:900 3600 sec: 794363011 operations; 216439.2 current ops/sec; est completion in 15 minutes [INSERT: Count=2164374, Max=68607, Min=232, Avg=1842.79, 90=2881, 99=7575, 99.9=21551, 99.99=30687] 
2023-03-07 14:45:31:900 3610 sec: 796534166 operations; 217115.5 current ops/sec; est completion in 15 minutes [INSERT: Count=2171175, Max=121343, Min=236, Avg=1843.56, 90=2827, 99=7843, 99.9=19551, 99.99=38047] 
2023-03-07 14:45:41:900 3620 sec: 798728506 operations; 219434 current ops/sec; est completion in 15 minutes [INSERT: Count=2194340, Max=49183, Min=225, Avg=1820.78, 90=2809, 99=7723, 99.9=18383, 99.99=35871] 
2023-03-07 14:45:51:900 3630 sec: 800921541 operations; 219303.5 current ops/sec; est completion in 15 minutes [INSERT: Count=2193031, Max=116543, Min=239, Avg=1821.84, 90=2805, 99=7411, 99.9=19583, 99.99=33567] 
2023-03-07 14:46:01:900 3640 sec: 803099622 operations; 217808.1 current ops/sec; est completion in 14 minutes [INSERT: Count=2178065, Max=38271, Min=243, Avg=1829.64, 90=2831, 99=7547, 99.9=18527, 99.99=25663] 
2023-03-07 14:46:11:900 3650 sec: 805310252 operations; 221063 current ops/sec; est completion in 14 minutes [INSERT: Count=2210648, Max=52319, Min=236, Avg=1812.01, 90=2817, 99=7631, 99.9=16975, 99.99=29439] 
2023-03-07 14:46:21:900 3660 sec: 807464924 operations; 215467.2 current ops/sec; est completion in 14 minutes [INSERT: Count=2154675, Max=151295, Min=221, Avg=1854.32, 90=2819, 99=7603, 99.9=20863, 99.99=107647] 
2023-03-07 14:46:31:900 3670 sec: 809636488 operations; 217156.4 current ops/sec; est completion in 14 minutes [INSERT: Count=2171560, Max=254591, Min=226, Avg=1839.85, 90=2769, 99=7175, 99.9=18751, 99.99=175743] 
2023-03-07 14:46:41:900 3680 sec: 811798478 operations; 216199 current ops/sec; est completion in 14 minutes [INSERT: Count=2161998, Max=53535, Min=246, Avg=1848.09, 90=2813, 99=7547, 99.9=23071, 99.99=37951] 
2023-03-07 14:46:51:900 3690 sec: 813972686 operations; 217420.8 current ops/sec; est completion in 14 minutes [INSERT: Count=2174206, Max=104767, Min=240, Avg=1837.58, 90=2815, 99=7283, 99.9=18383, 99.99=27935] 
2023-03-07 14:47:01:900 3700 sec: 816142192 operations; 216950.6 current ops/sec; est completion in 13 minutes [INSERT: Count=2169500, Max=102591, Min=230, Avg=1841.6, 90=2821, 99=7779, 99.9=22095, 99.99=38239] 
2023-03-07 14:47:11:900 3710 sec: 818321264 operations; 217907.2 current ops/sec; est completion in 13 minutes [INSERT: Count=2179072, Max=173951, Min=228, Avg=1833.26, 90=2839, 99=7843, 99.9=19119, 99.99=95359] 
2023-03-07 14:47:21:900 3720 sec: 820509590 operations; 218832.6 current ops/sec; est completion in 13 minutes [INSERT: Count=2188309, Max=44095, Min=243, Avg=1825.37, 90=2847, 99=7919, 99.9=19071, 99.99=35903] 
2023-03-07 14:47:31:900 3730 sec: 822690269 operations; 218067.9 current ops/sec; est completion in 13 minutes [INSERT: Count=2180699, Max=53247, Min=233, Avg=1832.74, 90=2853, 99=7927, 99.9=17007, 99.99=35999] 
2023-03-07 14:47:41:900 3740 sec: 824891797 operations; 220152.8 current ops/sec; est completion in 13 minutes [INSERT: Count=2201530, Max=31055, Min=233, Avg=1814.91, 90=2815, 99=7059, 99.9=15935, 99.99=24079] 
2023-03-07 14:47:51:900 3750 sec: 827078118 operations; 218632.1 current ops/sec; est completion in 13 minutes [INSERT: Count=2186317, Max=39711, Min=241, Avg=1827.42, 90=2803, 99=7091, 99.9=17135, 99.99=24463] 
2023-03-07 14:48:01:900 3760 sec: 829247239 operations; 216912.1 current ops/sec; est completion in 12 minutes [INSERT: Count=2169136, Max=181887, Min=231, Avg=1841.99, 90=2799, 99=7051, 99.9=19119, 99.99=103679] 
2023-03-07 14:48:11:900 3770 sec: 831413350 operations; 216611.1 current ops/sec; est completion in 12 minutes [INSERT: Count=2166101, Max=113919, Min=242, Avg=1844.43, 90=2855, 99=7755, 99.9=18543, 99.99=78783] 
2023-03-07 14:48:21:900 3780 sec: 833575245 operations; 216189.5 current ops/sec; est completion in 12 minutes [INSERT: Count=2161889, Max=225919, Min=222, Avg=1848.19, 90=2843, 99=8003, 99.9=18543, 99.99=151935] 
2023-03-07 14:48:31:900 3790 sec: 835742834 operations; 216758.9 current ops/sec; est completion in 12 minutes [INSERT: Count=2167595, Max=54815, Min=239, Avg=1843.25, 90=2871, 99=8083, 99.9=20015, 99.99=37887] 
2023-03-07 14:48:41:900 3800 sec: 837954120 operations; 221128.6 current ops/sec; est completion in 12 minutes [INSERT: Count=2211287, Max=33375, Min=220, Avg=1806.77, 90=2859, 99=7843, 99.9=17183, 99.99=26943] 
2023-03-07 14:48:51:900 3810 sec: 840127860 operations; 217374 current ops/sec; est completion in 12 minutes [INSERT: Count=2173735, Max=38751, Min=233, Avg=1838.06, 90=2891, 99=7911, 99.9=20159, 99.99=28399] 
2023-03-07 14:49:01:900 3820 sec: 842263122 operations; 213526.2 current ops/sec; est completion in 11 minutes [INSERT: Count=2135257, Max=178047, Min=229, Avg=1871.2, 90=2805, 99=7839, 99.9=22799, 99.99=99839] 
2023-03-07 14:49:11:909 3830 sec: 844437251 operations; 217412.9 current ops/sec; est completion in 11 minutes [INSERT: Count=2174132, Max=33695, Min=231, Avg=1839.14, 90=2791, 99=8035, 99.9=20271, 99.99=26239] 
2023-03-07 14:49:21:908 3840 sec: 846605272 operations; 216628.8 current ops/sec; est completion in 11 minutes [INSERT: Count=2168034, Max=214399, Min=211, Avg=1840.79, 90=2903, 99=8043, 99.9=20015, 99.99=139135] 
2023-03-07 14:49:31:900 3850 sec: 848805125 operations; 220161.43 current ops/sec; est completion in 11 minutes [INSERT: Count=2199884, Max=150527, Min=218, Avg=1816.88, 90=2937, 99=8447, 99.9=18799, 99.99=71359] 
2023-03-07 14:49:41:900 3860 sec: 851028318 operations; 222319.3 current ops/sec; est completion in 11 minutes [INSERT: Count=2223165, Max=47583, Min=221, Avg=1797.07, 90=2959, 99=8471, 99.9=18543, 99.99=36095] 
2023-03-07 14:49:51:900 3870 sec: 853251417 operations; 222309.9 current ops/sec; est completion in 11 minutes [INSERT: Count=2223101, Max=151039, Min=225, Avg=1797.16, 90=2935, 99=8199, 99.9=20063, 99.99=65919] 
2023-03-07 14:50:01:900 3880 sec: 855431567 operations; 218015 current ops/sec; est completion in 10 minutes [INSERT: Count=2180144, Max=110655, Min=216, Avg=1832.65, 90=2905, 99=8183, 99.9=18191, 99.99=31151] 
2023-03-07 14:50:11:900 3890 sec: 857648007 operations; 221644 current ops/sec; est completion in 10 minutes [INSERT: Count=2216411, Max=44831, Min=221, Avg=1800.27, 90=2901, 99=8167, 99.9=16927, 99.99=24303] 
2023-03-07 14:50:21:900 3900 sec: 859866745 operations; 221873.8 current ops/sec; est completion in 10 minutes [INSERT: Count=2218772, Max=135295, Min=211, Avg=1802.91, 90=2935, 99=10239, 99.9=22863, 99.99=68991] 
2023-03-07 14:50:31:900 3910 sec: 862071732 operations; 220498.7 current ops/sec; est completion in 10 minutes [INSERT: Count=2204991, Max=226943, Min=207, Avg=1811.97, 90=3047, 99=10607, 99.9=24943, 99.99=132479] 
2023-03-07 14:50:41:900 3920 sec: 864310411 operations; 223867.9 current ops/sec; est completion in 10 minutes [INSERT: Count=2238670, Max=46527, Min=221, Avg=1784.64, 90=3025, 99=9775, 99.9=21759, 99.99=30543] 
2023-03-07 14:50:51:900 3930 sec: 866546454 operations; 223604.3 current ops/sec; est completion in 10 minutes [INSERT: Count=2236041, Max=111295, Min=207, Avg=1786.8, 90=2957, 99=9255, 99.9=23103, 99.99=63743] 
2023-03-07 14:51:01:900 3940 sec: 868770760 operations; 222430.6 current ops/sec; est completion in 9 minutes [INSERT: Count=2224307, Max=146175, Min=221, Avg=1796.16, 90=3025, 99=9191, 99.9=21295, 99.99=79679] 
2023-03-07 14:51:11:900 3950 sec: 871036061 operations; 226530.1 current ops/sec; est completion in 9 minutes [INSERT: Count=2265298, Max=74943, Min=219, Avg=1763.69, 90=3049, 99=9295, 99.9=22863, 99.99=34271] 
2023-03-07 14:51:21:900 3960 sec: 873295296 operations; 225923.5 current ops/sec; est completion in 9 minutes [INSERT: Count=2259242, Max=114495, Min=223, Avg=1768.36, 90=3063, 99=10247, 99.9=22943, 99.99=45183] 
2023-03-07 14:51:31:900 3970 sec: 875525326 operations; 223003 current ops/sec; est completion in 9 minutes [INSERT: Count=2230012, Max=173439, Min=206, Avg=1791.53, 90=3059, 99=10719, 99.9=24607, 99.99=88959] 
2023-03-07 14:51:41:900 3980 sec: 877803227 operations; 227790.1 current ops/sec; est completion in 9 minutes [INSERT: Count=2277918, Max=40127, Min=226, Avg=1753.68, 90=3003, 99=9567, 99.9=19631, 99.99=27423] 
2023-03-07 14:51:51:900 3990 sec: 880052957 operations; 224973 current ops/sec; est completion in 9 minutes [INSERT: Count=2249734, Max=103999, Min=225, Avg=1776.11, 90=2989, 99=9095, 99.9=19423, 99.99=41567] 
2023-03-07 14:52:01:900 4000 sec: 882327236 operations; 227427.9 current ops/sec; est completion in 8 minutes [INSERT: Count=2274272, Max=42015, Min=231, Avg=1756.53, 90=2881, 99=9191, 99.9=20335, 99.99=30383] 
2023-03-07 14:52:11:900 4010 sec: 884580753 operations; 225351.7 current ops/sec; est completion in 8 minutes [INSERT: Count=2253513, Max=37631, Min=216, Avg=1772.65, 90=3047, 99=9343, 99.9=18351, 99.99=27615] 
2023-03-07 14:52:21:900 4020 sec: 886795873 operations; 221512 current ops/sec; est completion in 8 minutes [INSERT: Count=2215122, Max=103231, Min=221, Avg=1804.02, 90=3103, 99=9903, 99.9=22639, 99.99=83135] 
2023-03-07 14:52:31:900 4030 sec: 889021907 operations; 222603.4 current ops/sec; est completion in 8 minutes [INSERT: Count=2226041, Max=67263, Min=217, Avg=1794.78, 90=3099, 99=10215, 99.9=21391, 99.99=35519] 
2023-03-07 14:52:41:900 4040 sec: 891260234 operations; 223832.7 current ops/sec; est completion in 8 minutes [INSERT: Count=2238317, Max=60447, Min=215, Avg=1784.4, 90=3019, 99=9103, 99.9=23343, 99.99=43199] 
2023-03-07 14:52:51:900 4050 sec: 893476370 operations; 221613.6 current ops/sec; est completion in 8 minutes [INSERT: Count=2216144, Max=35999, Min=223, Avg=1803.21, 90=2975, 99=9631, 99.9=22127, 99.99=26927] 
2023-03-07 14:53:01:900 4060 sec: 895684394 operations; 220802.4 current ops/sec; est completion in 7 minutes [INSERT: Count=2208020, Max=86463, Min=220, Avg=1809.57, 90=2977, 99=8695, 99.9=19039, 99.99=31999] 
2023-03-07 14:53:11:900 4070 sec: 897875265 operations; 219087.1 current ops/sec; est completion in 7 minutes [INSERT: Count=2190869, Max=82879, Min=212, Avg=1823.34, 90=2901, 99=7835, 99.9=18415, 99.99=28927] 
2023-03-07 14:53:21:900 4080 sec: 900053325 operations; 217806 current ops/sec; est completion in 7 minutes [INSERT: Count=2178067, Max=166399, Min=219, Avg=1834.47, 90=2941, 99=7983, 99.9=20927, 99.99=87295] 
2023-03-07 14:53:31:900 4090 sec: 902243567 operations; 219024.2 current ops/sec; est completion in 7 minutes [INSERT: Count=2190225, Max=40607, Min=224, Avg=1824.37, 90=2945, 99=8463, 99.9=19871, 99.99=30223] 
2023-03-07 14:53:41:900 4100 sec: 904433600 operations; 219003.3 current ops/sec; est completion in 7 minutes [INSERT: Count=2190035, Max=42207, Min=233, Avg=1824.29, 90=2945, 99=8791, 99.9=19279, 99.99=28591] 
2023-03-07 14:53:51:900 4110 sec: 906635636 operations; 220203.6 current ops/sec; est completion in 7 minutes [INSERT: Count=2202047, Max=45183, Min=225, Avg=1814.38, 90=2877, 99=7931, 99.9=17679, 99.99=25151] 
2023-03-07 14:54:01:900 4120 sec: 908794353 operations; 215871.7 current ops/sec; est completion in 6 minutes [INSERT: Count=2158717, Max=116159, Min=237, Avg=1850.75, 90=2875, 99=7819, 99.9=18767, 99.99=38015] 
2023-03-07 14:54:11:900 4130 sec: 910952916 operations; 215856.3 current ops/sec; est completion in 6 minutes [INSERT: Count=2158559, Max=136447, Min=225, Avg=1851.06, 90=2943, 99=8783, 99.9=21183, 99.99=61695] 
2023-03-07 14:54:21:900 4140 sec: 913133483 operations; 218056.7 current ops/sec; est completion in 6 minutes [INSERT: Count=2180571, Max=177023, Min=213, Avg=1832.27, 90=2977, 99=9103, 99.9=22255, 99.99=73791] 
2023-03-07 14:54:31:900 4150 sec: 915351835 operations; 221835.2 current ops/sec; est completion in 6 minutes [INSERT: Count=2218362, Max=51391, Min=222, Avg=1801.1, 90=3003, 99=8575, 99.9=18831, 99.99=34943] 
2023-03-07 14:54:41:900 4160 sec: 917546931 operations; 219509.6 current ops/sec; est completion in 6 minutes [INSERT: Count=2195088, Max=44191, Min=221, Avg=1820.12, 90=2991, 99=8695, 99.9=19935, 99.99=37727] 
2023-03-07 14:54:51:900 4170 sec: 919730662 operations; 218373.1 current ops/sec; est completion in 6 minutes [INSERT: Count=2183730, Max=181375, Min=221, Avg=1829.51, 90=2967, 99=8151, 99.9=22959, 99.99=77247] 
2023-03-07 14:55:01:900 4180 sec: 921917133 operations; 218647.1 current ops/sec; est completion in 5 minutes [INSERT: Count=2186461, Max=127871, Min=210, Avg=1827.38, 90=2985, 99=8447, 99.9=18735, 99.99=40255] 
2023-03-07 14:55:11:900 4190 sec: 924108310 operations; 219117.7 current ops/sec; est completion in 5 minutes [INSERT: Count=2191172, Max=153343, Min=217, Avg=1823.18, 90=2981, 99=8863, 99.9=23407, 99.99=92799] 
2023-03-07 14:55:21:900 4200 sec: 926318058 operations; 220974.8 current ops/sec; est completion in 5 minutes [INSERT: Count=2209758, Max=59807, Min=217, Avg=1808.13, 90=3039, 99=9847, 99.9=22735, 99.99=39103] 
2023-03-07 14:55:31:900 4210 sec: 928528111 operations; 221005.3 current ops/sec; est completion in 5 minutes [INSERT: Count=2210051, Max=175103, Min=224, Avg=1807.85, 90=3035, 99=9095, 99.9=21855, 99.99=106303] 
2023-03-07 14:55:41:900 4220 sec: 930729122 operations; 220101.1 current ops/sec; est completion in 5 minutes [INSERT: Count=2201007, Max=38655, Min=213, Avg=1815.19, 90=3001, 99=9903, 99.9=19183, 99.99=27871] 
2023-03-07 14:55:51:900 4230 sec: 932937564 operations; 220844.2 current ops/sec; est completion in 5 minutes [INSERT: Count=2208438, Max=119935, Min=218, Avg=1809.09, 90=2973, 99=9159, 99.9=19983, 99.99=60831] 
2023-03-07 14:56:01:900 4240 sec: 935167456 operations; 222989.2 current ops/sec; est completion in 4 minutes [INSERT: Count=2229896, Max=47743, Min=224, Avg=1791.53, 90=3027, 99=9479, 99.9=20495, 99.99=30191] 
2023-03-07 14:56:11:900 4250 sec: 937402398 operations; 223494.2 current ops/sec; est completion in 4 minutes [INSERT: Count=2234947, Max=49695, Min=221, Avg=1787.86, 90=3015, 99=10103, 99.9=19775, 99.99=29199] 
2023-03-07 14:56:21:900 4260 sec: 939617596 operations; 221519.8 current ops/sec; est completion in 4 minutes [INSERT: Count=2215195, Max=155391, Min=213, Avg=1803.52, 90=3111, 99=10279, 99.9=21615, 99.99=84735] 
2023-03-07 14:56:31:900 4270 sec: 941836419 operations; 221882.3 current ops/sec; est completion in 4 minutes [INSERT: Count=2218830, Max=170495, Min=214, Avg=1800.68, 90=3077, 99=10671, 99.9=21919, 99.99=85119] 
2023-03-07 14:56:41:900 4280 sec: 944055693 operations; 221927.4 current ops/sec; est completion in 4 minutes [INSERT: Count=2219265, Max=39455, Min=215, Avg=1800.15, 90=3045, 99=9935, 99.9=20863, 99.99=26991] 
2023-03-07 14:56:51:900 4290 sec: 946265978 operations; 221028.5 current ops/sec; est completion in 4 minutes [INSERT: Count=2210288, Max=42463, Min=229, Avg=1807.66, 90=2925, 99=9031, 99.9=21391, 99.99=35167] 
2023-03-07 14:57:01:900 4300 sec: 948494292 operations; 222831.4 current ops/sec; est completion in 3 minutes [INSERT: Count=2228314, Max=55039, Min=208, Avg=1792.81, 90=2919, 99=8519, 99.9=19647, 99.99=30431] 
2023-03-07 14:57:11:900 4310 sec: 950667433 operations; 217314.1 current ops/sec; est completion in 3 minutes [INSERT: Count=2173140, Max=44383, Min=225, Avg=1838.62, 90=3021, 99=11055, 99.9=24735, 99.99=37759] 
2023-03-07 14:57:21:900 4320 sec: 952873494 operations; 220606.1 current ops/sec; est completion in 3 minutes [INSERT: Count=2206065, Max=107711, Min=223, Avg=1811.09, 90=3075, 99=9487, 99.9=25503, 99.99=41183] 
2023-03-07 14:57:31:900 4330 sec: 955096213 operations; 222271.9 current ops/sec; est completion in 3 minutes [INSERT: Count=2222714, Max=42207, Min=222, Avg=1797.33, 90=3103, 99=9759, 99.9=20863, 99.99=28927] 
2023-03-07 14:57:41:900 4340 sec: 957334405 operations; 223819.2 current ops/sec; est completion in 3 minutes [INSERT: Count=2238198, Max=45119, Min=216, Avg=1785.2, 90=3059, 99=9983, 99.9=21215, 99.99=32575] 
2023-03-07 14:57:51:900 4350 sec: 959571960 operations; 223755.5 current ops/sec; est completion in 3 minutes [INSERT: Count=2237550, Max=40703, Min=220, Avg=1785.51, 90=3077, 99=9543, 99.9=19823, 99.99=28991] 
2023-03-07 14:58:01:900 4360 sec: 961770826 operations; 219886.6 current ops/sec; est completion in 2 minutes [INSERT: Count=2198869, Max=97855, Min=212, Avg=1816.98, 90=3065, 99=9255, 99.9=19791, 99.99=37311] 
2023-03-07 14:58:11:900 4370 sec: 963981423 operations; 221059.7 current ops/sec; est completion in 2 minutes [INSERT: Count=2210600, Max=117183, Min=216, Avg=1807.38, 90=2975, 99=8615, 99.9=19215, 99.99=43615] 
2023-03-07 14:58:21:900 4380 sec: 966182341 operations; 220091.8 current ops/sec; est completion in 2 minutes [INSERT: Count=2200912, Max=39647, Min=216, Avg=1815.1, 90=2991, 99=9327, 99.9=22975, 99.99=30447] 
2023-03-07 14:58:31:900 4390 sec: 968390454 operations; 220811.3 current ops/sec; est completion in 2 minutes [INSERT: Count=2208114, Max=39903, Min=224, Avg=1809.64, 90=3011, 99=9471, 99.9=19743, 99.99=28239] 
2023-03-07 14:58:41:900 4400 sec: 970612952 operations; 222249.8 current ops/sec; est completion in 2 minutes [INSERT: Count=2222497, Max=44863, Min=230, Avg=1797.34, 90=2961, 99=9423, 99.9=19407, 99.99=34559] 
2023-03-07 14:58:51:900 4410 sec: 972824496 operations; 221154.4 current ops/sec; est completion in 2 minutes [INSERT: Count=2211544, Max=107775, Min=223, Avg=1806.69, 90=2951, 99=9295, 99.9=22143, 99.99=103551] 
2023-03-07 14:59:01:900 4420 sec: 975035544 operations; 221104.8 current ops/sec; est completion in 1 minute [INSERT: Count=2211045, Max=43487, Min=229, Avg=1807.08, 90=3013, 99=9719, 99.9=23535, 99.99=32559] 
2023-03-07 14:59:11:900 4430 sec: 977267536 operations; 223199.2 current ops/sec; est completion in 1 minute [INSERT: Count=2231988, Max=40927, Min=224, Avg=1789.99, 90=3049, 99=9911, 99.9=19263, 99.99=26815] 
2023-03-07 14:59:21:900 4440 sec: 979487710 operations; 222017.4 current ops/sec; est completion in 1 minute [INSERT: Count=2220182, Max=79743, Min=216, Avg=1799.6, 90=3039, 99=9511, 99.9=18799, 99.99=31663] 
2023-03-07 14:59:31:900 4450 sec: 981684301 operations; 219659.1 current ops/sec; est completion in 1 minute [INSERT: Count=2196585, Max=112959, Min=223, Avg=1818.81, 90=3083, 99=10263, 99.9=23951, 99.99=37791] 
2023-03-07 14:59:41:900 4460 sec: 983876409 operations; 219210.8 current ops/sec; est completion in 1 minute [INSERT: Count=2192107, Max=63839, Min=223, Avg=1822.18, 90=3157, 99=11031, 99.9=23919, 99.99=44639] 
2023-03-07 14:59:51:900 4470 sec: 986108283 operations; 223187.4 current ops/sec; est completion in 1 minute [INSERT: Count=2231887, Max=88895, Min=199, Avg=1790.33, 90=3219, 99=10807, 99.9=22911, 99.99=35903] 
2023-03-07 15:00:01:900 4480 sec: 988345173 operations; 223689 current ops/sec; est completion in 53 seconds [INSERT: Count=2236881, Max=98815, Min=211, Avg=1786.2, 90=3197, 99=11127, 99.9=24575, 99.99=48287] 
2023-03-07 15:00:11:900 4490 sec: 990554084 operations; 220891.1 current ops/sec; est completion in 43 seconds [INSERT: Count=2208908, Max=93439, Min=212, Avg=1808.63, 90=3183, 99=12167, 99.9=24719, 99.99=38559] 
2023-03-07 15:00:21:900 4500 sec: 992781857 operations; 222777.3 current ops/sec; est completion in 33 seconds [INSERT: Count=2227777, Max=113599, Min=218, Avg=1793.49, 90=3153, 99=10743, 99.9=23727, 99.99=47679] 
2023-03-07 15:00:31:900 4510 sec: 995003038 operations; 222118.1 current ops/sec; est completion in 23 seconds [INSERT: Count=2221182, Max=39711, Min=216, Avg=1798.78, 90=3059, 99=9295, 99.9=19711, 99.99=28751] 
2023-03-07 15:00:41:900 4520 sec: 997186457 operations; 218341.9 current ops/sec; est completion in 13 seconds [INSERT: Count=2183414, Max=43487, Min=221, Avg=1829.81, 90=3049, 99=9639, 99.9=22047, 99.99=34239] 
2023-03-07 15:00:51:900 4530 sec: 999405819 operations; 221936.2 current ops/sec; est completion in 3 second [CLEANUP: Count=65, Max=8, Min=2, Avg=3.17, 90=4, 99=7, 99.9=8, 99.99=8] [INSERT: Count=2219374, Max=40927, Min=222, Avg=1758.64, 90=2969, 99=8903, 99.9=18639, 99.99=33919] 
2023-03-07 15:00:59:806 4537 sec: 1000000000 operations; 75155.7 current ops/sec; [CLEANUP: Count=335, Max=2228223, Min=0, Avg=6649.87, 90=3, 99=16, 99.9=2228223, 99.99=2228223] [INSERT: Count=594154, Max=33279, Min=198, Avg=1241.19, 90=2007, 99=4527, 99.9=16383, 99.99=29119] 
[OVERALL], RunTime(ms), 4537906
[OVERALL], Throughput(ops/sec), 220365.9573380321
[TOTAL_GCS_PS_Scavenge], Count, 4647
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 48382
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.066174574792867
[TOTAL_GCS_PS_MarkSweep], Count, 10
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 699
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.015403580417928445
[TOTAL_GCs], Count, 4657
[TOTAL_GC_TIME], Time(ms), 49081
[TOTAL_GC_TIME_%], Time(%), 1.0815781552107955
[CLEANUP], Operations, 400
[CLEANUP], AverageLatency(us), 5569.785
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2228223
[CLEANUP], 95thPercentileLatency(us), 4
[CLEANUP], 99thPercentileLatency(us), 15
[INSERT], Operations, 1000000000
[INSERT], AverageLatency(us), 1810.232819709
[INSERT], MinLatency(us), 195
[INSERT], MaxLatency(us), 1358847
[INSERT], 95thPercentileLatency(us), 4069
[INSERT], 99thPercentileLatency(us), 9023
[INSERT], Return=OK, 1000000000
