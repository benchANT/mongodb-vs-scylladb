bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=52.53.147.244,50.18.117.16,50.18.110.84 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=weYxGdSg63M8FmD -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.53.147.244,50.18.117.16,50.18.110.84 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=weYxGdSg63M8FmD -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.53.147.244,50.18.117.16,50.18.110.84 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=weYxGdSg63M8FmD -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
Starting test.
[Thread-51] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
2023-03-01 09:02:23:130 0 sec: 0 operations; est completion in 0 second 
[Thread-51] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
[Thread-51] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-51] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-51] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-51] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_1' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /50.18.110.84:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.53.147.244:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /50.18.117.16:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /50.18.217.131:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /13.56.98.110:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /13.52.55.27:9042 added
[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: d4263d62-c728-4950-bc83-6457525bc8b6

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /50.18.117.16; Rack: us-west-1a-virtual1

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /52.53.147.244; Rack: us-west-1a-virtual1

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /50.18.110.84; Rack: us-west-1c

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /50.18.217.131; Rack: us-west-1a

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /13.56.98.110; Rack: us-west-1a

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /13.52.55.27; Rack: us-west-1c

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-03-01 09:02:33:116 10 sec: 1438254 operations; 143825.4 current ops/sec; est completion in 1 hour 55 minutes [INSERT: Count=1438520, Max=213887, Min=213, Avg=2569.72, 90=4859, 99=25695, 99.9=81407, 99.99=150527] 
2023-03-01 09:02:43:116 20 sec: 3652433 operations; 221417.9 current ops/sec; est completion in 1 hour 30 minutes [INSERT: Count=2214056, Max=56639, Min=213, Avg=1803.98, 90=3409, 99=14111, 99.9=28319, 99.99=42047] 
2023-03-01 09:02:53:116 30 sec: 5951748 operations; 229931.5 current ops/sec; est completion in 1 hour 23 minutes [INSERT: Count=2299320, Max=44095, Min=216, Avg=1737.3, 90=3299, 99=11759, 99.9=22799, 99.99=33055] 
2023-03-01 09:03:03:116 40 sec: 8250640 operations; 229889.2 current ops/sec; est completion in 1 hour 20 minutes [INSERT: Count=2298903, Max=39583, Min=226, Avg=1737.76, 90=3333, 99=11735, 99.9=22239, 99.99=30895] 
2023-03-01 09:03:13:116 50 sec: 10556239 operations; 230559.9 current ops/sec; est completion in 1 hour 18 minutes [INSERT: Count=2305562, Max=44255, Min=220, Avg=1732.32, 90=3233, 99=12071, 99.9=22623, 99.99=31743] 
2023-03-01 09:03:23:116 60 sec: 12834454 operations; 227821.5 current ops/sec; est completion in 1 hour 16 minutes [INSERT: Count=2278248, Max=53567, Min=220, Avg=1754.27, 90=3305, 99=11991, 99.9=23407, 99.99=37535] 
2023-03-01 09:03:33:116 70 sec: 15038584 operations; 220413 current ops/sec; est completion in 1 hour 16 minutes [INSERT: Count=2204089, Max=41151, Min=205, Avg=1812.71, 90=2905, 99=8415, 99.9=18495, 99.99=26095] 
2023-03-01 09:03:43:116 80 sec: 17312006 operations; 227342.2 current ops/sec; est completion in 1 hour 15 minutes [INSERT: Count=2273456, Max=60767, Min=213, Avg=1757.32, 90=3143, 99=11535, 99.9=24831, 99.99=37983] 
2023-03-01 09:03:53:116 90 sec: 19597094 operations; 228508.8 current ops/sec; est completion in 1 hour 15 minutes [INSERT: Count=2285066, Max=55391, Min=222, Avg=1748.38, 90=3345, 99=11479, 99.9=21823, 99.99=36063] 
2023-03-01 09:04:03:116 100 sec: 21909951 operations; 231285.7 current ops/sec; est completion in 1 hour 14 minutes [INSERT: Count=2312838, Max=46079, Min=216, Avg=1727.21, 90=3305, 99=10527, 99.9=21567, 99.99=31007] 
2023-03-01 09:04:13:116 110 sec: 24200243 operations; 229029.2 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2290343, Max=52223, Min=218, Avg=1744.63, 90=3283, 99=12271, 99.9=23727, 99.99=34271] 
2023-03-01 09:04:23:116 120 sec: 26458417 operations; 225817.4 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2258131, Max=46207, Min=218, Avg=1769.3, 90=3127, 99=11271, 99.9=23535, 99.99=35839] 
2023-03-01 09:04:33:116 130 sec: 28674114 operations; 221569.7 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2215674, Max=37759, Min=217, Avg=1803.24, 90=2819, 99=8295, 99.9=17263, 99.99=24047] 
2023-03-01 09:04:43:116 140 sec: 30862102 operations; 218798.8 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2187989, Max=206719, Min=234, Avg=1826.15, 90=2787, 99=7395, 99.9=17695, 99.99=111231] 
2023-03-01 09:04:53:116 150 sec: 33123270 operations; 226116.8 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2261192, Max=43007, Min=214, Avg=1766.57, 90=3073, 99=10183, 99.9=21439, 99.99=31791] 
2023-03-01 09:05:03:116 160 sec: 35398508 operations; 227523.8 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2275270, Max=74239, Min=213, Avg=1756.21, 90=3277, 99=12543, 99.9=24335, 99.99=38623] 
2023-03-01 09:05:13:115 170 sec: 37654053 operations; 225554.5 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2255542, Max=48831, Min=221, Avg=1771.15, 90=3287, 99=13007, 99.9=26015, 99.99=38367] 
2023-03-01 09:05:23:116 180 sec: 39920163 operations; 226611 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2266104, Max=70463, Min=209, Avg=1763.08, 90=3143, 99=11191, 99.9=21903, 99.99=29391] 
2023-03-01 09:05:33:116 190 sec: 42214796 operations; 229463.3 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2294620, Max=69503, Min=224, Avg=1741.34, 90=2989, 99=8935, 99.9=18943, 99.99=29375] 
2023-03-01 09:05:43:115 200 sec: 44528748 operations; 231395.2 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2313927, Max=40831, Min=217, Avg=1726.49, 90=3185, 99=10791, 99.9=21615, 99.99=31023] 
2023-03-01 09:05:53:115 210 sec: 46807020 operations; 227827.2 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2278276, Max=215807, Min=212, Avg=1753.59, 90=3205, 99=11959, 99.9=23567, 99.99=135039] 
2023-03-01 09:06:03:115 220 sec: 49102841 operations; 229582.1 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2295794, Max=56767, Min=211, Avg=1739.9, 90=3217, 99=11775, 99.9=23951, 99.99=45247] 
2023-03-01 09:06:13:116 230 sec: 51362830 operations; 225998.9 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2259980, Max=47551, Min=219, Avg=1768.18, 90=3143, 99=11303, 99.9=25807, 99.99=36223] 
2023-03-01 09:06:23:115 240 sec: 53402233 operations; 203940.3 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2039422, Max=231551, Min=194, Avg=1959.18, 90=2969, 99=12527, 99.9=87679, 99.99=196479] 
2023-03-01 09:06:33:115 250 sec: 55594190 operations; 219195.7 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2191943, Max=43615, Min=212, Avg=1822.78, 90=2877, 99=9791, 99.9=18271, 99.99=26799] 
2023-03-01 09:06:43:115 260 sec: 57682816 operations; 208862.6 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2088627, Max=203775, Min=227, Avg=1913.04, 90=2811, 99=10303, 99.9=47935, 99.99=149759] 
2023-03-01 09:06:53:115 270 sec: 59866616 operations; 218380 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2183801, Max=252671, Min=238, Avg=1829.7, 90=2799, 99=7395, 99.9=19087, 99.99=176511] 
2023-03-01 09:07:03:115 280 sec: 62047813 operations; 218119.7 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2181204, Max=100031, Min=239, Avg=1831.81, 90=2821, 99=8167, 99.9=19519, 99.99=66175] 
2023-03-01 09:07:13:115 290 sec: 64226992 operations; 217917.9 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2179186, Max=195199, Min=227, Avg=1833.5, 90=2853, 99=8375, 99.9=23327, 99.99=148991] 
2023-03-01 09:07:23:115 300 sec: 66451425 operations; 222443.3 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2224427, Max=38559, Min=221, Avg=1796.08, 90=2875, 99=8879, 99.9=20831, 99.99=27327] 
2023-03-01 09:07:33:115 310 sec: 68708801 operations; 225737.6 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2257387, Max=151935, Min=209, Avg=1769.64, 90=3089, 99=10423, 99.9=20303, 99.99=59807] 
2023-03-01 09:07:43:115 320 sec: 70955641 operations; 224684 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2246833, Max=36319, Min=211, Avg=1778.19, 90=3037, 99=10335, 99.9=20047, 99.99=27903] 
2023-03-01 09:07:53:115 330 sec: 73225357 operations; 226971.6 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2269697, Max=69823, Min=224, Avg=1760.45, 90=3143, 99=11183, 99.9=23039, 99.99=33471] 
2023-03-01 09:08:03:132 340 sec: 75507913 operations; 227890.97 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2282536, Max=171263, Min=207, Avg=1750.95, 90=3153, 99=11847, 99.9=23983, 99.99=80895] 
2023-03-01 09:08:13:115 350 sec: 77775117 operations; 227083.73 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2267211, Max=48831, Min=213, Avg=1761.23, 90=3229, 99=12159, 99.9=23039, 99.99=33087] 
2023-03-01 09:08:23:115 360 sec: 80046858 operations; 227174.1 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2271744, Max=158719, Min=205, Avg=1758.95, 90=3161, 99=10847, 99.9=25231, 99.99=124607] 
2023-03-01 09:08:33:115 370 sec: 82283492 operations; 223663.4 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2236654, Max=49119, Min=210, Avg=1786.55, 90=3215, 99=11343, 99.9=22703, 99.99=31439] 
2023-03-01 09:08:43:115 380 sec: 84525828 operations; 224233.6 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2242331, Max=47391, Min=221, Avg=1781.79, 90=3051, 99=10399, 99.9=20735, 99.99=32367] 
2023-03-01 09:08:53:115 390 sec: 86749282 operations; 222345.4 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2223457, Max=40319, Min=214, Avg=1796.96, 90=2935, 99=8599, 99.9=19487, 99.99=36319] 
2023-03-01 09:09:03:115 400 sec: 88947301 operations; 219801.9 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2198010, Max=68095, Min=222, Avg=1817.65, 90=2991, 99=8903, 99.9=21119, 99.99=30847] 
2023-03-01 09:09:13:115 410 sec: 91219278 operations; 227197.7 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2271979, Max=40383, Min=215, Avg=1758.6, 90=3023, 99=9071, 99.9=18543, 99.99=31359] 
2023-03-01 09:09:23:115 420 sec: 93473123 operations; 225384.5 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2253837, Max=59615, Min=220, Avg=1772.68, 90=3047, 99=10071, 99.9=21071, 99.99=32767] 
2023-03-01 09:09:33:115 430 sec: 95736860 operations; 226373.7 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2263735, Max=37375, Min=213, Avg=1764.79, 90=3087, 99=9807, 99.9=19695, 99.99=29983] 
2023-03-01 09:09:43:115 440 sec: 98015364 operations; 227850.4 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2278497, Max=59775, Min=217, Avg=1753.51, 90=3127, 99=10447, 99.9=22319, 99.99=32575] 
2023-03-01 09:09:53:115 450 sec: 100280221 operations; 226485.7 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2264854, Max=66175, Min=227, Avg=1764.04, 90=3141, 99=11223, 99.9=22623, 99.99=35775] 
2023-03-01 09:10:03:115 460 sec: 102533558 operations; 225333.7 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2253335, Max=102079, Min=209, Avg=1772.77, 90=3091, 99=11391, 99.9=24703, 99.99=50015] 
2023-03-01 09:10:13:115 470 sec: 104798765 operations; 226520.7 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2265221, Max=46495, Min=211, Avg=1764.09, 90=3085, 99=9615, 99.9=19471, 99.99=37439] 
2023-03-01 09:10:23:115 480 sec: 107093720 operations; 229495.5 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2294954, Max=41727, Min=225, Avg=1740.81, 90=3229, 99=11247, 99.9=21311, 99.99=29199] 
2023-03-01 09:10:33:115 490 sec: 109335021 operations; 224130.1 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2241296, Max=127231, Min=208, Avg=1782.66, 90=3165, 99=11479, 99.9=20879, 99.99=113215] 
2023-03-01 09:10:43:115 500 sec: 111582689 operations; 224766.8 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2247665, Max=51487, Min=214, Avg=1777.53, 90=3075, 99=9951, 99.9=21087, 99.99=37407] 
2023-03-01 09:10:53:115 510 sec: 113847250 operations; 226456.1 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2264552, Max=42047, Min=209, Avg=1764.12, 90=3089, 99=10223, 99.9=21135, 99.99=31055] 
2023-03-01 09:11:03:115 520 sec: 116096682 operations; 224943.2 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2249445, Max=44799, Min=216, Avg=1776.2, 90=3069, 99=10047, 99.9=20255, 99.99=28495] 
2023-03-01 09:11:13:115 530 sec: 118326223 operations; 222954.1 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2229528, Max=39295, Min=227, Avg=1792.03, 90=2981, 99=9495, 99.9=17951, 99.99=25663] 
2023-03-01 09:11:23:115 540 sec: 120513463 operations; 218724 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2187251, Max=35135, Min=229, Avg=1826.72, 90=2845, 99=8063, 99.9=17375, 99.99=24287] 
2023-03-01 09:11:33:115 550 sec: 122739905 operations; 222644.2 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2226423, Max=36127, Min=245, Avg=1794.51, 90=2787, 99=7675, 99.9=17135, 99.99=26671] 
2023-03-01 09:11:43:116 560 sec: 124921372 operations; 218146.7 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2181501, Max=214015, Min=232, Avg=1831.6, 90=2831, 99=8043, 99.9=20095, 99.99=147455] 
2023-03-01 09:11:53:116 570 sec: 127121721 operations; 220034.9 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2200361, Max=54399, Min=232, Avg=1815.82, 90=2819, 99=7979, 99.9=16767, 99.99=27695] 
2023-03-01 09:12:03:116 580 sec: 129310039 operations; 218831.8 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2188300, Max=40671, Min=243, Avg=1825.82, 90=2783, 99=7219, 99.9=16639, 99.99=26303] 
2023-03-01 09:12:13:116 590 sec: 131505630 operations; 219559.1 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2195620, Max=47935, Min=237, Avg=1819.76, 90=2795, 99=7335, 99.9=17183, 99.99=37055] 
2023-03-01 09:12:23:116 600 sec: 133689859 operations; 218422.9 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2184181, Max=112255, Min=241, Avg=1829.2, 90=2775, 99=7615, 99.9=19967, 99.99=59359] 
2023-03-01 09:12:33:116 610 sec: 135859833 operations; 216997.4 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2169996, Max=79807, Min=228, Avg=1841.3, 90=2805, 99=7647, 99.9=21103, 99.99=38047] 
2023-03-01 09:12:43:116 620 sec: 138028496 operations; 216866.3 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2168662, Max=126463, Min=236, Avg=1842.33, 90=2769, 99=7551, 99.9=21663, 99.99=78527] 
2023-03-01 09:12:53:116 630 sec: 140222794 operations; 219429.8 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2194307, Max=28735, Min=235, Avg=1820.83, 90=2787, 99=7355, 99.9=15919, 99.99=20751] 
2023-03-01 09:13:03:115 640 sec: 142412675 operations; 218988.1 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2189847, Max=61855, Min=237, Avg=1824.49, 90=2793, 99=7531, 99.9=17391, 99.99=32863] 
2023-03-01 09:13:13:115 650 sec: 144606714 operations; 219403.9 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2194036, Max=37087, Min=244, Avg=1820.85, 90=2773, 99=7023, 99.9=16335, 99.99=27423] 
2023-03-01 09:13:23:115 660 sec: 146778120 operations; 217140.6 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2171409, Max=80063, Min=249, Avg=1840.22, 90=2715, 99=7191, 99.9=18655, 99.99=31311] 
2023-03-01 09:13:33:115 670 sec: 148956685 operations; 217856.5 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2178572, Max=54655, Min=246, Avg=1833.99, 90=2753, 99=7075, 99.9=17839, 99.99=27103] 
2023-03-01 09:13:43:115 680 sec: 151155441 operations; 219875.6 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2198750, Max=32927, Min=228, Avg=1817.12, 90=2757, 99=7015, 99.9=16463, 99.99=23071] 
2023-03-01 09:13:53:115 690 sec: 153336214 operations; 218077.3 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2180770, Max=35455, Min=227, Avg=1832.17, 90=2801, 99=7451, 99.9=18303, 99.99=30447] 
2023-03-01 09:14:03:115 700 sec: 155488437 operations; 215222.3 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2152234, Max=94719, Min=218, Avg=1856.42, 90=2891, 99=8047, 99.9=20607, 99.99=32895] 
2023-03-01 09:14:13:115 710 sec: 157699749 operations; 221131.2 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2211306, Max=47903, Min=216, Avg=1806.68, 90=2823, 99=7819, 99.9=18175, 99.99=37183] 
2023-03-01 09:14:23:115 720 sec: 159913520 operations; 221377.1 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2213769, Max=196991, Min=208, Avg=1804.9, 90=2993, 99=10415, 99.9=20703, 99.99=113855] 
2023-03-01 09:14:33:115 730 sec: 162143145 operations; 222962.5 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2229627, Max=85951, Min=209, Avg=1791.9, 90=3151, 99=10927, 99.9=22543, 99.99=61247] 
2023-03-01 09:14:43:115 740 sec: 164415747 operations; 227260.2 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2272595, Max=42495, Min=218, Avg=1757.69, 90=3115, 99=9807, 99.9=19631, 99.99=28735] 
2023-03-01 09:14:53:115 750 sec: 166689254 operations; 227350.7 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2273525, Max=35551, Min=218, Avg=1757.66, 90=2975, 99=9527, 99.9=18239, 99.99=25711] 
2023-03-01 09:15:03:115 760 sec: 168944581 operations; 225532.7 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2255335, Max=68607, Min=219, Avg=1771.49, 90=2989, 99=9199, 99.9=19471, 99.99=29055] 
2023-03-01 09:15:13:115 770 sec: 171188747 operations; 224416.6 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2244146, Max=44767, Min=229, Avg=1780.26, 90=3097, 99=10663, 99.9=21775, 99.99=32319] 
2023-03-01 09:15:23:115 780 sec: 173455318 operations; 226657.1 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2266578, Max=87231, Min=209, Avg=1762.7, 90=3123, 99=10783, 99.9=21071, 99.99=44095] 
2023-03-01 09:15:33:115 790 sec: 175705795 operations; 225047.7 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2250469, Max=45759, Min=228, Avg=1775.15, 90=3085, 99=9983, 99.9=19615, 99.99=28639] 
2023-03-01 09:15:43:119 800 sec: 177953423 operations; 224695.39 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2247641, Max=45727, Min=224, Avg=1776.01, 90=3021, 99=10263, 99.9=21135, 99.99=28943] 
2023-03-01 09:15:53:115 810 sec: 180199552 operations; 224680.3 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2246118, Max=32575, Min=221, Avg=1780.46, 90=2871, 99=8543, 99.9=17743, 99.99=24063] 
2023-03-01 09:16:03:115 820 sec: 182435226 operations; 223567.4 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2235667, Max=98303, Min=226, Avg=1787.04, 90=2899, 99=8911, 99.9=20239, 99.99=33567] 
2023-03-01 09:16:13:115 830 sec: 184629057 operations; 219383.1 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2193834, Max=43871, Min=219, Avg=1821.08, 90=2853, 99=8719, 99.9=19471, 99.99=38399] 
2023-03-01 09:16:23:115 840 sec: 186847013 operations; 221795.6 current ops/sec; est completion in 1 hour [INSERT: Count=2217960, Max=31151, Min=244, Avg=1801.52, 90=2759, 99=7263, 99.9=17343, 99.99=22175] 
2023-03-01 09:16:33:116 850 sec: 189058763 operations; 221175 current ops/sec; est completion in 1 hour [INSERT: Count=2211764, Max=85503, Min=224, Avg=1806.4, 90=2893, 99=8783, 99.9=19823, 99.99=41727] 
2023-03-01 09:16:43:115 860 sec: 191287350 operations; 222858.7 current ops/sec; est completion in 1 hour [INSERT: Count=2228582, Max=50591, Min=228, Avg=1792.85, 90=2891, 99=8487, 99.9=18319, 99.99=45375] 
2023-03-01 09:16:53:115 870 sec: 193547330 operations; 225998 current ops/sec; est completion in 1 hour [INSERT: Count=2259966, Max=108607, Min=225, Avg=1766.31, 90=2945, 99=8887, 99.9=17599, 99.99=31775] 
2023-03-01 09:17:03:116 880 sec: 195789398 operations; 224206.8 current ops/sec; est completion in 1 hour [INSERT: Count=2242104, Max=110719, Min=219, Avg=1783.49, 90=2941, 99=8303, 99.9=18079, 99.99=43903] 
2023-03-01 09:17:13:116 890 sec: 198001143 operations; 221174.5 current ops/sec; est completion in 1 hour [INSERT: Count=2211726, Max=41183, Min=210, Avg=1806.47, 90=2823, 99=8011, 99.9=16607, 99.99=32831] 
2023-03-01 09:17:23:115 900 sec: 200215205 operations; 221406.2 current ops/sec; est completion in 59 minutes [INSERT: Count=2214060, Max=121407, Min=212, Avg=1804.46, 90=2933, 99=8343, 99.9=18847, 99.99=61695] 
2023-03-01 09:17:33:116 910 sec: 202459047 operations; 224384.2 current ops/sec; est completion in 59 minutes [INSERT: Count=2243846, Max=106815, Min=218, Avg=1780.64, 90=2985, 99=8575, 99.9=19167, 99.99=57983] 
2023-03-01 09:17:43:116 920 sec: 204701372 operations; 224232.5 current ops/sec; est completion in 59 minutes [INSERT: Count=2242316, Max=54271, Min=219, Avg=1781.85, 90=3185, 99=10855, 99.9=22447, 99.99=33119] 
2023-03-01 09:17:53:116 930 sec: 206968654 operations; 226728.2 current ops/sec; est completion in 59 minutes [INSERT: Count=2267287, Max=36799, Min=225, Avg=1762.12, 90=3087, 99=10047, 99.9=20591, 99.99=28143] 
2023-03-01 09:18:03:115 940 sec: 209237382 operations; 226872.8 current ops/sec; est completion in 59 minutes [INSERT: Count=2268736, Max=96831, Min=219, Avg=1760.55, 90=3043, 99=9327, 99.9=20703, 99.99=66303] 
2023-03-01 09:18:13:116 950 sec: 211456951 operations; 221956.9 current ops/sec; est completion in 59 minutes [INSERT: Count=2219567, Max=55295, Min=214, Avg=1800.54, 90=2951, 99=10223, 99.9=21023, 99.99=30127] 
2023-03-01 09:18:23:115 960 sec: 213686882 operations; 222993.1 current ops/sec; est completion in 58 minutes [INSERT: Count=2229918, Max=136319, Min=215, Avg=1791.28, 90=3015, 99=10495, 99.9=23167, 99.99=78591] 
2023-03-01 09:18:33:115 970 sec: 215922845 operations; 223596.3 current ops/sec; est completion in 58 minutes [INSERT: Count=2235915, Max=86271, Min=222, Avg=1784.38, 90=3115, 99=9103, 99.9=19999, 99.99=31295] 
2023-03-01 09:18:43:115 980 sec: 218159190 operations; 223634.5 current ops/sec; est completion in 58 minutes [INSERT: Count=2236400, Max=45311, Min=215, Avg=1789.36, 90=3067, 99=9831, 99.9=20399, 99.99=35967] 
2023-03-01 09:18:53:126 990 sec: 220412101 operations; 225043.55 current ops/sec; est completion in 58 minutes [INSERT: Count=2252900, Max=42623, Min=227, Avg=1773.41, 90=3093, 99=10095, 99.9=20063, 99.99=30623] 
2023-03-01 09:19:03:115 1000 sec: 222637477 operations; 222782.66 current ops/sec; est completion in 58 minutes [INSERT: Count=2225380, Max=92863, Min=224, Avg=1795.29, 90=3111, 99=10631, 99.9=24047, 99.99=42591] 
2023-03-01 09:19:13:115 1010 sec: 224911493 operations; 227401.6 current ops/sec; est completion in 58 minutes [INSERT: Count=2274020, Max=34111, Min=222, Avg=1756.85, 90=3191, 99=9975, 99.9=21135, 99.99=27583] 
2023-03-01 09:19:23:115 1020 sec: 227158777 operations; 224728.4 current ops/sec; est completion in 57 minutes [INSERT: Count=2247274, Max=90303, Min=201, Avg=1777.83, 90=3035, 99=10591, 99.9=21727, 99.99=42143] 
2023-03-01 09:19:33:115 1030 sec: 229392016 operations; 223323.9 current ops/sec; est completion in 57 minutes [INSERT: Count=2233268, Max=213887, Min=206, Avg=1789.1, 90=3071, 99=10047, 99.9=20367, 99.99=130367] 
2023-03-01 09:19:43:115 1040 sec: 231655464 operations; 226344.8 current ops/sec; est completion in 57 minutes [INSERT: Count=2263417, Max=39711, Min=218, Avg=1765.14, 90=3021, 99=9455, 99.9=19359, 99.99=28111] 
2023-03-01 09:19:53:115 1050 sec: 233910992 operations; 225552.8 current ops/sec; est completion in 57 minutes [INSERT: Count=2255517, Max=33439, Min=215, Avg=1771.23, 90=3003, 99=8399, 99.9=18447, 99.99=25887] 
2023-03-01 09:20:03:115 1060 sec: 236146179 operations; 223518.7 current ops/sec; est completion in 57 minutes [INSERT: Count=2235197, Max=98495, Min=212, Avg=1787.41, 90=2993, 99=9191, 99.9=19199, 99.99=42751] 
2023-03-01 09:20:13:115 1070 sec: 238371178 operations; 222499.9 current ops/sec; est completion in 56 minutes [INSERT: Count=2224995, Max=35935, Min=215, Avg=1795.77, 90=3071, 99=10567, 99.9=18927, 99.99=26191] 
2023-03-01 09:20:23:115 1080 sec: 240598077 operations; 222689.9 current ops/sec; est completion in 56 minutes [INSERT: Count=2226907, Max=88191, Min=218, Avg=1794.17, 90=3091, 99=10711, 99.9=21663, 99.99=33407] 
2023-03-01 09:20:33:115 1090 sec: 242847669 operations; 224959.2 current ops/sec; est completion in 56 minutes [INSERT: Count=2249594, Max=39455, Min=219, Avg=1775.87, 90=2975, 99=9583, 99.9=18879, 99.99=26959] 
2023-03-01 09:20:43:115 1100 sec: 245097918 operations; 225024.9 current ops/sec; est completion in 56 minutes [INSERT: Count=2250241, Max=36351, Min=216, Avg=1775.59, 90=2909, 99=9111, 99.9=20255, 99.99=26511] 
2023-03-01 09:20:53:115 1110 sec: 247307564 operations; 220964.6 current ops/sec; est completion in 56 minutes [INSERT: Count=2209644, Max=48287, Min=206, Avg=1808.12, 90=2955, 99=9007, 99.9=20975, 99.99=36991] 
2023-03-01 09:21:03:115 1120 sec: 249488576 operations; 218101.2 current ops/sec; est completion in 56 minutes [INSERT: Count=2181009, Max=104511, Min=212, Avg=1831.56, 90=2781, 99=7679, 99.9=23007, 99.99=65279] 
2023-03-01 09:21:13:115 1130 sec: 251678650 operations; 219007.4 current ops/sec; est completion in 56 minutes [INSERT: Count=2190110, Max=34367, Min=241, Avg=1824.79, 90=2797, 99=7895, 99.9=16687, 99.99=21407] 
2023-03-01 09:21:23:115 1140 sec: 253879619 operations; 220096.9 current ops/sec; est completion in 55 minutes [INSERT: Count=2200971, Max=35007, Min=247, Avg=1815.3, 90=2805, 99=8271, 99.9=18015, 99.99=26527] 
2023-03-01 09:21:33:115 1150 sec: 256067790 operations; 218817.1 current ops/sec; est completion in 55 minutes [INSERT: Count=2188164, Max=103551, Min=246, Avg=1825.88, 90=2821, 99=8943, 99.9=18687, 99.99=45215] 
2023-03-01 09:21:43:115 1160 sec: 258299837 operations; 223204.7 current ops/sec; est completion in 55 minutes [INSERT: Count=2232041, Max=33055, Min=229, Avg=1789.9, 90=2821, 99=7515, 99.9=15623, 99.99=21423] 
2023-03-01 09:21:53:116 1170 sec: 260501627 operations; 220179 current ops/sec; est completion in 55 minutes [INSERT: Count=2201785, Max=96767, Min=226, Avg=1814.72, 90=2817, 99=7475, 99.9=17615, 99.99=30655] 
2023-03-01 09:22:03:115 1180 sec: 262704977 operations; 220335 current ops/sec; est completion in 55 minutes [INSERT: Count=2203361, Max=117439, Min=236, Avg=1813.36, 90=2775, 99=7647, 99.9=19215, 99.99=71359] 
2023-03-01 09:22:13:115 1190 sec: 264896929 operations; 219195.2 current ops/sec; est completion in 55 minutes [INSERT: Count=2191941, Max=65375, Min=231, Avg=1822.73, 90=2815, 99=7371, 99.9=18863, 99.99=59519] 
2023-03-01 09:22:23:115 1200 sec: 267062200 operations; 216527.1 current ops/sec; est completion in 54 minutes [INSERT: Count=2165292, Max=128255, Min=241, Avg=1845.24, 90=2709, 99=6923, 99.9=18255, 99.99=108991] 
2023-03-01 09:22:33:115 1210 sec: 269244232 operations; 218203.2 current ops/sec; est completion in 54 minutes [INSERT: Count=2182039, Max=113919, Min=239, Avg=1831.1, 90=2731, 99=6863, 99.9=18047, 99.99=33087] 
2023-03-01 09:22:43:115 1220 sec: 271460319 operations; 221608.7 current ops/sec; est completion in 54 minutes [INSERT: Count=2216069, Max=31471, Min=246, Avg=1802.91, 90=2743, 99=6827, 99.9=16199, 99.99=22431] 
2023-03-01 09:22:53:115 1230 sec: 273649295 operations; 218897.6 current ops/sec; est completion in 54 minutes [INSERT: Count=2188977, Max=32335, Min=234, Avg=1825.31, 90=2759, 99=7159, 99.9=15367, 99.99=26367] 
2023-03-01 09:23:03:115 1240 sec: 275818912 operations; 216961.7 current ops/sec; est completion in 54 minutes [INSERT: Count=2169600, Max=160767, Min=245, Avg=1841.59, 90=2729, 99=7107, 99.9=16751, 99.99=71807] 
2023-03-01 09:23:13:116 1250 sec: 278016375 operations; 219746.3 current ops/sec; est completion in 54 minutes [INSERT: Count=2197442, Max=33727, Min=226, Avg=1818.02, 90=2745, 99=7051, 99.9=17103, 99.99=26895] 
2023-03-01 09:23:23:115 1260 sec: 280195935 operations; 217956 current ops/sec; est completion in 53 minutes [INSERT: Count=2179589, Max=178943, Min=220, Avg=1833.24, 90=2749, 99=7611, 99.9=18239, 99.99=115711] 
2023-03-01 09:23:33:116 1270 sec: 282371018 operations; 217508.3 current ops/sec; est completion in 53 minutes [INSERT: Count=2175074, Max=188415, Min=227, Avg=1837.07, 90=2745, 99=7311, 99.9=16591, 99.99=121855] 
2023-03-01 09:23:43:116 1280 sec: 284555380 operations; 218436.2 current ops/sec; est completion in 53 minutes [INSERT: Count=2184388, Max=39967, Min=231, Avg=1829.13, 90=2735, 99=7547, 99.9=17967, 99.99=29103] 
2023-03-01 09:23:53:115 1290 sec: 286748667 operations; 219328.7 current ops/sec; est completion in 53 minutes [INSERT: Count=2193270, Max=44255, Min=239, Avg=1821.66, 90=2773, 99=7391, 99.9=16279, 99.99=27711] 
2023-03-01 09:24:03:115 1300 sec: 288891949 operations; 214328.2 current ops/sec; est completion in 53 minutes [INSERT: Count=2143273, Max=229887, Min=223, Avg=1864.21, 90=2699, 99=7571, 99.9=18687, 99.99=189183] 
2023-03-01 09:24:13:115 1310 sec: 291069744 operations; 217779.5 current ops/sec; est completion in 53 minutes [INSERT: Count=2177778, Max=30799, Min=252, Avg=1834.48, 90=2693, 99=7475, 99.9=17327, 99.99=25343] 
2023-03-01 09:24:23:115 1320 sec: 293251665 operations; 218192.1 current ops/sec; est completion in 53 minutes [INSERT: Count=2181925, Max=69311, Min=243, Avg=1831.31, 90=2719, 99=7427, 99.9=16767, 99.99=26527] 
2023-03-01 09:24:33:115 1330 sec: 295469243 operations; 221757.8 current ops/sec; est completion in 52 minutes [INSERT: Count=2217579, Max=29663, Min=231, Avg=1801.74, 90=2763, 99=6883, 99.9=15391, 99.99=22047] 
2023-03-01 09:24:43:115 1340 sec: 297677477 operations; 220823.4 current ops/sec; est completion in 52 minutes [INSERT: Count=2208232, Max=50399, Min=238, Avg=1809.32, 90=2759, 99=7183, 99.9=15367, 99.99=25711] 
2023-03-01 09:24:53:115 1350 sec: 299860245 operations; 218276.8 current ops/sec; est completion in 52 minutes [INSERT: Count=2182754, Max=39199, Min=234, Avg=1830.17, 90=2763, 99=7319, 99.9=20495, 99.99=28287] 
2023-03-01 09:25:03:115 1360 sec: 302050100 operations; 218985.5 current ops/sec; est completion in 52 minutes [INSERT: Count=2189860, Max=39391, Min=243, Avg=1824.81, 90=2751, 99=7271, 99.9=15671, 99.99=31743] 
2023-03-01 09:25:13:115 1370 sec: 304244988 operations; 219488.8 current ops/sec; est completion in 52 minutes [INSERT: Count=2194892, Max=26383, Min=238, Avg=1820.39, 90=2741, 99=6675, 99.9=17455, 99.99=20735] 
2023-03-01 09:25:23:115 1380 sec: 306390579 operations; 214559.1 current ops/sec; est completion in 52 minutes [INSERT: Count=2145595, Max=246399, Min=233, Avg=1862.21, 90=2697, 99=7395, 99.9=19007, 99.99=159743] 
2023-03-01 09:25:33:115 1390 sec: 308553084 operations; 216250.5 current ops/sec; est completion in 51 minutes [INSERT: Count=2162506, Max=133631, Min=239, Avg=1847.64, 90=2721, 99=7479, 99.9=17215, 99.99=38815] 
2023-03-01 09:25:43:115 1400 sec: 310746708 operations; 219362.4 current ops/sec; est completion in 51 minutes [INSERT: Count=2193620, Max=31151, Min=236, Avg=1821.36, 90=2759, 99=7119, 99.9=16863, 99.99=25183] 
2023-03-01 09:25:53:115 1410 sec: 312941598 operations; 219489 current ops/sec; est completion in 51 minutes [INSERT: Count=2194892, Max=98943, Min=234, Avg=1820.01, 90=2743, 99=7271, 99.9=17119, 99.99=41503] 
2023-03-01 09:26:03:115 1420 sec: 315112663 operations; 217106.5 current ops/sec; est completion in 51 minutes [INSERT: Count=2171072, Max=230143, Min=215, Avg=1840.7, 90=2705, 99=7219, 99.9=17503, 99.99=152319] 
2023-03-01 09:26:13:115 1430 sec: 317312931 operations; 220026.8 current ops/sec; est completion in 51 minutes [INSERT: Count=2200261, Max=37119, Min=240, Avg=1815.51, 90=2739, 99=7043, 99.9=16783, 99.99=25807] 
2023-03-01 09:26:23:115 1440 sec: 319499124 operations; 218619.3 current ops/sec; est completion in 51 minutes [INSERT: Count=2186192, Max=184575, Min=230, Avg=1827.95, 90=2733, 99=7215, 99.9=16071, 99.99=109375] 
2023-03-01 09:26:33:115 1450 sec: 321692218 operations; 219309.4 current ops/sec; est completion in 50 minutes [INSERT: Count=2193091, Max=27983, Min=245, Avg=1821.82, 90=2741, 99=6683, 99.9=14879, 99.99=18559] 
2023-03-01 09:26:43:115 1460 sec: 323848834 operations; 215661.6 current ops/sec; est completion in 50 minutes [INSERT: Count=2156630, Max=33055, Min=251, Avg=1852.69, 90=2751, 99=7135, 99.9=19311, 99.99=26015] 
2023-03-01 09:26:53:115 1470 sec: 326054341 operations; 220550.7 current ops/sec; est completion in 50 minutes [INSERT: Count=2205498, Max=35871, Min=240, Avg=1811.6, 90=2745, 99=7195, 99.9=15679, 99.99=25679] 
2023-03-01 09:27:03:115 1480 sec: 328232273 operations; 217793.2 current ops/sec; est completion in 50 minutes [INSERT: Count=2177931, Max=144767, Min=203, Avg=1834.53, 90=2723, 99=6995, 99.9=16719, 99.99=106495] 
2023-03-01 09:27:13:115 1490 sec: 330427009 operations; 219473.6 current ops/sec; est completion in 50 minutes [INSERT: Count=2194737, Max=52959, Min=245, Avg=1820.48, 90=2711, 99=7191, 99.9=17727, 99.99=30799] 
2023-03-01 09:27:23:115 1500 sec: 332613908 operations; 218689.9 current ops/sec; est completion in 50 minutes [INSERT: Count=2186904, Max=101119, Min=233, Avg=1827.03, 90=2753, 99=7443, 99.9=15951, 99.99=38879] 
2023-03-01 09:27:33:115 1510 sec: 334795325 operations; 218141.7 current ops/sec; est completion in 50 minutes [INSERT: Count=2181416, Max=42559, Min=209, Avg=1831.61, 90=2783, 99=8035, 99.9=20223, 99.99=33951] 
2023-03-01 09:27:43:115 1520 sec: 337023422 operations; 222809.7 current ops/sec; est completion in 49 minutes [INSERT: Count=2228092, Max=78463, Min=221, Avg=1793.2, 90=2797, 99=7543, 99.9=16895, 99.99=25935] 
2023-03-01 09:27:53:115 1530 sec: 339230311 operations; 220688.9 current ops/sec; est completion in 49 minutes [INSERT: Count=2206891, Max=43935, Min=222, Avg=1810.44, 90=2847, 99=7979, 99.9=17983, 99.99=26255] 
2023-03-01 09:28:03:115 1540 sec: 341359492 operations; 212918.1 current ops/sec; est completion in 49 minutes [INSERT: Count=2129183, Max=204671, Min=208, Avg=1876.55, 90=2811, 99=11239, 99.9=20479, 99.99=160767] 
2023-03-01 09:28:13:121 1550 sec: 343591791 operations; 223096.04 current ops/sec; est completion in 49 minutes [INSERT: Count=2232291, Max=35743, Min=210, Avg=1788.79, 90=2809, 99=7947, 99.9=17407, 99.99=29375] 
2023-03-01 09:28:23:115 1560 sec: 345779514 operations; 218903.64 current ops/sec; est completion in 49 minutes [INSERT: Count=2187728, Max=209151, Min=210, Avg=1827.36, 90=2837, 99=7735, 99.9=17599, 99.99=161791] 
2023-03-01 09:28:33:115 1570 sec: 348010885 operations; 223137.1 current ops/sec; est completion in 49 minutes [INSERT: Count=2231371, Max=41791, Min=218, Avg=1790.6, 90=2809, 99=7687, 99.9=17343, 99.99=29167] 
2023-03-01 09:28:43:115 1580 sec: 350229551 operations; 221866.6 current ops/sec; est completion in 48 minutes [INSERT: Count=2218672, Max=46847, Min=216, Avg=1800.83, 90=2885, 99=8863, 99.9=19039, 99.99=30303] 
2023-03-01 09:28:53:115 1590 sec: 352444441 operations; 221489 current ops/sec; est completion in 48 minutes [INSERT: Count=2214890, Max=47903, Min=210, Avg=1803.89, 90=2955, 99=9535, 99.9=21711, 99.99=35135] 
2023-03-01 09:29:03:115 1600 sec: 354636633 operations; 219219.2 current ops/sec; est completion in 48 minutes [INSERT: Count=2192187, Max=177663, Min=205, Avg=1822.52, 90=2967, 99=10551, 99.9=20991, 99.99=137727] 
2023-03-01 09:29:13:115 1610 sec: 356872953 operations; 223632 current ops/sec; est completion in 48 minutes [INSERT: Count=2236321, Max=89279, Min=209, Avg=1786.39, 90=3003, 99=9631, 99.9=20655, 99.99=37567] 
2023-03-01 09:29:23:115 1620 sec: 359058264 operations; 218531.1 current ops/sec; est completion in 48 minutes [INSERT: Count=2185311, Max=138111, Min=217, Avg=1828.35, 90=3019, 99=10687, 99.9=23375, 99.99=77951] 
2023-03-01 09:29:33:115 1630 sec: 361312814 operations; 225455 current ops/sec; est completion in 48 minutes [INSERT: Count=2254554, Max=36639, Min=218, Avg=1772.25, 90=2917, 99=9127, 99.9=21359, 99.99=28831] 
2023-03-01 09:29:43:115 1640 sec: 363557551 operations; 224473.7 current ops/sec; est completion in 47 minutes [INSERT: Count=2244731, Max=40447, Min=212, Avg=1779.94, 90=2997, 99=9319, 99.9=17807, 99.99=26111] 
2023-03-01 09:29:53:115 1650 sec: 365790150 operations; 223259.9 current ops/sec; est completion in 47 minutes [INSERT: Count=2232609, Max=113791, Min=220, Avg=1789.53, 90=2887, 99=9719, 99.9=23055, 99.99=95167] 
2023-03-01 09:30:03:115 1660 sec: 368007394 operations; 221724.4 current ops/sec; est completion in 47 minutes [INSERT: Count=2217250, Max=100543, Min=211, Avg=1801.79, 90=2935, 99=9375, 99.9=22687, 99.99=64415] 
2023-03-01 09:30:13:115 1670 sec: 370235905 operations; 222851.1 current ops/sec; est completion in 47 minutes [INSERT: Count=2228493, Max=40383, Min=221, Avg=1793.01, 90=2879, 99=8495, 99.9=18495, 99.99=27983] 
2023-03-01 09:30:23:115 1680 sec: 372472433 operations; 223652.8 current ops/sec; est completion in 47 minutes [INSERT: Count=2236526, Max=38527, Min=223, Avg=1786.46, 90=2883, 99=8927, 99.9=18239, 99.99=25567] 
2023-03-01 09:30:33:115 1690 sec: 374695397 operations; 222296.4 current ops/sec; est completion in 47 minutes [INSERT: Count=2222976, Max=42879, Min=217, Avg=1797.3, 90=2879, 99=8751, 99.9=20335, 99.99=28079] 
2023-03-01 09:30:43:115 1700 sec: 376947397 operations; 225200 current ops/sec; est completion in 46 minutes [INSERT: Count=2252010, Max=41247, Min=216, Avg=1774.11, 90=2879, 99=7887, 99.9=16639, 99.99=25615] 
2023-03-01 09:30:53:115 1710 sec: 379149089 operations; 220169.2 current ops/sec; est completion in 46 minutes [INSERT: Count=2201671, Max=95295, Min=224, Avg=1814.61, 90=2805, 99=7843, 99.9=17439, 99.99=38207] 
2023-03-01 09:31:03:115 1720 sec: 381342184 operations; 219309.5 current ops/sec; est completion in 46 minutes [INSERT: Count=2193100, Max=141311, Min=223, Avg=1821.91, 90=2777, 99=7559, 99.9=16991, 99.99=64287] 
2023-03-01 09:31:13:115 1730 sec: 383515947 operations; 217376.3 current ops/sec; est completion in 46 minutes [INSERT: Count=2173764, Max=45855, Min=234, Avg=1838.05, 90=2823, 99=8335, 99.9=22399, 99.99=30191] 
2023-03-01 09:31:23:115 1740 sec: 385706487 operations; 219054 current ops/sec; est completion in 46 minutes [INSERT: Count=2190547, Max=108863, Min=244, Avg=1823.9, 90=2773, 99=7863, 99.9=18335, 99.99=33823] 
2023-03-01 09:31:33:115 1750 sec: 387914794 operations; 220830.7 current ops/sec; est completion in 46 minutes [INSERT: Count=2208316, Max=42815, Min=244, Avg=1809.3, 90=2757, 99=7815, 99.9=18223, 99.99=25887] 
2023-03-01 09:31:43:115 1760 sec: 390135441 operations; 222064.7 current ops/sec; est completion in 45 minutes [INSERT: Count=2220637, Max=36159, Min=237, Avg=1799.21, 90=2801, 99=7835, 99.9=16279, 99.99=23951] 
2023-03-01 09:31:53:115 1770 sec: 392348035 operations; 221259.4 current ops/sec; est completion in 45 minutes [INSERT: Count=2212594, Max=42399, Min=240, Avg=1805.72, 90=2793, 99=7519, 99.9=16847, 99.99=24079] 
2023-03-01 09:32:03:115 1780 sec: 394544574 operations; 219653.9 current ops/sec; est completion in 45 minutes [INSERT: Count=2196541, Max=159359, Min=234, Avg=1818.99, 90=2785, 99=7335, 99.9=18319, 99.99=93119] 
2023-03-01 09:32:13:116 1790 sec: 396728562 operations; 218398.8 current ops/sec; est completion in 45 minutes [INSERT: Count=2183990, Max=41503, Min=219, Avg=1829.22, 90=2837, 99=8519, 99.9=22223, 99.99=29583] 
2023-03-01 09:32:23:115 1800 sec: 398958252 operations; 222969 current ops/sec; est completion in 45 minutes [INSERT: Count=2229677, Max=97279, Min=220, Avg=1792.1, 90=2881, 99=8031, 99.9=16831, 99.99=30015] 
2023-03-01 09:32:33:115 1810 sec: 401181508 operations; 222325.6 current ops/sec; est completion in 45 minutes [INSERT: Count=2223275, Max=38239, Min=209, Avg=1797.03, 90=2889, 99=8223, 99.9=17455, 99.99=28175] 
2023-03-01 09:32:43:115 1820 sec: 403383277 operations; 220176.9 current ops/sec; est completion in 44 minutes [INSERT: Count=2201779, Max=36159, Min=219, Avg=1814.65, 90=2791, 99=7327, 99.9=17839, 99.99=30383] 
2023-03-01 09:32:53:115 1830 sec: 405554063 operations; 217078.6 current ops/sec; est completion in 44 minutes [INSERT: Count=2170768, Max=134527, Min=211, Avg=1840.66, 90=2751, 99=7835, 99.9=18735, 99.99=79615] 
2023-03-01 09:33:03:115 1840 sec: 407776977 operations; 222291.4 current ops/sec; est completion in 44 minutes [INSERT: Count=2222918, Max=151039, Min=206, Avg=1797.36, 90=2787, 99=7243, 99.9=18143, 99.99=92479] 
2023-03-01 09:33:13:116 1850 sec: 410001689 operations; 222471.2 current ops/sec; est completion in 44 minutes [INSERT: Count=2224718, Max=41503, Min=220, Avg=1795.99, 90=2813, 99=7723, 99.9=17983, 99.99=34975] 
2023-03-01 09:33:23:115 1860 sec: 412208616 operations; 220692.7 current ops/sec; est completion in 44 minutes [INSERT: Count=2206931, Max=164735, Min=206, Avg=1810.35, 90=2817, 99=7755, 99.9=18303, 99.99=100927] 
2023-03-01 09:33:33:115 1870 sec: 414420444 operations; 221182.8 current ops/sec; est completion in 44 minutes [INSERT: Count=2211803, Max=44671, Min=222, Avg=1805.3, 90=2817, 99=8151, 99.9=19183, 99.99=35039] 
2023-03-01 09:33:43:115 1880 sec: 416653823 operations; 223337.9 current ops/sec; est completion in 43 minutes [INSERT: Count=2233402, Max=39423, Min=224, Avg=1789.87, 90=2965, 99=8751, 99.9=19375, 99.99=28303] 
2023-03-01 09:33:53:115 1890 sec: 418904956 operations; 225113.3 current ops/sec; est completion in 43 minutes [INSERT: Count=2251108, Max=103167, Min=222, Avg=1774.82, 90=2935, 99=9135, 99.9=20959, 99.99=49535] 
2023-03-01 09:34:03:115 1900 sec: 421125850 operations; 222089.4 current ops/sec; est completion in 43 minutes [INSERT: Count=2220899, Max=204671, Min=208, Avg=1799.01, 90=3023, 99=9455, 99.9=21295, 99.99=124031] 
2023-03-01 09:34:13:115 1910 sec: 423380838 operations; 225498.8 current ops/sec; est completion in 43 minutes [INSERT: Count=2254994, Max=36351, Min=219, Avg=1771.77, 90=2967, 99=9103, 99.9=18847, 99.99=27343] 
2023-03-01 09:34:23:115 1920 sec: 425633972 operations; 225313.4 current ops/sec; est completion in 43 minutes [INSERT: Count=2253142, Max=94783, Min=214, Avg=1773.32, 90=2955, 99=8831, 99.9=19279, 99.99=33823] 
2023-03-01 09:34:33:115 1930 sec: 427871542 operations; 223757 current ops/sec; est completion in 43 minutes [INSERT: Count=2237559, Max=30495, Min=224, Avg=1785.6, 90=2829, 99=7863, 99.9=16623, 99.99=21231] 
2023-03-01 09:34:43:115 1940 sec: 430074299 operations; 220275.7 current ops/sec; est completion in 42 minutes [INSERT: Count=2202750, Max=44159, Min=226, Avg=1813.78, 90=2839, 99=8503, 99.9=19855, 99.99=32079] 
2023-03-01 09:34:53:115 1950 sec: 432313984 operations; 223968.5 current ops/sec; est completion in 42 minutes [INSERT: Count=2239682, Max=77119, Min=211, Avg=1783.95, 90=2887, 99=8591, 99.9=20527, 99.99=44703] 
2023-03-01 09:35:03:115 1960 sec: 434561111 operations; 224712.7 current ops/sec; est completion in 42 minutes [INSERT: Count=2247136, Max=50847, Min=228, Avg=1777.94, 90=2959, 99=9167, 99.9=21855, 99.99=29743] 
2023-03-01 09:35:13:115 1970 sec: 436832999 operations; 227188.8 current ops/sec; est completion in 42 minutes [INSERT: Count=2271879, Max=32495, Min=222, Avg=1758.56, 90=2991, 99=9303, 99.9=18399, 99.99=25519] 
2023-03-01 09:35:23:115 1980 sec: 439058085 operations; 222508.6 current ops/sec; est completion in 42 minutes [INSERT: Count=2225087, Max=38367, Min=217, Avg=1795.61, 90=3007, 99=9159, 99.9=20175, 99.99=32095] 
2023-03-01 09:35:33:115 1990 sec: 441313393 operations; 225530.8 current ops/sec; est completion in 42 minutes [INSERT: Count=2255312, Max=43103, Min=212, Avg=1771.48, 90=2965, 99=8271, 99.9=19711, 99.99=26767] 
2023-03-01 09:35:43:115 2000 sec: 443556092 operations; 224269.9 current ops/sec; est completion in 41 minutes [INSERT: Count=2242688, Max=37983, Min=204, Avg=1781.21, 90=3017, 99=8743, 99.9=16991, 99.99=26767] 
2023-03-01 09:35:53:115 2010 sec: 445776023 operations; 221993.1 current ops/sec; est completion in 41 minutes [INSERT: Count=2219936, Max=195711, Min=203, Avg=1800.17, 90=2985, 99=9423, 99.9=24383, 99.99=123839] 
2023-03-01 09:36:03:115 2020 sec: 447998730 operations; 222270.7 current ops/sec; est completion in 41 minutes [INSERT: Count=2222716, Max=120575, Min=222, Avg=1797.51, 90=3003, 99=10167, 99.9=21087, 99.99=41535] 
2023-03-01 09:36:13:115 2030 sec: 450239749 operations; 224101.9 current ops/sec; est completion in 41 minutes [INSERT: Count=2241012, Max=49279, Min=214, Avg=1782.81, 90=3049, 99=9919, 99.9=22623, 99.99=31071] 
2023-03-01 09:36:23:115 2040 sec: 452463503 operations; 222375.4 current ops/sec; est completion in 41 minutes [INSERT: Count=2223752, Max=97343, Min=222, Avg=1796.68, 90=2961, 99=9263, 99.9=20527, 99.99=89215] 
2023-03-01 09:36:33:115 2050 sec: 454712113 operations; 224861 current ops/sec; est completion in 40 minutes [INSERT: Count=2248627, Max=47679, Min=214, Avg=1776.68, 90=2893, 99=7891, 99.9=17599, 99.99=33503] 
2023-03-01 09:36:43:115 2060 sec: 456925344 operations; 221323.1 current ops/sec; est completion in 40 minutes [INSERT: Count=2213210, Max=36479, Min=216, Avg=1805.37, 90=2987, 99=9647, 99.9=20783, 99.99=28831] 
2023-03-01 09:36:53:115 2070 sec: 459162163 operations; 223681.9 current ops/sec; est completion in 40 minutes [INSERT: Count=2236821, Max=89407, Min=217, Avg=1786.06, 90=3063, 99=10119, 99.9=19519, 99.99=31919] 
2023-03-01 09:37:03:115 2080 sec: 461418840 operations; 225667.7 current ops/sec; est completion in 40 minutes [INSERT: Count=2256680, Max=107647, Min=226, Avg=1770.55, 90=2981, 99=8927, 99.9=20431, 99.99=38559] 
2023-03-01 09:37:13:115 2090 sec: 463648168 operations; 222932.8 current ops/sec; est completion in 40 minutes [INSERT: Count=2229329, Max=53823, Min=226, Avg=1792.12, 90=3005, 99=10215, 99.9=21855, 99.99=31871] 
2023-03-01 09:37:23:115 2100 sec: 465907523 operations; 225935.5 current ops/sec; est completion in 40 minutes [INSERT: Count=2259354, Max=83007, Min=218, Avg=1768.26, 90=2955, 99=9735, 99.9=19359, 99.99=30991] 
2023-03-01 09:37:33:115 2110 sec: 468172927 operations; 226540.4 current ops/sec; est completion in 39 minutes [INSERT: Count=2265404, Max=41055, Min=222, Avg=1763.71, 90=3071, 99=10119, 99.9=19823, 99.99=29663] 
2023-03-01 09:37:43:115 2120 sec: 470452480 operations; 227955.3 current ops/sec; est completion in 39 minutes [INSERT: Count=2279558, Max=44767, Min=213, Avg=1752.68, 90=3085, 99=10327, 99.9=21263, 99.99=28687] 
2023-03-01 09:37:53:115 2130 sec: 472701613 operations; 224913.3 current ops/sec; est completion in 39 minutes [INSERT: Count=2249136, Max=42911, Min=220, Avg=1776.02, 90=3069, 99=8943, 99.9=19407, 99.99=26975] 
2023-03-01 09:38:03:115 2140 sec: 474948474 operations; 224686.1 current ops/sec; est completion in 39 minutes [INSERT: Count=2246853, Max=96639, Min=220, Avg=1778.52, 90=2919, 99=7891, 99.9=17951, 99.99=48767] 
2023-03-01 09:38:13:115 2150 sec: 477179485 operations; 223101.1 current ops/sec; est completion in 39 minutes [INSERT: Count=2231011, Max=40607, Min=225, Avg=1790.84, 90=2865, 99=8231, 99.9=17439, 99.99=27007] 
2023-03-01 09:38:23:115 2160 sec: 479406585 operations; 222710 current ops/sec; est completion in 39 minutes [INSERT: Count=2227111, Max=82367, Min=213, Avg=1792.76, 90=2929, 99=8439, 99.9=19055, 99.99=33631] 
2023-03-01 09:38:33:115 2170 sec: 481630012 operations; 222342.7 current ops/sec; est completion in 38 minutes [INSERT: Count=2223447, Max=52159, Min=221, Avg=1798.15, 90=2983, 99=9023, 99.9=23135, 99.99=37215] 
2023-03-01 09:38:43:115 2180 sec: 483863542 operations; 223353 current ops/sec; est completion in 38 minutes [INSERT: Count=2233501, Max=39199, Min=214, Avg=1788.49, 90=2991, 99=9431, 99.9=20495, 99.99=28831] 
2023-03-01 09:38:53:115 2190 sec: 486120448 operations; 225690.6 current ops/sec; est completion in 38 minutes [INSERT: Count=2256924, Max=111871, Min=226, Avg=1770.55, 90=2993, 99=9255, 99.9=19263, 99.99=54143] 
2023-03-01 09:39:03:115 2200 sec: 488348816 operations; 222836.8 current ops/sec; est completion in 38 minutes [INSERT: Count=2228368, Max=91199, Min=222, Avg=1793.03, 90=2979, 99=9447, 99.9=20815, 99.99=32255] 
2023-03-01 09:39:13:115 2210 sec: 490574265 operations; 222544.9 current ops/sec; est completion in 38 minutes [INSERT: Count=2225431, Max=40607, Min=210, Avg=1795.29, 90=2903, 99=8887, 99.9=18687, 99.99=25679] 
2023-03-01 09:39:23:115 2220 sec: 492787420 operations; 221315.5 current ops/sec; est completion in 38 minutes [INSERT: Count=2213167, Max=45119, Min=226, Avg=1805.3, 90=2891, 99=8487, 99.9=19551, 99.99=28399] 
2023-03-01 09:39:33:115 2230 sec: 495033331 operations; 224591.1 current ops/sec; est completion in 37 minutes [INSERT: Count=2245922, Max=37247, Min=226, Avg=1778.93, 90=2875, 99=8919, 99.9=19935, 99.99=26735] 
2023-03-01 09:39:43:115 2240 sec: 497284484 operations; 225115.3 current ops/sec; est completion in 37 minutes [INSERT: Count=2251140, Max=35295, Min=193, Avg=1774.61, 90=2949, 99=9175, 99.9=19439, 99.99=27871] 
2023-03-01 09:39:53:116 2250 sec: 499526679 operations; 224219.5 current ops/sec; est completion in 37 minutes [INSERT: Count=2242212, Max=157567, Min=219, Avg=1781.89, 90=2917, 99=8999, 99.9=19823, 99.99=104767] 
2023-03-01 09:40:03:115 2260 sec: 501739868 operations; 221318.9 current ops/sec; est completion in 37 minutes [INSERT: Count=2213203, Max=92863, Min=217, Avg=1805.31, 90=2973, 99=9391, 99.9=20959, 99.99=34047] 
2023-03-01 09:40:13:115 2270 sec: 503975837 operations; 223596.9 current ops/sec; est completion in 37 minutes [INSERT: Count=2235940, Max=43295, Min=226, Avg=1786.93, 90=2905, 99=8239, 99.9=17839, 99.99=37311] 
2023-03-01 09:40:23:115 2280 sec: 506184861 operations; 220902.4 current ops/sec; est completion in 37 minutes [INSERT: Count=2209019, Max=46015, Min=221, Avg=1808.72, 90=2825, 99=8063, 99.9=18895, 99.99=29503] 
2023-03-01 09:40:33:115 2290 sec: 508359456 operations; 217459.5 current ops/sec; est completion in 36 minutes [INSERT: Count=2174601, Max=35423, Min=222, Avg=1837.37, 90=2763, 99=7643, 99.9=18463, 99.99=25663] 
2023-03-01 09:40:43:115 2300 sec: 510537247 operations; 217779.1 current ops/sec; est completion in 36 minutes [INSERT: Count=2177797, Max=94655, Min=237, Avg=1834.63, 90=2743, 99=7067, 99.9=17791, 99.99=86399] 
2023-03-01 09:40:53:115 2310 sec: 512718479 operations; 218123.2 current ops/sec; est completion in 36 minutes [INSERT: Count=2181216, Max=62367, Min=242, Avg=1831.59, 90=2795, 99=7931, 99.9=19599, 99.99=55103] 
2023-03-01 09:41:03:115 2320 sec: 514932011 operations; 221353.2 current ops/sec; est completion in 36 minutes [INSERT: Count=2213567, Max=114495, Min=230, Avg=1805, 90=2795, 99=8043, 99.9=16863, 99.99=67263] 
2023-03-01 09:41:13:115 2330 sec: 517139103 operations; 220709.2 current ops/sec; est completion in 36 minutes [INSERT: Count=2207074, Max=43295, Min=240, Avg=1810.36, 90=2815, 99=7807, 99.9=17983, 99.99=25439] 
2023-03-01 09:41:23:115 2340 sec: 519353095 operations; 221399.2 current ops/sec; est completion in 36 minutes [INSERT: Count=2213974, Max=114239, Min=233, Avg=1804.58, 90=2763, 99=7559, 99.9=18239, 99.99=61535] 
2023-03-01 09:41:33:115 2350 sec: 521551276 operations; 219818.1 current ops/sec; est completion in 35 minutes [INSERT: Count=2198200, Max=42047, Min=243, Avg=1817.61, 90=2799, 99=7535, 99.9=17567, 99.99=34911] 
2023-03-01 09:41:43:115 2360 sec: 523748160 operations; 219688.4 current ops/sec; est completion in 35 minutes [INSERT: Count=2196871, Max=34559, Min=240, Avg=1818.62, 90=2781, 99=7363, 99.9=17247, 99.99=25087] 
2023-03-01 09:41:53:115 2370 sec: 525901530 operations; 215337 current ops/sec; est completion in 35 minutes [INSERT: Count=2153365, Max=184703, Min=225, Avg=1855.47, 90=2785, 99=8039, 99.9=24303, 99.99=120959] 
2023-03-01 09:42:03:115 2380 sec: 528116648 operations; 221511.8 current ops/sec; est completion in 35 minutes [INSERT: Count=2215115, Max=174719, Min=239, Avg=1803.67, 90=2791, 99=7191, 99.9=17423, 99.99=112511] 
2023-03-01 09:42:13:115 2390 sec: 530309012 operations; 219236.4 current ops/sec; est completion in 35 minutes [INSERT: Count=2192373, Max=45247, Min=234, Avg=1822.46, 90=2807, 99=7847, 99.9=22847, 99.99=38847] 
2023-03-01 09:42:23:115 2400 sec: 532508996 operations; 219998.4 current ops/sec; est completion in 35 minutes [INSERT: Count=2200003, Max=40831, Min=234, Avg=1816.14, 90=2801, 99=7851, 99.9=18655, 99.99=27231] 
2023-03-01 09:42:33:115 2410 sec: 534687472 operations; 217847.6 current ops/sec; est completion in 34 minutes [INSERT: Count=2178453, Max=51423, Min=251, Avg=1834.02, 90=2817, 99=7759, 99.9=18159, 99.99=46687] 
2023-03-01 09:42:43:115 2420 sec: 536892214 operations; 220474.2 current ops/sec; est completion in 34 minutes [INSERT: Count=2204730, Max=46559, Min=245, Avg=1812.16, 90=2767, 99=7799, 99.9=19711, 99.99=30479] 
2023-03-01 09:42:53:115 2430 sec: 539099483 operations; 220726.9 current ops/sec; est completion in 34 minutes [INSERT: Count=2207280, Max=142207, Min=220, Avg=1809.51, 90=2783, 99=7599, 99.9=17631, 99.99=71423] 
2023-03-01 09:43:03:115 2440 sec: 541283776 operations; 218429.3 current ops/sec; est completion in 34 minutes [INSERT: Count=2184297, Max=156287, Min=223, Avg=1829.82, 90=2723, 99=7551, 99.9=18111, 99.99=89727] 
2023-03-01 09:43:13:115 2450 sec: 543479440 operations; 219566.4 current ops/sec; est completion in 34 minutes [INSERT: Count=2195659, Max=60639, Min=237, Avg=1819.76, 90=2693, 99=6947, 99.9=17855, 99.99=28895] 
2023-03-01 09:43:23:115 2460 sec: 545658559 operations; 217911.9 current ops/sec; est completion in 34 minutes [INSERT: Count=2179118, Max=180223, Min=243, Avg=1833.47, 90=2719, 99=7311, 99.9=17231, 99.99=93375] 
2023-03-01 09:43:33:115 2470 sec: 547855551 operations; 219699.2 current ops/sec; est completion in 33 minutes [INSERT: Count=2196999, Max=44991, Min=224, Avg=1818.64, 90=2701, 99=6967, 99.9=18991, 99.99=37375] 
2023-03-01 09:43:43:115 2480 sec: 550058504 operations; 220295.3 current ops/sec; est completion in 33 minutes [INSERT: Count=2202952, Max=45855, Min=250, Avg=1813.7, 90=2665, 99=7131, 99.9=19759, 99.99=26175] 
2023-03-01 09:43:53:115 2490 sec: 552250612 operations; 219210.8 current ops/sec; est completion in 33 minutes [INSERT: Count=2192093, Max=115071, Min=235, Avg=1822.68, 90=2693, 99=7099, 99.9=19215, 99.99=62623] 
2023-03-01 09:44:03:115 2500 sec: 554460172 operations; 220956 current ops/sec; est completion in 33 minutes [INSERT: Count=2209566, Max=108351, Min=232, Avg=1808.23, 90=2735, 99=7279, 99.9=17423, 99.99=55775] 
2023-03-01 09:44:13:125 2510 sec: 556649626 operations; 218726.67 current ops/sec; est completion in 33 minutes [INSERT: Count=2189460, Max=70847, Min=233, Avg=1824.63, 90=2747, 99=7495, 99.9=20815, 99.99=64639] 
2023-03-01 09:44:23:115 2520 sec: 558844929 operations; 219750.05 current ops/sec; est completion in 33 minutes [INSERT: Count=2195298, Max=98431, Min=240, Avg=1820.01, 90=2699, 99=7683, 99.9=18623, 99.99=37471] 
2023-03-01 09:44:33:115 2530 sec: 561063487 operations; 221855.8 current ops/sec; est completion in 33 minutes [INSERT: Count=2218559, Max=31023, Min=239, Avg=1800.93, 90=2735, 99=6759, 99.9=15311, 99.99=22527] 
2023-03-01 09:44:43:115 2540 sec: 563259625 operations; 219613.8 current ops/sec; est completion in 32 minutes [INSERT: Count=2196133, Max=42527, Min=228, Avg=1819.25, 90=2743, 99=6923, 99.9=19263, 99.99=30191] 
2023-03-01 09:44:53:115 2550 sec: 565444986 operations; 218536.1 current ops/sec; est completion in 32 minutes [INSERT: Count=2185357, Max=138623, Min=235, Avg=1828.37, 90=2685, 99=7335, 99.9=18127, 99.99=83647] 
2023-03-01 09:45:03:115 2560 sec: 567625504 operations; 218051.8 current ops/sec; est completion in 32 minutes [INSERT: Count=2180522, Max=129663, Min=213, Avg=1832.39, 90=2675, 99=6675, 99.9=16943, 99.99=88383] 
2023-03-01 09:45:13:115 2570 sec: 569840759 operations; 221525.5 current ops/sec; est completion in 32 minutes [INSERT: Count=2215273, Max=42911, Min=238, Avg=1803.53, 90=2713, 99=6643, 99.9=15111, 99.99=36735] 
2023-03-01 09:45:23:115 2580 sec: 572033861 operations; 219310.2 current ops/sec; est completion in 32 minutes [INSERT: Count=2193092, Max=34911, Min=233, Avg=1821.9, 90=2743, 99=7703, 99.9=18063, 99.99=27695] 
2023-03-01 09:45:33:115 2590 sec: 574248309 operations; 221444.8 current ops/sec; est completion in 32 minutes [INSERT: Count=2214454, Max=26063, Min=240, Avg=1804.27, 90=2733, 99=6919, 99.9=16479, 99.99=21279] 
2023-03-01 09:45:43:115 2600 sec: 576468957 operations; 222064.8 current ops/sec; est completion in 31 minutes [INSERT: Count=2220641, Max=44127, Min=236, Avg=1799.22, 90=2709, 99=6575, 99.9=15967, 99.99=26079] 
2023-03-01 09:45:53:115 2610 sec: 578632202 operations; 216324.5 current ops/sec; est completion in 31 minutes [INSERT: Count=2163258, Max=154495, Min=231, Avg=1846.99, 90=2715, 99=7111, 99.9=19663, 99.99=97663] 
2023-03-01 09:46:03:115 2620 sec: 580813830 operations; 218162.8 current ops/sec; est completion in 31 minutes [INSERT: Count=2181621, Max=204031, Min=230, Avg=1831.41, 90=2701, 99=6935, 99.9=19487, 99.99=128767] 
2023-03-01 09:46:13:115 2630 sec: 583033015 operations; 221918.5 current ops/sec; est completion in 31 minutes [INSERT: Count=2219183, Max=42815, Min=253, Avg=1800.44, 90=2655, 99=6335, 99.9=15799, 99.99=25327] 
2023-03-01 09:46:23:115 2640 sec: 585239334 operations; 220631.9 current ops/sec; est completion in 31 minutes [INSERT: Count=2206322, Max=73855, Min=235, Avg=1810.84, 90=2725, 99=6767, 99.9=19503, 99.99=36543] 
2023-03-01 09:46:33:115 2650 sec: 587455953 operations; 221661.9 current ops/sec; est completion in 31 minutes [INSERT: Count=2216621, Max=36223, Min=244, Avg=1802.55, 90=2729, 99=7247, 99.9=16495, 99.99=30047] 
2023-03-01 09:46:43:115 2660 sec: 589670275 operations; 221432.2 current ops/sec; est completion in 30 minutes [INSERT: Count=2214323, Max=41503, Min=235, Avg=1804.32, 90=2723, 99=6975, 99.9=17615, 99.99=25743] 
2023-03-01 09:46:53:115 2670 sec: 591863801 operations; 219352.6 current ops/sec; est completion in 30 minutes [INSERT: Count=2193512, Max=169599, Min=216, Avg=1821.55, 90=2717, 99=7039, 99.9=16607, 99.99=89087] 
2023-03-01 09:47:03:115 2680 sec: 594066056 operations; 220225.5 current ops/sec; est completion in 30 minutes [INSERT: Count=2202263, Max=56127, Min=240, Avg=1814.25, 90=2711, 99=6867, 99.9=15919, 99.99=21775] 
2023-03-01 09:47:13:115 2690 sec: 596269275 operations; 220321.9 current ops/sec; est completion in 30 minutes [INSERT: Count=2203225, Max=38815, Min=235, Avg=1813.48, 90=2701, 99=6999, 99.9=17647, 99.99=33343] 
2023-03-01 09:47:23:115 2700 sec: 598458360 operations; 218908.5 current ops/sec; est completion in 30 minutes [INSERT: Count=2189086, Max=52671, Min=238, Avg=1825.24, 90=2699, 99=6931, 99.9=18191, 99.99=36255] 
2023-03-01 09:47:33:115 2710 sec: 600650710 operations; 219235 current ops/sec; est completion in 30 minutes [INSERT: Count=2192355, Max=37343, Min=245, Avg=1822.45, 90=2731, 99=7215, 99.9=16495, 99.99=21663] 
2023-03-01 09:47:43:115 2720 sec: 602852581 operations; 220187.1 current ops/sec; est completion in 29 minutes [INSERT: Count=2201854, Max=47103, Min=234, Avg=1814.59, 90=2727, 99=7287, 99.9=18511, 99.99=27727] 
2023-03-01 09:47:53:115 2730 sec: 605057234 operations; 220465.3 current ops/sec; est completion in 29 minutes [INSERT: Count=2204654, Max=126527, Min=224, Avg=1812.24, 90=2695, 99=7003, 99.9=18143, 99.99=90367] 
2023-03-01 09:48:03:115 2740 sec: 607262923 operations; 220568.9 current ops/sec; est completion in 29 minutes [INSERT: Count=2205691, Max=26431, Min=234, Avg=1811.49, 90=2749, 99=6987, 99.9=15071, 99.99=22415] 
2023-03-01 09:48:13:115 2750 sec: 609448408 operations; 218548.5 current ops/sec; est completion in 29 minutes [INSERT: Count=2185470, Max=38975, Min=242, Avg=1828.21, 90=2709, 99=6987, 99.9=19007, 99.99=28271] 
2023-03-01 09:48:23:115 2760 sec: 611576562 operations; 212815.4 current ops/sec; est completion in 29 minutes [INSERT: Count=2128167, Max=292351, Min=238, Avg=1877.54, 90=2737, 99=7331, 99.9=25775, 99.99=247551] 
2023-03-01 09:48:33:115 2770 sec: 613776230 operations; 219966.8 current ops/sec; est completion in 29 minutes [INSERT: Count=2199679, Max=41599, Min=249, Avg=1816.33, 90=2701, 99=6991, 99.9=17135, 99.99=23919] 
2023-03-01 09:48:43:115 2780 sec: 615986190 operations; 220996 current ops/sec; est completion in 28 minutes [INSERT: Count=2209951, Max=34847, Min=228, Avg=1807.97, 90=2727, 99=7051, 99.9=16367, 99.99=27503] 
2023-03-01 09:48:53:115 2790 sec: 618172369 operations; 218617.9 current ops/sec; est completion in 28 minutes [INSERT: Count=2186177, Max=158335, Min=232, Avg=1827.6, 90=2685, 99=7043, 99.9=17407, 99.99=119871] 
2023-03-01 09:49:03:115 2800 sec: 620339054 operations; 216668.5 current ops/sec; est completion in 28 minutes [INSERT: Count=2166688, Max=294911, Min=211, Avg=1844.02, 90=2733, 99=7523, 99.9=16511, 99.99=205183] 
2023-03-01 09:49:13:115 2810 sec: 622523048 operations; 218399.4 current ops/sec; est completion in 28 minutes [INSERT: Count=2184005, Max=40415, Min=237, Avg=1829.51, 90=2731, 99=7571, 99.9=17343, 99.99=25935] 
2023-03-01 09:49:23:115 2820 sec: 624708834 operations; 218578.6 current ops/sec; est completion in 28 minutes [INSERT: Count=2185780, Max=104511, Min=230, Avg=1827.88, 90=2721, 99=7271, 99.9=17999, 99.99=33439] 
2023-03-01 09:49:33:115 2830 sec: 626909573 operations; 220073.9 current ops/sec; est completion in 28 minutes [INSERT: Count=2200732, Max=41183, Min=234, Avg=1815.56, 90=2713, 99=7407, 99.9=17711, 99.99=26831] 
2023-03-01 09:49:43:115 2840 sec: 629112950 operations; 220337.7 current ops/sec; est completion in 27 minutes [INSERT: Count=2203376, Max=40255, Min=243, Avg=1813.32, 90=2669, 99=7115, 99.9=17615, 99.99=31631] 
2023-03-01 09:49:53:115 2850 sec: 631291130 operations; 217818 current ops/sec; est completion in 27 minutes [INSERT: Count=2178197, Max=127615, Min=239, Avg=1834.34, 90=2691, 99=7323, 99.9=20703, 99.99=92479] 
2023-03-01 09:50:03:115 2860 sec: 633498468 operations; 220733.8 current ops/sec; est completion in 27 minutes [INSERT: Count=2207329, Max=135295, Min=221, Avg=1810.05, 90=2711, 99=7295, 99.9=18639, 99.99=61567] 
2023-03-01 09:50:13:115 2870 sec: 635697495 operations; 219902.7 current ops/sec; est completion in 27 minutes [INSERT: Count=2199033, Max=49279, Min=227, Avg=1816.98, 90=2707, 99=7363, 99.9=17647, 99.99=27391] 
2023-03-01 09:50:23:115 2880 sec: 637884870 operations; 218737.5 current ops/sec; est completion in 27 minutes [INSERT: Count=2187372, Max=102527, Min=232, Avg=1826.59, 90=2707, 99=7043, 99.9=16959, 99.99=90815] 
2023-03-01 09:50:33:115 2890 sec: 640052769 operations; 216789.9 current ops/sec; est completion in 27 minutes [INSERT: Count=2167884, Max=58687, Min=238, Avg=1842.97, 90=2699, 99=7707, 99.9=18575, 99.99=45567] 
2023-03-01 09:50:43:115 2900 sec: 642254741 operations; 220197.2 current ops/sec; est completion in 26 minutes [INSERT: Count=2201984, Max=42783, Min=242, Avg=1814.5, 90=2695, 99=7227, 99.9=17039, 99.99=25647] 
2023-03-01 09:50:53:115 2910 sec: 644439620 operations; 218487.9 current ops/sec; est completion in 26 minutes [INSERT: Count=2184892, Max=186495, Min=224, Avg=1828.76, 90=2677, 99=7063, 99.9=20943, 99.99=105215] 
2023-03-01 09:51:03:115 2920 sec: 646656262 operations; 221664.2 current ops/sec; est completion in 26 minutes [INSERT: Count=2216624, Max=114239, Min=250, Avg=1802.45, 90=2709, 99=6767, 99.9=16399, 99.99=33823] 
2023-03-01 09:51:13:115 2930 sec: 648848797 operations; 219253.5 current ops/sec; est completion in 26 minutes [INSERT: Count=2192561, Max=36447, Min=235, Avg=1822.34, 90=2721, 99=7683, 99.9=18287, 99.99=25999] 
2023-03-01 09:51:23:115 2940 sec: 651079151 operations; 223035.4 current ops/sec; est completion in 26 minutes [INSERT: Count=2230319, Max=37151, Min=240, Avg=1791.44, 90=2713, 99=6883, 99.9=15263, 99.99=22943] 
2023-03-01 09:51:33:115 2950 sec: 653290424 operations; 221127.3 current ops/sec; est completion in 26 minutes [INSERT: Count=2211264, Max=24607, Min=235, Avg=1806.75, 90=2691, 99=6759, 99.9=15911, 99.99=19775] 
2023-03-01 09:51:43:115 2960 sec: 655502666 operations; 221224.2 current ops/sec; est completion in 25 minutes [INSERT: Count=2212248, Max=45119, Min=239, Avg=1806.16, 90=2695, 99=6783, 99.9=15111, 99.99=24159] 
2023-03-01 09:51:53:115 2970 sec: 657678008 operations; 217534.2 current ops/sec; est completion in 25 minutes [INSERT: Count=2175342, Max=282623, Min=237, Avg=1836.7, 90=2721, 99=6851, 99.9=18895, 99.99=204031] 
2023-03-01 09:52:03:115 2980 sec: 659869498 operations; 219149 current ops/sec; est completion in 25 minutes [INSERT: Count=2191480, Max=173311, Min=228, Avg=1823.18, 90=2713, 99=6887, 99.9=18223, 99.99=107519] 
2023-03-01 09:52:13:115 2990 sec: 662073401 operations; 220390.3 current ops/sec; est completion in 25 minutes [INSERT: Count=2203914, Max=39935, Min=246, Avg=1812.9, 90=2695, 99=7267, 99.9=18159, 99.99=24415] 
2023-03-01 09:52:23:115 3000 sec: 664265940 operations; 219253.9 current ops/sec; est completion in 25 minutes [INSERT: Count=2192533, Max=114559, Min=243, Avg=1822.32, 90=2723, 99=7415, 99.9=20399, 99.99=40639] 
2023-03-01 09:52:33:115 3010 sec: 666494336 operations; 222839.6 current ops/sec; est completion in 25 minutes [INSERT: Count=2228392, Max=50591, Min=236, Avg=1792.95, 90=2731, 99=6735, 99.9=17423, 99.99=37439] 
2023-03-01 09:52:43:115 3020 sec: 668691733 operations; 219739.7 current ops/sec; est completion in 24 minutes [INSERT: Count=2197404, Max=43423, Min=240, Avg=1818.24, 90=2705, 99=7371, 99.9=18623, 99.99=27087] 
2023-03-01 09:52:53:115 3030 sec: 670884144 operations; 219241.1 current ops/sec; est completion in 24 minutes [INSERT: Count=2192417, Max=109119, Min=233, Avg=1822.47, 90=2713, 99=6867, 99.9=16071, 99.99=48095] 
2023-03-01 09:53:03:115 3040 sec: 673077711 operations; 219356.7 current ops/sec; est completion in 24 minutes [INSERT: Count=2193564, Max=45087, Min=239, Avg=1821.4, 90=2713, 99=7315, 99.9=16671, 99.99=33311] 
2023-03-01 09:53:13:115 3050 sec: 675274930 operations; 219721.9 current ops/sec; est completion in 24 minutes [INSERT: Count=2197219, Max=39999, Min=237, Avg=1818.41, 90=2733, 99=7107, 99.9=18607, 99.99=26911] 
2023-03-01 09:53:23:115 3060 sec: 677447932 operations; 217300.2 current ops/sec; est completion in 24 minutes [INSERT: Count=2173004, Max=288255, Min=223, Avg=1838.77, 90=2679, 99=7083, 99.9=18815, 99.99=217087] 
2023-03-01 09:53:33:115 3070 sec: 679645324 operations; 219739.2 current ops/sec; est completion in 24 minutes [INSERT: Count=2197396, Max=57311, Min=245, Avg=1818.27, 90=2709, 99=6855, 99.9=18847, 99.99=26079] 
2023-03-01 09:53:43:115 3080 sec: 681863664 operations; 221834 current ops/sec; est completion in 23 minutes [INSERT: Count=2218339, Max=41791, Min=243, Avg=1801.11, 90=2711, 99=7131, 99.9=15511, 99.99=28335] 
2023-03-01 09:53:53:115 3090 sec: 684015387 operations; 215172.3 current ops/sec; est completion in 23 minutes [INSERT: Count=2151717, Max=260991, Min=213, Avg=1856.9, 90=2681, 99=7091, 99.9=18671, 99.99=208383] 
2023-03-01 09:54:03:115 3100 sec: 686210775 operations; 219538.8 current ops/sec; est completion in 23 minutes [INSERT: Count=2195384, Max=128447, Min=219, Avg=1819.92, 90=2701, 99=6779, 99.9=15743, 99.99=79935] 
2023-03-01 09:54:13:115 3110 sec: 688395554 operations; 218477.9 current ops/sec; est completion in 23 minutes [INSERT: Count=2184781, Max=49503, Min=236, Avg=1828.78, 90=2711, 99=7207, 99.9=20175, 99.99=29567] 
2023-03-01 09:54:23:115 3120 sec: 690597548 operations; 220199.4 current ops/sec; est completion in 23 minutes [INSERT: Count=2201990, Max=35199, Min=238, Avg=1814.48, 90=2743, 99=7095, 99.9=16103, 99.99=26031] 
2023-03-01 09:54:33:115 3130 sec: 692812782 operations; 221523.4 current ops/sec; est completion in 23 minutes [INSERT: Count=2215230, Max=29183, Min=229, Avg=1803.61, 90=2731, 99=7099, 99.9=16367, 99.99=25935] 
2023-03-01 09:54:43:115 3140 sec: 695002687 operations; 218990.5 current ops/sec; est completion in 22 minutes [INSERT: Count=2189919, Max=39071, Min=228, Avg=1824.48, 90=2697, 99=6991, 99.9=19119, 99.99=27455] 
2023-03-01 09:54:53:115 3150 sec: 697200383 operations; 219769.6 current ops/sec; est completion in 22 minutes [INSERT: Count=2197701, Max=121023, Min=232, Avg=1818.12, 90=2715, 99=7263, 99.9=17727, 99.99=70591] 
2023-03-01 09:55:03:115 3160 sec: 699379537 operations; 217915.4 current ops/sec; est completion in 22 minutes [INSERT: Count=2179143, Max=75839, Min=247, Avg=1833.46, 90=2717, 99=7303, 99.9=17023, 99.99=69439] 
2023-03-01 09:55:13:115 3170 sec: 701578983 operations; 219944.6 current ops/sec; est completion in 22 minutes [INSERT: Count=2199447, Max=53119, Min=238, Avg=1816.58, 90=2723, 99=6987, 99.9=17247, 99.99=26095] 
2023-03-01 09:55:23:115 3180 sec: 703767088 operations; 218810.5 current ops/sec; est completion in 22 minutes [INSERT: Count=2188102, Max=179199, Min=239, Avg=1825.92, 90=2687, 99=6995, 99.9=17183, 99.99=104959] 
2023-03-01 09:55:33:115 3190 sec: 705951941 operations; 218485.3 current ops/sec; est completion in 22 minutes [INSERT: Count=2184855, Max=30095, Min=225, Avg=1828.67, 90=2747, 99=7019, 99.9=17039, 99.99=22655] 
2023-03-01 09:55:43:115 3200 sec: 708147932 operations; 219599.1 current ops/sec; est completion in 21 minutes [INSERT: Count=2195985, Max=49919, Min=232, Avg=1819.47, 90=2759, 99=7263, 99.9=17455, 99.99=27439] 
2023-03-01 09:55:53:115 3210 sec: 710315221 operations; 216728.9 current ops/sec; est completion in 21 minutes [INSERT: Count=2167308, Max=231039, Min=225, Avg=1843.58, 90=2755, 99=7203, 99.9=18783, 99.99=155391] 
2023-03-01 09:56:03:115 3220 sec: 712496144 operations; 218092.3 current ops/sec; est completion in 21 minutes [INSERT: Count=2180919, Max=213887, Min=222, Avg=1832, 90=2717, 99=7431, 99.9=20879, 99.99=126143] 
2023-03-01 09:56:13:115 3230 sec: 714684711 operations; 218856.7 current ops/sec; est completion in 21 minutes [INSERT: Count=2188572, Max=38943, Min=233, Avg=1825.67, 90=2713, 99=7215, 99.9=17743, 99.99=28063] 
2023-03-01 09:56:23:115 3240 sec: 716871316 operations; 218660.5 current ops/sec; est completion in 21 minutes [INSERT: Count=2186594, Max=150143, Min=228, Avg=1827.26, 90=2709, 99=7459, 99.9=20079, 99.99=59455] 
2023-03-01 09:56:33:115 3250 sec: 719062553 operations; 219123.7 current ops/sec; est completion in 21 minutes [INSERT: Count=2191230, Max=48991, Min=231, Avg=1823.4, 90=2731, 99=7367, 99.9=25359, 99.99=39775] 
2023-03-01 09:56:43:115 3260 sec: 721272559 operations; 221000.6 current ops/sec; est completion in 21 minutes [INSERT: Count=2210004, Max=44447, Min=232, Avg=1807.88, 90=2735, 99=7111, 99.9=21407, 99.99=35711] 
2023-03-01 09:56:53:115 3270 sec: 723459141 operations; 218658.2 current ops/sec; est completion in 20 minutes [INSERT: Count=2186586, Max=260863, Min=209, Avg=1827.32, 90=2719, 99=7119, 99.9=17839, 99.99=177791] 
2023-03-01 09:57:03:115 3280 sec: 725623547 operations; 216440.6 current ops/sec; est completion in 20 minutes [INSERT: Count=2164406, Max=220415, Min=221, Avg=1846.04, 90=2715, 99=7015, 99.9=23135, 99.99=163711] 
2023-03-01 09:57:13:115 3290 sec: 727807833 operations; 218428.6 current ops/sec; est completion in 20 minutes [INSERT: Count=2184278, Max=38719, Min=251, Avg=1829.21, 90=2701, 99=6863, 99.9=18175, 99.99=32415] 
2023-03-01 09:57:23:115 3300 sec: 729998423 operations; 219059 current ops/sec; est completion in 20 minutes [INSERT: Count=2190599, Max=81471, Min=243, Avg=1823.93, 90=2701, 99=7247, 99.9=20143, 99.99=35775] 
2023-03-01 09:57:33:115 3310 sec: 732215554 operations; 221713.1 current ops/sec; est completion in 20 minutes [INSERT: Count=2217131, Max=34463, Min=233, Avg=1802.05, 90=2699, 99=7003, 99.9=17039, 99.99=24895] 
2023-03-01 09:57:43:115 3320 sec: 734442462 operations; 222690.8 current ops/sec; est completion in 20 minutes [INSERT: Count=2226908, Max=33343, Min=239, Avg=1794.18, 90=2727, 99=6959, 99.9=15087, 99.99=22575] 
2023-03-01 09:57:53:115 3330 sec: 736642821 operations; 220035.9 current ops/sec; est completion in 19 minutes [INSERT: Count=2200359, Max=131455, Min=234, Avg=1815.83, 90=2697, 99=7547, 99.9=18943, 99.99=104895] 
2023-03-01 09:58:03:115 3340 sec: 738836363 operations; 219354.2 current ops/sec; est completion in 19 minutes [INSERT: Count=2193535, Max=161919, Min=209, Avg=1821.36, 90=2801, 99=7743, 99.9=18495, 99.99=95743] 
2023-03-01 09:58:13:115 3350 sec: 741044242 operations; 220787.9 current ops/sec; est completion in 19 minutes [INSERT: Count=2207886, Max=41375, Min=247, Avg=1809.58, 90=2717, 99=7231, 99.9=19167, 99.99=37663] 
2023-03-01 09:58:23:115 3360 sec: 743266536 operations; 222229.4 current ops/sec; est completion in 19 minutes [INSERT: Count=2222294, Max=152959, Min=249, Avg=1798.02, 90=2715, 99=6947, 99.9=17215, 99.99=63263] 
2023-03-01 09:58:33:115 3370 sec: 745489645 operations; 222310.9 current ops/sec; est completion in 19 minutes [INSERT: Count=2223110, Max=34943, Min=225, Avg=1797.23, 90=2733, 99=7511, 99.9=16071, 99.99=21999] 
2023-03-01 09:58:43:115 3380 sec: 747709894 operations; 222024.9 current ops/sec; est completion in 19 minutes [INSERT: Count=2220249, Max=42207, Min=227, Avg=1799.52, 90=2763, 99=7827, 99.9=16639, 99.99=29871] 
2023-03-01 09:58:53:115 3390 sec: 749918442 operations; 220854.8 current ops/sec; est completion in 18 minutes [INSERT: Count=2208547, Max=134527, Min=227, Avg=1808.34, 90=2737, 99=7743, 99.9=18527, 99.99=85311] 
2023-03-01 09:59:03:115 3400 sec: 752130181 operations; 221173.9 current ops/sec; est completion in 18 minutes [INSERT: Count=2211743, Max=144127, Min=209, Avg=1807.2, 90=2819, 99=8131, 99.9=18031, 99.99=87423] 
2023-03-01 09:59:13:115 3410 sec: 754358946 operations; 222876.5 current ops/sec; est completion in 18 minutes [INSERT: Count=2228760, Max=42143, Min=223, Avg=1792.63, 90=2873, 99=8431, 99.9=20095, 99.99=34975] 
2023-03-01 09:59:23:115 3420 sec: 756553023 operations; 219407.7 current ops/sec; est completion in 18 minutes [INSERT: Count=2194087, Max=43935, Min=215, Avg=1820.96, 90=2903, 99=9263, 99.9=24175, 99.99=31999] 
2023-03-01 09:59:33:115 3430 sec: 758793244 operations; 224022.1 current ops/sec; est completion in 18 minutes [INSERT: Count=2240218, Max=38591, Min=229, Avg=1783.41, 90=2799, 99=7931, 99.9=17711, 99.99=24559] 
2023-03-01 09:59:43:115 3440 sec: 761049912 operations; 225666.8 current ops/sec; est completion in 18 minutes [INSERT: Count=2256663, Max=44319, Min=225, Avg=1770.58, 90=2771, 99=7307, 99.9=17023, 99.99=25663] 
2023-03-01 09:59:53:115 3450 sec: 763236992 operations; 218708 current ops/sec; est completion in 17 minutes [INSERT: Count=2187077, Max=221567, Min=208, Avg=1826.85, 90=2773, 99=8131, 99.9=22047, 99.99=154239] 
2023-03-01 10:00:03:115 3460 sec: 765430495 operations; 219350.3 current ops/sec; est completion in 17 minutes [INSERT: Count=2193499, Max=154367, Min=225, Avg=1821.44, 90=2751, 99=7683, 99.9=18111, 99.99=63487] 
2023-03-01 10:00:13:115 3470 sec: 767649322 operations; 221882.7 current ops/sec; est completion in 17 minutes [INSERT: Count=2218827, Max=33311, Min=213, Avg=1800.74, 90=2743, 99=8171, 99.9=18175, 99.99=26799] 
2023-03-01 10:00:23:115 3480 sec: 769874238 operations; 222491.6 current ops/sec; est completion in 17 minutes [INSERT: Count=2224918, Max=95935, Min=244, Avg=1795.73, 90=2757, 99=7699, 99.9=17247, 99.99=31055] 
2023-03-01 10:00:33:115 3490 sec: 772080628 operations; 220639 current ops/sec; est completion in 17 minutes [INSERT: Count=2206395, Max=31887, Min=234, Avg=1810.52, 90=2803, 99=8007, 99.9=17695, 99.99=25679] 
2023-03-01 10:00:43:115 3500 sec: 774286381 operations; 220575.3 current ops/sec; est completion in 17 minutes [INSERT: Count=2205754, Max=41567, Min=243, Avg=1811.69, 90=2799, 99=7847, 99.9=18399, 99.99=27951] 
2023-03-01 10:00:53:115 3510 sec: 776480403 operations; 219402.2 current ops/sec; est completion in 16 minutes [INSERT: Count=2194021, Max=82559, Min=244, Avg=1821.1, 90=2803, 99=7771, 99.9=19615, 99.99=31023] 
2023-03-01 10:01:03:115 3520 sec: 778685892 operations; 220548.9 current ops/sec; est completion in 16 minutes [INSERT: Count=2205488, Max=146559, Min=244, Avg=1811.55, 90=2743, 99=7523, 99.9=20399, 99.99=71103] 
2023-03-01 10:01:13:115 3530 sec: 780856862 operations; 217097 current ops/sec; est completion in 16 minutes [INSERT: Count=2170974, Max=48607, Min=242, Avg=1840.49, 90=2729, 99=6911, 99.9=19199, 99.99=35135] 
2023-03-01 10:01:23:115 3540 sec: 783037738 operations; 218087.6 current ops/sec; est completion in 16 minutes [INSERT: Count=2180875, Max=125567, Min=230, Avg=1832.07, 90=2733, 99=6627, 99.9=15111, 99.99=59263] 
2023-03-01 10:01:33:115 3550 sec: 785206332 operations; 216859.4 current ops/sec; est completion in 16 minutes [INSERT: Count=2168594, Max=47711, Min=234, Avg=1842.44, 90=2763, 99=7359, 99.9=18447, 99.99=37087] 
2023-03-01 10:01:43:115 3560 sec: 787394080 operations; 218774.8 current ops/sec; est completion in 16 minutes [INSERT: Count=2187746, Max=50623, Min=250, Avg=1826.06, 90=2771, 99=7967, 99.9=19487, 99.99=35359] 
2023-03-01 10:01:53:115 3570 sec: 789578718 operations; 218463.8 current ops/sec; est completion in 15 minutes [INSERT: Count=2184642, Max=212095, Min=240, Avg=1829.11, 90=2747, 99=7567, 99.9=18751, 99.99=134527] 
2023-03-01 10:02:03:115 3580 sec: 791783192 operations; 220447.4 current ops/sec; est completion in 15 minutes [INSERT: Count=2204466, Max=56511, Min=240, Avg=1812.42, 90=2795, 99=7511, 99.9=15415, 99.99=21791] 
2023-03-01 10:02:13:115 3590 sec: 793975077 operations; 219188.5 current ops/sec; est completion in 15 minutes [INSERT: Count=2191886, Max=45535, Min=245, Avg=1822.89, 90=2813, 99=7771, 99.9=17743, 99.99=28847] 
2023-03-01 10:02:23:115 3600 sec: 796165049 operations; 218997.2 current ops/sec; est completion in 15 minutes [INSERT: Count=2189977, Max=145663, Min=242, Avg=1824.39, 90=2721, 99=7435, 99.9=18815, 99.99=101183] 
2023-03-01 10:02:33:115 3610 sec: 798345414 operations; 218036.5 current ops/sec; est completion in 15 minutes [INSERT: Count=2180369, Max=50975, Min=235, Avg=1832.49, 90=2773, 99=7323, 99.9=19023, 99.99=35647] 
2023-03-01 10:02:43:115 3620 sec: 800544639 operations; 219922.5 current ops/sec; est completion in 15 minutes [INSERT: Count=2199221, Max=51871, Min=232, Avg=1816.7, 90=2799, 99=7379, 99.9=16847, 99.99=26863] 
2023-03-01 10:02:53:115 3630 sec: 802725209 operations; 218057 current ops/sec; est completion in 14 minutes [INSERT: Count=2180575, Max=52383, Min=231, Avg=1832.32, 90=2823, 99=8279, 99.9=22799, 99.99=34303] 
2023-03-01 10:03:03:115 3640 sec: 804924039 operations; 219883 current ops/sec; est completion in 14 minutes [INSERT: Count=2198829, Max=213759, Min=237, Avg=1817.06, 90=2773, 99=7599, 99.9=16959, 99.99=144383] 
2023-03-01 10:03:13:115 3650 sec: 807135842 operations; 221180.3 current ops/sec; est completion in 14 minutes [INSERT: Count=2211777, Max=37823, Min=251, Avg=1806.09, 90=2765, 99=7643, 99.9=18415, 99.99=26847] 
2023-03-01 10:03:23:115 3660 sec: 809335258 operations; 219941.6 current ops/sec; est completion in 14 minutes [INSERT: Count=2199441, Max=43935, Min=249, Avg=1816.46, 90=2823, 99=7599, 99.9=18447, 99.99=32079] 
2023-03-01 10:03:33:115 3670 sec: 811536749 operations; 220149.1 current ops/sec; est completion in 14 minutes [INSERT: Count=2201483, Max=32831, Min=246, Avg=1815.27, 90=2797, 99=7699, 99.9=16511, 99.99=23343] 
2023-03-01 10:03:43:115 3680 sec: 813727176 operations; 219042.7 current ops/sec; est completion in 14 minutes [INSERT: Count=2190431, Max=40383, Min=248, Avg=1824.01, 90=2751, 99=7099, 99.9=17631, 99.99=27695] 
2023-03-01 10:03:53:115 3690 sec: 815918802 operations; 219162.6 current ops/sec; est completion in 13 minutes [INSERT: Count=2191628, Max=138111, Min=232, Avg=1823.15, 90=2725, 99=6691, 99.9=16895, 99.99=77247] 
2023-03-01 10:04:03:115 3700 sec: 818092905 operations; 217410.3 current ops/sec; est completion in 13 minutes [INSERT: Count=2174099, Max=95487, Min=243, Avg=1837.32, 90=2705, 99=6743, 99.9=17583, 99.99=35071] 
2023-03-01 10:04:13:115 3710 sec: 820282288 operations; 218938.3 current ops/sec; est completion in 13 minutes [INSERT: Count=2189387, Max=47391, Min=234, Avg=1825.35, 90=2749, 99=7095, 99.9=18223, 99.99=29087] 
2023-03-01 10:04:23:115 3720 sec: 822474289 operations; 219200.1 current ops/sec; est completion in 13 minutes [INSERT: Count=2192000, Max=163711, Min=226, Avg=1822.79, 90=2745, 99=7083, 99.9=18399, 99.99=83903] 
2023-03-01 10:04:33:115 3730 sec: 824676927 operations; 220263.8 current ops/sec; est completion in 13 minutes [INSERT: Count=2202638, Max=93631, Min=222, Avg=1813.95, 90=2769, 99=6955, 99.9=17695, 99.99=88831] 
2023-03-01 10:04:43:115 3740 sec: 826898028 operations; 222110.1 current ops/sec; est completion in 13 minutes [INSERT: Count=2221102, Max=33919, Min=228, Avg=1798.86, 90=2807, 99=6879, 99.9=15543, 99.99=22847] 
2023-03-01 10:04:53:115 3750 sec: 829095335 operations; 219730.7 current ops/sec; est completion in 12 minutes [INSERT: Count=2197302, Max=145023, Min=213, Avg=1818.36, 90=2777, 99=7223, 99.9=18639, 99.99=109951] 
2023-03-01 10:05:03:115 3760 sec: 831296719 operations; 220138.4 current ops/sec; est completion in 12 minutes [INSERT: Count=2201390, Max=106239, Min=223, Avg=1814.86, 90=2853, 99=7175, 99.9=18111, 99.99=29791] 
2023-03-01 10:05:13:115 3770 sec: 833480568 operations; 218384.9 current ops/sec; est completion in 12 minutes [INSERT: Count=2183844, Max=214783, Min=214, Avg=1829.68, 90=2795, 99=7279, 99.9=17183, 99.99=120511] 
2023-03-01 10:05:23:115 3780 sec: 835650204 operations; 216963.6 current ops/sec; est completion in 12 minutes [INSERT: Count=2169639, Max=192511, Min=209, Avg=1841.55, 90=2827, 99=8351, 99.9=19519, 99.99=100991] 
2023-03-01 10:05:33:115 3790 sec: 837847318 operations; 219711.4 current ops/sec; est completion in 12 minutes [INSERT: Count=2197108, Max=32831, Min=223, Avg=1818.48, 90=2841, 99=8079, 99.9=17727, 99.99=26959] 
2023-03-01 10:05:43:115 3800 sec: 840052033 operations; 220471.5 current ops/sec; est completion in 12 minutes [INSERT: Count=2204720, Max=44383, Min=221, Avg=1812.25, 90=2825, 99=7331, 99.9=16463, 99.99=30959] 
2023-03-01 10:05:53:115 3810 sec: 842231218 operations; 217918.5 current ops/sec; est completion in 11 minutes [INSERT: Count=2179164, Max=160767, Min=216, Avg=1832.68, 90=2785, 99=7315, 99.9=18559, 99.99=86655] 
2023-03-01 10:06:03:115 3820 sec: 844408247 operations; 217702.9 current ops/sec; est completion in 11 minutes [INSERT: Count=2177048, Max=150399, Min=219, Avg=1836.07, 90=2759, 99=7535, 99.9=20447, 99.99=109759] 
2023-03-01 10:06:13:115 3830 sec: 846601751 operations; 219350.4 current ops/sec; est completion in 11 minutes [INSERT: Count=2193496, Max=41951, Min=228, Avg=1821.56, 90=2739, 99=7223, 99.9=18639, 99.99=28239] 
2023-03-01 10:06:23:115 3840 sec: 848794898 operations; 219314.7 current ops/sec; est completion in 11 minutes [INSERT: Count=2193161, Max=40159, Min=235, Avg=1821.76, 90=2765, 99=7295, 99.9=16295, 99.99=29023] 
2023-03-01 10:06:33:115 3850 sec: 850971032 operations; 217613.4 current ops/sec; est completion in 11 minutes [INSERT: Count=2176136, Max=37503, Min=246, Avg=1836.01, 90=2833, 99=7779, 99.9=16895, 99.99=26223] 
2023-03-01 10:06:43:115 3860 sec: 853188226 operations; 221719.4 current ops/sec; est completion in 11 minutes [INSERT: Count=2217189, Max=43775, Min=248, Avg=1802.11, 90=2751, 99=7019, 99.9=15727, 99.99=25359] 
2023-03-01 10:06:53:115 3870 sec: 855371128 operations; 218290.2 current ops/sec; est completion in 10 minutes [INSERT: Count=2182907, Max=117759, Min=227, Avg=1830.37, 90=2739, 99=7267, 99.9=17199, 99.99=63167] 
2023-03-01 10:07:03:115 3880 sec: 857536331 operations; 216520.3 current ops/sec; est completion in 10 minutes [INSERT: Count=2165196, Max=213247, Min=216, Avg=1845.28, 90=2731, 99=6871, 99.9=17023, 99.99=153343] 
2023-03-01 10:07:13:115 3890 sec: 859710350 operations; 217401.9 current ops/sec; est completion in 10 minutes [INSERT: Count=2174018, Max=46207, Min=221, Avg=1837.91, 90=2879, 99=7607, 99.9=19711, 99.99=33023] 
2023-03-01 10:07:23:115 3900 sec: 861909562 operations; 219921.2 current ops/sec; est completion in 10 minutes [INSERT: Count=2199210, Max=55423, Min=223, Avg=1816.75, 90=2809, 99=7947, 99.9=17759, 99.99=29423] 
2023-03-01 10:07:33:115 3910 sec: 864113157 operations; 220359.5 current ops/sec; est completion in 10 minutes [INSERT: Count=2203598, Max=39903, Min=231, Avg=1813.09, 90=2823, 99=7467, 99.9=17471, 99.99=29135] 
2023-03-01 10:07:43:115 3920 sec: 866298787 operations; 218563 current ops/sec; est completion in 10 minutes [INSERT: Count=2185627, Max=45919, Min=225, Avg=1828.05, 90=2813, 99=7995, 99.9=17967, 99.99=26255] 
2023-03-01 10:07:53:115 3930 sec: 868488665 operations; 218987.8 current ops/sec; est completion in 9 minutes [INSERT: Count=2189881, Max=52543, Min=228, Avg=1824.48, 90=2855, 99=8535, 99.9=20863, 99.99=30127] 
2023-03-01 10:08:03:115 3940 sec: 870690349 operations; 220168.4 current ops/sec; est completion in 9 minutes [INSERT: Count=2201679, Max=118335, Min=229, Avg=1814.54, 90=2849, 99=8051, 99.9=19055, 99.99=61183] 
2023-03-01 10:08:13:115 3950 sec: 872878035 operations; 218768.6 current ops/sec; est completion in 9 minutes [INSERT: Count=2187691, Max=46271, Min=224, Avg=1826.5, 90=2901, 99=8423, 99.9=21775, 99.99=29391] 
2023-03-01 10:08:23:115 3960 sec: 875096981 operations; 221894.6 current ops/sec; est completion in 9 minutes [INSERT: Count=2218944, Max=43967, Min=211, Avg=1800.52, 90=2857, 99=7995, 99.9=17151, 99.99=27215] 
2023-03-01 10:08:33:115 3970 sec: 877291707 operations; 219472.6 current ops/sec; est completion in 9 minutes [INSERT: Count=2194727, Max=32895, Min=222, Avg=1820.59, 90=2865, 99=7791, 99.9=19135, 99.99=28847] 
2023-03-01 10:08:43:115 3980 sec: 879489404 operations; 219769.7 current ops/sec; est completion in 9 minutes [INSERT: Count=2197695, Max=45055, Min=220, Avg=1818, 90=2829, 99=9143, 99.9=19119, 99.99=37439] 
2023-03-01 10:08:53:115 3990 sec: 881706066 operations; 221666.2 current ops/sec; est completion in 8 minutes [INSERT: Count=2216670, Max=75135, Min=205, Avg=1802.26, 90=2919, 99=8743, 99.9=20623, 99.99=31759] 
2023-03-01 10:09:03:115 4000 sec: 883945299 operations; 223923.3 current ops/sec; est completion in 8 minutes [INSERT: Count=2239227, Max=122943, Min=205, Avg=1784.44, 90=2893, 99=8495, 99.9=18463, 99.99=59391] 
2023-03-01 10:09:13:115 4010 sec: 886172483 operations; 222718.4 current ops/sec; est completion in 8 minutes [INSERT: Count=2227185, Max=211711, Min=216, Avg=1793.91, 90=2871, 99=7727, 99.9=18255, 99.99=118207] 
2023-03-01 10:09:23:115 4020 sec: 888383605 operations; 221112.2 current ops/sec; est completion in 8 minutes [INSERT: Count=2211122, Max=44287, Min=216, Avg=1806.95, 90=2887, 99=8271, 99.9=20943, 99.99=36287] 
2023-03-01 10:09:33:115 4030 sec: 890595989 operations; 221238.4 current ops/sec; est completion in 8 minutes [INSERT: Count=2212383, Max=37055, Min=215, Avg=1805.92, 90=2909, 99=8407, 99.9=19567, 99.99=29647] 
2023-03-01 10:09:43:115 4040 sec: 892800552 operations; 220456.3 current ops/sec; est completion in 8 minutes [INSERT: Count=2204565, Max=42239, Min=220, Avg=1812.43, 90=2921, 99=8083, 99.9=18159, 99.99=27775] 
2023-03-01 10:09:53:115 4050 sec: 895007066 operations; 220651.4 current ops/sec; est completion in 7 minutes [INSERT: Count=2206513, Max=119487, Min=222, Avg=1810.8, 90=2781, 99=7663, 99.9=19503, 99.99=60223] 
2023-03-01 10:10:03:115 4060 sec: 897191371 operations; 218430.5 current ops/sec; est completion in 7 minutes [INSERT: Count=2184305, Max=98815, Min=213, Avg=1829.16, 90=2845, 99=7983, 99.9=22447, 99.99=94911] 
2023-03-01 10:10:13:115 4070 sec: 899417559 operations; 222618.8 current ops/sec; est completion in 7 minutes [INSERT: Count=2226189, Max=46207, Min=225, Avg=1794.73, 90=2845, 99=7495, 99.9=15767, 99.99=28575] 
2023-03-01 10:10:23:115 4080 sec: 901623623 operations; 220606.4 current ops/sec; est completion in 7 minutes [INSERT: Count=2206066, Max=103807, Min=217, Avg=1811.14, 90=2821, 99=7755, 99.9=16671, 99.99=36767] 
2023-03-01 10:10:33:115 4090 sec: 903840594 operations; 221697.1 current ops/sec; est completion in 7 minutes [INSERT: Count=2216966, Max=38943, Min=216, Avg=1802.19, 90=2805, 99=7039, 99.9=17327, 99.99=25871] 
2023-03-01 10:10:43:115 4100 sec: 906061396 operations; 222080.2 current ops/sec; est completion in 7 minutes [INSERT: Count=2220810, Max=46079, Min=225, Avg=1799.11, 90=2837, 99=7795, 99.9=18799, 99.99=24223] 
2023-03-01 10:10:53:115 4110 sec: 908269410 operations; 220801.4 current ops/sec; est completion in 6 minutes [INSERT: Count=2208008, Max=130431, Min=219, Avg=1809.51, 90=2825, 99=7891, 99.9=21039, 99.99=55103] 
2023-03-01 10:11:03:115 4120 sec: 910481072 operations; 221166.2 current ops/sec; est completion in 6 minutes [INSERT: Count=2211667, Max=32047, Min=232, Avg=1806.48, 90=2831, 99=7827, 99.9=15775, 99.99=22847] 
2023-03-01 10:11:13:115 4130 sec: 912690558 operations; 220948.6 current ops/sec; est completion in 6 minutes [INSERT: Count=2209482, Max=36511, Min=231, Avg=1808.31, 90=2843, 99=8295, 99.9=17615, 99.99=25631] 
2023-03-01 10:11:23:115 4140 sec: 914904987 operations; 221442.9 current ops/sec; est completion in 6 minutes [INSERT: Count=2214422, Max=151039, Min=229, Avg=1804.29, 90=2817, 99=7611, 99.9=20543, 99.99=70207] 
2023-03-01 10:11:33:115 4150 sec: 917097911 operations; 219292.4 current ops/sec; est completion in 6 minutes [INSERT: Count=2192929, Max=36703, Min=236, Avg=1821.97, 90=2815, 99=7523, 99.9=17535, 99.99=29343] 
2023-03-01 10:11:43:115 4160 sec: 919276781 operations; 217887 current ops/sec; est completion in 6 minutes [INSERT: Count=2178868, Max=40639, Min=227, Avg=1833.73, 90=2753, 99=7387, 99.9=18175, 99.99=27615] 
2023-03-01 10:11:53:115 4170 sec: 921463370 operations; 218658.9 current ops/sec; est completion in 5 minutes [INSERT: Count=2186594, Max=136447, Min=217, Avg=1827.12, 90=2759, 99=7715, 99.9=17919, 99.99=86079] 
2023-03-01 10:12:03:115 4180 sec: 923667821 operations; 220445.1 current ops/sec; est completion in 5 minutes [INSERT: Count=2204449, Max=50239, Min=224, Avg=1812.58, 90=2883, 99=8083, 99.9=21359, 99.99=37407] 
2023-03-01 10:12:13:115 4190 sec: 925881307 operations; 221348.6 current ops/sec; est completion in 5 minutes [INSERT: Count=2213483, Max=41567, Min=228, Avg=1805.06, 90=2949, 99=9543, 99.9=22863, 99.99=28831] 
2023-03-01 10:12:23:115 4200 sec: 928120373 operations; 223906.6 current ops/sec; est completion in 5 minutes [INSERT: Count=2239070, Max=185215, Min=209, Avg=1784.34, 90=2989, 99=8911, 99.9=19039, 99.99=84351] 
2023-03-01 10:12:33:115 4210 sec: 930358090 operations; 223771.7 current ops/sec; est completion in 5 minutes [INSERT: Count=2237716, Max=43615, Min=224, Avg=1785.48, 90=2975, 99=9111, 99.9=21135, 99.99=29887] 
2023-03-01 10:12:43:115 4220 sec: 932586089 operations; 222799.9 current ops/sec; est completion in 5 minutes [INSERT: Count=2228002, Max=53759, Min=224, Avg=1793.22, 90=2939, 99=8951, 99.9=19647, 99.99=29295] 
2023-03-01 10:12:53:115 4230 sec: 934796262 operations; 221017.3 current ops/sec; est completion in 4 minutes [INSERT: Count=2210163, Max=187519, Min=203, Avg=1807.52, 90=2923, 99=9263, 99.9=21343, 99.99=131711] 
2023-03-01 10:13:03:115 4240 sec: 937030433 operations; 223417.1 current ops/sec; est completion in 4 minutes [INSERT: Count=2234180, Max=109759, Min=222, Avg=1788.56, 90=2975, 99=8735, 99.9=21343, 99.99=43807] 
2023-03-01 10:13:13:115 4250 sec: 939263004 operations; 223257.1 current ops/sec; est completion in 4 minutes [INSERT: Count=2232568, Max=43007, Min=218, Avg=1789.53, 90=3113, 99=9871, 99.9=17999, 99.99=27615] 
2023-03-01 10:13:23:115 4260 sec: 941512437 operations; 224943.3 current ops/sec; est completion in 4 minutes [INSERT: Count=2249435, Max=53247, Min=218, Avg=1776.15, 90=3033, 99=9727, 99.9=20351, 99.99=28303] 
2023-03-01 10:13:33:115 4270 sec: 943761426 operations; 224898.9 current ops/sec; est completion in 4 minutes [INSERT: Count=2248984, Max=39615, Min=222, Avg=1776.35, 90=2987, 99=9911, 99.9=20111, 99.99=27807] 
2023-03-01 10:13:43:115 4280 sec: 946006715 operations; 224528.9 current ops/sec; est completion in 4 minutes [INSERT: Count=2245297, Max=41727, Min=216, Avg=1779.49, 90=3109, 99=10191, 99.9=20431, 99.99=29679] 
2023-03-01 10:13:53:115 4290 sec: 948236195 operations; 222948 current ops/sec; est completion in 3 minutes [INSERT: Count=2229478, Max=170879, Min=205, Avg=1792.06, 90=3025, 99=10863, 99.9=22767, 99.99=109823] 
2023-03-01 10:14:03:123 4300 sec: 950483551 operations; 224555.96 current ops/sec; est completion in 3 minutes [INSERT: Count=2247354, Max=57759, Min=214, Avg=1777.67, 90=3049, 99=9367, 99.9=22607, 99.99=34111] 
2023-03-01 10:14:13:115 4310 sec: 952726047 operations; 224429.14 current ops/sec; est completion in 3 minutes [INSERT: Count=2242491, Max=42943, Min=222, Avg=1781.71, 90=2989, 99=8735, 99.9=18783, 99.99=36959] 
2023-03-01 10:14:23:115 4320 sec: 954964707 operations; 223866 current ops/sec; est completion in 3 minutes [INSERT: Count=2238669, Max=50655, Min=228, Avg=1784.77, 90=2939, 99=8223, 99.9=18335, 99.99=28527] 
2023-03-01 10:14:33:115 4330 sec: 957204652 operations; 223994.5 current ops/sec; est completion in 3 minutes [INSERT: Count=2239942, Max=37439, Min=217, Avg=1783.76, 90=2941, 99=8367, 99.9=17311, 99.99=29231] 
2023-03-01 10:14:43:115 4340 sec: 959421738 operations; 221708.6 current ops/sec; est completion in 3 minutes [INSERT: Count=2217091, Max=69503, Min=217, Avg=1802.15, 90=2915, 99=7943, 99.9=20159, 99.99=66495] 
2023-03-01 10:14:53:115 4350 sec: 961614673 operations; 219293.5 current ops/sec; est completion in 2 minutes [INSERT: Count=2192925, Max=101631, Min=215, Avg=1821.94, 90=2895, 99=8463, 99.9=21215, 99.99=32767] 
2023-03-01 10:15:03:115 4360 sec: 963831703 operations; 221703 current ops/sec; est completion in 2 minutes [INSERT: Count=2217027, Max=46815, Min=221, Avg=1802.03, 90=2855, 99=7683, 99.9=16007, 99.99=23183] 
2023-03-01 10:15:13:115 4370 sec: 966022379 operations; 219067.6 current ops/sec; est completion in 2 minutes [INSERT: Count=2190691, Max=39039, Min=229, Avg=1823.97, 90=2821, 99=8231, 99.9=19327, 99.99=30719] 
2023-03-01 10:15:23:115 4380 sec: 968218735 operations; 219635.6 current ops/sec; est completion in 2 minutes [INSERT: Count=2196356, Max=50559, Min=219, Avg=1818.96, 90=2835, 99=8407, 99.9=17855, 99.99=37823] 
2023-03-01 10:15:33:115 4390 sec: 970406821 operations; 218808.6 current ops/sec; est completion in 2 minutes [INSERT: Count=2188079, Max=37599, Min=235, Avg=1826.05, 90=2813, 99=8303, 99.9=20399, 99.99=28799] 
2023-03-01 10:15:43:115 4400 sec: 972630683 operations; 222386.2 current ops/sec; est completion in 2 minutes [INSERT: Count=2223875, Max=42943, Min=232, Avg=1796.7, 90=2803, 99=7751, 99.9=15895, 99.99=28127] 
2023-03-01 10:15:53:115 4410 sec: 974835289 operations; 220460.6 current ops/sec; est completion in 1 minute [INSERT: Count=2204598, Max=143871, Min=225, Avg=1812.28, 90=2785, 99=7763, 99.9=18207, 99.99=94463] 
2023-03-01 10:16:03:115 4420 sec: 977041443 operations; 220615.4 current ops/sec; est completion in 1 minute [INSERT: Count=2206150, Max=116991, Min=224, Avg=1810.93, 90=2831, 99=8383, 99.9=20399, 99.99=40223] 
2023-03-01 10:16:13:115 4430 sec: 979230009 operations; 218856.6 current ops/sec; est completion in 1 minute [INSERT: Count=2188544, Max=54911, Min=229, Avg=1820.7, 90=2889, 99=8135, 99.9=20175, 99.99=45503] 
2023-03-01 10:16:23:115 4440 sec: 981415061 operations; 218505.2 current ops/sec; est completion in 1 minute [INSERT: Count=2185071, Max=54463, Min=214, Avg=1833.34, 90=2875, 99=8567, 99.9=21999, 99.99=36703] 
2023-03-01 10:16:33:115 4450 sec: 983603146 operations; 218808.5 current ops/sec; est completion in 1 minute [INSERT: Count=2188081, Max=53695, Min=205, Avg=1826.14, 90=2869, 99=8399, 99.9=19711, 99.99=33535] 
2023-03-01 10:16:43:115 4460 sec: 985841280 operations; 223813.4 current ops/sec; est completion in 1 minute [INSERT: Count=2238144, Max=40191, Min=219, Avg=1785.2, 90=2839, 99=7603, 99.9=16991, 99.99=26959] 
2023-03-01 10:16:53:115 4470 sec: 988044019 operations; 220273.9 current ops/sec; est completion in 55 seconds [INSERT: Count=2202747, Max=138239, Min=223, Avg=1813.86, 90=2847, 99=7903, 99.9=18559, 99.99=83839] 
2023-03-01 10:17:03:115 4480 sec: 990255414 operations; 221139.5 current ops/sec; est completion in 45 seconds [INSERT: Count=2211382, Max=35039, Min=224, Avg=1806.73, 90=2809, 99=7891, 99.9=16703, 99.99=28783] 
2023-03-01 10:17:13:115 4490 sec: 992456447 operations; 220103.3 current ops/sec; est completion in 35 seconds [INSERT: Count=2201039, Max=52607, Min=232, Avg=1815.2, 90=2839, 99=8311, 99.9=18495, 99.99=28335] 
2023-03-01 10:17:23:115 4500 sec: 994648526 operations; 219207.9 current ops/sec; est completion in 25 seconds [INSERT: Count=2192071, Max=91711, Min=234, Avg=1822.64, 90=2817, 99=8783, 99.9=20751, 99.99=43295] 
2023-03-01 10:17:33:115 4510 sec: 996870542 operations; 222201.6 current ops/sec; est completion in 15 seconds [INSERT: Count=2222021, Max=50879, Min=225, Avg=1798.1, 90=2857, 99=8335, 99.9=18911, 99.99=29247] 
2023-03-01 10:17:43:115 4520 sec: 999084236 operations; 221369.4 current ops/sec; est completion in 5 second [CLEANUP: Count=14, Max=8, Min=3, Avg=3.64, 90=4, 99=8, 99.9=8, 99.99=8] [INSERT: Count=2213706, Max=40831, Min=225, Avg=1796.01, 90=2881, 99=9399, 99.9=18063, 99.99=25631] 
2023-03-01 10:17:52:448 4529 sec: 1000000000 operations; 98121.08 current ops/sec; [CLEANUP: Count=386, Max=2222079, Min=0, Avg=5755.55, 90=3, 99=14, 99.9=2222079, 99.99=2222079] [INSERT: Count=915729, Max=163327, Min=199, Avg=1415.86, 90=2109, 99=5715, 99.9=16431, 99.99=106239] 
[OVERALL], RunTime(ms), 4529331
[OVERALL], Throughput(ops/sec), 220783.15760097903
[TOTAL_GCS_PS_Scavenge], Count, 5105
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 47673
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0525395472311474
[TOTAL_GCS_PS_MarkSweep], Count, 12
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 807
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.01781720081839901
[TOTAL_GCs], Count, 5117
[TOTAL_GC_TIME], Time(ms), 48480
[TOTAL_GC_TIME_%], Time(%), 1.0703567480495464
[CLEANUP], Operations, 400
[CLEANUP], AverageLatency(us), 5554.23
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2222079
[CLEANUP], 95thPercentileLatency(us), 4
[CLEANUP], 99thPercentileLatency(us), 14
[INSERT], Operations, 1000000000
[INSERT], AverageLatency(us), 1806.901802593
[INSERT], MinLatency(us), 193
[INSERT], MaxLatency(us), 294911
[INSERT], 95thPercentileLatency(us), 3943
[INSERT], 99thPercentileLatency(us), 8383
[INSERT], Return=OK, 1000000000
