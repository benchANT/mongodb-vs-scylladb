bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=52.52.96.146,54.193.164.37,54.151.68.127 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3rQkLaAN8Jn6ePI -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.5 -p updateproportion=0.5 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.52.96.146,54.193.164.37,54.151.68.127 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3rQkLaAN8Jn6ePI -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.5 -p updateproportion=0.5 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.52.96.146,54.193.164.37,54.151.68.127 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3rQkLaAN8Jn6ePI -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.5 -p updateproportion=0.5 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
Starting test.
[Thread-51] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
2023-03-08 14:13:30:367 0 sec: 0 operations; est completion in 0 second 
[Thread-51] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
[Thread-51] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-51] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-51] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-51] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_1' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.219.182.146:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.219.104.150:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.52.96.146:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.151.68.127:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.193.164.37:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.9.21.173:9042 added
[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 4e0c2639-6369-4de2-bc5d-5bd2e916a9d7

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /52.52.96.146; Rack: us-west-1a-virtual1

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.219.104.150; Rack: us-west-1a

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.151.68.127; Rack: us-west-1c

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.193.164.37; Rack: us-west-1c

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /52.9.21.173; Rack: us-west-1a

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.219.182.146; Rack: us-west-1a-virtual1

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-03-08 14:13:40:348 10 sec: 1520226 operations; 152022.6 current ops/sec; est completion in 1 hour 49 minutes [INSERT: Count=1520504, Max=167423, Min=206, Avg=2418.13, 90=4771, 99=22735, 99.9=48159, 99.99=141823] 
2023-03-08 14:13:50:348 20 sec: 3679297 operations; 215907.1 current ops/sec; est completion in 1 hour 30 minutes [INSERT: Count=2158966, Max=63551, Min=211, Avg=1845.43, 90=3463, 99=15023, 99.9=31583, 99.99=46687] 
2023-03-08 14:14:00:366 30 sec: 5998134 operations; 231490.17 current ops/sec; est completion in 1 hour 22 minutes [INSERT: Count=2318783, Max=62463, Min=212, Avg=1723.47, 90=3227, 99=11695, 99.9=23983, 99.99=38143] 
2023-03-08 14:14:10:358 40 sec: 8280559 operations; 228493.84 current ops/sec; est completion in 1 hour 19 minutes [INSERT: Count=2282385, Max=51007, Min=212, Avg=1750.5, 90=3341, 99=12127, 99.9=23055, 99.99=31551] 
2023-03-08 14:14:20:348 50 sec: 10530533 operations; 225132.48 current ops/sec; est completion in 1 hour 18 minutes [INSERT: Count=2250045, Max=48319, Min=219, Avg=1774.19, 90=3393, 99=13135, 99.9=26367, 99.99=37855] 
2023-03-08 14:14:30:348 60 sec: 12824490 operations; 229395.7 current ops/sec; est completion in 1 hour 16 minutes [INSERT: Count=2293936, Max=53855, Min=217, Avg=1741.12, 90=3347, 99=11759, 99.9=24559, 99.99=36895] 
2023-03-08 14:14:40:348 70 sec: 15010185 operations; 218569.5 current ops/sec; est completion in 1 hour 16 minutes [INSERT: Count=2185723, Max=41503, Min=210, Avg=1828.52, 90=2993, 99=8615, 99.9=20127, 99.99=27791] 
2023-03-08 14:14:50:348 80 sec: 17293062 operations; 228287.7 current ops/sec; est completion in 1 hour 15 minutes [INSERT: Count=2282851, Max=43039, Min=214, Avg=1749.84, 90=3205, 99=11679, 99.9=22127, 99.99=29983] 
2023-03-08 14:15:00:348 90 sec: 19557415 operations; 226435.3 current ops/sec; est completion in 1 hour 15 minutes [INSERT: Count=2264367, Max=53951, Min=221, Avg=1764.13, 90=3463, 99=11751, 99.9=24671, 99.99=39775] 
2023-03-08 14:15:10:348 100 sec: 21838435 operations; 228102 current ops/sec; est completion in 1 hour 14 minutes [INSERT: Count=2280997, Max=42911, Min=202, Avg=1751.27, 90=3355, 99=12247, 99.9=24831, 99.99=35839] 
2023-03-08 14:15:20:348 110 sec: 24104077 operations; 226564.2 current ops/sec; est completion in 1 hour 14 minutes [INSERT: Count=2265674, Max=48671, Min=213, Avg=1763.83, 90=3477, 99=11967, 99.9=23311, 99.99=33759] 
2023-03-08 14:15:30:348 120 sec: 26392489 operations; 228841.2 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2288556, Max=49279, Min=215, Avg=1745.9, 90=3275, 99=11143, 99.9=24975, 99.99=40095] 
2023-03-08 14:15:40:348 130 sec: 28581848 operations; 218935.9 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2189186, Max=44159, Min=206, Avg=1824.94, 90=3021, 99=8087, 99.9=19167, 99.99=28351] 
2023-03-08 14:15:50:348 140 sec: 30788222 operations; 220637.4 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2206377, Max=43327, Min=233, Avg=1810.85, 90=2901, 99=7567, 99.9=18879, 99.99=28783] 
2023-03-08 14:16:00:348 150 sec: 33067447 operations; 227922.5 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2279195, Max=83071, Min=212, Avg=1752.59, 90=3019, 99=10079, 99.9=21743, 99.99=35839] 
2023-03-08 14:16:10:348 160 sec: 35359659 operations; 229221.2 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2292268, Max=70591, Min=207, Avg=1743.05, 90=3189, 99=12591, 99.9=25983, 99.99=38719] 
2023-03-08 14:16:20:348 170 sec: 37661422 operations; 230176.3 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2301737, Max=49183, Min=218, Avg=1735.6, 90=3327, 99=11919, 99.9=23263, 99.99=35327] 
2023-03-08 14:16:30:348 180 sec: 39950872 operations; 228945 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2289452, Max=45567, Min=208, Avg=1745.15, 90=3183, 99=10623, 99.9=21695, 99.99=30735] 
2023-03-08 14:16:40:348 190 sec: 42206681 operations; 225580.9 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2255798, Max=56063, Min=221, Avg=1771.14, 90=3033, 99=9183, 99.9=21551, 99.99=36319] 
2023-03-08 14:16:50:348 200 sec: 44498495 operations; 229181.4 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2291819, Max=78591, Min=216, Avg=1743.2, 90=3233, 99=10311, 99.9=22223, 99.99=33887] 
2023-03-08 14:17:00:348 210 sec: 46775580 operations; 227708.5 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2277097, Max=68223, Min=213, Avg=1754.24, 90=3393, 99=11663, 99.9=24191, 99.99=37151] 
2023-03-08 14:17:10:348 220 sec: 49040063 operations; 226448.3 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2264480, Max=53343, Min=207, Avg=1764.45, 90=3423, 99=12047, 99.9=25487, 99.99=38143] 
2023-03-08 14:17:20:348 230 sec: 51303273 operations; 226321 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2263235, Max=51743, Min=216, Avg=1765.26, 90=3399, 99=12671, 99.9=25183, 99.99=37279] 
2023-03-08 14:17:30:348 240 sec: 53501282 operations; 219800.9 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2197973, Max=44031, Min=215, Avg=1817.77, 90=3381, 99=10935, 99.9=21327, 99.99=30591] 
2023-03-08 14:17:40:348 250 sec: 55618334 operations; 211705.2 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2117042, Max=136191, Min=215, Avg=1887.37, 90=3083, 99=9191, 99.9=23535, 99.99=69951] 
2023-03-08 14:17:50:348 260 sec: 57775220 operations; 215688.6 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2156917, Max=175359, Min=211, Avg=1852.36, 90=3001, 99=8575, 99.9=19711, 99.99=93823] 
2023-03-08 14:18:00:348 270 sec: 59963846 operations; 218862.6 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2188605, Max=100799, Min=232, Avg=1825.44, 90=2907, 99=8095, 99.9=17711, 99.99=58879] 
2023-03-08 14:18:10:348 280 sec: 62171662 operations; 220781.6 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2207815, Max=49727, Min=231, Avg=1809.6, 90=2907, 99=7975, 99.9=18143, 99.99=24751] 
2023-03-08 14:18:20:348 290 sec: 64366309 operations; 219464.7 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2194667, Max=74431, Min=233, Avg=1820.46, 90=2913, 99=8415, 99.9=21183, 99.99=34591] 
2023-03-08 14:18:30:348 300 sec: 66652804 operations; 228649.5 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2286493, Max=77567, Min=214, Avg=1747.34, 90=2953, 99=9543, 99.9=20703, 99.99=39999] 
2023-03-08 14:18:40:348 310 sec: 68885558 operations; 223275.4 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2232717, Max=48159, Min=215, Avg=1789.36, 90=3093, 99=9607, 99.9=20687, 99.99=33599] 
2023-03-08 14:18:50:348 320 sec: 71083397 operations; 219783.9 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2197884, Max=153727, Min=207, Avg=1817.88, 90=3025, 99=10287, 99.9=25343, 99.99=99455] 
2023-03-08 14:19:00:348 330 sec: 73379264 operations; 229586.7 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2295825, Max=116991, Min=211, Avg=1740.14, 90=3219, 99=11647, 99.9=24127, 99.99=49983] 
2023-03-08 14:19:10:348 340 sec: 75681049 operations; 230178.5 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2301782, Max=46815, Min=211, Avg=1735.65, 90=3181, 99=10103, 99.9=21631, 99.99=31567] 
2023-03-08 14:19:20:348 350 sec: 77941681 operations; 226063.2 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2260611, Max=61983, Min=207, Avg=1767.17, 90=3427, 99=11079, 99.9=27007, 99.99=47999] 
2023-03-08 14:19:30:348 360 sec: 80212115 operations; 227043.4 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2270427, Max=46143, Min=209, Avg=1759.32, 90=3419, 99=12039, 99.9=22687, 99.99=33375] 
2023-03-08 14:19:40:348 370 sec: 82486039 operations; 227392.4 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2273938, Max=38783, Min=214, Avg=1757.24, 90=3319, 99=10807, 99.9=21791, 99.99=28351] 
2023-03-08 14:19:50:348 380 sec: 84731778 operations; 224573.9 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2245740, Max=66687, Min=213, Avg=1779.08, 90=3181, 99=9727, 99.9=19887, 99.99=35199] 
2023-03-08 14:20:00:348 390 sec: 86914336 operations; 218255.8 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2182534, Max=35455, Min=226, Avg=1830.59, 90=2999, 99=8215, 99.9=19151, 99.99=27775] 
2023-03-08 14:20:10:348 400 sec: 89121096 operations; 220676 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2206753, Max=43551, Min=216, Avg=1810.53, 90=2943, 99=8551, 99.9=17999, 99.99=26911] 
2023-03-08 14:20:20:348 410 sec: 91304845 operations; 218374.9 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2184073, Max=93631, Min=223, Avg=1829.51, 90=3083, 99=9415, 99.9=20511, 99.99=34303] 
2023-03-08 14:20:30:348 420 sec: 93549576 operations; 224473.1 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2244442, Max=44607, Min=217, Avg=1779.9, 90=3055, 99=10807, 99.9=23887, 99.99=33183] 
2023-03-08 14:20:40:348 430 sec: 95811856 operations; 226228 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2262268, Max=218111, Min=210, Avg=1765.92, 90=3181, 99=10647, 99.9=22207, 99.99=134783] 
2023-03-08 14:20:50:348 440 sec: 98048426 operations; 223657 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2236543, Max=101119, Min=220, Avg=1781.07, 90=3067, 99=11127, 99.9=23871, 99.99=49183] 
2023-03-08 14:21:00:348 450 sec: 100312873 operations; 226444.7 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2264470, Max=96767, Min=218, Avg=1769.56, 90=3103, 99=9927, 99.9=24367, 99.99=66303] 
2023-03-08 14:21:10:348 460 sec: 102573177 operations; 226030.4 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2260306, Max=80063, Min=220, Avg=1767.57, 90=3069, 99=9479, 99.9=20079, 99.99=30463] 
2023-03-08 14:21:20:348 470 sec: 104809229 operations; 223605.2 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2236053, Max=56031, Min=219, Avg=1786.47, 90=3225, 99=10767, 99.9=23343, 99.99=38719] 
2023-03-08 14:21:30:348 480 sec: 107071903 operations; 226267.4 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2262694, Max=45599, Min=218, Avg=1765.87, 90=3291, 99=12215, 99.9=25919, 99.99=35455] 
2023-03-08 14:21:40:348 490 sec: 109319002 operations; 224709.9 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2247106, Max=51807, Min=212, Avg=1777.95, 90=3215, 99=11111, 99.9=21951, 99.99=43935] 
2023-03-08 14:21:50:348 500 sec: 111588865 operations; 226986.3 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2269831, Max=48223, Min=221, Avg=1759.96, 90=3345, 99=11639, 99.9=23679, 99.99=34591] 
2023-03-08 14:22:00:348 510 sec: 113833020 operations; 224415.5 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2244152, Max=36415, Min=212, Avg=1780.39, 90=3259, 99=10127, 99.9=20063, 99.99=28751] 
2023-03-08 14:22:10:348 520 sec: 116089010 operations; 225599 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2256015, Max=72127, Min=220, Avg=1770.82, 90=3149, 99=9343, 99.9=20895, 99.99=46271] 
2023-03-08 14:22:20:348 530 sec: 118300720 operations; 221171 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2211702, Max=46239, Min=222, Avg=1806.57, 90=3053, 99=8255, 99.9=18063, 99.99=27919] 
2023-03-08 14:22:30:348 540 sec: 120498893 operations; 219817.3 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2198192, Max=30991, Min=212, Avg=1817.6, 90=2905, 99=7515, 99.9=19871, 99.99=24975] 
2023-03-08 14:22:40:348 550 sec: 122652951 operations; 215405.8 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2154026, Max=99775, Min=237, Avg=1854.82, 90=3011, 99=8455, 99.9=25727, 99.99=61695] 
2023-03-08 14:22:50:348 560 sec: 124855343 operations; 220239.2 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2202371, Max=106623, Min=222, Avg=1814.16, 90=2847, 99=7887, 99.9=19647, 99.99=32047] 
2023-03-08 14:23:00:348 570 sec: 127027212 operations; 217186.9 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2171859, Max=111935, Min=220, Avg=1839.52, 90=2815, 99=7991, 99.9=18383, 99.99=48255] 
2023-03-08 14:23:10:348 580 sec: 129206757 operations; 217954.5 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2179545, Max=50367, Min=240, Avg=1833.18, 90=2819, 99=7763, 99.9=19583, 99.99=28831] 
2023-03-08 14:23:20:348 590 sec: 131384918 operations; 217816.1 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2178179, Max=126015, Min=239, Avg=1834.28, 90=2835, 99=7439, 99.9=17503, 99.99=122623] 
2023-03-08 14:23:30:348 600 sec: 133599686 operations; 221476.8 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2214746, Max=37343, Min=239, Avg=1803.88, 90=2809, 99=7143, 99.9=18111, 99.99=25263] 
2023-03-08 14:23:40:348 610 sec: 135807177 operations; 220749.1 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2207500, Max=121919, Min=231, Avg=1809.91, 90=2779, 99=7387, 99.9=16879, 99.99=45055] 
2023-03-08 14:23:50:348 620 sec: 137989806 operations; 218262.9 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2182607, Max=53631, Min=231, Avg=1829.65, 90=2851, 99=8131, 99.9=18463, 99.99=28879] 
2023-03-08 14:24:00:348 630 sec: 140155473 operations; 216566.7 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2165674, Max=148863, Min=230, Avg=1845.8, 90=2819, 99=8327, 99.9=18895, 99.99=70591] 
2023-03-08 14:24:10:348 640 sec: 142347552 operations; 219207.9 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2192094, Max=155647, Min=233, Avg=1822.68, 90=2801, 99=7087, 99.9=18207, 99.99=76351] 
2023-03-08 14:24:20:348 650 sec: 144528108 operations; 218055.6 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2180539, Max=35967, Min=244, Avg=1832.17, 90=2769, 99=6795, 99.9=18655, 99.99=29151] 
2023-03-08 14:24:30:348 660 sec: 146748184 operations; 222007.6 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2220088, Max=32655, Min=236, Avg=1799.54, 90=2775, 99=6795, 99.9=15511, 99.99=20111] 
2023-03-08 14:24:40:348 670 sec: 148945992 operations; 219780.8 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2197811, Max=27199, Min=243, Avg=1818.11, 90=2847, 99=7099, 99.9=16263, 99.99=20735] 
2023-03-08 14:24:50:348 680 sec: 151135766 operations; 218977.4 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2189770, Max=32527, Min=243, Avg=1824.57, 90=2821, 99=7087, 99.9=16767, 99.99=23871] 
2023-03-08 14:25:00:348 690 sec: 153303014 operations; 216724.8 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2167248, Max=140159, Min=229, Avg=1843.43, 90=2775, 99=7191, 99.9=19279, 99.99=94079] 
2023-03-08 14:25:10:348 700 sec: 155517169 operations; 221415.5 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2214149, Max=58335, Min=241, Avg=1804.57, 90=2739, 99=7539, 99.9=19823, 99.99=32527] 
2023-03-08 14:25:20:348 710 sec: 157716101 operations; 219893.2 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2198934, Max=101951, Min=236, Avg=1816.92, 90=2811, 99=8775, 99.9=20847, 99.99=58591] 
2023-03-08 14:25:30:348 720 sec: 159939584 operations; 222348.3 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2223481, Max=35039, Min=230, Avg=1796.82, 90=2825, 99=7231, 99.9=16447, 99.99=27039] 
2023-03-08 14:25:40:348 730 sec: 162166515 operations; 222693.1 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2226947, Max=59583, Min=220, Avg=1793.98, 90=3033, 99=10199, 99.9=22703, 99.99=31007] 
2023-03-08 14:25:50:348 740 sec: 164400576 operations; 223406.1 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2234041, Max=91967, Min=201, Avg=1787.92, 90=3061, 99=10631, 99.9=20623, 99.99=50655] 
2023-03-08 14:26:00:348 750 sec: 166616751 operations; 221617.5 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2216179, Max=110399, Min=222, Avg=1803.07, 90=2961, 99=9631, 99.9=20319, 99.99=83327] 
2023-03-08 14:26:10:348 760 sec: 168857524 operations; 224077.3 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2240782, Max=62559, Min=224, Avg=1782.96, 90=3063, 99=10871, 99.9=25151, 99.99=53951] 
2023-03-08 14:26:20:348 770 sec: 171139296 operations; 228177.2 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2281761, Max=48671, Min=225, Avg=1750.93, 90=3275, 99=11679, 99.9=22207, 99.99=30703] 
2023-03-08 14:26:30:348 780 sec: 173411284 operations; 227198.8 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2271991, Max=48799, Min=225, Avg=1758.34, 90=3177, 99=10655, 99.9=24367, 99.99=38239] 
2023-03-08 14:26:40:348 790 sec: 175666276 operations; 225499.2 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2254990, Max=49183, Min=205, Avg=1771.82, 90=3013, 99=8719, 99.9=19983, 99.99=38111] 
2023-03-08 14:26:50:348 800 sec: 177927362 operations; 226108.6 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2261097, Max=40031, Min=209, Avg=1766.86, 90=3049, 99=9199, 99.9=20223, 99.99=30015] 
2023-03-08 14:27:00:348 810 sec: 180185238 operations; 225787.6 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2257886, Max=38047, Min=223, Avg=1769.54, 90=3053, 99=9911, 99.9=19343, 99.99=26575] 
2023-03-08 14:27:10:348 820 sec: 182385914 operations; 220067.6 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2200618, Max=88831, Min=225, Avg=1813.42, 90=2967, 99=8271, 99.9=20447, 99.99=45023] 
2023-03-08 14:27:20:348 830 sec: 184600548 operations; 221463.4 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2214682, Max=33759, Min=219, Avg=1806.05, 90=2883, 99=7527, 99.9=16495, 99.99=23343] 
2023-03-08 14:27:30:348 840 sec: 186829512 operations; 222896.4 current ops/sec; est completion in 1 hour [INSERT: Count=2228960, Max=38143, Min=224, Avg=1792.52, 90=2877, 99=7751, 99.9=17439, 99.99=33791] 
2023-03-08 14:27:40:348 850 sec: 189052406 operations; 222289.4 current ops/sec; est completion in 1 hour [INSERT: Count=2222919, Max=34687, Min=226, Avg=1797.36, 90=2907, 99=7863, 99.9=18607, 99.99=25615] 
2023-03-08 14:27:50:348 860 sec: 191246872 operations; 219446.6 current ops/sec; est completion in 1 hour [INSERT: Count=2194453, Max=128447, Min=222, Avg=1820.7, 90=2905, 99=7519, 99.9=19039, 99.99=75583] 
2023-03-08 14:28:00:348 870 sec: 193437777 operations; 219090.5 current ops/sec; est completion in 1 hour [INSERT: Count=2190892, Max=126271, Min=214, Avg=1823.59, 90=2809, 99=8111, 99.9=18671, 99.99=81407] 
2023-03-08 14:28:10:348 880 sec: 195696718 operations; 225894.1 current ops/sec; est completion in 1 hour [INSERT: Count=2258938, Max=59327, Min=220, Avg=1768.5, 90=2825, 99=8439, 99.9=19087, 99.99=27295] 
2023-03-08 14:28:20:348 890 sec: 197938775 operations; 224205.7 current ops/sec; est completion in 1 hour [INSERT: Count=2242063, Max=37631, Min=220, Avg=1782, 90=2957, 99=8231, 99.9=17407, 99.99=22367] 
2023-03-08 14:28:30:348 900 sec: 200199804 operations; 226102.9 current ops/sec; est completion in 59 minutes [INSERT: Count=2261043, Max=42079, Min=222, Avg=1767.01, 90=2977, 99=9671, 99.9=20351, 99.99=28239] 
2023-03-08 14:28:40:348 910 sec: 202449258 operations; 224945.4 current ops/sec; est completion in 59 minutes [INSERT: Count=2249448, Max=48927, Min=221, Avg=1776.01, 90=3171, 99=11143, 99.9=24895, 99.99=36927] 
2023-03-08 14:28:50:348 920 sec: 204701872 operations; 225261.4 current ops/sec; est completion in 59 minutes [INSERT: Count=2252609, Max=112703, Min=208, Avg=1773.62, 90=3007, 99=9751, 99.9=21647, 99.99=51647] 
2023-03-08 14:29:00:348 930 sec: 206921929 operations; 222005.7 current ops/sec; est completion in 59 minutes [INSERT: Count=2220066, Max=114879, Min=207, Avg=1799.7, 90=3009, 99=9071, 99.9=22895, 99.99=91839] 
2023-03-08 14:29:10:348 940 sec: 209182811 operations; 226088.2 current ops/sec; est completion in 59 minutes [INSERT: Count=2260872, Max=147327, Min=206, Avg=1767.16, 90=3015, 99=9263, 99.9=19615, 99.99=93375] 
2023-03-08 14:29:20:348 950 sec: 211460469 operations; 227765.8 current ops/sec; est completion in 59 minutes [INSERT: Count=2277669, Max=43071, Min=221, Avg=1754.09, 90=3025, 99=9279, 99.9=19487, 99.99=30223] 
2023-03-08 14:29:30:348 960 sec: 213694272 operations; 223380.3 current ops/sec; est completion in 58 minutes [INSERT: Count=2233784, Max=40063, Min=222, Avg=1788.54, 90=3169, 99=9783, 99.9=20319, 99.99=28239] 
2023-03-08 14:29:40:348 970 sec: 215907255 operations; 221298.3 current ops/sec; est completion in 58 minutes [INSERT: Count=2212990, Max=211199, Min=215, Avg=1805.61, 90=3037, 99=9479, 99.9=19807, 99.99=139775] 
2023-03-08 14:29:50:348 980 sec: 218154299 operations; 224704.4 current ops/sec; est completion in 58 minutes [INSERT: Count=2247038, Max=91903, Min=216, Avg=1777.98, 90=3023, 99=8863, 99.9=19743, 99.99=45951] 
2023-03-08 14:30:00:348 990 sec: 220372188 operations; 221788.9 current ops/sec; est completion in 58 minutes [INSERT: Count=2217913, Max=102911, Min=215, Avg=1801.53, 90=3081, 99=9047, 99.9=18687, 99.99=37375] 
2023-03-08 14:30:10:348 1000 sec: 222647400 operations; 227521.2 current ops/sec; est completion in 58 minutes [INSERT: Count=2275196, Max=89151, Min=218, Avg=1755.9, 90=3151, 99=10335, 99.9=21311, 99.99=42687] 
2023-03-08 14:30:20:348 1010 sec: 224910406 operations; 226300.6 current ops/sec; est completion in 58 minutes [INSERT: Count=2262957, Max=54207, Min=212, Avg=1763.91, 90=3253, 99=12327, 99.9=24015, 99.99=38431] 
2023-03-08 14:30:30:348 1020 sec: 227192350 operations; 228194.4 current ops/sec; est completion in 57 minutes [INSERT: Count=2281985, Max=42911, Min=213, Avg=1752.14, 90=3119, 99=10287, 99.9=19951, 99.99=29775] 
2023-03-08 14:30:40:348 1030 sec: 229447932 operations; 225558.2 current ops/sec; est completion in 57 minutes [INSERT: Count=2255611, Max=39999, Min=219, Avg=1771.71, 90=3045, 99=8903, 99.9=18143, 99.99=25919] 
2023-03-08 14:30:50:348 1040 sec: 231706412 operations; 225848 current ops/sec; est completion in 57 minutes [INSERT: Count=2258452, Max=100863, Min=225, Avg=1769.02, 90=2957, 99=9895, 99.9=22447, 99.99=35519] 
2023-03-08 14:31:00:348 1050 sec: 233966606 operations; 226019.4 current ops/sec; est completion in 57 minutes [INSERT: Count=2260186, Max=48895, Min=217, Avg=1767.18, 90=3093, 99=10839, 99.9=23439, 99.99=33471] 
2023-03-08 14:31:10:348 1060 sec: 236240292 operations; 227368.6 current ops/sec; est completion in 57 minutes [INSERT: Count=2273684, Max=94143, Min=222, Avg=1757.65, 90=3145, 99=8855, 99.9=20303, 99.99=31007] 
2023-03-08 14:31:20:348 1070 sec: 238502978 operations; 226268.6 current ops/sec; est completion in 56 minutes [INSERT: Count=2262693, Max=37887, Min=217, Avg=1765.91, 90=3109, 99=9791, 99.9=21679, 99.99=33023] 
2023-03-08 14:31:30:348 1080 sec: 240789775 operations; 228679.7 current ops/sec; est completion in 56 minutes [INSERT: Count=2286795, Max=36927, Min=223, Avg=1747.15, 90=3103, 99=9303, 99.9=19647, 99.99=27455] 
2023-03-08 14:31:40:348 1090 sec: 243025618 operations; 223584.3 current ops/sec; est completion in 56 minutes [INSERT: Count=2235858, Max=56639, Min=219, Avg=1786.93, 90=3035, 99=8895, 99.9=21023, 99.99=31199] 
2023-03-08 14:31:50:348 1100 sec: 245231495 operations; 220587.7 current ops/sec; est completion in 56 minutes [INSERT: Count=2205861, Max=38847, Min=222, Avg=1811.25, 90=2939, 99=8051, 99.9=20511, 99.99=27919] 
2023-03-08 14:32:00:348 1110 sec: 247423346 operations; 219185.1 current ops/sec; est completion in 56 minutes [INSERT: Count=2191848, Max=98879, Min=206, Avg=1822.99, 90=2919, 99=8083, 99.9=17327, 99.99=28927] 
2023-03-08 14:32:10:348 1120 sec: 249640174 operations; 221682.8 current ops/sec; est completion in 56 minutes [INSERT: Count=2216836, Max=29823, Min=229, Avg=1802.42, 90=2865, 99=7443, 99.9=17167, 99.99=23663] 
2023-03-08 14:32:20:348 1130 sec: 251863806 operations; 222363.2 current ops/sec; est completion in 55 minutes [INSERT: Count=2223648, Max=35007, Min=210, Avg=1796.71, 90=2919, 99=7735, 99.9=17423, 99.99=23487] 
2023-03-08 14:32:30:348 1140 sec: 254075182 operations; 221137.6 current ops/sec; est completion in 55 minutes [INSERT: Count=2211382, Max=31871, Min=223, Avg=1806.86, 90=2905, 99=8223, 99.9=17919, 99.99=24079] 
2023-03-08 14:32:40:348 1150 sec: 256270665 operations; 219548.3 current ops/sec; est completion in 55 minutes [INSERT: Count=2195481, Max=106111, Min=224, Avg=1819.92, 90=2917, 99=8767, 99.9=17903, 99.99=31167] 
2023-03-08 14:32:50:348 1160 sec: 258481370 operations; 221070.5 current ops/sec; est completion in 55 minutes [INSERT: Count=2210700, Max=42815, Min=210, Avg=1807.31, 90=2873, 99=7847, 99.9=17935, 99.99=36351] 
2023-03-08 14:33:00:348 1170 sec: 260638908 operations; 215753.8 current ops/sec; est completion in 55 minutes [INSERT: Count=2157528, Max=94271, Min=243, Avg=1851.94, 90=2785, 99=7515, 99.9=18239, 99.99=23439] 
2023-03-08 14:33:10:348 1180 sec: 262825097 operations; 218618.9 current ops/sec; est completion in 55 minutes [INSERT: Count=2186194, Max=112831, Min=245, Avg=1827.64, 90=2773, 99=7063, 99.9=17407, 99.99=35231] 
2023-03-08 14:33:20:348 1190 sec: 265012186 operations; 218708.9 current ops/sec; est completion in 55 minutes [INSERT: Count=2187092, Max=30639, Min=228, Avg=1826.69, 90=2787, 99=7055, 99.9=18639, 99.99=24799] 
2023-03-08 14:33:30:348 1200 sec: 267210677 operations; 219849.1 current ops/sec; est completion in 54 minutes [INSERT: Count=2198496, Max=57695, Min=230, Avg=1817.56, 90=2761, 99=7107, 99.9=18495, 99.99=50399] 
2023-03-08 14:33:40:348 1210 sec: 269390147 operations; 217947 current ops/sec; est completion in 54 minutes [INSERT: Count=2179467, Max=82943, Min=234, Avg=1833.27, 90=2807, 99=6899, 99.9=17599, 99.99=26415] 
2023-03-08 14:33:50:348 1220 sec: 271551261 operations; 216111.4 current ops/sec; est completion in 54 minutes [INSERT: Count=2161121, Max=204799, Min=233, Avg=1848.85, 90=2793, 99=7719, 99.9=18367, 99.99=120511] 
2023-03-08 14:34:00:348 1230 sec: 273742766 operations; 219150.5 current ops/sec; est completion in 54 minutes [INSERT: Count=2191520, Max=167807, Min=232, Avg=1823.25, 90=2757, 99=6967, 99.9=16863, 99.99=71743] 
2023-03-08 14:34:10:348 1240 sec: 275920582 operations; 217781.6 current ops/sec; est completion in 54 minutes [INSERT: Count=2177794, Max=185983, Min=235, Avg=1834.62, 90=2765, 99=6927, 99.9=17199, 99.99=99967] 
2023-03-08 14:34:20:348 1250 sec: 278129334 operations; 220875.2 current ops/sec; est completion in 54 minutes [INSERT: Count=2208755, Max=35519, Min=243, Avg=1808.93, 90=2769, 99=6947, 99.9=17535, 99.99=22687] 
2023-03-08 14:34:30:348 1260 sec: 280351080 operations; 222174.6 current ops/sec; est completion in 53 minutes [INSERT: Count=2221729, Max=35039, Min=252, Avg=1798.41, 90=2719, 99=6799, 99.9=16415, 99.99=27023] 
2023-03-08 14:34:40:348 1270 sec: 282556488 operations; 220540.8 current ops/sec; est completion in 53 minutes [INSERT: Count=2205414, Max=38015, Min=237, Avg=1811.69, 90=2777, 99=7119, 99.9=17791, 99.99=23071] 
2023-03-08 14:34:50:348 1280 sec: 284717766 operations; 216127.8 current ops/sec; est completion in 53 minutes [INSERT: Count=2161300, Max=274687, Min=238, Avg=1848.76, 90=2757, 99=6763, 99.9=21775, 99.99=198015] 
2023-03-08 14:35:00:348 1290 sec: 286861395 operations; 214362.9 current ops/sec; est completion in 53 minutes [INSERT: Count=2143622, Max=258943, Min=221, Avg=1863.99, 90=2731, 99=6655, 99.9=19567, 99.99=196863] 
2023-03-08 14:35:10:348 1300 sec: 289046378 operations; 218498.3 current ops/sec; est completion in 53 minutes [INSERT: Count=2184958, Max=136575, Min=237, Avg=1828.6, 90=2721, 99=6979, 99.9=18591, 99.99=39647] 
2023-03-08 14:35:20:348 1310 sec: 291255024 operations; 220864.6 current ops/sec; est completion in 53 minutes [INSERT: Count=2208654, Max=31807, Min=246, Avg=1809.07, 90=2739, 99=6851, 99.9=15319, 99.99=21135] 
2023-03-08 14:35:30:348 1320 sec: 293445065 operations; 219004.1 current ops/sec; est completion in 52 minutes [INSERT: Count=2190033, Max=42015, Min=231, Avg=1824.46, 90=2771, 99=7459, 99.9=18751, 99.99=27071] 
2023-03-08 14:35:40:348 1330 sec: 295634300 operations; 218923.5 current ops/sec; est completion in 52 minutes [INSERT: Count=2189230, Max=60735, Min=237, Avg=1825.02, 90=2783, 99=7039, 99.9=16719, 99.99=53183] 
2023-03-08 14:35:50:348 1340 sec: 297792928 operations; 215862.8 current ops/sec; est completion in 52 minutes [INSERT: Count=2158635, Max=209919, Min=226, Avg=1850.99, 90=2797, 99=6779, 99.9=18607, 99.99=161791] 
2023-03-08 14:36:00:348 1350 sec: 299938340 operations; 214541.2 current ops/sec; est completion in 52 minutes [INSERT: Count=2145399, Max=65151, Min=237, Avg=1862.38, 90=2781, 99=7391, 99.9=22127, 99.99=40799] 
2023-03-08 14:36:10:348 1360 sec: 302123457 operations; 218511.7 current ops/sec; est completion in 52 minutes [INSERT: Count=2185124, Max=141823, Min=248, Avg=1828.63, 90=2743, 99=6475, 99.9=16895, 99.99=43135] 
2023-03-08 14:36:20:348 1370 sec: 304278605 operations; 215514.8 current ops/sec; est completion in 52 minutes [INSERT: Count=2155142, Max=35135, Min=250, Avg=1853.94, 90=2785, 99=6887, 99.9=18463, 99.99=29423] 
2023-03-08 14:36:30:348 1380 sec: 306482624 operations; 220401.9 current ops/sec; est completion in 52 minutes [INSERT: Count=2204020, Max=30639, Min=249, Avg=1812.87, 90=2777, 99=6767, 99.9=15455, 99.99=22751] 
2023-03-08 14:36:40:348 1390 sec: 308701358 operations; 221873.4 current ops/sec; est completion in 51 minutes [INSERT: Count=2218738, Max=28575, Min=242, Avg=1800.81, 90=2815, 99=6495, 99.9=15047, 99.99=20735] 
2023-03-08 14:36:50:348 1400 sec: 310879210 operations; 217785.2 current ops/sec; est completion in 51 minutes [INSERT: Count=2177858, Max=198783, Min=237, Avg=1834.46, 90=2771, 99=7219, 99.9=18399, 99.99=121279] 
2023-03-08 14:37:00:348 1410 sec: 313062468 operations; 218325.8 current ops/sec; est completion in 51 minutes [INSERT: Count=2183253, Max=86271, Min=246, Avg=1830.29, 90=2781, 99=7319, 99.9=17375, 99.99=32079] 
2023-03-08 14:37:10:348 1420 sec: 315230017 operations; 216754.9 current ops/sec; est completion in 51 minutes [INSERT: Count=2167557, Max=239487, Min=243, Avg=1843.34, 90=2751, 99=6783, 99.9=17663, 99.99=161023] 
2023-03-08 14:37:20:348 1430 sec: 317426743 operations; 219672.6 current ops/sec; est completion in 51 minutes [INSERT: Count=2196721, Max=30079, Min=244, Avg=1818.91, 90=2749, 99=6643, 99.9=17167, 99.99=24463] 
2023-03-08 14:37:30:348 1440 sec: 319597064 operations; 217032.1 current ops/sec; est completion in 51 minutes [INSERT: Count=2170312, Max=142079, Min=229, Avg=1840.93, 90=2733, 99=6391, 99.9=18959, 99.99=107647] 
2023-03-08 14:37:40:348 1450 sec: 321776106 operations; 217904.2 current ops/sec; est completion in 50 minutes [INSERT: Count=2179053, Max=33887, Min=247, Avg=1833.6, 90=2805, 99=7115, 99.9=18159, 99.99=26287] 
2023-03-08 14:37:50:348 1460 sec: 323955609 operations; 217950.3 current ops/sec; est completion in 50 minutes [INSERT: Count=2179498, Max=198783, Min=234, Avg=1833.24, 90=2785, 99=7435, 99.9=19183, 99.99=125503] 
2023-03-08 14:38:00:348 1470 sec: 326126500 operations; 217089.1 current ops/sec; est completion in 50 minutes [INSERT: Count=2170887, Max=205439, Min=240, Avg=1840.45, 90=2761, 99=7359, 99.9=19807, 99.99=131583] 
2023-03-08 14:38:10:348 1480 sec: 328336546 operations; 221004.6 current ops/sec; est completion in 50 minutes [INSERT: Count=2210046, Max=62431, Min=240, Avg=1807.85, 90=2725, 99=7131, 99.9=18767, 99.99=28911] 
2023-03-08 14:38:20:348 1490 sec: 330523944 operations; 218739.8 current ops/sec; est completion in 50 minutes [INSERT: Count=2187396, Max=30943, Min=239, Avg=1826.52, 90=2811, 99=7635, 99.9=16511, 99.99=25087] 
2023-03-08 14:38:30:348 1500 sec: 332699352 operations; 217540.8 current ops/sec; est completion in 50 minutes [INSERT: Count=2175417, Max=47007, Min=241, Avg=1836.73, 90=2817, 99=7007, 99.9=17599, 99.99=27759] 
2023-03-08 14:38:40:348 1510 sec: 334888625 operations; 218927.3 current ops/sec; est completion in 49 minutes [INSERT: Count=2189262, Max=50559, Min=242, Avg=1824.76, 90=2777, 99=7183, 99.9=18607, 99.99=39839] 
2023-03-08 14:38:50:348 1520 sec: 337076276 operations; 218765.1 current ops/sec; est completion in 49 minutes [INSERT: Count=2187645, Max=45951, Min=245, Avg=1826.45, 90=2793, 99=8679, 99.9=19487, 99.99=26207] 
2023-03-08 14:39:00:348 1530 sec: 339284647 operations; 220837.1 current ops/sec; est completion in 49 minutes [INSERT: Count=2208384, Max=166655, Min=234, Avg=1809.21, 90=2785, 99=7671, 99.9=20079, 99.99=102271] 
2023-03-08 14:39:10:348 1540 sec: 341431516 operations; 214686.9 current ops/sec; est completion in 49 minutes [INSERT: Count=2146862, Max=182911, Min=235, Avg=1861.1, 90=2813, 99=7799, 99.9=19615, 99.99=104319] 
2023-03-08 14:39:20:348 1550 sec: 343648767 operations; 221725.1 current ops/sec; est completion in 49 minutes [INSERT: Count=2217250, Max=147711, Min=246, Avg=1801.86, 90=2769, 99=7183, 99.9=18239, 99.99=60223] 
2023-03-08 14:39:30:348 1560 sec: 345862563 operations; 221379.6 current ops/sec; est completion in 49 minutes [INSERT: Count=2213802, Max=42367, Min=248, Avg=1804.84, 90=2791, 99=8351, 99.9=20959, 99.99=28799] 
2023-03-08 14:39:40:348 1570 sec: 348074739 operations; 221217.6 current ops/sec; est completion in 49 minutes [INSERT: Count=2212145, Max=38559, Min=238, Avg=1801.42, 90=2793, 99=7891, 99.9=20799, 99.99=29775] 
2023-03-08 14:39:50:348 1580 sec: 350300515 operations; 222577.6 current ops/sec; est completion in 48 minutes [INSERT: Count=2225800, Max=87935, Min=244, Avg=1799.32, 90=2769, 99=8655, 99.9=21791, 99.99=47551] 
2023-03-08 14:40:00:348 1590 sec: 352537868 operations; 223735.3 current ops/sec; est completion in 48 minutes [INSERT: Count=2237329, Max=35807, Min=231, Avg=1784, 90=2843, 99=8447, 99.9=18015, 99.99=26895] 
2023-03-08 14:40:10:348 1600 sec: 354766866 operations; 222899.8 current ops/sec; est completion in 48 minutes [INSERT: Count=2229024, Max=47455, Min=226, Avg=1794.38, 90=2895, 99=8327, 99.9=19423, 99.99=42463] 
2023-03-08 14:40:20:348 1610 sec: 356996591 operations; 222972.5 current ops/sec; est completion in 48 minutes [INSERT: Count=2229730, Max=38079, Min=226, Avg=1791.87, 90=2941, 99=8207, 99.9=17919, 99.99=24127] 
2023-03-08 14:40:30:348 1620 sec: 359249245 operations; 225265.4 current ops/sec; est completion in 48 minutes [INSERT: Count=2252655, Max=88191, Min=229, Avg=1773.59, 90=2907, 99=8263, 99.9=19087, 99.99=37759] 
2023-03-08 14:40:40:348 1630 sec: 361490602 operations; 224135.7 current ops/sec; est completion in 48 minutes [INSERT: Count=2241357, Max=51167, Min=223, Avg=1782.45, 90=2943, 99=8903, 99.9=21615, 99.99=31679] 
2023-03-08 14:40:50:348 1640 sec: 363747067 operations; 225646.5 current ops/sec; est completion in 47 minutes [INSERT: Count=2256461, Max=42303, Min=230, Avg=1770.46, 90=3027, 99=8943, 99.9=17775, 99.99=26911] 
2023-03-08 14:41:00:348 1650 sec: 366011342 operations; 226427.5 current ops/sec; est completion in 47 minutes [INSERT: Count=2264282, Max=44319, Min=220, Avg=1764.64, 90=3041, 99=8951, 99.9=18895, 99.99=28383] 
2023-03-08 14:41:10:348 1660 sec: 368257192 operations; 224585 current ops/sec; est completion in 47 minutes [INSERT: Count=2245815, Max=38879, Min=225, Avg=1775.12, 90=3101, 99=9631, 99.9=21375, 99.99=30367] 
2023-03-08 14:41:20:348 1670 sec: 370462819 operations; 220562.7 current ops/sec; est completion in 47 minutes [INSERT: Count=2205653, Max=53471, Min=227, Avg=1815.22, 90=3053, 99=9255, 99.9=21439, 99.99=48703] 
2023-03-08 14:41:30:348 1680 sec: 372689090 operations; 222627.1 current ops/sec; est completion in 47 minutes [INSERT: Count=2226287, Max=59455, Min=225, Avg=1794.73, 90=2953, 99=8431, 99.9=19103, 99.99=50047] 
2023-03-08 14:41:40:348 1690 sec: 374865354 operations; 217626.4 current ops/sec; est completion in 46 minutes [INSERT: Count=2176273, Max=90367, Min=230, Avg=1835.92, 90=2909, 99=8059, 99.9=22031, 99.99=35263] 
2023-03-08 14:41:50:348 1700 sec: 377051447 operations; 218609.3 current ops/sec; est completion in 46 minutes [INSERT: Count=2186088, Max=149503, Min=241, Avg=1827.57, 90=2781, 99=7159, 99.9=16991, 99.99=63807] 
2023-03-08 14:42:00:348 1710 sec: 379259470 operations; 220802.3 current ops/sec; est completion in 46 minutes [INSERT: Count=2208019, Max=103295, Min=239, Avg=1809.54, 90=2829, 99=7299, 99.9=19295, 99.99=38879] 
2023-03-08 14:42:10:348 1720 sec: 381471131 operations; 221166.1 current ops/sec; est completion in 46 minutes [INSERT: Count=2211664, Max=45247, Min=230, Avg=1806.48, 90=2903, 99=7639, 99.9=19599, 99.99=30383] 
2023-03-08 14:42:20:348 1730 sec: 383699191 operations; 222806 current ops/sec; est completion in 46 minutes [INSERT: Count=2228063, Max=34495, Min=228, Avg=1793.17, 90=2895, 99=8171, 99.9=17679, 99.99=23679] 
2023-03-08 14:42:30:348 1740 sec: 385911983 operations; 221279.2 current ops/sec; est completion in 46 minutes [INSERT: Count=2212790, Max=32767, Min=219, Avg=1805.64, 90=2915, 99=7623, 99.9=19935, 99.99=26559] 
2023-03-08 14:42:40:352 1750 sec: 388125487 operations; 221261.9 current ops/sec; est completion in 45 minutes [INSERT: Count=2213490, Max=48031, Min=215, Avg=1803.6, 90=2891, 99=7867, 99.9=17295, 99.99=28127] 
2023-03-08 14:42:50:348 1760 sec: 390320267 operations; 219565.83 current ops/sec; est completion in 45 minutes [INSERT: Count=2194783, Max=113407, Min=222, Avg=1821.74, 90=2919, 99=8155, 99.9=18847, 99.99=42559] 
2023-03-08 14:43:00:348 1770 sec: 392508845 operations; 218857.8 current ops/sec; est completion in 45 minutes [INSERT: Count=2188579, Max=130367, Min=231, Avg=1825.66, 90=2845, 99=7487, 99.9=23359, 99.99=87615] 
2023-03-08 14:43:10:348 1780 sec: 394667954 operations; 215910.9 current ops/sec; est completion in 45 minutes [INSERT: Count=2159103, Max=105919, Min=245, Avg=1850.55, 90=2759, 99=6499, 99.9=19855, 99.99=52383] 
2023-03-08 14:43:20:348 1790 sec: 396855281 operations; 218732.7 current ops/sec; est completion in 45 minutes [INSERT: Count=2187327, Max=23407, Min=248, Avg=1826.52, 90=2795, 99=6827, 99.9=15279, 99.99=19599] 
2023-03-08 14:43:30:348 1800 sec: 399052905 operations; 219762.4 current ops/sec; est completion in 45 minutes [INSERT: Count=2197623, Max=50527, Min=254, Avg=1818.02, 90=2793, 99=7419, 99.9=19311, 99.99=36447] 
2023-03-08 14:43:40:348 1810 sec: 401234382 operations; 218147.7 current ops/sec; est completion in 45 minutes [INSERT: Count=2181475, Max=99199, Min=223, Avg=1831.53, 90=2763, 99=7639, 99.9=22079, 99.99=46143] 
2023-03-08 14:43:50:359 1820 sec: 403429641 operations; 219284.69 current ops/sec; est completion in 44 minutes [INSERT: Count=2195261, Max=37151, Min=239, Avg=1819.82, 90=2769, 99=7551, 99.9=17327, 99.99=32895] 
2023-03-08 14:44:00:348 1830 sec: 405629205 operations; 220198.62 current ops/sec; est completion in 44 minutes [INSERT: Count=2199563, Max=182911, Min=227, Avg=1815.62, 90=2773, 99=7435, 99.9=18271, 99.99=140927] 
2023-03-08 14:44:10:348 1840 sec: 407837404 operations; 220819.9 current ops/sec; est completion in 44 minutes [INSERT: Count=2208199, Max=210431, Min=237, Avg=1810.42, 90=2735, 99=7515, 99.9=17855, 99.99=137471] 
2023-03-08 14:44:20:348 1850 sec: 410042731 operations; 220532.7 current ops/sec; est completion in 44 minutes [INSERT: Count=2205326, Max=45567, Min=251, Avg=1811.68, 90=2773, 99=7643, 99.9=19455, 99.99=26495] 
2023-03-08 14:44:30:348 1860 sec: 412310668 operations; 226793.7 current ops/sec; est completion in 44 minutes [INSERT: Count=2267948, Max=48607, Min=230, Avg=1761.52, 90=2731, 99=7395, 99.9=18079, 99.99=26255] 
2023-03-08 14:44:40:348 1870 sec: 414556956 operations; 224628.8 current ops/sec; est completion in 44 minutes [INSERT: Count=2246288, Max=106367, Min=246, Avg=1778.7, 90=2741, 99=7883, 99.9=16511, 99.99=34911] 
2023-03-08 14:44:50:348 1880 sec: 416757893 operations; 220093.7 current ops/sec; est completion in 43 minutes [INSERT: Count=2200933, Max=101055, Min=237, Avg=1815.29, 90=2799, 99=7767, 99.9=18527, 99.99=95679] 
2023-03-08 14:45:00:348 1890 sec: 418899737 operations; 214184.4 current ops/sec; est completion in 43 minutes [INSERT: Count=2141835, Max=297983, Min=221, Avg=1865.4, 90=2841, 99=7371, 99.9=19279, 99.99=249471] 
2023-03-08 14:45:10:348 1900 sec: 421134429 operations; 223469.2 current ops/sec; est completion in 43 minutes [INSERT: Count=2234700, Max=43327, Min=224, Avg=1787.9, 90=2897, 99=8535, 99.9=18703, 99.99=25951] 
2023-03-08 14:45:20:348 1910 sec: 423350555 operations; 221612.6 current ops/sec; est completion in 43 minutes [INSERT: Count=2216124, Max=35775, Min=231, Avg=1802.78, 90=2911, 99=8751, 99.9=19487, 99.99=26863] 
2023-03-08 14:45:30:348 1920 sec: 425612383 operations; 226182.8 current ops/sec; est completion in 43 minutes [INSERT: Count=2261821, Max=49151, Min=222, Avg=1766.4, 90=2965, 99=8879, 99.9=19455, 99.99=29983] 
2023-03-08 14:45:40:348 1930 sec: 427859682 operations; 224729.9 current ops/sec; est completion in 43 minutes [INSERT: Count=2247310, Max=185343, Min=217, Avg=1777.77, 90=2973, 99=8815, 99.9=19599, 99.99=95935] 
2023-03-08 14:45:50:348 1940 sec: 430083452 operations; 222377 current ops/sec; est completion in 42 minutes [INSERT: Count=2223764, Max=248447, Min=204, Avg=1796.71, 90=2995, 99=9039, 99.9=20367, 99.99=169215] 
2023-03-08 14:46:00:348 1950 sec: 432277004 operations; 219355.2 current ops/sec; est completion in 42 minutes [INSERT: Count=2193552, Max=68991, Min=219, Avg=1821.34, 90=2913, 99=8463, 99.9=22495, 99.99=59583] 
2023-03-08 14:46:10:348 1960 sec: 434475844 operations; 219884 current ops/sec; est completion in 42 minutes [INSERT: Count=2198835, Max=31951, Min=220, Avg=1817.13, 90=2905, 99=7995, 99.9=18895, 99.99=25471] 
2023-03-08 14:46:20:348 1970 sec: 436707474 operations; 223163 current ops/sec; est completion in 42 minutes [INSERT: Count=2231630, Max=36831, Min=224, Avg=1790.35, 90=2909, 99=7859, 99.9=18911, 99.99=25983] 
2023-03-08 14:46:30:348 1980 sec: 438971694 operations; 226422 current ops/sec; est completion in 42 minutes [INSERT: Count=2264217, Max=42911, Min=231, Avg=1764.35, 90=2885, 99=8111, 99.9=18047, 99.99=28783] 
2023-03-08 14:46:40:348 1990 sec: 441169700 operations; 219800.6 current ops/sec; est completion in 42 minutes [INSERT: Count=2198007, Max=236671, Min=213, Avg=1817.82, 90=3003, 99=9495, 99.9=21231, 99.99=135295] 
2023-03-08 14:46:50:348 2000 sec: 443401497 operations; 223179.7 current ops/sec; est completion in 41 minutes [INSERT: Count=2231801, Max=131327, Min=231, Avg=1790.22, 90=2825, 99=7979, 99.9=17711, 99.99=48447] 
2023-03-08 14:47:00:348 2010 sec: 445625077 operations; 222358 current ops/sec; est completion in 41 minutes [INSERT: Count=2223578, Max=127679, Min=233, Avg=1796.74, 90=2819, 99=7547, 99.9=21359, 99.99=61215] 
2023-03-08 14:47:10:348 2020 sec: 447824850 operations; 219977.3 current ops/sec; est completion in 41 minutes [INSERT: Count=2199791, Max=43455, Min=221, Avg=1816.32, 90=2929, 99=8407, 99.9=20095, 99.99=29423] 
2023-03-08 14:47:20:348 2030 sec: 450052535 operations; 222768.5 current ops/sec; est completion in 41 minutes [INSERT: Count=2227667, Max=39455, Min=224, Avg=1793.32, 90=2889, 99=7679, 99.9=16543, 99.99=22367] 
2023-03-08 14:47:30:348 2040 sec: 452303378 operations; 225084.3 current ops/sec; est completion in 41 minutes [INSERT: Count=2250838, Max=103231, Min=222, Avg=1774.93, 90=3075, 99=8711, 99.9=18303, 99.99=32095] 
2023-03-08 14:47:40:348 2050 sec: 454568784 operations; 226540.6 current ops/sec; est completion in 41 minutes [INSERT: Count=2265412, Max=45311, Min=226, Avg=1763.81, 90=3137, 99=10703, 99.9=22687, 99.99=33663] 
2023-03-08 14:47:50:348 2060 sec: 456814736 operations; 224595.2 current ops/sec; est completion in 40 minutes [INSERT: Count=2245944, Max=114303, Min=217, Avg=1778.64, 90=3233, 99=11287, 99.9=24927, 99.99=57471] 
2023-03-08 14:48:00:348 2070 sec: 459089416 operations; 227468 current ops/sec; est completion in 40 minutes [INSERT: Count=2274694, Max=105663, Min=219, Avg=1756.55, 90=3065, 99=9943, 99.9=23135, 99.99=67647] 
2023-03-08 14:48:10:348 2080 sec: 461374196 operations; 228478 current ops/sec; est completion in 40 minutes [INSERT: Count=2284771, Max=41695, Min=224, Avg=1748.6, 90=3007, 99=9455, 99.9=19743, 99.99=28575] 
2023-03-08 14:48:20:348 2090 sec: 463633420 operations; 225922.4 current ops/sec; est completion in 40 minutes [INSERT: Count=2259218, Max=43615, Min=213, Avg=1767.45, 90=3029, 99=8759, 99.9=21247, 99.99=37599] 
2023-03-08 14:48:30:348 2100 sec: 465883862 operations; 225044.2 current ops/sec; est completion in 40 minutes [INSERT: Count=2250450, Max=40991, Min=223, Avg=1776.2, 90=3039, 99=9079, 99.9=20239, 99.99=27679] 
2023-03-08 14:48:40:348 2110 sec: 468111559 operations; 222769.7 current ops/sec; est completion in 39 minutes [INSERT: Count=2227702, Max=96063, Min=224, Avg=1793.51, 90=3057, 99=9191, 99.9=20479, 99.99=45087] 
2023-03-08 14:48:50:348 2120 sec: 470358466 operations; 224690.7 current ops/sec; est completion in 39 minutes [INSERT: Count=2246905, Max=52031, Min=222, Avg=1778.03, 90=3001, 99=8623, 99.9=19263, 99.99=45919] 
2023-03-08 14:49:00:348 2130 sec: 472610839 operations; 225237.3 current ops/sec; est completion in 39 minutes [INSERT: Count=2252370, Max=102335, Min=226, Avg=1773.87, 90=2901, 99=9295, 99.9=22015, 99.99=40351] 
2023-03-08 14:49:10:348 2140 sec: 474876625 operations; 226578.6 current ops/sec; est completion in 39 minutes [INSERT: Count=2265791, Max=49887, Min=238, Avg=1763.38, 90=2869, 99=8543, 99.9=21695, 99.99=28143] 
2023-03-08 14:49:20:348 2150 sec: 477116275 operations; 223965 current ops/sec; est completion in 39 minutes [INSERT: Count=2239657, Max=46175, Min=207, Avg=1783.77, 90=2981, 99=9343, 99.9=19647, 99.99=29295] 
2023-03-08 14:49:30:348 2160 sec: 479373354 operations; 225707.9 current ops/sec; est completion in 39 minutes [INSERT: Count=2257067, Max=87807, Min=220, Avg=1769.74, 90=2951, 99=8067, 99.9=19583, 99.99=29791] 
2023-03-08 14:49:40:348 2170 sec: 481623529 operations; 225017.5 current ops/sec; est completion in 38 minutes [INSERT: Count=2250182, Max=40863, Min=214, Avg=1775.93, 90=3063, 99=8895, 99.9=19759, 99.99=27903] 
2023-03-08 14:49:50:348 2180 sec: 483873565 operations; 225003.6 current ops/sec; est completion in 38 minutes [INSERT: Count=2250027, Max=108607, Min=220, Avg=1775.61, 90=3109, 99=9175, 99.9=22847, 99.99=42719] 
2023-03-08 14:50:00:348 2190 sec: 486108838 operations; 223527.3 current ops/sec; est completion in 38 minutes [INSERT: Count=2235281, Max=114239, Min=205, Avg=1787.05, 90=2991, 99=9895, 99.9=23487, 99.99=42783] 
2023-03-08 14:50:10:348 2200 sec: 488365393 operations; 225655.5 current ops/sec; est completion in 38 minutes [INSERT: Count=2256548, Max=110463, Min=226, Avg=1770.47, 90=2999, 99=9895, 99.9=21823, 99.99=40863] 
2023-03-08 14:50:20:348 2210 sec: 490630189 operations; 226479.6 current ops/sec; est completion in 38 minutes [INSERT: Count=2264796, Max=43871, Min=207, Avg=1764.44, 90=3125, 99=10023, 99.9=20351, 99.99=29215] 
2023-03-08 14:50:30:348 2220 sec: 492894946 operations; 226475.7 current ops/sec; est completion in 38 minutes [INSERT: Count=2264764, Max=34911, Min=224, Avg=1764.08, 90=3035, 99=9663, 99.9=20543, 99.99=27455] 
2023-03-08 14:50:40:348 2230 sec: 495132701 operations; 223775.5 current ops/sec; est completion in 37 minutes [INSERT: Count=2237749, Max=41279, Min=215, Avg=1785.18, 90=2911, 99=8543, 99.9=19551, 99.99=28351] 
2023-03-08 14:50:50:348 2240 sec: 497369246 operations; 223654.5 current ops/sec; est completion in 37 minutes [INSERT: Count=2236551, Max=30815, Min=224, Avg=1786.63, 90=2877, 99=7403, 99.9=17263, 99.99=22255] 
2023-03-08 14:51:00:348 2250 sec: 499587183 operations; 221793.7 current ops/sec; est completion in 37 minutes [INSERT: Count=2217943, Max=44383, Min=223, Avg=1801.44, 90=2913, 99=7659, 99.9=19871, 99.99=27599] 
2023-03-08 14:51:10:348 2260 sec: 501785836 operations; 219865.3 current ops/sec; est completion in 37 minutes [INSERT: Count=2198651, Max=46911, Min=223, Avg=1817.21, 90=2933, 99=7643, 99.9=20479, 99.99=27007] 
2023-03-08 14:51:20:348 2270 sec: 503978538 operations; 219270.2 current ops/sec; est completion in 37 minutes [INSERT: Count=2192693, Max=92927, Min=223, Avg=1821.61, 90=2871, 99=7631, 99.9=19071, 99.99=87807] 
2023-03-08 14:51:30:348 2280 sec: 506199715 operations; 222117.7 current ops/sec; est completion in 37 minutes [INSERT: Count=2221179, Max=37119, Min=228, Avg=1799.28, 90=2879, 99=8191, 99.9=18143, 99.99=27663] 
2023-03-08 14:51:40:348 2290 sec: 508405935 operations; 220622 current ops/sec; est completion in 36 minutes [INSERT: Count=2206218, Max=98111, Min=226, Avg=1810.96, 90=2893, 99=8051, 99.9=18591, 99.99=30687] 
2023-03-08 14:51:50:348 2300 sec: 510605906 operations; 219997.1 current ops/sec; est completion in 36 minutes [INSERT: Count=2199970, Max=31007, Min=217, Avg=1815.99, 90=2849, 99=7247, 99.9=16623, 99.99=23183] 
2023-03-08 14:52:00:348 2310 sec: 512774061 operations; 216815.5 current ops/sec; est completion in 36 minutes [INSERT: Count=2168164, Max=185599, Min=219, Avg=1842.89, 90=2809, 99=7507, 99.9=19343, 99.99=108735] 
2023-03-08 14:52:10:348 2320 sec: 514987443 operations; 221338.2 current ops/sec; est completion in 36 minutes [INSERT: Count=2213384, Max=36095, Min=222, Avg=1805.12, 90=2875, 99=7539, 99.9=16343, 99.99=25151] 
2023-03-08 14:52:20:348 2330 sec: 517178437 operations; 219099.4 current ops/sec; est completion in 36 minutes [INSERT: Count=2190984, Max=46015, Min=233, Avg=1823.52, 90=2919, 99=8019, 99.9=17423, 99.99=25823] 
2023-03-08 14:52:30:348 2340 sec: 519371024 operations; 219258.7 current ops/sec; est completion in 36 minutes [INSERT: Count=2192587, Max=41727, Min=225, Avg=1822.24, 90=2901, 99=7595, 99.9=19871, 99.99=33055] 
2023-03-08 14:52:40:348 2350 sec: 521578992 operations; 220796.8 current ops/sec; est completion in 35 minutes [INSERT: Count=2207964, Max=33759, Min=221, Avg=1809.57, 90=2913, 99=7775, 99.9=17599, 99.99=25919] 
2023-03-08 14:52:50:348 2360 sec: 523795275 operations; 221628.3 current ops/sec; est completion in 35 minutes [INSERT: Count=2216283, Max=41791, Min=213, Avg=1802.78, 90=2909, 99=7875, 99.9=17887, 99.99=30223] 
2023-03-08 14:53:00:348 2370 sec: 525992013 operations; 219673.8 current ops/sec; est completion in 35 minutes [INSERT: Count=2196745, Max=161535, Min=227, Avg=1818.77, 90=2841, 99=7431, 99.9=17791, 99.99=96767] 
2023-03-08 14:53:10:348 2380 sec: 528177881 operations; 218586.8 current ops/sec; est completion in 35 minutes [INSERT: Count=2185882, Max=42143, Min=246, Avg=1827.9, 90=2739, 99=7047, 99.9=17535, 99.99=29487] 
2023-03-08 14:53:20:348 2390 sec: 530377050 operations; 219916.9 current ops/sec; est completion in 35 minutes [INSERT: Count=2199163, Max=26399, Min=245, Avg=1816.8, 90=2745, 99=6547, 99.9=17455, 99.99=22063] 
2023-03-08 14:53:30:348 2400 sec: 532562034 operations; 218498.4 current ops/sec; est completion in 35 minutes [INSERT: Count=2184988, Max=49503, Min=237, Avg=1828.55, 90=2753, 99=7151, 99.9=20415, 99.99=29071] 
2023-03-08 14:53:40:348 2410 sec: 534765409 operations; 220337.5 current ops/sec; est completion in 34 minutes [INSERT: Count=2203364, Max=36639, Min=233, Avg=1813.3, 90=2777, 99=6867, 99.9=14967, 99.99=22911] 
2023-03-08 14:53:50:348 2420 sec: 536944279 operations; 217887 current ops/sec; est completion in 34 minutes [INSERT: Count=2178869, Max=157695, Min=229, Avg=1833.74, 90=2765, 99=6899, 99.9=19167, 99.99=65087] 
2023-03-08 14:54:00:348 2430 sec: 539096389 operations; 215211 current ops/sec; est completion in 34 minutes [INSERT: Count=2152111, Max=163711, Min=223, Avg=1856.5, 90=2769, 99=7491, 99.9=23951, 99.99=87231] 
2023-03-08 14:54:10:348 2440 sec: 541273687 operations; 217729.8 current ops/sec; est completion in 34 minutes [INSERT: Count=2177302, Max=112575, Min=240, Avg=1835.01, 90=2741, 99=7011, 99.9=19375, 99.99=31535] 
2023-03-08 14:54:20:348 2450 sec: 543469968 operations; 219628.1 current ops/sec; est completion in 34 minutes [INSERT: Count=2196277, Max=53759, Min=246, Avg=1819.25, 90=2753, 99=6591, 99.9=17087, 99.99=25391] 
2023-03-08 14:54:30:348 2460 sec: 545658503 operations; 218853.5 current ops/sec; est completion in 34 minutes [INSERT: Count=2188550, Max=46911, Min=242, Avg=1825.6, 90=2781, 99=6831, 99.9=17791, 99.99=25999] 
2023-03-08 14:54:40:348 2470 sec: 547836462 operations; 217795.9 current ops/sec; est completion in 33 minutes [INSERT: Count=2177946, Max=121983, Min=245, Avg=1834.49, 90=2783, 99=7455, 99.9=17839, 99.99=51615] 
2023-03-08 14:54:50:348 2480 sec: 550020852 operations; 218439 current ops/sec; est completion in 33 minutes [INSERT: Count=2184387, Max=185215, Min=235, Avg=1829.04, 90=2747, 99=6995, 99.9=17807, 99.99=119679] 
2023-03-08 14:55:00:348 2490 sec: 552195282 operations; 217443 current ops/sec; est completion in 33 minutes [INSERT: Count=2174432, Max=45855, Min=233, Avg=1837.54, 90=2759, 99=7403, 99.9=19871, 99.99=38783] 
2023-03-08 14:55:10:348 2500 sec: 554387103 operations; 219182.1 current ops/sec; est completion in 33 minutes [INSERT: Count=2191833, Max=165375, Min=234, Avg=1822.86, 90=2737, 99=7215, 99.9=17391, 99.99=93247] 
2023-03-08 14:55:20:348 2510 sec: 556592978 operations; 220587.5 current ops/sec; est completion in 33 minutes [INSERT: Count=2205871, Max=27087, Min=237, Avg=1811.25, 90=2733, 99=6699, 99.9=15919, 99.99=20959] 
2023-03-08 14:55:30:348 2520 sec: 558785462 operations; 219248.4 current ops/sec; est completion in 33 minutes [INSERT: Count=2192500, Max=167039, Min=253, Avg=1822.37, 90=2679, 99=6607, 99.9=19039, 99.99=85695] 
2023-03-08 14:55:40:348 2530 sec: 560970048 operations; 218458.6 current ops/sec; est completion in 33 minutes [INSERT: Count=2184566, Max=141055, Min=246, Avg=1828.82, 90=2777, 99=6855, 99.9=17279, 99.99=55359] 
2023-03-08 14:55:50:348 2540 sec: 563155526 operations; 218547.8 current ops/sec; est completion in 32 minutes [INSERT: Count=2185476, Max=204415, Min=239, Avg=1828.25, 90=2775, 99=6743, 99.9=16495, 99.99=126399] 
2023-03-08 14:56:00:348 2550 sec: 565319032 operations; 216350.6 current ops/sec; est completion in 32 minutes [INSERT: Count=2163503, Max=196479, Min=228, Avg=1846.66, 90=2765, 99=6779, 99.9=17535, 99.99=119423] 
2023-03-08 14:56:10:348 2560 sec: 567481218 operations; 216218.6 current ops/sec; est completion in 32 minutes [INSERT: Count=2162216, Max=81407, Min=240, Avg=1847.97, 90=2759, 99=7095, 99.9=19999, 99.99=34143] 
2023-03-08 14:56:20:348 2570 sec: 569640790 operations; 215957.2 current ops/sec; est completion in 32 minutes [INSERT: Count=2159551, Max=103423, Min=242, Avg=1850.11, 90=2793, 99=7015, 99.9=18735, 99.99=98239] 
2023-03-08 14:56:30:348 2580 sec: 571847484 operations; 220669.4 current ops/sec; est completion in 32 minutes [INSERT: Count=2206677, Max=40383, Min=247, Avg=1810.47, 90=2743, 99=6911, 99.9=18095, 99.99=26143] 
2023-03-08 14:56:40:348 2590 sec: 574044864 operations; 219738 current ops/sec; est completion in 32 minutes [INSERT: Count=2197380, Max=52351, Min=244, Avg=1818.35, 90=2767, 99=7299, 99.9=16767, 99.99=26335] 
2023-03-08 14:56:50:348 2600 sec: 576247661 operations; 220279.7 current ops/sec; est completion in 31 minutes [INSERT: Count=2202804, Max=99967, Min=225, Avg=1813.8, 90=2759, 99=6547, 99.9=16031, 99.99=26335] 
2023-03-08 14:57:00:348 2610 sec: 578425796 operations; 217813.5 current ops/sec; est completion in 31 minutes [INSERT: Count=2178142, Max=161535, Min=224, Avg=1834.36, 90=2769, 99=6875, 99.9=17487, 99.99=89727] 
2023-03-08 14:57:10:348 2620 sec: 580628549 operations; 220275.3 current ops/sec; est completion in 31 minutes [INSERT: Count=2202746, Max=39007, Min=238, Avg=1813.81, 90=2747, 99=6831, 99.9=17407, 99.99=25871] 
2023-03-08 14:57:20:348 2630 sec: 582805402 operations; 217685.3 current ops/sec; est completion in 31 minutes [INSERT: Count=2176856, Max=59135, Min=246, Avg=1835.41, 90=2755, 99=7515, 99.9=19295, 99.99=36831] 
2023-03-08 14:57:30:348 2640 sec: 584979359 operations; 217395.7 current ops/sec; est completion in 31 minutes [INSERT: Count=2173954, Max=42047, Min=244, Avg=1837.92, 90=2757, 99=7155, 99.9=19695, 99.99=37503] 
2023-03-08 14:57:40:348 2650 sec: 587169555 operations; 219019.6 current ops/sec; est completion in 31 minutes [INSERT: Count=2190196, Max=111359, Min=223, Avg=1824.23, 90=2725, 99=6703, 99.9=20351, 99.99=58495] 
2023-03-08 14:57:50:354 2660 sec: 589371143 operations; 220048.78 current ops/sec; est completion in 30 minutes [INSERT: Count=2201593, Max=228223, Min=238, Avg=1813.65, 90=2743, 99=6355, 99.9=13671, 99.99=162175] 
2023-03-08 14:58:00:348 2670 sec: 591551746 operations; 218169.38 current ops/sec; est completion in 30 minutes [INSERT: Count=2180618, Max=127999, Min=230, Avg=1833.41, 90=2767, 99=7047, 99.9=17551, 99.99=53119] 
2023-03-08 14:58:10:348 2680 sec: 593740826 operations; 218908 current ops/sec; est completion in 30 minutes [INSERT: Count=2189057, Max=61439, Min=243, Avg=1825.16, 90=2793, 99=6651, 99.9=17439, 99.99=32271] 
2023-03-08 14:58:20:348 2690 sec: 595934223 operations; 219339.7 current ops/sec; est completion in 30 minutes [INSERT: Count=2193404, Max=30895, Min=236, Avg=1821.47, 90=2779, 99=6959, 99.9=20623, 99.99=25391] 
2023-03-08 14:58:30:348 2700 sec: 598138112 operations; 220388.9 current ops/sec; est completion in 30 minutes [INSERT: Count=2203900, Max=138367, Min=235, Avg=1813.02, 90=2725, 99=6931, 99.9=18367, 99.99=53599] 
2023-03-08 14:58:40:348 2710 sec: 600313272 operations; 217516 current ops/sec; est completion in 30 minutes [INSERT: Count=2175146, Max=200575, Min=222, Avg=1836.84, 90=2807, 99=6671, 99.9=17375, 99.99=121855] 
2023-03-08 14:58:50:348 2720 sec: 602495487 operations; 218221.5 current ops/sec; est completion in 29 minutes [INSERT: Count=2182217, Max=160767, Min=235, Avg=1830.97, 90=2777, 99=6719, 99.9=17519, 99.99=90495] 
2023-03-08 14:59:00:348 2730 sec: 604667776 operations; 217228.9 current ops/sec; est completion in 29 minutes [INSERT: Count=2172302, Max=46367, Min=241, Avg=1839.22, 90=2747, 99=7199, 99.9=20191, 99.99=30095] 
2023-03-08 14:59:10:348 2740 sec: 606846269 operations; 217849.3 current ops/sec; est completion in 29 minutes [INSERT: Count=2178501, Max=177919, Min=237, Avg=1834.11, 90=2733, 99=6723, 99.9=21327, 99.99=107007] 
2023-03-08 14:59:20:348 2750 sec: 609064574 operations; 221830.5 current ops/sec; est completion in 29 minutes [INSERT: Count=2218293, Max=27871, Min=245, Avg=1801.02, 90=2775, 99=6663, 99.9=16143, 99.99=23007] 
2023-03-08 14:59:30:348 2760 sec: 611247647 operations; 218307.3 current ops/sec; est completion in 29 minutes [INSERT: Count=2183060, Max=114559, Min=228, Avg=1830.21, 90=2775, 99=7519, 99.9=22527, 99.99=37471] 
2023-03-08 14:59:40:348 2770 sec: 613438485 operations; 219083.8 current ops/sec; est completion in 29 minutes [INSERT: Count=2190854, Max=153727, Min=238, Avg=1823.76, 90=2781, 99=7127, 99.9=17119, 99.99=57791] 
2023-03-08 14:59:50:348 2780 sec: 615645309 operations; 220682.4 current ops/sec; est completion in 28 minutes [INSERT: Count=2206816, Max=177023, Min=241, Avg=1810.28, 90=2763, 99=6703, 99.9=17023, 99.99=93375] 
2023-03-08 15:00:00:348 2790 sec: 617833193 operations; 218788.4 current ops/sec; est completion in 28 minutes [INSERT: Count=2187876, Max=183807, Min=215, Avg=1826.34, 90=2767, 99=6691, 99.9=17167, 99.99=104383] 
2023-03-08 15:00:10:348 2800 sec: 620015435 operations; 218224.2 current ops/sec; est completion in 28 minutes [INSERT: Count=2182233, Max=97407, Min=237, Avg=1830.92, 90=2761, 99=6575, 99.9=18703, 99.99=44991] 
2023-03-08 15:00:20:348 2810 sec: 622199503 operations; 218406.8 current ops/sec; est completion in 28 minutes [INSERT: Count=2184067, Max=56319, Min=248, Avg=1829.36, 90=2737, 99=6675, 99.9=17807, 99.99=42623] 
2023-03-08 15:00:30:348 2820 sec: 624387818 operations; 218831.5 current ops/sec; est completion in 28 minutes [INSERT: Count=2188321, Max=35903, Min=226, Avg=1825.8, 90=2789, 99=6959, 99.9=19423, 99.99=27007] 
2023-03-08 15:00:40:348 2830 sec: 626592832 operations; 220501.4 current ops/sec; est completion in 28 minutes [INSERT: Count=2205013, Max=116287, Min=240, Avg=1811.93, 90=2815, 99=7071, 99.9=16687, 99.99=29567] 
2023-03-08 15:00:50:348 2840 sec: 628781445 operations; 218861.3 current ops/sec; est completion in 27 minutes [INSERT: Count=2188607, Max=124159, Min=233, Avg=1825.52, 90=2745, 99=6719, 99.9=18175, 99.99=56511] 
2023-03-08 15:01:00:348 2850 sec: 630977231 operations; 219578.6 current ops/sec; est completion in 27 minutes [INSERT: Count=2195795, Max=62559, Min=246, Avg=1819.63, 90=2747, 99=6735, 99.9=17663, 99.99=27375] 
2023-03-08 15:01:10:348 2860 sec: 633160558 operations; 218332.7 current ops/sec; est completion in 27 minutes [INSERT: Count=2183321, Max=105535, Min=251, Avg=1829.97, 90=2749, 99=7063, 99.9=18223, 99.99=35903] 
2023-03-08 15:01:20:348 2870 sec: 635336451 operations; 217589.3 current ops/sec; est completion in 27 minutes [INSERT: Count=2175895, Max=35231, Min=243, Avg=1836.27, 90=2799, 99=6835, 99.9=17503, 99.99=26095] 
2023-03-08 15:01:30:348 2880 sec: 637509619 operations; 217316.8 current ops/sec; est completion in 27 minutes [INSERT: Count=2173175, Max=122815, Min=245, Avg=1838.49, 90=2741, 99=6607, 99.9=18223, 99.99=40511] 
2023-03-08 15:01:40:348 2890 sec: 639675650 operations; 216603.1 current ops/sec; est completion in 27 minutes [INSERT: Count=2166024, Max=232959, Min=231, Avg=1844.6, 90=2765, 99=6859, 99.9=18655, 99.99=129727] 
2023-03-08 15:01:50:348 2900 sec: 641889031 operations; 221338.1 current ops/sec; est completion in 26 minutes [INSERT: Count=2213379, Max=34303, Min=239, Avg=1805.15, 90=2805, 99=6963, 99.9=18143, 99.99=27407] 
2023-03-08 15:02:00:348 2910 sec: 644067777 operations; 217874.6 current ops/sec; est completion in 26 minutes [INSERT: Count=2178750, Max=119295, Min=240, Avg=1831.92, 90=2799, 99=7095, 99.9=17807, 99.99=32671] 
2023-03-08 15:02:10:348 2920 sec: 646239571 operations; 217179.4 current ops/sec; est completion in 26 minutes [INSERT: Count=2171798, Max=203647, Min=241, Avg=1841.62, 90=2757, 99=7179, 99.9=16543, 99.99=123199] 
2023-03-08 15:02:20:348 2930 sec: 648382259 operations; 214268.8 current ops/sec; est completion in 26 minutes [INSERT: Count=2142688, Max=38399, Min=238, Avg=1864.62, 90=2807, 99=7347, 99.9=20799, 99.99=27759] 
2023-03-08 15:02:30:348 2940 sec: 650568958 operations; 218669.9 current ops/sec; est completion in 26 minutes [INSERT: Count=2186697, Max=107711, Min=243, Avg=1827.19, 90=2773, 99=6691, 99.9=17903, 99.99=42175] 
2023-03-08 15:02:40:348 2950 sec: 652742139 operations; 217318.1 current ops/sec; est completion in 26 minutes [INSERT: Count=2173177, Max=43199, Min=246, Avg=1838.51, 90=2757, 99=6995, 99.9=18543, 99.99=27167] 
2023-03-08 15:02:50:348 2960 sec: 654929053 operations; 218691.4 current ops/sec; est completion in 26 minutes [INSERT: Count=2186912, Max=36063, Min=253, Avg=1827.02, 90=2769, 99=6579, 99.9=16495, 99.99=29439] 
2023-03-08 15:03:00:348 2970 sec: 657113479 operations; 218442.6 current ops/sec; est completion in 25 minutes [INSERT: Count=2184430, Max=118399, Min=240, Avg=1828.99, 90=2759, 99=7183, 99.9=18399, 99.99=45375] 
2023-03-08 15:03:10:348 2980 sec: 659300465 operations; 218698.6 current ops/sec; est completion in 25 minutes [INSERT: Count=2186980, Max=37215, Min=227, Avg=1826.85, 90=2787, 99=7219, 99.9=17471, 99.99=25631] 
2023-03-08 15:03:20:348 2990 sec: 661500244 operations; 219977.9 current ops/sec; est completion in 25 minutes [INSERT: Count=2199790, Max=31087, Min=249, Avg=1816.32, 90=2745, 99=6823, 99.9=16103, 99.99=24207] 
2023-03-08 15:03:30:348 3000 sec: 663678332 operations; 217808.8 current ops/sec; est completion in 25 minutes [INSERT: Count=2178078, Max=44287, Min=236, Avg=1834.37, 90=2767, 99=7039, 99.9=18175, 99.99=28335] 
2023-03-08 15:03:40:348 3010 sec: 665854766 operations; 217643.4 current ops/sec; est completion in 25 minutes [INSERT: Count=2176438, Max=121855, Min=236, Avg=1835.76, 90=2759, 99=7083, 99.9=18031, 99.99=40927] 
2023-03-08 15:03:50:348 3020 sec: 668050581 operations; 219581.5 current ops/sec; est completion in 25 minutes [INSERT: Count=2195806, Max=36959, Min=239, Avg=1819.57, 90=2741, 99=6523, 99.9=16319, 99.99=26319] 
2023-03-08 15:04:00:348 3030 sec: 670202863 operations; 215228.2 current ops/sec; est completion in 24 minutes [INSERT: Count=2152291, Max=207231, Min=221, Avg=1856.17, 90=2745, 99=6911, 99.9=18575, 99.99=143871] 
2023-03-08 15:04:10:348 3040 sec: 672377716 operations; 217485.3 current ops/sec; est completion in 24 minutes [INSERT: Count=2174859, Max=147455, Min=241, Avg=1837.36, 90=2765, 99=7391, 99.9=20495, 99.99=99839] 
2023-03-08 15:04:20:348 3050 sec: 674580934 operations; 220321.8 current ops/sec; est completion in 24 minutes [INSERT: Count=2203213, Max=29247, Min=244, Avg=1813.47, 90=2787, 99=6883, 99.9=17935, 99.99=25103] 
2023-03-08 15:04:30:348 3060 sec: 676775303 operations; 219436.9 current ops/sec; est completion in 24 minutes [INSERT: Count=2194368, Max=41695, Min=243, Avg=1820.75, 90=2741, 99=6619, 99.9=18975, 99.99=28207] 
2023-03-08 15:04:40:348 3070 sec: 678969917 operations; 219461.4 current ops/sec; est completion in 24 minutes [INSERT: Count=2194621, Max=139007, Min=227, Avg=1820.53, 90=2731, 99=6751, 99.9=17423, 99.99=60031] 
2023-03-08 15:04:50:348 3080 sec: 681141799 operations; 217188.2 current ops/sec; est completion in 24 minutes [INSERT: Count=2171874, Max=36863, Min=243, Avg=1839.65, 90=2789, 99=7267, 99.9=20447, 99.99=29855] 
2023-03-08 15:05:00:348 3090 sec: 683292681 operations; 215088.2 current ops/sec; est completion in 23 minutes [INSERT: Count=2150878, Max=179327, Min=241, Avg=1857.51, 90=2787, 99=6879, 99.9=20143, 99.99=88703] 
2023-03-08 15:05:10:348 3100 sec: 685474888 operations; 218220.7 current ops/sec; est completion in 23 minutes [INSERT: Count=2182208, Max=137087, Min=246, Avg=1831.01, 90=2721, 99=6547, 99.9=18399, 99.99=131711] 
2023-03-08 15:05:20:348 3110 sec: 687684385 operations; 220949.7 current ops/sec; est completion in 23 minutes [INSERT: Count=2209501, Max=35359, Min=245, Avg=1808.3, 90=2737, 99=6695, 99.9=16847, 99.99=27983] 
2023-03-08 15:05:30:348 3120 sec: 689882906 operations; 219852.1 current ops/sec; est completion in 23 minutes [INSERT: Count=2198529, Max=36639, Min=247, Avg=1817.33, 90=2741, 99=7375, 99.9=18127, 99.99=26895] 
2023-03-08 15:05:40:348 3130 sec: 692066819 operations; 218391.3 current ops/sec; est completion in 23 minutes [INSERT: Count=2183903, Max=135551, Min=231, Avg=1829.47, 90=2763, 99=6895, 99.9=17663, 99.99=46079] 
2023-03-08 15:05:50:348 3140 sec: 694265449 operations; 219863 current ops/sec; est completion in 23 minutes [INSERT: Count=2198629, Max=37215, Min=247, Avg=1817.22, 90=2781, 99=6687, 99.9=17119, 99.99=25183] 
2023-03-08 15:06:00:348 3150 sec: 696462763 operations; 219731.4 current ops/sec; est completion in 22 minutes [INSERT: Count=2197334, Max=42271, Min=242, Avg=1818.3, 90=2773, 99=7051, 99.9=17951, 99.99=25743] 
2023-03-08 15:06:10:348 3160 sec: 698651300 operations; 218853.7 current ops/sec; est completion in 22 minutes [INSERT: Count=2188530, Max=41887, Min=242, Avg=1825.72, 90=2751, 99=6807, 99.9=17567, 99.99=26527] 
2023-03-08 15:06:20:348 3170 sec: 700845777 operations; 219447.7 current ops/sec; est completion in 22 minutes [INSERT: Count=2194471, Max=33119, Min=232, Avg=1820.66, 90=2749, 99=6399, 99.9=17119, 99.99=27391] 
2023-03-08 15:06:30:348 3180 sec: 703010252 operations; 216447.5 current ops/sec; est completion in 22 minutes [INSERT: Count=2164482, Max=234367, Min=243, Avg=1845.91, 90=2723, 99=6999, 99.9=19423, 99.99=161919] 
2023-03-08 15:06:40:348 3190 sec: 705165723 operations; 215547.1 current ops/sec; est completion in 22 minutes [INSERT: Count=2155473, Max=160127, Min=243, Avg=1853.68, 90=2781, 99=7355, 99.9=19647, 99.99=69631] 
2023-03-08 15:06:50:348 3200 sec: 707297159 operations; 213143.6 current ops/sec; est completion in 22 minutes [INSERT: Count=2131435, Max=335359, Min=232, Avg=1874.51, 90=2731, 99=7379, 99.9=22255, 99.99=272639] 
2023-03-08 15:07:00:348 3210 sec: 709458355 operations; 216119.6 current ops/sec; est completion in 21 minutes [INSERT: Count=2161190, Max=253311, Min=216, Avg=1848.75, 90=2739, 99=6527, 99.9=19631, 99.99=181887] 
2023-03-08 15:07:10:348 3220 sec: 711638684 operations; 218032.9 current ops/sec; est completion in 21 minutes [INSERT: Count=2180317, Max=40479, Min=245, Avg=1832.46, 90=2809, 99=6655, 99.9=17295, 99.99=25199] 
2023-03-08 15:07:20:348 3230 sec: 713845585 operations; 220690.1 current ops/sec; est completion in 21 minutes [INSERT: Count=2206928, Max=32047, Min=248, Avg=1810.45, 90=2749, 99=6775, 99.9=16199, 99.99=27103] 
2023-03-08 15:07:30:348 3240 sec: 716035849 operations; 219026.4 current ops/sec; est completion in 21 minutes [INSERT: Count=2190252, Max=36959, Min=237, Avg=1824.22, 90=2783, 99=6855, 99.9=17967, 99.99=25935] 
2023-03-08 15:07:40:348 3250 sec: 718201722 operations; 216587.3 current ops/sec; est completion in 21 minutes [INSERT: Count=2165872, Max=59711, Min=245, Avg=1844.68, 90=2759, 99=7327, 99.9=22671, 99.99=29343] 
2023-03-08 15:07:50:348 3260 sec: 720401486 operations; 219976.4 current ops/sec; est completion in 21 minutes [INSERT: Count=2199778, Max=38367, Min=242, Avg=1816.35, 90=2761, 99=6979, 99.9=16655, 99.99=21039] 
2023-03-08 15:08:00:348 3270 sec: 722579595 operations; 217810.9 current ops/sec; est completion in 20 minutes [INSERT: Count=2178101, Max=112575, Min=245, Avg=1834.34, 90=2775, 99=6399, 99.9=18127, 99.99=61471] 
2023-03-08 15:08:10:348 3280 sec: 724741003 operations; 216140.8 current ops/sec; est completion in 20 minutes [INSERT: Count=2161401, Max=122879, Min=234, Avg=1848.56, 90=2753, 99=6871, 99.9=18639, 99.99=71935] 
2023-03-08 15:08:20:348 3290 sec: 726925803 operations; 218480 current ops/sec; est completion in 20 minutes [INSERT: Count=2184828, Max=38495, Min=241, Avg=1828.73, 90=2755, 99=6991, 99.9=17823, 99.99=25679] 
2023-03-08 15:08:30:348 3300 sec: 729129274 operations; 220347.1 current ops/sec; est completion in 20 minutes [INSERT: Count=2203446, Max=167039, Min=230, Avg=1813.17, 90=2775, 99=7467, 99.9=19279, 99.99=82751] 
2023-03-08 15:08:40:348 3310 sec: 731312125 operations; 218285.1 current ops/sec; est completion in 20 minutes [INSERT: Count=2182839, Max=70463, Min=239, Avg=1830.34, 90=2835, 99=7863, 99.9=19711, 99.99=34463] 
2023-03-08 15:08:50:348 3320 sec: 733456137 operations; 214401.2 current ops/sec; est completion in 20 minutes [INSERT: Count=2144024, Max=308735, Min=229, Avg=1863.47, 90=2793, 99=6975, 99.9=17935, 99.99=249215] 
2023-03-08 15:09:00:348 3330 sec: 735598932 operations; 214279.5 current ops/sec; est completion in 19 minutes [INSERT: Count=2142804, Max=297215, Min=219, Avg=1864.63, 90=2745, 99=7479, 99.9=20303, 99.99=256895] 
2023-03-08 15:09:10:348 3340 sec: 737790860 operations; 219192.8 current ops/sec; est completion in 19 minutes [INSERT: Count=2191921, Max=131711, Min=245, Avg=1822.79, 90=2793, 99=7879, 99.9=21215, 99.99=43071] 
2023-03-08 15:09:20:348 3350 sec: 739988533 operations; 219767.3 current ops/sec; est completion in 19 minutes [INSERT: Count=2197671, Max=47807, Min=236, Avg=1818.01, 90=2789, 99=7351, 99.9=20415, 99.99=26383] 
2023-03-08 15:09:30:348 3360 sec: 742240928 operations; 225239.5 current ops/sec; est completion in 19 minutes [INSERT: Count=2252396, Max=50463, Min=232, Avg=1773.77, 90=2761, 99=6831, 99.9=15591, 99.99=26063] 
2023-03-08 15:09:40:348 3370 sec: 744442018 operations; 220109 current ops/sec; est completion in 19 minutes [INSERT: Count=2201075, Max=250239, Min=220, Avg=1815.2, 90=2777, 99=7683, 99.9=19135, 99.99=175359] 
2023-03-08 15:09:50:348 3380 sec: 746664509 operations; 222249.1 current ops/sec; est completion in 19 minutes [INSERT: Count=2222489, Max=111423, Min=238, Avg=1797.7, 90=2787, 99=7443, 99.9=18527, 99.99=48927] 
2023-03-08 15:10:00:348 3390 sec: 748815441 operations; 215093.2 current ops/sec; est completion in 18 minutes [INSERT: Count=2150944, Max=270847, Min=228, Avg=1857.49, 90=2795, 99=6967, 99.9=20847, 99.99=193023] 
2023-03-08 15:10:10:348 3400 sec: 751009496 operations; 219405.5 current ops/sec; est completion in 18 minutes [INSERT: Count=2194063, Max=151807, Min=252, Avg=1821.13, 90=2743, 99=6551, 99.9=20319, 99.99=71487] 
2023-03-08 15:10:20:348 3410 sec: 753193885 operations; 218438.9 current ops/sec; est completion in 18 minutes [INSERT: Count=2184372, Max=29551, Min=244, Avg=1829.02, 90=2795, 99=6455, 99.9=17119, 99.99=23359] 
2023-03-08 15:10:30:348 3420 sec: 755393629 operations; 219974.4 current ops/sec; est completion in 18 minutes [INSERT: Count=2199753, Max=75647, Min=230, Avg=1816.34, 90=2739, 99=6319, 99.9=16863, 99.99=29247] 
2023-03-08 15:10:40:348 3430 sec: 757576332 operations; 218270.3 current ops/sec; est completion in 18 minutes [INSERT: Count=2182708, Max=36959, Min=256, Avg=1830.49, 90=2751, 99=6451, 99.9=16431, 99.99=26591] 
2023-03-08 15:10:50:348 3440 sec: 759748954 operations; 217262.2 current ops/sec; est completion in 18 minutes [INSERT: Count=2172612, Max=208895, Min=237, Avg=1838.93, 90=2729, 99=6491, 99.9=17039, 99.99=121919] 
2023-03-08 15:11:00:348 3450 sec: 761904384 operations; 215543 current ops/sec; est completion in 17 minutes [INSERT: Count=2155432, Max=178431, Min=224, Avg=1853.68, 90=2763, 99=6927, 99.9=20431, 99.99=127231] 
2023-03-08 15:11:10:348 3460 sec: 764072133 operations; 216774.9 current ops/sec; est completion in 17 minutes [INSERT: Count=2167755, Max=217087, Min=244, Avg=1843.11, 90=2771, 99=6807, 99.9=20719, 99.99=139903] 
2023-03-08 15:11:20:348 3470 sec: 766268989 operations; 219685.6 current ops/sec; est completion in 17 minutes [INSERT: Count=2196848, Max=31231, Min=240, Avg=1818.69, 90=2769, 99=7119, 99.9=16415, 99.99=22623] 
2023-03-08 15:11:30:348 3480 sec: 768459613 operations; 219062.4 current ops/sec; est completion in 17 minutes [INSERT: Count=2190634, Max=108735, Min=245, Avg=1823.85, 90=2745, 99=6751, 99.9=17743, 99.99=36991] 
2023-03-08 15:11:40:348 3490 sec: 770630664 operations; 217105.1 current ops/sec; est completion in 17 minutes [INSERT: Count=2171038, Max=54559, Min=252, Avg=1840.3, 90=2803, 99=6583, 99.9=17599, 99.99=51647] 
2023-03-08 15:11:50:348 3500 sec: 772807565 operations; 217690.1 current ops/sec; est completion in 17 minutes [INSERT: Count=2176906, Max=29823, Min=240, Avg=1835.37, 90=2785, 99=6819, 99.9=15543, 99.99=21327] 
2023-03-08 15:12:00:348 3510 sec: 774999323 operations; 219175.8 current ops/sec; est completion in 17 minutes [INSERT: Count=2191761, Max=79743, Min=252, Avg=1822.99, 90=2775, 99=6383, 99.9=16279, 99.99=28015] 
2023-03-08 15:12:10:348 3520 sec: 777197035 operations; 219771.2 current ops/sec; est completion in 16 minutes [INSERT: Count=2197700, Max=44095, Min=243, Avg=1817.99, 90=2745, 99=6703, 99.9=17919, 99.99=32095] 
2023-03-08 15:12:20:348 3530 sec: 779350841 operations; 215380.6 current ops/sec; est completion in 16 minutes [INSERT: Count=2153807, Max=211199, Min=241, Avg=1855.08, 90=2737, 99=6875, 99.9=17647, 99.99=168447] 
2023-03-08 15:12:30:348 3540 sec: 781549343 operations; 219850.2 current ops/sec; est completion in 16 minutes [INSERT: Count=2198520, Max=69887, Min=233, Avg=1817.36, 90=2777, 99=6747, 99.9=15631, 99.99=26495] 
2023-03-08 15:12:40:348 3550 sec: 783719391 operations; 217004.8 current ops/sec; est completion in 16 minutes [INSERT: Count=2170038, Max=53727, Min=223, Avg=1841.14, 90=2893, 99=7891, 99.9=19599, 99.99=30175] 
2023-03-08 15:12:50:363 3560 sec: 785922981 operations; 220028.96 current ops/sec; est completion in 16 minutes [INSERT: Count=2203600, Max=39839, Min=232, Avg=1813.24, 90=2889, 99=7419, 99.9=17103, 99.99=23775] 
2023-03-08 15:13:00:348 3570 sec: 788104804 operations; 218510.07 current ops/sec; est completion in 16 minutes [INSERT: Count=2181818, Max=118463, Min=223, Avg=1831.06, 90=2913, 99=7791, 99.9=19679, 99.99=51519] 
2023-03-08 15:13:10:348 3580 sec: 790274346 operations; 216954.2 current ops/sec; est completion in 15 minutes [INSERT: Count=2169556, Max=192127, Min=218, Avg=1841.76, 90=2845, 99=7795, 99.9=21743, 99.99=102655] 
2023-03-08 15:13:20:348 3590 sec: 792471432 operations; 219708.6 current ops/sec; est completion in 15 minutes [INSERT: Count=2197072, Max=35839, Min=234, Avg=1818.49, 90=2827, 99=6971, 99.9=15807, 99.99=22543] 
2023-03-08 15:13:30:348 3600 sec: 794640798 operations; 216936.6 current ops/sec; est completion in 15 minutes [INSERT: Count=2169395, Max=79103, Min=241, Avg=1841.72, 90=2787, 99=7083, 99.9=19519, 99.99=33439] 
2023-03-08 15:13:40:348 3610 sec: 796808637 operations; 216783.9 current ops/sec; est completion in 15 minutes [INSERT: Count=2167803, Max=37215, Min=251, Avg=1843.08, 90=2761, 99=6883, 99.9=18111, 99.99=28511] 
2023-03-08 15:13:50:348 3620 sec: 798985995 operations; 217735.8 current ops/sec; est completion in 15 minutes [INSERT: Count=2177360, Max=73407, Min=247, Avg=1833.88, 90=2789, 99=6903, 99.9=19039, 99.99=25503] 
2023-03-08 15:14:00:348 3630 sec: 801130259 operations; 214426.4 current ops/sec; est completion in 15 minutes [INSERT: Count=2144262, Max=219647, Min=221, Avg=1864.4, 90=2769, 99=6747, 99.9=18159, 99.99=190207] 
2023-03-08 15:14:10:348 3640 sec: 803329891 operations; 219963.2 current ops/sec; est completion in 14 minutes [INSERT: Count=2199628, Max=138495, Min=243, Avg=1816.49, 90=2787, 99=6767, 99.9=16767, 99.99=59967] 
2023-03-08 15:14:20:348 3650 sec: 805505473 operations; 217558.2 current ops/sec; est completion in 14 minutes [INSERT: Count=2175581, Max=40479, Min=250, Avg=1836.47, 90=2769, 99=6887, 99.9=18367, 99.99=24415] 
2023-03-08 15:14:30:348 3660 sec: 807690143 operations; 218467 current ops/sec; est completion in 14 minutes [INSERT: Count=2184670, Max=125375, Min=223, Avg=1828.89, 90=2765, 99=6999, 99.9=17871, 99.99=47807] 
2023-03-08 15:14:40:348 3670 sec: 809851731 operations; 216158.8 current ops/sec; est completion in 14 minutes [INSERT: Count=2161595, Max=129855, Min=241, Avg=1848.36, 90=2823, 99=6895, 99.9=21359, 99.99=43423] 
2023-03-08 15:14:50:348 3680 sec: 812037923 operations; 218619.2 current ops/sec; est completion in 14 minutes [INSERT: Count=2186184, Max=121599, Min=246, Avg=1827.43, 90=2739, 99=6495, 99.9=15375, 99.99=49311] 
2023-03-08 15:15:00:348 3690 sec: 814196250 operations; 215832.7 current ops/sec; est completion in 14 minutes [INSERT: Count=2158332, Max=203391, Min=210, Avg=1851.34, 90=2737, 99=6823, 99.9=17807, 99.99=160255] 
2023-03-08 15:15:10:348 3700 sec: 816373495 operations; 217724.5 current ops/sec; est completion in 13 minutes [INSERT: Count=2177252, Max=110399, Min=244, Avg=1835.04, 90=2763, 99=6839, 99.9=17903, 99.99=40383] 
2023-03-08 15:15:20:348 3710 sec: 818534127 operations; 216063.2 current ops/sec; est completion in 13 minutes [INSERT: Count=2160621, Max=43583, Min=248, Avg=1849.29, 90=2815, 99=7199, 99.9=16783, 99.99=33215] 
2023-03-08 15:15:30:348 3720 sec: 820704283 operations; 217015.6 current ops/sec; est completion in 13 minutes [INSERT: Count=2170157, Max=194687, Min=245, Avg=1841.03, 90=2743, 99=6687, 99.9=21503, 99.99=124799] 
2023-03-08 15:15:40:348 3730 sec: 822912171 operations; 220788.8 current ops/sec; est completion in 13 minutes [INSERT: Count=2207894, Max=42111, Min=243, Avg=1809.65, 90=2765, 99=7059, 99.9=17695, 99.99=26319] 
2023-03-08 15:15:50:348 3740 sec: 825114704 operations; 220253.3 current ops/sec; est completion in 13 minutes [INSERT: Count=2202533, Max=42559, Min=234, Avg=1814.02, 90=2819, 99=7211, 99.9=17295, 99.99=26303] 
2023-03-08 15:16:00:350 3750 sec: 827286125 operations; 217098.68 current ops/sec; est completion in 13 minutes [INSERT: Count=2171417, Max=196735, Min=219, Avg=1837.32, 90=2781, 99=7467, 99.9=17135, 99.99=136063] 
2023-03-08 15:16:10:348 3760 sec: 829520829 operations; 223515.1 current ops/sec; est completion in 12 minutes [INSERT: Count=2234706, Max=89471, Min=255, Avg=1790.44, 90=2749, 99=7515, 99.9=17663, 99.99=27983] 
2023-03-08 15:16:20:348 3770 sec: 831743285 operations; 222245.6 current ops/sec; est completion in 12 minutes [INSERT: Count=2222460, Max=33151, Min=233, Avg=1797.72, 90=2797, 99=7719, 99.9=17327, 99.99=22863] 
2023-03-08 15:16:30:348 3780 sec: 833943314 operations; 220002.9 current ops/sec; est completion in 12 minutes [INSERT: Count=2200015, Max=177791, Min=235, Avg=1816.06, 90=2813, 99=7707, 99.9=21935, 99.99=111103] 
2023-03-08 15:16:40:348 3790 sec: 836144087 operations; 220077.3 current ops/sec; est completion in 12 minutes [INSERT: Count=2200780, Max=49663, Min=239, Avg=1815.46, 90=2779, 99=8127, 99.9=19471, 99.99=27551] 
2023-03-08 15:16:50:348 3800 sec: 838347645 operations; 220355.8 current ops/sec; est completion in 12 minutes [INSERT: Count=2203558, Max=212607, Min=240, Avg=1813.13, 90=2755, 99=7143, 99.9=17039, 99.99=157951] 
2023-03-08 15:17:00:348 3810 sec: 840528711 operations; 218106.6 current ops/sec; est completion in 12 minutes [INSERT: Count=2181064, Max=150271, Min=231, Avg=1831.75, 90=2755, 99=7559, 99.9=25791, 99.99=109439] 
2023-03-08 15:17:10:348 3820 sec: 842745797 operations; 221708.6 current ops/sec; est completion in 11 minutes [INSERT: Count=2217081, Max=35231, Min=231, Avg=1802.2, 90=2775, 99=6695, 99.9=16863, 99.99=25231] 
2023-03-08 15:17:20:354 3830 sec: 844939981 operations; 219418.4 current ops/sec; est completion in 11 minutes [INSERT: Count=2194207, Max=27967, Min=249, Avg=1821.85, 90=2795, 99=6943, 99.9=17023, 99.99=22991] 
2023-03-08 15:17:30:348 3840 sec: 847129825 operations; 218984.4 current ops/sec; est completion in 11 minutes [INSERT: Count=2189845, Max=125567, Min=233, Avg=1823.63, 90=2795, 99=6867, 99.9=16863, 99.99=73727] 
2023-03-08 15:17:40:348 3850 sec: 849332046 operations; 220222.1 current ops/sec; est completion in 11 minutes [INSERT: Count=2202236, Max=105215, Min=241, Avg=1814.01, 90=2785, 99=7631, 99.9=21327, 99.99=40287] 
2023-03-08 15:17:50:348 3860 sec: 851579876 operations; 224783 current ops/sec; est completion in 11 minutes [INSERT: Count=2247803, Max=26607, Min=242, Avg=1777.46, 90=2759, 99=7239, 99.9=15255, 99.99=20191] 
2023-03-08 15:18:00:348 3870 sec: 853794407 operations; 221453.1 current ops/sec; est completion in 11 minutes [INSERT: Count=2214530, Max=199807, Min=238, Avg=1804.18, 90=2785, 99=7335, 99.9=17727, 99.99=118527] 
2023-03-08 15:18:10:348 3880 sec: 855989471 operations; 219506.4 current ops/sec; est completion in 10 minutes [INSERT: Count=2195062, Max=208127, Min=247, Avg=1820.25, 90=2759, 99=7627, 99.9=19039, 99.99=135039] 
2023-03-08 15:18:20:348 3890 sec: 858202121 operations; 221265 current ops/sec; est completion in 10 minutes [INSERT: Count=2212642, Max=35423, Min=242, Avg=1805.68, 90=2815, 99=7271, 99.9=17071, 99.99=24095] 
2023-03-08 15:18:30:348 3900 sec: 860380604 operations; 217848.3 current ops/sec; est completion in 10 minutes [INSERT: Count=2178492, Max=103487, Min=244, Avg=1834.01, 90=2837, 99=7507, 99.9=20943, 99.99=39327] 
2023-03-08 15:18:40:348 3910 sec: 862581230 operations; 220062.6 current ops/sec; est completion in 10 minutes [INSERT: Count=2200622, Max=52959, Min=241, Avg=1815.57, 90=2795, 99=8031, 99.9=21103, 99.99=30623] 
2023-03-08 15:18:50:348 3920 sec: 864769044 operations; 218781.4 current ops/sec; est completion in 10 minutes [INSERT: Count=2187811, Max=78335, Min=235, Avg=1826.02, 90=2845, 99=7727, 99.9=16879, 99.99=25663] 
2023-03-08 15:19:00:348 3930 sec: 866957119 operations; 218807.5 current ops/sec; est completion in 10 minutes [INSERT: Count=2188079, Max=171903, Min=202, Avg=1826.11, 90=2785, 99=7395, 99.9=19455, 99.99=116287] 
2023-03-08 15:19:10:348 3940 sec: 869173687 operations; 221656.8 current ops/sec; est completion in 9 minutes [INSERT: Count=2216569, Max=120511, Min=231, Avg=1802.56, 90=2827, 99=7507, 99.9=18127, 99.99=36991] 
2023-03-08 15:19:20:348 3950 sec: 871390861 operations; 221717.4 current ops/sec; est completion in 9 minutes [INSERT: Count=2217175, Max=39359, Min=222, Avg=1801.78, 90=2891, 99=8407, 99.9=19007, 99.99=25951] 
2023-03-08 15:19:30:348 3960 sec: 873616171 operations; 222531 current ops/sec; est completion in 9 minutes [INSERT: Count=2225313, Max=45407, Min=225, Avg=1795.56, 90=2935, 99=8543, 99.9=17823, 99.99=26127] 
2023-03-08 15:19:40:348 3970 sec: 875783234 operations; 216706.3 current ops/sec; est completion in 9 minutes [INSERT: Count=2167066, Max=45759, Min=229, Avg=1843.75, 90=3007, 99=8807, 99.9=20223, 99.99=28767] 
2023-03-08 15:19:50:348 3980 sec: 877979603 operations; 219636.9 current ops/sec; est completion in 9 minutes [INSERT: Count=2196360, Max=183551, Min=213, Avg=1819.09, 90=2905, 99=7407, 99.9=17103, 99.99=109439] 
2023-03-08 15:20:00:348 3990 sec: 880169365 operations; 218976.2 current ops/sec; est completion in 9 minutes [INSERT: Count=2189763, Max=60095, Min=221, Avg=1824.54, 90=2883, 99=7735, 99.9=21967, 99.99=41087] 
2023-03-08 15:20:10:348 4000 sec: 882371229 operations; 220186.4 current ops/sec; est completion in 8 minutes [INSERT: Count=2201865, Max=147327, Min=209, Avg=1814.55, 90=2783, 99=7455, 99.9=20207, 99.99=89791] 
2023-03-08 15:20:20:348 4010 sec: 884568843 operations; 219761.4 current ops/sec; est completion in 8 minutes [INSERT: Count=2197616, Max=38911, Min=248, Avg=1818.09, 90=2809, 99=7103, 99.9=17151, 99.99=24095] 
2023-03-08 15:20:30:348 4020 sec: 886756672 operations; 218782.9 current ops/sec; est completion in 8 minutes [INSERT: Count=2187823, Max=55711, Min=229, Avg=1826.17, 90=2847, 99=7503, 99.9=17887, 99.99=28735] 
2023-03-08 15:20:40:348 4030 sec: 888940007 operations; 218333.5 current ops/sec; est completion in 8 minutes [INSERT: Count=2183340, Max=45055, Min=239, Avg=1829.65, 90=2889, 99=8551, 99.9=19823, 99.99=29327] 
2023-03-08 15:20:50:348 4040 sec: 891146903 operations; 220689.6 current ops/sec; est completion in 8 minutes [INSERT: Count=2206892, Max=109311, Min=225, Avg=1810.63, 90=2893, 99=8167, 99.9=19855, 99.99=46015] 
2023-03-08 15:21:00:348 4050 sec: 893328920 operations; 218201.7 current ops/sec; est completion in 8 minutes [INSERT: Count=2182021, Max=113855, Min=230, Avg=1831.05, 90=2823, 99=8179, 99.9=20735, 99.99=49183] 
2023-03-08 15:21:10:348 4060 sec: 895528758 operations; 219983.8 current ops/sec; est completion in 7 minutes [INSERT: Count=2199836, Max=45343, Min=243, Avg=1816.17, 90=2803, 99=7923, 99.9=18479, 99.99=27951] 
2023-03-08 15:21:20:348 4070 sec: 897752497 operations; 222373.9 current ops/sec; est completion in 7 minutes [INSERT: Count=2223745, Max=35199, Min=240, Avg=1796.6, 90=2833, 99=7727, 99.9=16623, 99.99=21407] 
2023-03-08 15:21:30:348 4080 sec: 899942983 operations; 219048.6 current ops/sec; est completion in 7 minutes [INSERT: Count=2190475, Max=68095, Min=225, Avg=1824, 90=2933, 99=8375, 99.9=20287, 99.99=29423] 
2023-03-08 15:21:40:348 4090 sec: 902118823 operations; 217584 current ops/sec; est completion in 7 minutes [INSERT: Count=2175845, Max=114111, Min=219, Avg=1836.22, 90=2901, 99=8431, 99.9=22351, 99.99=48255] 
2023-03-08 15:21:50:348 4100 sec: 904310590 operations; 219176.7 current ops/sec; est completion in 7 minutes [INSERT: Count=2191764, Max=180223, Min=220, Avg=1823, 90=2901, 99=7539, 99.9=18271, 99.99=117695] 
2023-03-08 15:22:00:348 4110 sec: 906497902 operations; 218731.2 current ops/sec; est completion in 7 minutes [INSERT: Count=2187311, Max=110335, Min=232, Avg=1826.46, 90=2893, 99=7663, 99.9=18479, 99.99=30639] 
2023-03-08 15:22:10:348 4120 sec: 908687316 operations; 218941.4 current ops/sec; est completion in 6 minutes [INSERT: Count=2189430, Max=34847, Min=231, Avg=1824.96, 90=2821, 99=7151, 99.9=17919, 99.99=25471] 
2023-03-08 15:22:20:348 4130 sec: 910854266 operations; 216695 current ops/sec; est completion in 6 minutes [INSERT: Count=2166945, Max=36095, Min=238, Avg=1843.76, 90=2843, 99=7435, 99.9=18671, 99.99=23951] 
2023-03-08 15:22:30:348 4140 sec: 913053800 operations; 219953.4 current ops/sec; est completion in 6 minutes [INSERT: Count=2199542, Max=122239, Min=230, Avg=1816.44, 90=2851, 99=7939, 99.9=19791, 99.99=49247] 
2023-03-08 15:22:40:348 4150 sec: 915252907 operations; 219910.7 current ops/sec; est completion in 6 minutes [INSERT: Count=2199105, Max=48671, Min=230, Avg=1816.77, 90=2951, 99=7939, 99.9=22079, 99.99=30495] 
2023-03-08 15:22:50:348 4160 sec: 917481806 operations; 222889.9 current ops/sec; est completion in 6 minutes [INSERT: Count=2228884, Max=157951, Min=238, Avg=1792.49, 90=2863, 99=8231, 99.9=19743, 99.99=97983] 
2023-03-08 15:23:00:348 4170 sec: 919703121 operations; 222131.5 current ops/sec; est completion in 6 minutes [INSERT: Count=2221323, Max=78143, Min=231, Avg=1798.61, 90=2927, 99=9271, 99.9=22511, 99.99=66559] 
2023-03-08 15:23:10:348 4180 sec: 921920101 operations; 221698 current ops/sec; est completion in 5 minutes [INSERT: Count=2216994, Max=102783, Min=230, Avg=1802.16, 90=2937, 99=9327, 99.9=22239, 99.99=37471] 
2023-03-08 15:23:20:348 4190 sec: 924153589 operations; 223348.8 current ops/sec; est completion in 5 minutes [INSERT: Count=2233484, Max=43903, Min=229, Avg=1788.84, 90=2943, 99=9175, 99.9=19647, 99.99=31471] 
2023-03-08 15:23:30:348 4200 sec: 926379391 operations; 222580.2 current ops/sec; est completion in 5 minutes [INSERT: Count=2225795, Max=53023, Min=231, Avg=1794.97, 90=2939, 99=9527, 99.9=19087, 99.99=28143] 
2023-03-08 15:23:40:348 4210 sec: 928602532 operations; 222314.1 current ops/sec; est completion in 5 minutes [INSERT: Count=2223144, Max=50431, Min=221, Avg=1797.12, 90=2911, 99=8967, 99.9=20255, 99.99=32895] 
2023-03-08 15:23:50:348 4220 sec: 930819227 operations; 221669.5 current ops/sec; est completion in 5 minutes [INSERT: Count=2216693, Max=159743, Min=226, Avg=1802.37, 90=2821, 99=7639, 99.9=19487, 99.99=86591] 
2023-03-08 15:24:00:348 4230 sec: 933042445 operations; 222321.8 current ops/sec; est completion in 5 minutes [INSERT: Count=2223226, Max=126591, Min=226, Avg=1797.06, 90=2853, 99=7359, 99.9=17807, 99.99=41855] 
2023-03-08 15:24:10:348 4240 sec: 935255963 operations; 221351.8 current ops/sec; est completion in 4 minutes [INSERT: Count=2213510, Max=39935, Min=217, Avg=1805.05, 90=2921, 99=8463, 99.9=17407, 99.99=26351] 
2023-03-08 15:24:20:348 4250 sec: 937490482 operations; 223451.9 current ops/sec; est completion in 4 minutes [INSERT: Count=2234512, Max=49343, Min=231, Avg=1788, 90=2953, 99=7883, 99.9=17119, 99.99=26607] 
2023-03-08 15:24:30:348 4260 sec: 939694927 operations; 220444.5 current ops/sec; est completion in 4 minutes [INSERT: Count=2204463, Max=43807, Min=231, Avg=1812.41, 90=2925, 99=8343, 99.9=19855, 99.99=36703] 
2023-03-08 15:24:40:348 4270 sec: 941918951 operations; 222402.4 current ops/sec; est completion in 4 minutes [INSERT: Count=2224005, Max=128895, Min=216, Avg=1796.2, 90=2879, 99=7831, 99.9=18287, 99.99=41183] 
2023-03-08 15:24:50:348 4280 sec: 944122145 operations; 220319.4 current ops/sec; est completion in 4 minutes [INSERT: Count=2203198, Max=144895, Min=215, Avg=1813.64, 90=2897, 99=7639, 99.9=19279, 99.99=67071] 
2023-03-08 15:25:00:348 4290 sec: 946315540 operations; 219339.5 current ops/sec; est completion in 4 minutes [INSERT: Count=2193400, Max=145919, Min=224, Avg=1821.54, 90=2821, 99=7575, 99.9=20847, 99.99=53631] 
2023-03-08 15:25:10:348 4300 sec: 948514294 operations; 219875.4 current ops/sec; est completion in 3 minutes [INSERT: Count=2198751, Max=86271, Min=228, Avg=1817.13, 90=2821, 99=7435, 99.9=19807, 99.99=37983] 
2023-03-08 15:25:20:348 4310 sec: 950724892 operations; 221059.8 current ops/sec; est completion in 3 minutes [INSERT: Count=2210593, Max=36863, Min=228, Avg=1807.38, 90=2883, 99=8623, 99.9=18527, 99.99=29839] 
2023-03-08 15:25:30:348 4320 sec: 952962130 operations; 223723.8 current ops/sec; est completion in 3 minutes [INSERT: Count=2237247, Max=34943, Min=225, Avg=1785.84, 90=2893, 99=8351, 99.9=19343, 99.99=26991] 
2023-03-08 15:25:40:348 4330 sec: 955193546 operations; 223141.6 current ops/sec; est completion in 3 minutes [INSERT: Count=2231413, Max=71551, Min=211, Avg=1790.45, 90=2863, 99=8083, 99.9=19151, 99.99=32287] 
2023-03-08 15:25:50:348 4340 sec: 957412066 operations; 221852 current ops/sec; est completion in 3 minutes [INSERT: Count=2218516, Max=45919, Min=231, Avg=1800.87, 90=2875, 99=8607, 99.9=20879, 99.99=29983] 
2023-03-08 15:26:00:348 4350 sec: 959636978 operations; 222491.2 current ops/sec; est completion in 3 minutes [INSERT: Count=2224904, Max=108287, Min=230, Avg=1795.67, 90=2819, 99=8239, 99.9=18399, 99.99=63199] 
2023-03-08 15:26:10:348 4360 sec: 961836354 operations; 219937.6 current ops/sec; est completion in 2 minutes [INSERT: Count=2199385, Max=42047, Min=231, Avg=1816.61, 90=2873, 99=7875, 99.9=19151, 99.99=26255] 
2023-03-08 15:26:20:348 4370 sec: 964048247 operations; 221189.3 current ops/sec; est completion in 2 minutes [INSERT: Count=2211887, Max=44703, Min=236, Avg=1806.31, 90=2857, 99=7835, 99.9=17983, 99.99=26783] 
2023-03-08 15:26:30:348 4380 sec: 966270152 operations; 222190.5 current ops/sec; est completion in 2 minutes [INSERT: Count=2221905, Max=50783, Min=205, Avg=1798.14, 90=2909, 99=8431, 99.9=17887, 99.99=26911] 
2023-03-08 15:26:40:348 4390 sec: 968488333 operations; 221818.1 current ops/sec; est completion in 2 minutes [INSERT: Count=2218178, Max=139135, Min=213, Avg=1801.17, 90=2933, 99=8879, 99.9=21087, 99.99=65919] 
2023-03-08 15:26:50:348 4400 sec: 970709506 operations; 222117.3 current ops/sec; est completion in 2 minutes [INSERT: Count=2221175, Max=39135, Min=228, Avg=1798.76, 90=3011, 99=8439, 99.9=18575, 99.99=24687] 
2023-03-08 15:27:00:348 4410 sec: 972945022 operations; 223551.6 current ops/sec; est completion in 2 minutes [INSERT: Count=2235517, Max=80703, Min=224, Avg=1787.26, 90=2995, 99=8335, 99.9=18879, 99.99=40351] 
2023-03-08 15:27:10:348 4420 sec: 975150602 operations; 220558 current ops/sec; est completion in 1 minute [INSERT: Count=2205581, Max=116991, Min=221, Avg=1811.47, 90=2977, 99=8687, 99.9=21663, 99.99=45247] 
2023-03-08 15:27:20:348 4430 sec: 977384445 operations; 223384.3 current ops/sec; est completion in 1 minute [INSERT: Count=2233839, Max=38879, Min=221, Avg=1788.52, 90=2911, 99=8123, 99.9=17375, 99.99=25615] 
2023-03-08 15:27:30:348 4440 sec: 979596174 operations; 221172.9 current ops/sec; est completion in 1 minute [INSERT: Count=2211727, Max=91455, Min=228, Avg=1806.5, 90=2943, 99=8527, 99.9=21055, 99.99=33151] 
2023-03-08 15:27:40:348 4450 sec: 981840248 operations; 224407.4 current ops/sec; est completion in 1 minute [INSERT: Count=2244080, Max=70015, Min=220, Avg=1780.25, 90=3039, 99=8639, 99.9=18495, 99.99=28591] 
2023-03-08 15:27:50:348 4460 sec: 984044178 operations; 220393 current ops/sec; est completion in 1 minute [INSERT: Count=2203922, Max=41343, Min=220, Avg=1812.62, 90=3073, 99=10255, 99.9=23615, 99.99=28975] 
2023-03-08 15:28:00:348 4470 sec: 986243295 operations; 219911.7 current ops/sec; est completion in 1 minute [INSERT: Count=2199121, Max=95551, Min=216, Avg=1816.87, 90=3113, 99=9271, 99.9=21295, 99.99=35423] 
2023-03-08 15:28:10:348 4480 sec: 988492293 operations; 224899.8 current ops/sec; est completion in 53 seconds [INSERT: Count=2248997, Max=58783, Min=227, Avg=1776.61, 90=3047, 99=8431, 99.9=20959, 99.99=45951] 
2023-03-08 15:28:20:348 4490 sec: 990738622 operations; 224632.9 current ops/sec; est completion in 42 seconds [INSERT: Count=2246329, Max=36351, Min=224, Avg=1778.35, 90=2997, 99=8703, 99.9=19087, 99.99=27471] 
2023-03-08 15:28:30:348 4500 sec: 992929984 operations; 219136.2 current ops/sec; est completion in 33 seconds [INSERT: Count=2191371, Max=52447, Min=230, Avg=1823.47, 90=2951, 99=8695, 99.9=22607, 99.99=29023] 
2023-03-08 15:28:40:348 4510 sec: 995157831 operations; 222784.7 current ops/sec; est completion in 22 seconds [INSERT: Count=2227845, Max=50399, Min=233, Avg=1793.43, 90=2841, 99=7235, 99.9=17039, 99.99=25727] 
2023-03-08 15:28:50:348 4520 sec: 997344313 operations; 218648.2 current ops/sec; est completion in 13 seconds [INSERT: Count=2186476, Max=139647, Min=227, Avg=1827.27, 90=2915, 99=8167, 99.9=19487, 99.99=77055] 
2023-03-08 15:29:00:348 4530 sec: 999544106 operations; 219979.3 current ops/sec; est completion in 3 second [CLEANUP: Count=87, Max=18, Min=1, Avg=2.67, 90=3, 99=16, 99.9=18, 99.99=18] [INSERT: Count=2199800, Max=54079, Min=225, Avg=1766.21, 90=2871, 99=7883, 99.9=17567, 99.99=30511] 
2023-03-08 15:29:09:293 4538 sec: 1000000000 operations; 50966.35 current ops/sec; [CLEANUP: Count=313, Max=2224127, Min=0, Avg=7103.72, 90=2, 99=15, 99.9=2224127, 99.99=2224127] [INSERT: Count=455870, Max=178687, Min=196, Avg=1273.7, 90=1984, 99=2901, 99.9=12991, 99.99=165887] 
[OVERALL], RunTime(ms), 4538944
[OVERALL], Throughput(ops/sec), 220315.56238631718
[TOTAL_GCS_PS_Scavenge], Count, 4743
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 48686
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0726283470340237
[TOTAL_GCS_PS_MarkSweep], Count, 10
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 719
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.015840688935576205
[TOTAL_GCs], Count, 4753
[TOTAL_GC_TIME], Time(ms), 49405
[TOTAL_GC_TIME_%], Time(%), 1.0884690359695999
[CLEANUP], Operations, 400
[CLEANUP], AverageLatency(us), 5559.24
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2224127
[CLEANUP], 95thPercentileLatency(us), 3
[CLEANUP], 99thPercentileLatency(us), 16
[INSERT], Operations, 1000000000
[INSERT], AverageLatency(us), 1810.040640988
[INSERT], MinLatency(us), 196
[INSERT], MaxLatency(us), 335359
[INSERT], 95thPercentileLatency(us), 3861
[INSERT], 99thPercentileLatency(us), 8175
[INSERT], Return=OK, 1000000000
