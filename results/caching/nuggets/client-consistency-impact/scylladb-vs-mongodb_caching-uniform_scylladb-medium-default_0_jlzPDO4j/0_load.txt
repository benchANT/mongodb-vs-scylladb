bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=52.52.203.254,52.8.171.202,54.193.90.214 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=1S6yKvFf7BeGPqU -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.5 -p updateproportion=0.5 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.52.203.254,52.8.171.202,54.193.90.214 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=1S6yKvFf7BeGPqU -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.5 -p updateproportion=0.5 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=52.52.203.254,52.8.171.202,54.193.90.214 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=1S6yKvFf7BeGPqU -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=uniform -p insertorder=ordered -p readproportion=0.5 -p updateproportion=0.5 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
Starting test.
[Thread-51] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
[Thread-51] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
2023-03-01 12:11:26:733 0 sec: 0 operations; est completion in 0 second 
[Thread-51] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-51] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-51] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-51] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_1' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.52.203.254:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.177.99.41:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.193.90.214:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.8.171.202:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /50.18.41.90:9042 added
[Thread-51] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.193.75.65:9042 added
[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 551557a9-1137-481e-a061-8f5be89906d2

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.193.75.65; Rack: us-west-1a

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /52.52.203.254; Rack: us-west-1a-virtual1

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /52.8.171.202; Rack: us-west-1a-virtual1

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.193.90.214; Rack: us-west-1a

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.177.99.41; Rack: us-west-1c

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /50.18.41.90; Rack: us-west-1c

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-51] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-03-01 12:11:36:717 10 sec: 1502921 operations; 150292.1 current ops/sec; est completion in 1 hour 50 minutes [INSERT: Count=1503130, Max=167935, Min=219, Avg=2456.86, 90=4571, 99=24367, 99.9=64831, 99.99=151679] 
2023-03-01 12:11:46:717 20 sec: 3755959 operations; 225303.8 current ops/sec; est completion in 1 hour 28 minutes [INSERT: Count=2252910, Max=50559, Min=205, Avg=1771.73, 90=3305, 99=13271, 99.9=27391, 99.99=38527] 
2023-03-01 12:11:56:717 30 sec: 6082299 operations; 232634 current ops/sec; est completion in 1 hour 21 minutes [INSERT: Count=2326340, Max=48863, Min=221, Avg=1717.04, 90=3243, 99=12087, 99.9=23039, 99.99=34527] 
2023-03-01 12:12:06:717 40 sec: 8383600 operations; 230130.1 current ops/sec; est completion in 1 hour 18 minutes [INSERT: Count=2301396, Max=44287, Min=217, Avg=1736.59, 90=3289, 99=12031, 99.9=22767, 99.99=31087] 
2023-03-01 12:12:16:717 50 sec: 10687099 operations; 230349.9 current ops/sec; est completion in 1 hour 17 minutes [INSERT: Count=2303478, Max=51007, Min=221, Avg=1734.19, 90=3255, 99=12095, 99.9=24719, 99.99=37055] 
2023-03-01 12:12:26:717 60 sec: 12996140 operations; 230904.1 current ops/sec; est completion in 1 hour 15 minutes [INSERT: Count=2309010, Max=51679, Min=218, Avg=1729.95, 90=3299, 99=10599, 99.9=22991, 99.99=35999] 
2023-03-01 12:12:36:717 70 sec: 15208714 operations; 221257.4 current ops/sec; est completion in 1 hour 15 minutes [INSERT: Count=2212564, Max=38079, Min=222, Avg=1805.8, 90=2869, 99=8391, 99.9=19999, 99.99=28319] 
2023-03-01 12:12:46:717 80 sec: 17488062 operations; 227934.8 current ops/sec; est completion in 1 hour 14 minutes [INSERT: Count=2279330, Max=52703, Min=218, Avg=1752.56, 90=3231, 99=11079, 99.9=21903, 99.99=34623] 
2023-03-01 12:12:56:717 90 sec: 19798392 operations; 231033 current ops/sec; est completion in 1 hour 14 minutes [INSERT: Count=2310319, Max=44831, Min=212, Avg=1729.02, 90=3351, 99=10967, 99.9=21871, 99.99=31791] 
2023-03-01 12:13:06:717 100 sec: 22077355 operations; 227896.3 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2278963, Max=50847, Min=207, Avg=1753.08, 90=3377, 99=12199, 99.9=23023, 99.99=37087] 
2023-03-01 12:13:16:717 110 sec: 24384111 operations; 230675.6 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2306764, Max=41247, Min=212, Avg=1731.59, 90=3383, 99=10799, 99.9=20479, 99.99=30703] 
2023-03-01 12:13:26:717 120 sec: 26645589 operations; 226147.8 current ops/sec; est completion in 1 hour 13 minutes [INSERT: Count=2261481, Max=46975, Min=220, Avg=1766.71, 90=3329, 99=11223, 99.9=22015, 99.99=35839] 
2023-03-01 12:13:36:717 130 sec: 28840052 operations; 219446.3 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2194456, Max=31103, Min=222, Avg=1820.53, 90=2841, 99=7395, 99.9=16623, 99.99=21663] 
2023-03-01 12:13:46:717 140 sec: 31033875 operations; 219382.3 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2193831, Max=40799, Min=234, Avg=1821.06, 90=2891, 99=8215, 99.9=18575, 99.99=27231] 
2023-03-01 12:13:56:717 150 sec: 33290527 operations; 225665.2 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2256628, Max=59231, Min=219, Avg=1770.14, 90=3045, 99=9863, 99.9=20895, 99.99=52735] 
2023-03-01 12:14:06:717 160 sec: 35535968 operations; 224544.1 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2245457, Max=100031, Min=205, Avg=1778.81, 90=3237, 99=13623, 99.9=30719, 99.99=80191] 
2023-03-01 12:14:16:717 170 sec: 37801209 operations; 226524.1 current ops/sec; est completion in 1 hour 12 minutes [INSERT: Count=2265243, Max=59935, Min=211, Avg=1763.7, 90=3339, 99=12895, 99.9=24735, 99.99=38783] 
2023-03-01 12:14:26:717 180 sec: 40080999 operations; 227979 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2279787, Max=87039, Min=214, Avg=1752.27, 90=3209, 99=11007, 99.9=22111, 99.99=34399] 
2023-03-01 12:14:36:717 190 sec: 42350720 operations; 226972.1 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2269714, Max=81983, Min=208, Avg=1760.21, 90=2831, 99=8463, 99.9=17631, 99.99=44639] 
2023-03-01 12:14:46:717 200 sec: 44611638 operations; 226091.8 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2260926, Max=77439, Min=219, Avg=1766.78, 90=3247, 99=12423, 99.9=23855, 99.99=39263] 
2023-03-01 12:14:56:717 210 sec: 46923006 operations; 231136.8 current ops/sec; est completion in 1 hour 11 minutes [INSERT: Count=2311279, Max=80127, Min=214, Avg=1726.86, 90=3319, 99=11255, 99.9=23071, 99.99=35071] 
2023-03-01 12:15:06:717 220 sec: 49225788 operations; 230278.2 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2302882, Max=43039, Min=213, Avg=1736.32, 90=3363, 99=10847, 99.9=22447, 99.99=33119] 
2023-03-01 12:15:16:717 230 sec: 51481745 operations; 225595.7 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2255925, Max=52607, Min=220, Avg=1770.84, 90=3367, 99=11519, 99.9=24367, 99.99=43167] 
2023-03-01 12:15:26:717 240 sec: 53730215 operations; 224847 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2248402, Max=39775, Min=208, Avg=1775.4, 90=3329, 99=10183, 99.9=20239, 99.99=30623] 
2023-03-01 12:15:36:717 250 sec: 55851220 operations; 212100.5 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2121005, Max=120063, Min=225, Avg=1884.4, 90=2921, 99=9687, 99.9=21407, 99.99=47999] 
2023-03-01 12:15:46:717 260 sec: 57947902 operations; 209668.2 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2096775, Max=119167, Min=225, Avg=1906.23, 90=2907, 99=9399, 99.9=25615, 99.99=93055] 
2023-03-01 12:15:56:717 270 sec: 60102217 operations; 215431.5 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2154302, Max=245887, Min=231, Avg=1854.48, 90=2873, 99=8123, 99.9=24399, 99.99=174847] 
2023-03-01 12:16:06:717 280 sec: 62299327 operations; 219711 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2197119, Max=76031, Min=241, Avg=1818.32, 90=2849, 99=7987, 99.9=19439, 99.99=56031] 
2023-03-01 12:16:16:717 290 sec: 64513561 operations; 221423.4 current ops/sec; est completion in 1 hour 10 minutes [INSERT: Count=2214228, Max=69567, Min=237, Avg=1804.21, 90=2907, 99=8139, 99.9=17679, 99.99=28479] 
2023-03-01 12:16:26:717 300 sec: 66740973 operations; 222741.2 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2227426, Max=141567, Min=219, Avg=1793.53, 90=2895, 99=9351, 99.9=19087, 99.99=76415] 
2023-03-01 12:16:36:717 310 sec: 69012406 operations; 227143.3 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2271425, Max=40415, Min=217, Avg=1758.77, 90=3135, 99=10263, 99.9=20191, 99.99=29215] 
2023-03-01 12:16:46:717 320 sec: 71232003 operations; 221959.7 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2219586, Max=51551, Min=226, Avg=1799.88, 90=2985, 99=10319, 99.9=20223, 99.99=31999] 
2023-03-01 12:16:56:717 330 sec: 73477201 operations; 224519.8 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2245196, Max=184191, Min=207, Avg=1779.25, 90=3099, 99=10447, 99.9=23503, 99.99=131455] 
2023-03-01 12:17:06:717 340 sec: 75764489 operations; 228728.8 current ops/sec; est completion in 1 hour 9 minutes [INSERT: Count=2287268, Max=78911, Min=217, Avg=1746.22, 90=3321, 99=11511, 99.9=23151, 99.99=38975] 
2023-03-01 12:17:16:717 350 sec: 78055567 operations; 229107.8 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2291083, Max=52735, Min=205, Avg=1743.88, 90=3335, 99=11367, 99.9=22111, 99.99=41855] 
2023-03-01 12:17:26:717 360 sec: 80354863 operations; 229929.6 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2299294, Max=144895, Min=214, Avg=1737.53, 90=3297, 99=11407, 99.9=21823, 99.99=66943] 
2023-03-01 12:17:36:717 370 sec: 82621853 operations; 226699 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2266986, Max=43199, Min=215, Avg=1761.27, 90=3345, 99=10455, 99.9=22143, 99.99=32127] 
2023-03-01 12:17:46:717 380 sec: 84887255 operations; 226540.2 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2265425, Max=44863, Min=218, Avg=1764.36, 90=3179, 99=9863, 99.9=22495, 99.99=37119] 
2023-03-01 12:17:56:717 390 sec: 87103416 operations; 221616.1 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2216143, Max=28431, Min=228, Avg=1802.73, 90=2969, 99=8263, 99.9=17823, 99.99=23343] 
2023-03-01 12:18:06:717 400 sec: 89304366 operations; 220095 current ops/sec; est completion in 1 hour 8 minutes [INSERT: Count=2200952, Max=28031, Min=238, Avg=1815.18, 90=2835, 99=7387, 99.9=15855, 99.99=21711] 
2023-03-01 12:18:16:717 410 sec: 91543705 operations; 223933.9 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2239334, Max=36031, Min=222, Avg=1783.98, 90=2891, 99=8319, 99.9=18623, 99.99=27151] 
2023-03-01 12:18:26:717 420 sec: 93779091 operations; 223538.6 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2235409, Max=97663, Min=215, Avg=1787.11, 90=3121, 99=10463, 99.9=21423, 99.99=71167] 
2023-03-01 12:18:36:717 430 sec: 96049308 operations; 227021.7 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2270199, Max=64543, Min=219, Avg=1759.69, 90=3281, 99=12639, 99.9=25967, 99.99=45535] 
2023-03-01 12:18:46:717 440 sec: 98292359 operations; 224305.1 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2242995, Max=51807, Min=206, Avg=1773.76, 90=3259, 99=11855, 99.9=25087, 99.99=38303] 
2023-03-01 12:18:56:717 450 sec: 100570641 operations; 227828.2 current ops/sec; est completion in 1 hour 7 minutes [INSERT: Count=2278327, Max=87807, Min=197, Avg=1760.57, 90=3183, 99=11503, 99.9=22863, 99.99=60575] 
2023-03-01 12:19:06:717 460 sec: 102801538 operations; 223089.7 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2230900, Max=44255, Min=216, Avg=1790.6, 90=3069, 99=10639, 99.9=21343, 99.99=28847] 
2023-03-01 12:19:16:717 470 sec: 105041832 operations; 224029.4 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2240292, Max=40127, Min=217, Avg=1783.29, 90=3077, 99=9423, 99.9=20319, 99.99=28463] 
2023-03-01 12:19:26:717 480 sec: 107331487 operations; 228965.5 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2289677, Max=48703, Min=214, Avg=1744.48, 90=3293, 99=11111, 99.9=20703, 99.99=30655] 
2023-03-01 12:19:36:717 490 sec: 109589261 operations; 225777.4 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2257769, Max=50975, Min=214, Avg=1769.68, 90=3367, 99=11991, 99.9=25887, 99.99=35135] 
2023-03-01 12:19:46:717 500 sec: 111890755 operations; 230149.4 current ops/sec; est completion in 1 hour 6 minutes [INSERT: Count=2301497, Max=51231, Min=215, Avg=1735.8, 90=3299, 99=10079, 99.9=21631, 99.99=42463] 
2023-03-01 12:19:56:729 510 sec: 114162592 operations; 226911.41 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2271822, Max=39967, Min=225, Avg=1758.42, 90=3265, 99=11335, 99.9=21711, 99.99=30975] 
2023-03-01 12:20:06:717 520 sec: 116420775 operations; 226089.61 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2258210, Max=41631, Min=219, Avg=1769.1, 90=3149, 99=10887, 99.9=20975, 99.99=30367] 
2023-03-01 12:20:16:717 530 sec: 118655835 operations; 223506 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2235026, Max=44927, Min=216, Avg=1786.65, 90=3007, 99=8999, 99.9=20495, 99.99=32735] 
2023-03-01 12:20:26:717 540 sec: 120839338 operations; 218350.3 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2183521, Max=103295, Min=226, Avg=1830.46, 90=2815, 99=7699, 99.9=18559, 99.99=32463] 
2023-03-01 12:20:36:717 550 sec: 123043508 operations; 220417 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2204149, Max=36799, Min=242, Avg=1812.46, 90=2807, 99=7359, 99.9=16495, 99.99=24863] 
2023-03-01 12:20:46:717 560 sec: 125254364 operations; 221085.6 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2210858, Max=113087, Min=241, Avg=1806.87, 90=2823, 99=7643, 99.9=19567, 99.99=45279] 
2023-03-01 12:20:56:717 570 sec: 127443814 operations; 218945 current ops/sec; est completion in 1 hour 5 minutes [INSERT: Count=2189449, Max=50559, Min=229, Avg=1824.83, 90=2829, 99=8607, 99.9=18399, 99.99=38079] 
2023-03-01 12:21:06:717 580 sec: 129648375 operations; 220456.1 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2204551, Max=99327, Min=227, Avg=1812.18, 90=2825, 99=7815, 99.9=18015, 99.99=50367] 
2023-03-01 12:21:16:717 590 sec: 131849517 operations; 220114.2 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2201152, Max=86463, Min=245, Avg=1814.98, 90=2831, 99=7663, 99.9=21711, 99.99=34943] 
2023-03-01 12:21:26:717 600 sec: 134054967 operations; 220545 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2205444, Max=124287, Min=234, Avg=1811.43, 90=2807, 99=8071, 99.9=18751, 99.99=67903] 
2023-03-01 12:21:36:717 610 sec: 136273782 operations; 221881.5 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2218827, Max=104575, Min=239, Avg=1800.54, 90=2769, 99=7299, 99.9=17439, 99.99=56671] 
2023-03-01 12:21:46:717 620 sec: 138469602 operations; 219582 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2195811, Max=31407, Min=241, Avg=1819.36, 90=2855, 99=7327, 99.9=17759, 99.99=26943] 
2023-03-01 12:21:56:717 630 sec: 140685118 operations; 221551.6 current ops/sec; est completion in 1 hour 4 minutes [INSERT: Count=2215521, Max=45471, Min=241, Avg=1803.28, 90=2815, 99=7371, 99.9=17247, 99.99=33791] 
2023-03-01 12:22:06:717 640 sec: 142892179 operations; 220706.1 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2207064, Max=35711, Min=243, Avg=1810.11, 90=2781, 99=6931, 99.9=17439, 99.99=29199] 
2023-03-01 12:22:16:717 650 sec: 145105117 operations; 221293.8 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2212929, Max=35903, Min=234, Avg=1805.29, 90=2799, 99=6979, 99.9=17839, 99.99=26127] 
2023-03-01 12:22:26:717 660 sec: 147292980 operations; 218786.3 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2187868, Max=104319, Min=236, Avg=1826.05, 90=2733, 99=6539, 99.9=16543, 99.99=44255] 
2023-03-01 12:22:36:717 670 sec: 149468411 operations; 217543.1 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2175425, Max=139519, Min=228, Avg=1836.42, 90=2795, 99=7659, 99.9=20847, 99.99=53759] 
2023-03-01 12:22:46:717 680 sec: 151660421 operations; 219201 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2192008, Max=104063, Min=210, Avg=1822.58, 90=2835, 99=7427, 99.9=15935, 99.99=53535] 
2023-03-01 12:22:56:717 690 sec: 153848384 operations; 218796.3 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2187963, Max=82815, Min=239, Avg=1825.64, 90=2775, 99=7355, 99.9=19983, 99.99=36799] 
2023-03-01 12:23:06:717 700 sec: 156039046 operations; 219066.2 current ops/sec; est completion in 1 hour 3 minutes [INSERT: Count=2190660, Max=37215, Min=248, Avg=1823.91, 90=2821, 99=7099, 99.9=17567, 99.99=27119] 
2023-03-01 12:23:16:717 710 sec: 158223042 operations; 218399.6 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2184005, Max=32111, Min=200, Avg=1829.29, 90=2837, 99=7547, 99.9=18575, 99.99=26431] 
2023-03-01 12:23:26:717 720 sec: 160458894 operations; 223585.2 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2235851, Max=91839, Min=218, Avg=1786.72, 90=2925, 99=9175, 99.9=19391, 99.99=44575] 
2023-03-01 12:23:36:717 730 sec: 162703579 operations; 224468.5 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2244686, Max=43295, Min=219, Avg=1779.59, 90=3095, 99=11415, 99.9=24863, 99.99=33439] 
2023-03-01 12:23:46:717 740 sec: 164959501 operations; 225592.2 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2255911, Max=47231, Min=228, Avg=1770.9, 90=2989, 99=9815, 99.9=19823, 99.99=42591] 
2023-03-01 12:23:56:717 750 sec: 167254638 operations; 229513.7 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2295143, Max=88127, Min=217, Avg=1740.32, 90=3123, 99=10231, 99.9=20767, 99.99=31903] 
2023-03-01 12:24:06:717 760 sec: 169520317 operations; 226567.9 current ops/sec; est completion in 1 hour 2 minutes [INSERT: Count=2265685, Max=54879, Min=225, Avg=1763.38, 90=2987, 99=8623, 99.9=21823, 99.99=41247] 
2023-03-01 12:24:16:717 770 sec: 171815202 operations; 229488.5 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2294881, Max=35967, Min=216, Avg=1740.85, 90=3151, 99=10287, 99.9=19519, 99.99=27535] 
2023-03-01 12:24:26:717 780 sec: 174088369 operations; 227316.7 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2273170, Max=90047, Min=215, Avg=1757.36, 90=3245, 99=10599, 99.9=20671, 99.99=30319] 
2023-03-01 12:24:36:717 790 sec: 176343314 operations; 225494.5 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2254938, Max=71423, Min=219, Avg=1771.49, 90=3231, 99=11375, 99.9=23823, 99.99=37663] 
2023-03-01 12:24:46:717 800 sec: 178600936 operations; 225762.2 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2257617, Max=43871, Min=215, Avg=1769.44, 90=3233, 99=10487, 99.9=20767, 99.99=28815] 
2023-03-01 12:24:56:717 810 sec: 180813690 operations; 221275.4 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2212763, Max=74751, Min=220, Avg=1805.54, 90=3027, 99=9471, 99.9=19919, 99.99=68735] 
2023-03-01 12:25:06:717 820 sec: 183053557 operations; 223986.7 current ops/sec; est completion in 1 hour 1 minute [INSERT: Count=2239863, Max=50623, Min=225, Avg=1783.63, 90=2983, 99=8959, 99.9=20479, 99.99=39199] 
2023-03-01 12:25:16:717 830 sec: 185228860 operations; 217530.3 current ops/sec; est completion in 1 hour [INSERT: Count=2175308, Max=40511, Min=233, Avg=1836.61, 90=2835, 99=8503, 99.9=17567, 99.99=25759] 
2023-03-01 12:25:26:717 840 sec: 187394719 operations; 216585.9 current ops/sec; est completion in 1 hour [INSERT: Count=2165863, Max=100799, Min=228, Avg=1844.5, 90=2801, 99=6823, 99.9=18239, 99.99=60799] 
2023-03-01 12:25:36:717 850 sec: 189549104 operations; 215438.5 current ops/sec; est completion in 1 hour [INSERT: Count=2154410, Max=102335, Min=238, Avg=1854.35, 90=2827, 99=7955, 99.9=17903, 99.99=97599] 
2023-03-01 12:25:46:717 860 sec: 191755361 operations; 220625.7 current ops/sec; est completion in 1 hour [INSERT: Count=2206230, Max=50495, Min=238, Avg=1810.81, 90=2859, 99=7859, 99.9=21039, 99.99=29519] 
2023-03-01 12:25:56:717 870 sec: 193969606 operations; 221424.5 current ops/sec; est completion in 1 hour [INSERT: Count=2214235, Max=37759, Min=237, Avg=1804.32, 90=2827, 99=7783, 99.9=21631, 99.99=30351] 
2023-03-01 12:26:06:717 880 sec: 196173777 operations; 220417.1 current ops/sec; est completion in 1 hour [INSERT: Count=2204186, Max=33919, Min=242, Avg=1812.54, 90=2783, 99=8007, 99.9=18831, 99.99=27823] 
2023-03-01 12:26:16:717 890 sec: 198393065 operations; 221928.8 current ops/sec; est completion in 59 minutes [INSERT: Count=2219286, Max=40895, Min=214, Avg=1800.17, 90=2903, 99=8743, 99.9=23583, 99.99=31791] 
2023-03-01 12:26:26:717 900 sec: 200639930 operations; 224686.5 current ops/sec; est completion in 59 minutes [INSERT: Count=2246863, Max=110463, Min=217, Avg=1778.15, 90=3055, 99=9503, 99.9=20735, 99.99=70655] 
2023-03-01 12:26:36:717 910 sec: 202881181 operations; 224125.1 current ops/sec; est completion in 59 minutes [INSERT: Count=2241234, Max=116799, Min=205, Avg=1782.5, 90=3027, 99=9047, 99.9=20527, 99.99=39423] 
2023-03-01 12:26:46:717 920 sec: 205145719 operations; 226453.8 current ops/sec; est completion in 59 minutes [INSERT: Count=2264547, Max=40095, Min=217, Avg=1764.16, 90=3233, 99=10567, 99.9=22431, 99.99=30447] 
2023-03-01 12:26:56:717 930 sec: 207409894 operations; 226417.5 current ops/sec; est completion in 59 minutes [INSERT: Count=2264182, Max=98495, Min=209, Avg=1764.48, 90=3207, 99=11295, 99.9=24495, 99.99=51935] 
2023-03-01 12:27:06:717 940 sec: 209689406 operations; 227951.2 current ops/sec; est completion in 59 minutes [INSERT: Count=2279494, Max=57567, Min=213, Avg=1752.51, 90=3219, 99=10847, 99.9=22847, 99.99=32351] 
2023-03-01 12:27:16:717 950 sec: 211967500 operations; 227809.4 current ops/sec; est completion in 58 minutes [INSERT: Count=2278108, Max=34815, Min=232, Avg=1753.64, 90=3019, 99=9039, 99.9=18991, 99.99=26159] 
2023-03-01 12:27:26:717 960 sec: 214239662 operations; 227216.2 current ops/sec; est completion in 58 minutes [INSERT: Count=2272157, Max=84415, Min=218, Avg=1758.44, 90=3067, 99=8911, 99.9=19263, 99.99=53631] 
2023-03-01 12:27:36:717 970 sec: 216500042 operations; 226038 current ops/sec; est completion in 58 minutes [INSERT: Count=2260382, Max=35263, Min=230, Avg=1767.36, 90=2933, 99=8799, 99.9=17647, 99.99=25503] 
2023-03-01 12:27:46:723 980 sec: 218711760 operations; 221039.18 current ops/sec; est completion in 58 minutes [INSERT: Count=2211755, Max=95423, Min=214, Avg=1805.72, 90=2925, 99=8135, 99.9=17151, 99.99=28479] 
2023-03-01 12:27:56:717 990 sec: 220952728 operations; 224231.34 current ops/sec; est completion in 58 minutes [INSERT: Count=2240969, Max=45855, Min=213, Avg=1783.57, 90=3037, 99=8751, 99.9=19599, 99.99=32191] 
2023-03-01 12:28:06:717 1000 sec: 223225015 operations; 227228.7 current ops/sec; est completion in 58 minutes [INSERT: Count=2272284, Max=77695, Min=218, Avg=1758.16, 90=3123, 99=9375, 99.9=19503, 99.99=42719] 
2023-03-01 12:28:16:717 1010 sec: 225500402 operations; 227538.7 current ops/sec; est completion in 57 minutes [INSERT: Count=2275366, Max=51455, Min=221, Avg=1755.44, 90=3289, 99=10607, 99.9=22111, 99.99=32991] 
2023-03-01 12:28:26:717 1020 sec: 227741155 operations; 224075.3 current ops/sec; est completion in 57 minutes [INSERT: Count=2240747, Max=103871, Min=216, Avg=1783.05, 90=2991, 99=10303, 99.9=23023, 99.99=61151] 
2023-03-01 12:28:36:717 1030 sec: 230047877 operations; 230672.2 current ops/sec; est completion in 57 minutes [INSERT: Count=2306766, Max=40863, Min=225, Avg=1731.97, 90=3255, 99=10367, 99.9=20319, 99.99=29439] 
2023-03-01 12:28:46:717 1040 sec: 232322520 operations; 227464.3 current ops/sec; est completion in 57 minutes [INSERT: Count=2274597, Max=51199, Min=214, Avg=1756.39, 90=3169, 99=10567, 99.9=22031, 99.99=30303] 
2023-03-01 12:28:56:717 1050 sec: 234561169 operations; 223864.9 current ops/sec; est completion in 57 minutes [INSERT: Count=2238661, Max=101759, Min=223, Avg=1784.65, 90=2985, 99=8639, 99.9=21583, 99.99=33919] 
2023-03-01 12:29:06:717 1060 sec: 236854569 operations; 229340 current ops/sec; est completion in 56 minutes [INSERT: Count=2293397, Max=34335, Min=212, Avg=1741.79, 90=3173, 99=9887, 99.9=19375, 99.99=25503] 
2023-03-01 12:29:16:717 1070 sec: 239115291 operations; 226072.2 current ops/sec; est completion in 56 minutes [INSERT: Count=2260722, Max=55039, Min=213, Avg=1767.29, 90=3223, 99=11895, 99.9=23631, 99.99=33279] 
2023-03-01 12:29:26:717 1080 sec: 241367716 operations; 225242.5 current ops/sec; est completion in 56 minutes [INSERT: Count=2252413, Max=97471, Min=217, Avg=1773.72, 90=3139, 99=11631, 99.9=23919, 99.99=42047] 
2023-03-01 12:29:36:717 1090 sec: 243577517 operations; 220980.1 current ops/sec; est completion in 56 minutes [INSERT: Count=2209809, Max=98495, Min=218, Avg=1807.71, 90=2957, 99=10623, 99.9=24431, 99.99=39583] 
2023-03-01 12:29:46:717 1100 sec: 245831491 operations; 225397.4 current ops/sec; est completion in 56 minutes [INSERT: Count=2253958, Max=53407, Min=217, Avg=1772.69, 90=2971, 99=9567, 99.9=21119, 99.99=34591] 
2023-03-01 12:29:56:717 1110 sec: 248081076 operations; 224958.5 current ops/sec; est completion in 56 minutes [INSERT: Count=2249602, Max=48575, Min=222, Avg=1775.95, 90=2939, 99=8807, 99.9=18287, 99.99=34943] 
2023-03-01 12:30:06:717 1120 sec: 250279458 operations; 219838.2 current ops/sec; est completion in 55 minutes [INSERT: Count=2198365, Max=107839, Min=236, Avg=1817.41, 90=2789, 99=7507, 99.9=17983, 99.99=30415] 
2023-03-01 12:30:16:717 1130 sec: 252479773 operations; 220031.5 current ops/sec; est completion in 55 minutes [INSERT: Count=2200329, Max=35007, Min=240, Avg=1815.72, 90=2787, 99=6599, 99.9=16815, 99.99=25023] 
2023-03-01 12:30:26:717 1140 sec: 254678359 operations; 219858.6 current ops/sec; est completion in 55 minutes [INSERT: Count=2198586, Max=37343, Min=242, Avg=1817.19, 90=2843, 99=7587, 99.9=16975, 99.99=28415] 
2023-03-01 12:30:36:717 1150 sec: 256854120 operations; 217576.1 current ops/sec; est completion in 55 minutes [INSERT: Count=2175742, Max=93183, Min=228, Avg=1836.22, 90=2811, 99=7403, 99.9=20895, 99.99=87295] 
2023-03-01 12:30:46:717 1160 sec: 259059077 operations; 220495.7 current ops/sec; est completion in 55 minutes [INSERT: Count=2204972, Max=127359, Min=224, Avg=1811.92, 90=2809, 99=7111, 99.9=16511, 99.99=50399] 
2023-03-01 12:30:56:717 1170 sec: 261281382 operations; 222230.5 current ops/sec; est completion in 55 minutes [INSERT: Count=2222312, Max=84351, Min=233, Avg=1797.75, 90=2777, 99=7291, 99.9=16247, 99.99=24127] 
2023-03-01 12:31:06:717 1180 sec: 263502789 operations; 222140.7 current ops/sec; est completion in 54 minutes [INSERT: Count=2221388, Max=26975, Min=232, Avg=1798.55, 90=2789, 99=6879, 99.9=16543, 99.99=20367] 
2023-03-01 12:31:16:717 1190 sec: 265701926 operations; 219913.7 current ops/sec; est completion in 54 minutes [INSERT: Count=2199149, Max=185343, Min=223, Avg=1816.76, 90=2773, 99=7111, 99.9=18911, 99.99=107839] 
2023-03-01 12:31:26:717 1200 sec: 267882549 operations; 218062.3 current ops/sec; est completion in 54 minutes [INSERT: Count=2180621, Max=123519, Min=243, Avg=1832, 90=2717, 99=7047, 99.9=19311, 99.99=49471] 
2023-03-01 12:31:36:717 1210 sec: 270048193 operations; 216564.4 current ops/sec; est completion in 54 minutes [INSERT: Count=2165646, Max=132223, Min=229, Avg=1845, 90=2775, 99=8335, 99.9=19919, 99.99=50367] 
2023-03-01 12:31:46:717 1220 sec: 272246254 operations; 219806.1 current ops/sec; est completion in 54 minutes [INSERT: Count=2198052, Max=196735, Min=225, Avg=1817.68, 90=2773, 99=6815, 99.9=17055, 99.99=118399] 
2023-03-01 12:31:56:717 1230 sec: 274447552 operations; 220129.8 current ops/sec; est completion in 54 minutes [INSERT: Count=2201305, Max=121023, Min=245, Avg=1814.92, 90=2719, 99=6563, 99.9=17183, 99.99=38111] 
2023-03-01 12:32:06:717 1240 sec: 276636927 operations; 218937.5 current ops/sec; est completion in 54 minutes [INSERT: Count=2189372, Max=35167, Min=239, Avg=1824.82, 90=2755, 99=7235, 99.9=18111, 99.99=23535] 
2023-03-01 12:32:16:717 1250 sec: 278837885 operations; 220095.8 current ops/sec; est completion in 53 minutes [INSERT: Count=2200951, Max=91903, Min=242, Avg=1815.25, 90=2771, 99=7415, 99.9=18703, 99.99=29343] 
2023-03-01 12:32:26:717 1260 sec: 281022476 operations; 218459.1 current ops/sec; est completion in 53 minutes [INSERT: Count=2184580, Max=74175, Min=240, Avg=1828.83, 90=2785, 99=7715, 99.9=18735, 99.99=34783] 
2023-03-01 12:32:36:717 1270 sec: 283194469 operations; 217199.3 current ops/sec; est completion in 53 minutes [INSERT: Count=2171999, Max=71679, Min=246, Avg=1839.51, 90=2749, 99=6851, 99.9=18287, 99.99=38047] 
2023-03-01 12:32:46:717 1280 sec: 285374619 operations; 218015 current ops/sec; est completion in 53 minutes [INSERT: Count=2180173, Max=217983, Min=226, Avg=1832.54, 90=2781, 99=7119, 99.9=16927, 99.99=123071] 
2023-03-01 12:32:56:717 1290 sec: 287562894 operations; 218827.5 current ops/sec; est completion in 53 minutes [INSERT: Count=2188223, Max=188031, Min=227, Avg=1822.95, 90=2739, 99=6839, 99.9=18415, 99.99=153215] 
2023-03-01 12:33:06:717 1300 sec: 289749854 operations; 218696 current ops/sec; est completion in 53 minutes [INSERT: Count=2186997, Max=39839, Min=242, Avg=1829.7, 90=2769, 99=6991, 99.9=17247, 99.99=27599] 
2023-03-01 12:33:16:717 1310 sec: 291945693 operations; 219583.9 current ops/sec; est completion in 52 minutes [INSERT: Count=2195835, Max=34719, Min=237, Avg=1819.37, 90=2751, 99=7007, 99.9=14399, 99.99=25903] 
2023-03-01 12:33:26:717 1320 sec: 294137769 operations; 219207.6 current ops/sec; est completion in 52 minutes [INSERT: Count=2192083, Max=34495, Min=242, Avg=1822.7, 90=2803, 99=7363, 99.9=17215, 99.99=27775] 
2023-03-01 12:33:36:717 1330 sec: 296309763 operations; 217199.4 current ops/sec; est completion in 52 minutes [INSERT: Count=2171989, Max=107327, Min=222, Avg=1839.48, 90=2795, 99=7403, 99.9=20575, 99.99=53471] 
2023-03-01 12:33:46:717 1340 sec: 298502027 operations; 219226.4 current ops/sec; est completion in 52 minutes [INSERT: Count=2192254, Max=45503, Min=241, Avg=1822.39, 90=2739, 99=6863, 99.9=16271, 99.99=24335] 
2023-03-01 12:33:56:717 1350 sec: 300698343 operations; 219631.6 current ops/sec; est completion in 52 minutes [INSERT: Count=2196316, Max=46367, Min=242, Avg=1819, 90=2765, 99=6795, 99.9=16311, 99.99=36447] 
2023-03-01 12:34:06:717 1360 sec: 302891571 operations; 219322.8 current ops/sec; est completion in 52 minutes [INSERT: Count=2193238, Max=34751, Min=243, Avg=1821.74, 90=2805, 99=7383, 99.9=17151, 99.99=23823] 
2023-03-01 12:34:16:717 1370 sec: 305098181 operations; 220661 current ops/sec; est completion in 52 minutes [INSERT: Count=2206595, Max=29711, Min=238, Avg=1810.47, 90=2747, 99=6975, 99.9=16511, 99.99=21487] 
2023-03-01 12:34:26:717 1380 sec: 307283857 operations; 218567.6 current ops/sec; est completion in 51 minutes [INSERT: Count=2185683, Max=139391, Min=240, Avg=1825.88, 90=2735, 99=6731, 99.9=17727, 99.99=91583] 
2023-03-01 12:34:36:717 1390 sec: 309465084 operations; 218122.7 current ops/sec; est completion in 51 minutes [INSERT: Count=2181235, Max=168063, Min=225, Avg=1833.81, 90=2747, 99=7363, 99.9=18495, 99.99=98047] 
2023-03-01 12:34:46:717 1400 sec: 311629530 operations; 216444.6 current ops/sec; est completion in 51 minutes [INSERT: Count=2164441, Max=280575, Min=217, Avg=1845.92, 90=2763, 99=7291, 99.9=17695, 99.99=222463] 
2023-03-01 12:34:56:717 1410 sec: 313812128 operations; 218259.8 current ops/sec; est completion in 51 minutes [INSERT: Count=2182600, Max=142847, Min=245, Avg=1830.56, 90=2737, 99=6983, 99.9=17455, 99.99=61279] 
2023-03-01 12:35:06:717 1420 sec: 316016570 operations; 220444.2 current ops/sec; est completion in 51 minutes [INSERT: Count=2204445, Max=31327, Min=242, Avg=1812.37, 90=2725, 99=7539, 99.9=16215, 99.99=23007] 
2023-03-01 12:35:16:717 1430 sec: 318229026 operations; 221245.6 current ops/sec; est completion in 51 minutes [INSERT: Count=2212450, Max=118463, Min=249, Avg=1805.78, 90=2735, 99=6915, 99.9=15823, 99.99=30399] 
2023-03-01 12:35:26:717 1440 sec: 320417590 operations; 218856.4 current ops/sec; est completion in 50 minutes [INSERT: Count=2188563, Max=201727, Min=239, Avg=1824.22, 90=2737, 99=7051, 99.9=15799, 99.99=135423] 
2023-03-01 12:35:36:717 1450 sec: 322595606 operations; 217801.6 current ops/sec; est completion in 50 minutes [INSERT: Count=2178023, Max=121919, Min=221, Avg=1835.72, 90=2733, 99=6999, 99.9=17343, 99.99=64255] 
2023-03-01 12:35:46:717 1460 sec: 324770401 operations; 217479.5 current ops/sec; est completion in 50 minutes [INSERT: Count=2174795, Max=217855, Min=223, Avg=1837.11, 90=2747, 99=7143, 99.9=16863, 99.99=118207] 
2023-03-01 12:35:56:717 1470 sec: 326946117 operations; 217571.6 current ops/sec; est completion in 50 minutes [INSERT: Count=2175719, Max=33439, Min=244, Avg=1836.34, 90=2801, 99=8575, 99.9=17631, 99.99=23327] 
2023-03-01 12:36:06:717 1480 sec: 329145206 operations; 219908.9 current ops/sec; est completion in 50 minutes [INSERT: Count=2199079, Max=26543, Min=239, Avg=1816.78, 90=2789, 99=7363, 99.9=16271, 99.99=21615] 
2023-03-01 12:36:16:717 1490 sec: 331311491 operations; 216628.5 current ops/sec; est completion in 50 minutes [INSERT: Count=2166296, Max=41983, Min=240, Avg=1844.3, 90=2773, 99=6811, 99.9=18607, 99.99=29247] 
2023-03-01 12:36:26:717 1500 sec: 333494135 operations; 218264.4 current ops/sec; est completion in 49 minutes [INSERT: Count=2182630, Max=211199, Min=238, Avg=1830.44, 90=2781, 99=7231, 99.9=19775, 99.99=119231] 
2023-03-01 12:36:36:717 1510 sec: 335669317 operations; 217518.2 current ops/sec; est completion in 49 minutes [INSERT: Count=2175187, Max=203263, Min=226, Avg=1836.8, 90=2805, 99=7359, 99.9=17663, 99.99=120319] 
2023-03-01 12:36:46:717 1520 sec: 337847412 operations; 217809.5 current ops/sec; est completion in 49 minutes [INSERT: Count=2178095, Max=148735, Min=224, Avg=1834.32, 90=2757, 99=7355, 99.9=19071, 99.99=78015] 
2023-03-01 12:36:56:717 1530 sec: 340044315 operations; 219690.3 current ops/sec; est completion in 49 minutes [INSERT: Count=2196873, Max=35487, Min=245, Avg=1817.83, 90=2743, 99=6811, 99.9=15919, 99.99=20543] 
2023-03-01 12:37:06:717 1540 sec: 342242193 operations; 219787.8 current ops/sec; est completion in 49 minutes [INSERT: Count=2197906, Max=91263, Min=235, Avg=1818.45, 90=2839, 99=7811, 99.9=18895, 99.99=32111] 
2023-03-01 12:37:16:717 1550 sec: 344481202 operations; 223900.9 current ops/sec; est completion in 49 minutes [INSERT: Count=2239010, Max=37471, Min=230, Avg=1784.4, 90=2805, 99=8415, 99.9=18479, 99.99=27791] 
2023-03-01 12:37:26:717 1560 sec: 346697771 operations; 221656.9 current ops/sec; est completion in 49 minutes [INSERT: Count=2216571, Max=181375, Min=211, Avg=1802.35, 90=2845, 99=8983, 99.9=22175, 99.99=95103] 
2023-03-01 12:37:36:717 1570 sec: 348934894 operations; 223712.3 current ops/sec; est completion in 48 minutes [INSERT: Count=2237129, Max=148607, Min=202, Avg=1785.87, 90=2875, 99=7767, 99.9=17935, 99.99=75327] 
2023-03-01 12:37:46:717 1580 sec: 351142243 operations; 220734.9 current ops/sec; est completion in 48 minutes [INSERT: Count=2207350, Max=188927, Min=212, Avg=1809.99, 90=2845, 99=8223, 99.9=21007, 99.99=150399] 
2023-03-01 12:37:56:717 1590 sec: 353359521 operations; 221727.8 current ops/sec; est completion in 48 minutes [INSERT: Count=2217263, Max=44287, Min=225, Avg=1801.76, 90=2901, 99=8487, 99.9=18735, 99.99=26767] 
2023-03-01 12:38:06:717 1600 sec: 355595842 operations; 223632.1 current ops/sec; est completion in 48 minutes [INSERT: Count=2236329, Max=38975, Min=213, Avg=1786.46, 90=2983, 99=9247, 99.9=20703, 99.99=30079] 
2023-03-01 12:38:16:717 1610 sec: 357865378 operations; 226953.6 current ops/sec; est completion in 48 minutes [INSERT: Count=2269533, Max=42527, Min=222, Avg=1760.28, 90=3055, 99=9383, 99.9=19855, 99.99=28015] 
2023-03-01 12:38:26:717 1620 sec: 360105849 operations; 224047.1 current ops/sec; est completion in 47 minutes [INSERT: Count=2240473, Max=85887, Min=214, Avg=1783.1, 90=3099, 99=10143, 99.9=20799, 99.99=41919] 
2023-03-01 12:38:36:717 1630 sec: 362339067 operations; 223321.8 current ops/sec; est completion in 47 minutes [INSERT: Count=2233227, Max=54623, Min=208, Avg=1789.12, 90=3087, 99=10095, 99.9=23583, 99.99=34143] 
2023-03-01 12:38:46:717 1640 sec: 364574329 operations; 223526.2 current ops/sec; est completion in 47 minutes [INSERT: Count=2235268, Max=68543, Min=220, Avg=1787.37, 90=3175, 99=10391, 99.9=22175, 99.99=34303] 
2023-03-01 12:38:56:717 1650 sec: 366819442 operations; 224511.3 current ops/sec; est completion in 47 minutes [INSERT: Count=2245099, Max=40319, Min=216, Avg=1779.49, 90=2993, 99=10127, 99.9=23695, 99.99=33119] 
2023-03-01 12:39:06:717 1660 sec: 369069724 operations; 225028.2 current ops/sec; est completion in 47 minutes [INSERT: Count=2250281, Max=38143, Min=234, Avg=1775.24, 90=3019, 99=8735, 99.9=18831, 99.99=26447] 
2023-03-01 12:39:16:717 1670 sec: 371295208 operations; 222548.4 current ops/sec; est completion in 47 minutes [INSERT: Count=2225490, Max=99007, Min=225, Avg=1795.32, 90=3065, 99=10175, 99.9=20351, 99.99=32191] 
2023-03-01 12:39:26:717 1680 sec: 373560407 operations; 226519.9 current ops/sec; est completion in 46 minutes [INSERT: Count=2265199, Max=49791, Min=214, Avg=1763.65, 90=2979, 99=9455, 99.9=20191, 99.99=29839] 
2023-03-01 12:39:36:717 1690 sec: 375822275 operations; 226186.8 current ops/sec; est completion in 46 minutes [INSERT: Count=2261861, Max=40959, Min=227, Avg=1766.32, 90=2913, 99=8791, 99.9=19631, 99.99=35967] 
2023-03-01 12:39:46:717 1700 sec: 378033435 operations; 221116 current ops/sec; est completion in 46 minutes [INSERT: Count=2211161, Max=35263, Min=213, Avg=1806.83, 90=2835, 99=7631, 99.9=18239, 99.99=26927] 
2023-03-01 12:39:56:717 1710 sec: 380218603 operations; 218516.8 current ops/sec; est completion in 46 minutes [INSERT: Count=2185164, Max=132991, Min=243, Avg=1828.34, 90=2781, 99=7003, 99.9=17711, 99.99=62239] 
2023-03-01 12:40:06:717 1720 sec: 382433427 operations; 221482.4 current ops/sec; est completion in 46 minutes [INSERT: Count=2214827, Max=33983, Min=236, Avg=1803.84, 90=2791, 99=6947, 99.9=15863, 99.99=23247] 
2023-03-01 12:40:16:717 1730 sec: 384628755 operations; 219532.8 current ops/sec; est completion in 46 minutes [INSERT: Count=2195331, Max=118655, Min=241, Avg=1819.92, 90=2761, 99=7499, 99.9=18047, 99.99=114303] 
2023-03-01 12:40:26:717 1740 sec: 386833942 operations; 220518.7 current ops/sec; est completion in 45 minutes [INSERT: Count=2205189, Max=125631, Min=237, Avg=1811.7, 90=2763, 99=7263, 99.9=21759, 99.99=36415] 
2023-03-01 12:40:36:717 1750 sec: 389056965 operations; 222302.3 current ops/sec; est completion in 45 minutes [INSERT: Count=2223022, Max=43807, Min=234, Avg=1797.24, 90=2751, 99=6983, 99.9=19119, 99.99=26255] 
2023-03-01 12:40:46:717 1760 sec: 391241246 operations; 218428.1 current ops/sec; est completion in 45 minutes [INSERT: Count=2184272, Max=44639, Min=237, Avg=1829.14, 90=2765, 99=7139, 99.9=19903, 99.99=36415] 
2023-03-01 12:40:56:717 1770 sec: 393407884 operations; 216663.8 current ops/sec; est completion in 45 minutes [INSERT: Count=2166638, Max=234495, Min=236, Avg=1843.92, 90=2723, 99=7559, 99.9=20815, 99.99=162687] 
2023-03-01 12:41:06:717 1780 sec: 395625222 operations; 221733.8 current ops/sec; est completion in 45 minutes [INSERT: Count=2217347, Max=140415, Min=243, Avg=1801.82, 90=2775, 99=7595, 99.9=18703, 99.99=56255] 
2023-03-01 12:41:16:717 1790 sec: 397852351 operations; 222712.9 current ops/sec; est completion in 45 minutes [INSERT: Count=2227127, Max=116735, Min=241, Avg=1793.95, 90=2737, 99=7443, 99.9=17823, 99.99=34943] 
2023-03-01 12:41:26:717 1800 sec: 400032366 operations; 218001.5 current ops/sec; est completion in 45 minutes [INSERT: Count=2180009, Max=196479, Min=223, Avg=1832.56, 90=2783, 99=6615, 99.9=18335, 99.99=121215] 
2023-03-01 12:41:36:717 1810 sec: 402218376 operations; 218601 current ops/sec; est completion in 44 minutes [INSERT: Count=2186015, Max=188287, Min=231, Avg=1827.78, 90=2779, 99=7199, 99.9=17535, 99.99=148991] 
2023-03-01 12:41:46:717 1820 sec: 404397918 operations; 217954.2 current ops/sec; est completion in 44 minutes [INSERT: Count=2179534, Max=69119, Min=250, Avg=1833.03, 90=2793, 99=7375, 99.9=18079, 99.99=53087] 
2023-03-01 12:41:56:717 1830 sec: 406598855 operations; 220093.7 current ops/sec; est completion in 44 minutes [INSERT: Count=2200944, Max=91263, Min=242, Avg=1815.19, 90=2805, 99=7883, 99.9=19343, 99.99=29231] 
2023-03-01 12:42:06:717 1840 sec: 408835747 operations; 223689.2 current ops/sec; est completion in 44 minutes [INSERT: Count=2236896, Max=157695, Min=220, Avg=1786.1, 90=2837, 99=7915, 99.9=16719, 99.99=73535] 
2023-03-01 12:42:16:717 1850 sec: 411065600 operations; 222985.3 current ops/sec; est completion in 44 minutes [INSERT: Count=2229847, Max=199423, Min=214, Avg=1791.66, 90=2947, 99=8471, 99.9=19951, 99.99=115391] 
2023-03-01 12:42:26:717 1860 sec: 413251284 operations; 218568.4 current ops/sec; est completion in 44 minutes [INSERT: Count=2185692, Max=267775, Min=203, Avg=1827.91, 90=2785, 99=7495, 99.9=17711, 99.99=184063] 
2023-03-01 12:42:36:717 1870 sec: 415399291 operations; 214800.7 current ops/sec; est completion in 43 minutes [INSERT: Count=2148004, Max=242431, Min=209, Avg=1860, 90=2845, 99=6955, 99.9=19439, 99.99=158335] 
2023-03-01 12:42:46:717 1880 sec: 417628907 operations; 222961.6 current ops/sec; est completion in 43 minutes [INSERT: Count=2229611, Max=50591, Min=215, Avg=1791.89, 90=3011, 99=9239, 99.9=20671, 99.99=36575] 
2023-03-01 12:42:56:717 1890 sec: 419878438 operations; 224953.1 current ops/sec; est completion in 43 minutes [INSERT: Count=2249536, Max=40543, Min=220, Avg=1776, 90=3129, 99=10055, 99.9=19503, 99.99=27519] 
2023-03-01 12:43:06:717 1900 sec: 422163656 operations; 228521.8 current ops/sec; est completion in 43 minutes [INSERT: Count=2285220, Max=165375, Min=219, Avg=1748.18, 90=3189, 99=10239, 99.9=21375, 99.99=87167] 
2023-03-01 12:43:16:717 1910 sec: 424376194 operations; 221253.8 current ops/sec; est completion in 43 minutes [INSERT: Count=2212545, Max=211583, Min=193, Avg=1805.74, 90=3101, 99=9631, 99.9=24031, 99.99=163711] 
2023-03-01 12:43:26:717 1920 sec: 426632167 operations; 225597.3 current ops/sec; est completion in 43 minutes [INSERT: Count=2255967, Max=40447, Min=212, Avg=1770.84, 90=3069, 99=9943, 99.9=21215, 99.99=29343] 
2023-03-01 12:43:36:717 1930 sec: 428862313 operations; 223014.6 current ops/sec; est completion in 42 minutes [INSERT: Count=2230139, Max=77759, Min=207, Avg=1791.52, 90=2969, 99=8895, 99.9=20031, 99.99=68095] 
2023-03-01 12:43:46:717 1940 sec: 431120833 operations; 225852 current ops/sec; est completion in 42 minutes [INSERT: Count=2258523, Max=43199, Min=224, Avg=1768.96, 90=2935, 99=8703, 99.9=19071, 99.99=29263] 
2023-03-01 12:43:56:717 1950 sec: 433403274 operations; 228244.1 current ops/sec; est completion in 42 minutes [INSERT: Count=2282436, Max=107711, Min=232, Avg=1750.28, 90=2991, 99=9087, 99.9=20031, 99.99=38399] 
2023-03-01 12:44:06:717 1960 sec: 435668642 operations; 226536.8 current ops/sec; est completion in 42 minutes [INSERT: Count=2265372, Max=36383, Min=217, Avg=1763.64, 90=3027, 99=9991, 99.9=20159, 99.99=29151] 
2023-03-01 12:44:16:717 1970 sec: 437934173 operations; 226553.1 current ops/sec; est completion in 42 minutes [INSERT: Count=2265523, Max=41119, Min=223, Avg=1763.29, 90=3071, 99=9471, 99.9=20383, 99.99=28655] 
2023-03-01 12:44:26:717 1980 sec: 440189266 operations; 225509.3 current ops/sec; est completion in 41 minutes [INSERT: Count=2255104, Max=101631, Min=223, Avg=1771.68, 90=2947, 99=9007, 99.9=19647, 99.99=59551] 
2023-03-01 12:44:36:717 1990 sec: 442444205 operations; 225493.9 current ops/sec; est completion in 41 minutes [INSERT: Count=2254931, Max=108543, Min=235, Avg=1771.72, 90=2833, 99=7275, 99.9=17231, 99.99=33503] 
2023-03-01 12:44:46:717 2000 sec: 444612217 operations; 216801.2 current ops/sec; est completion in 41 minutes [INSERT: Count=2168017, Max=41791, Min=246, Avg=1842.85, 90=2793, 99=7107, 99.9=17759, 99.99=27903] 
2023-03-01 12:44:56:717 2010 sec: 446798273 operations; 218605.6 current ops/sec; est completion in 41 minutes [INSERT: Count=2186049, Max=32735, Min=239, Avg=1827.62, 90=2781, 99=6391, 99.9=17791, 99.99=28175] 
2023-03-01 12:45:06:717 2020 sec: 449007808 operations; 220953.5 current ops/sec; est completion in 41 minutes [INSERT: Count=2209545, Max=91519, Min=224, Avg=1808.22, 90=2939, 99=8719, 99.9=21327, 99.99=37087] 
2023-03-01 12:45:16:717 2030 sec: 451256397 operations; 224858.9 current ops/sec; est completion in 41 minutes [INSERT: Count=2248576, Max=105663, Min=223, Avg=1776.12, 90=3025, 99=8855, 99.9=21391, 99.99=55295] 
2023-03-01 12:45:26:717 2040 sec: 453493455 operations; 223705.8 current ops/sec; est completion in 40 minutes [INSERT: Count=2237070, Max=105727, Min=210, Avg=1786.46, 90=3069, 99=9639, 99.9=20831, 99.99=37023] 
2023-03-01 12:45:36:717 2050 sec: 455730347 operations; 223689.2 current ops/sec; est completion in 40 minutes [INSERT: Count=2236893, Max=97727, Min=220, Avg=1785.88, 90=3033, 99=9687, 99.9=19743, 99.99=55295] 
2023-03-01 12:45:46:717 2060 sec: 457953270 operations; 222292.3 current ops/sec; est completion in 40 minutes [INSERT: Count=2222921, Max=62783, Min=224, Avg=1797.43, 90=3035, 99=9719, 99.9=19855, 99.99=54047] 
2023-03-01 12:45:56:717 2070 sec: 460188185 operations; 223491.5 current ops/sec; est completion in 40 minutes [INSERT: Count=2234898, Max=101247, Min=223, Avg=1787.64, 90=2943, 99=8103, 99.9=20783, 99.99=31983] 
2023-03-01 12:46:06:717 2080 sec: 462426139 operations; 223795.4 current ops/sec; est completion in 40 minutes [INSERT: Count=2237961, Max=101695, Min=205, Avg=1785.13, 90=2939, 99=8919, 99.9=21343, 99.99=33215] 
2023-03-01 12:46:16:717 2090 sec: 464695789 operations; 226965 current ops/sec; est completion in 40 minutes [INSERT: Count=2269652, Max=105279, Min=227, Avg=1760.14, 90=2989, 99=9855, 99.9=20927, 99.99=68607] 
2023-03-01 12:46:26:717 2100 sec: 467000444 operations; 230465.5 current ops/sec; est completion in 39 minutes [INSERT: Count=2304651, Max=34335, Min=222, Avg=1733.31, 90=3119, 99=9751, 99.9=18863, 99.99=25103] 
2023-03-01 12:46:36:717 2110 sec: 469287463 operations; 228701.9 current ops/sec; est completion in 39 minutes [INSERT: Count=2287000, Max=208383, Min=202, Avg=1745.6, 90=3219, 99=10839, 99.9=24015, 99.99=134655] 
2023-03-01 12:46:46:717 2120 sec: 471573524 operations; 228606.1 current ops/sec; est completion in 39 minutes [INSERT: Count=2286091, Max=43839, Min=220, Avg=1748.98, 90=3279, 99=10151, 99.9=22607, 99.99=36703] 
2023-03-01 12:46:56:717 2130 sec: 473809859 operations; 223633.5 current ops/sec; est completion in 39 minutes [INSERT: Count=2236326, Max=41791, Min=221, Avg=1786.49, 90=3045, 99=9775, 99.9=18895, 99.99=26751] 
2023-03-01 12:47:06:717 2140 sec: 476020982 operations; 221112.3 current ops/sec; est completion in 39 minutes [INSERT: Count=2211127, Max=44927, Min=219, Avg=1806.93, 90=2839, 99=7407, 99.9=17887, 99.99=36991] 
2023-03-01 12:47:16:717 2150 sec: 478207053 operations; 218607.1 current ops/sec; est completion in 39 minutes [INSERT: Count=2186068, Max=36415, Min=231, Avg=1827.38, 90=2887, 99=8247, 99.9=21231, 99.99=28127] 
2023-03-01 12:47:26:717 2160 sec: 480476084 operations; 226903.1 current ops/sec; est completion in 38 minutes [INSERT: Count=2269009, Max=98047, Min=220, Avg=1759.05, 90=3097, 99=9103, 99.9=18287, 99.99=31471] 
2023-03-01 12:47:36:717 2170 sec: 482763715 operations; 228763.1 current ops/sec; est completion in 38 minutes [INSERT: Count=2287665, Max=43103, Min=216, Avg=1748.1, 90=3181, 99=9919, 99.9=19407, 99.99=27951] 
2023-03-01 12:47:46:717 2180 sec: 485050323 operations; 228660.8 current ops/sec; est completion in 38 minutes [INSERT: Count=2286608, Max=43583, Min=218, Avg=1747.33, 90=3237, 99=10615, 99.9=20687, 99.99=30175] 
2023-03-01 12:47:56:717 2190 sec: 487314471 operations; 226414.8 current ops/sec; est completion in 38 minutes [INSERT: Count=2264135, Max=106047, Min=224, Avg=1764.48, 90=3189, 99=11063, 99.9=22447, 99.99=42655] 
2023-03-01 12:48:06:717 2200 sec: 489571052 operations; 225658.1 current ops/sec; est completion in 38 minutes [INSERT: Count=2256583, Max=95167, Min=209, Avg=1770.43, 90=2995, 99=9407, 99.9=21919, 99.99=35487] 
2023-03-01 12:48:16:717 2210 sec: 491811990 operations; 224093.8 current ops/sec; est completion in 38 minutes [INSERT: Count=2240945, Max=91071, Min=222, Avg=1782.83, 90=2947, 99=9023, 99.9=19503, 99.99=47487] 
2023-03-01 12:48:26:717 2220 sec: 494027522 operations; 221553.2 current ops/sec; est completion in 37 minutes [INSERT: Count=2215533, Max=32767, Min=224, Avg=1803.36, 90=2971, 99=8263, 99.9=18447, 99.99=27167] 
2023-03-01 12:48:36:717 2230 sec: 496260362 operations; 223284 current ops/sec; est completion in 37 minutes [INSERT: Count=2232837, Max=45727, Min=224, Avg=1789.27, 90=2973, 99=9863, 99.9=20959, 99.99=30015] 
2023-03-01 12:48:46:717 2240 sec: 498507976 operations; 224761.4 current ops/sec; est completion in 37 minutes [INSERT: Count=2247608, Max=40735, Min=228, Avg=1777.45, 90=3081, 99=9239, 99.9=18383, 99.99=28015] 
2023-03-01 12:48:56:717 2250 sec: 500748156 operations; 224018 current ops/sec; est completion in 37 minutes [INSERT: Count=2240190, Max=129151, Min=205, Avg=1783.23, 90=3013, 99=9263, 99.9=19135, 99.99=90751] 
2023-03-01 12:49:06:717 2260 sec: 503016403 operations; 226824.7 current ops/sec; est completion in 37 minutes [INSERT: Count=2268243, Max=43583, Min=226, Avg=1761.47, 90=3021, 99=8303, 99.9=19519, 99.99=30175] 
2023-03-01 12:49:16:717 2270 sec: 505240673 operations; 222427 current ops/sec; est completion in 37 minutes [INSERT: Count=2224263, Max=47263, Min=228, Avg=1796.22, 90=2883, 99=8047, 99.9=17455, 99.99=33087] 
2023-03-01 12:49:26:717 2280 sec: 507471422 operations; 223074.9 current ops/sec; est completion in 36 minutes [INSERT: Count=2230749, Max=38431, Min=229, Avg=1790.94, 90=2757, 99=7411, 99.9=19375, 99.99=30415] 
2023-03-01 12:49:36:717 2290 sec: 509668000 operations; 219657.8 current ops/sec; est completion in 36 minutes [INSERT: Count=2196588, Max=127423, Min=234, Avg=1818.87, 90=2779, 99=7151, 99.9=17487, 99.99=52447] 
2023-03-01 12:49:46:717 2300 sec: 511860886 operations; 219288.6 current ops/sec; est completion in 36 minutes [INSERT: Count=2192874, Max=39135, Min=234, Avg=1821.96, 90=2791, 99=7167, 99.9=18383, 99.99=33695] 
2023-03-01 12:49:56:717 2310 sec: 514021285 operations; 216039.9 current ops/sec; est completion in 36 minutes [INSERT: Count=2160412, Max=60703, Min=239, Avg=1849.29, 90=2823, 99=7815, 99.9=20767, 99.99=35423] 
2023-03-01 12:50:06:717 2320 sec: 516230130 operations; 220884.5 current ops/sec; est completion in 36 minutes [INSERT: Count=2208860, Max=104383, Min=232, Avg=1808.75, 90=2763, 99=6851, 99.9=17487, 99.99=31615] 
2023-03-01 12:50:16:717 2330 sec: 518425731 operations; 219560.1 current ops/sec; est completion in 36 minutes [INSERT: Count=2195577, Max=44127, Min=241, Avg=1819.59, 90=2793, 99=6951, 99.9=18799, 99.99=27151] 
2023-03-01 12:50:26:717 2340 sec: 520634148 operations; 220841.7 current ops/sec; est completion in 35 minutes [INSERT: Count=2208409, Max=154495, Min=228, Avg=1809.21, 90=2741, 99=7615, 99.9=17711, 99.99=81023] 
2023-03-01 12:50:36:717 2350 sec: 522831877 operations; 219772.9 current ops/sec; est completion in 35 minutes [INSERT: Count=2197738, Max=89727, Min=235, Avg=1817.9, 90=2787, 99=6919, 99.9=18255, 99.99=31471] 
2023-03-01 12:50:46:717 2360 sec: 525031912 operations; 220003.5 current ops/sec; est completion in 35 minutes [INSERT: Count=2200025, Max=34847, Min=240, Avg=1815.96, 90=2797, 99=7095, 99.9=16927, 99.99=26927] 
2023-03-01 12:50:56:717 2370 sec: 527231837 operations; 219992.5 current ops/sec; est completion in 35 minutes [INSERT: Count=2199935, Max=34975, Min=241, Avg=1816.14, 90=2795, 99=6923, 99.9=17487, 99.99=28511] 
2023-03-01 12:51:06:717 2380 sec: 529403964 operations; 217212.7 current ops/sec; est completion in 35 minutes [INSERT: Count=2172128, Max=135423, Min=235, Avg=1839.38, 90=2763, 99=6907, 99.9=20559, 99.99=59199] 
2023-03-01 12:51:16:717 2390 sec: 531566073 operations; 216210.9 current ops/sec; est completion in 35 minutes [INSERT: Count=2162106, Max=166911, Min=235, Avg=1847.85, 90=2741, 99=6695, 99.9=20127, 99.99=108479] 
2023-03-01 12:51:26:717 2400 sec: 533763223 operations; 219715 current ops/sec; est completion in 34 minutes [INSERT: Count=2197155, Max=31471, Min=248, Avg=1818.31, 90=2715, 99=6819, 99.9=18159, 99.99=24671] 
2023-03-01 12:51:36:717 2410 sec: 535937742 operations; 217451.9 current ops/sec; est completion in 34 minutes [INSERT: Count=2174512, Max=194303, Min=219, Avg=1837.44, 90=2769, 99=7087, 99.9=20735, 99.99=117439] 
2023-03-01 12:51:46:717 2420 sec: 538117378 operations; 217963.6 current ops/sec; est completion in 34 minutes [INSERT: Count=2179638, Max=34975, Min=235, Avg=1833.02, 90=2795, 99=7235, 99.9=20591, 99.99=29279] 
2023-03-01 12:51:56:717 2430 sec: 540326425 operations; 220904.7 current ops/sec; est completion in 34 minutes [INSERT: Count=2209050, Max=41023, Min=234, Avg=1808.44, 90=2785, 99=7063, 99.9=16263, 99.99=21103] 
2023-03-01 12:52:06:717 2440 sec: 542506618 operations; 218019.3 current ops/sec; est completion in 34 minutes [INSERT: Count=2180187, Max=100799, Min=242, Avg=1832.72, 90=2795, 99=7283, 99.9=17439, 99.99=30815] 
2023-03-01 12:52:16:717 2450 sec: 544695651 operations; 218903.3 current ops/sec; est completion in 34 minutes [INSERT: Count=2189037, Max=167935, Min=241, Avg=1825.12, 90=2741, 99=7011, 99.9=17951, 99.99=85055] 
2023-03-01 12:52:26:717 2460 sec: 546874030 operations; 217837.9 current ops/sec; est completion in 33 minutes [INSERT: Count=2178381, Max=29711, Min=248, Avg=1834.07, 90=2773, 99=6815, 99.9=17375, 99.99=22511] 
2023-03-01 12:52:36:717 2470 sec: 549063232 operations; 218920.2 current ops/sec; est completion in 33 minutes [INSERT: Count=2189200, Max=40255, Min=235, Avg=1825, 90=2731, 99=6843, 99.9=16399, 99.99=25903] 
2023-03-01 12:52:46:717 2480 sec: 551252609 operations; 218937.7 current ops/sec; est completion in 33 minutes [INSERT: Count=2189379, Max=36479, Min=245, Avg=1824.84, 90=2783, 99=6991, 99.9=19519, 99.99=26655] 
2023-03-01 12:52:56:717 2490 sec: 553435691 operations; 218308.2 current ops/sec; est completion in 33 minutes [INSERT: Count=2183088, Max=136959, Min=244, Avg=1828.69, 90=2771, 99=7443, 99.9=17471, 99.99=64671] 
2023-03-01 12:53:06:717 2500 sec: 555645741 operations; 221005 current ops/sec; est completion in 33 minutes [INSERT: Count=2210059, Max=83711, Min=241, Avg=1809.16, 90=2801, 99=6819, 99.9=17167, 99.99=30415] 
2023-03-01 12:53:16:717 2510 sec: 557823577 operations; 217783.6 current ops/sec; est completion in 33 minutes [INSERT: Count=2177837, Max=91455, Min=236, Avg=1834.56, 90=2821, 99=7203, 99.9=20751, 99.99=39935] 
2023-03-01 12:53:26:717 2520 sec: 560019372 operations; 219579.5 current ops/sec; est completion in 33 minutes [INSERT: Count=2195812, Max=29631, Min=240, Avg=1819.53, 90=2791, 99=6779, 99.9=17247, 99.99=24159] 
2023-03-01 12:53:36:717 2530 sec: 562185831 operations; 216645.9 current ops/sec; est completion in 32 minutes [INSERT: Count=2166423, Max=42847, Min=252, Avg=1844.13, 90=2741, 99=6951, 99.9=19999, 99.99=27007] 
2023-03-01 12:53:46:717 2540 sec: 564369430 operations; 218359.9 current ops/sec; est completion in 32 minutes [INSERT: Count=2183608, Max=39199, Min=254, Avg=1829.71, 90=2733, 99=6855, 99.9=16335, 99.99=26143] 
2023-03-01 12:53:56:717 2550 sec: 566551219 operations; 218178.9 current ops/sec; est completion in 32 minutes [INSERT: Count=2181806, Max=116991, Min=249, Avg=1831.18, 90=2775, 99=7383, 99.9=17151, 99.99=37855] 
2023-03-01 12:54:06:717 2560 sec: 568744330 operations; 219311.1 current ops/sec; est completion in 32 minutes [INSERT: Count=2193123, Max=141567, Min=225, Avg=1821.74, 90=2775, 99=7083, 99.9=16751, 99.99=66239] 
2023-03-01 12:54:16:717 2570 sec: 570930963 operations; 218663.3 current ops/sec; est completion in 32 minutes [INSERT: Count=2186613, Max=112383, Min=232, Avg=1827.14, 90=2783, 99=7403, 99.9=17807, 99.99=40959] 
2023-03-01 12:54:26:717 2580 sec: 573079603 operations; 214864 current ops/sec; est completion in 32 minutes [INSERT: Count=2148626, Max=215807, Min=228, Avg=1859.4, 90=2805, 99=7575, 99.9=19455, 99.99=139903] 
2023-03-01 12:54:36:717 2590 sec: 575243179 operations; 216357.6 current ops/sec; est completion in 31 minutes [INSERT: Count=2163568, Max=184063, Min=219, Avg=1846.68, 90=2797, 99=7179, 99.9=17247, 99.99=132095] 
2023-03-01 12:54:46:717 2600 sec: 577437935 operations; 219475.6 current ops/sec; est completion in 31 minutes [INSERT: Count=2194757, Max=41343, Min=235, Avg=1820.29, 90=2723, 99=7015, 99.9=19167, 99.99=33887] 
2023-03-01 12:54:56:717 2610 sec: 579625468 operations; 218753.3 current ops/sec; est completion in 31 minutes [INSERT: Count=2187542, Max=36607, Min=251, Avg=1826.49, 90=2753, 99=6951, 99.9=18863, 99.99=26143] 
2023-03-01 12:55:06:717 2620 sec: 581810149 operations; 218468.1 current ops/sec; est completion in 31 minutes [INSERT: Count=2184670, Max=68607, Min=239, Avg=1828.67, 90=2751, 99=6923, 99.9=17919, 99.99=29167] 
2023-03-01 12:55:16:717 2630 sec: 583997996 operations; 218784.7 current ops/sec; est completion in 31 minutes [INSERT: Count=2187859, Max=43519, Min=243, Avg=1826.21, 90=2781, 99=7031, 99.9=18447, 99.99=39679] 
2023-03-01 12:55:26:717 2640 sec: 586206792 operations; 220879.6 current ops/sec; est completion in 31 minutes [INSERT: Count=2208787, Max=117119, Min=237, Avg=1808.78, 90=2737, 99=7287, 99.9=17023, 99.99=39967] 
2023-03-01 12:55:36:717 2650 sec: 588366476 operations; 215968.4 current ops/sec; est completion in 30 minutes [INSERT: Count=2159691, Max=74623, Min=247, Avg=1849.46, 90=2803, 99=7515, 99.9=17951, 99.99=67071] 
2023-03-01 12:55:46:717 2660 sec: 590560020 operations; 219354.4 current ops/sec; est completion in 30 minutes [INSERT: Count=2193538, Max=34687, Min=236, Avg=1821.36, 90=2777, 99=7527, 99.9=16991, 99.99=25839] 
2023-03-01 12:55:56:717 2670 sec: 592741056 operations; 218103.6 current ops/sec; est completion in 30 minutes [INSERT: Count=2181041, Max=97279, Min=226, Avg=1831.88, 90=2775, 99=7459, 99.9=18847, 99.99=31727] 
2023-03-01 12:56:06:717 2680 sec: 594915541 operations; 217448.5 current ops/sec; est completion in 30 minutes [INSERT: Count=2174479, Max=44799, Min=249, Avg=1837.33, 90=2735, 99=7263, 99.9=17103, 99.99=28047] 
2023-03-01 12:56:16:717 2690 sec: 597105596 operations; 219005.5 current ops/sec; est completion in 30 minutes [INSERT: Count=2190058, Max=152063, Min=235, Avg=1824.32, 90=2721, 99=6859, 99.9=16591, 99.99=86975] 
2023-03-01 12:56:26:717 2700 sec: 599316292 operations; 221069.6 current ops/sec; est completion in 30 minutes [INSERT: Count=2210698, Max=29551, Min=243, Avg=1807.14, 90=2759, 99=6451, 99.9=15799, 99.99=25151] 
2023-03-01 12:56:36:717 2710 sec: 601495977 operations; 217968.5 current ops/sec; est completion in 29 minutes [INSERT: Count=2179685, Max=107391, Min=239, Avg=1833.05, 90=2773, 99=7187, 99.9=19583, 99.99=32079] 
2023-03-01 12:56:46:717 2720 sec: 603676172 operations; 218019.5 current ops/sec; est completion in 29 minutes [INSERT: Count=2180196, Max=37919, Min=239, Avg=1832.44, 90=2789, 99=7155, 99.9=18127, 99.99=23695] 
2023-03-01 12:56:56:717 2730 sec: 605881973 operations; 220580.1 current ops/sec; est completion in 29 minutes [INSERT: Count=2205797, Max=94463, Min=240, Avg=1811.27, 90=2791, 99=7243, 99.9=17887, 99.99=26511] 
2023-03-01 12:57:06:717 2740 sec: 608058103 operations; 217613 current ops/sec; est completion in 29 minutes [INSERT: Count=2176126, Max=117695, Min=233, Avg=1835.98, 90=2785, 99=7199, 99.9=19663, 99.99=43359] 
2023-03-01 12:57:16:717 2750 sec: 610230211 operations; 217210.8 current ops/sec; est completion in 29 minutes [INSERT: Count=2172108, Max=38303, Min=241, Avg=1839.32, 90=2727, 99=6723, 99.9=17983, 99.99=27567] 
2023-03-01 12:57:26:717 2760 sec: 612411361 operations; 218115 current ops/sec; est completion in 29 minutes [INSERT: Count=2181158, Max=85183, Min=240, Avg=1831.78, 90=2741, 99=6807, 99.9=18543, 99.99=33535] 
2023-03-01 12:57:36:717 2770 sec: 614597399 operations; 218603.8 current ops/sec; est completion in 28 minutes [INSERT: Count=2186027, Max=91711, Min=242, Avg=1827.64, 90=2771, 99=6723, 99.9=17727, 99.99=85055] 
2023-03-01 12:57:46:717 2780 sec: 616781321 operations; 218392.2 current ops/sec; est completion in 28 minutes [INSERT: Count=2183923, Max=35519, Min=235, Avg=1829.19, 90=2765, 99=7231, 99.9=21791, 99.99=30271] 
2023-03-01 12:57:56:717 2790 sec: 618986809 operations; 220548.8 current ops/sec; est completion in 28 minutes [INSERT: Count=2205500, Max=112063, Min=236, Avg=1811.75, 90=2755, 99=6899, 99.9=16639, 99.99=32287] 
2023-03-01 12:58:06:717 2800 sec: 621180216 operations; 219340.7 current ops/sec; est completion in 28 minutes [INSERT: Count=2193398, Max=117631, Min=232, Avg=1821.46, 90=2745, 99=7863, 99.9=17007, 99.99=63999] 
2023-03-01 12:58:16:717 2810 sec: 623329486 operations; 214927 current ops/sec; est completion in 28 minutes [INSERT: Count=2149275, Max=290559, Min=235, Avg=1858.94, 90=2773, 99=6979, 99.9=19647, 99.99=230783] 
2023-03-01 12:58:26:717 2820 sec: 625487280 operations; 215779.4 current ops/sec; est completion in 28 minutes [INSERT: Count=2157789, Max=220543, Min=205, Avg=1851.64, 90=2713, 99=6803, 99.9=16623, 99.99=158079] 
2023-03-01 12:58:36:717 2830 sec: 627673679 operations; 218639.9 current ops/sec; est completion in 27 minutes [INSERT: Count=2186405, Max=85375, Min=235, Avg=1826.29, 90=2725, 99=7131, 99.9=19679, 99.99=29535] 
2023-03-01 12:58:46:717 2840 sec: 629875921 operations; 220224.2 current ops/sec; est completion in 27 minutes [INSERT: Count=2202234, Max=34335, Min=238, Avg=1815.17, 90=2799, 99=6799, 99.9=17455, 99.99=25791] 
2023-03-01 12:58:56:717 2850 sec: 632053819 operations; 217789.8 current ops/sec; est completion in 27 minutes [INSERT: Count=2177897, Max=132095, Min=230, Avg=1834.42, 90=2773, 99=7071, 99.9=18479, 99.99=62975] 
2023-03-01 12:59:06:717 2860 sec: 634220304 operations; 216648.5 current ops/sec; est completion in 27 minutes [INSERT: Count=2166492, Max=40607, Min=238, Avg=1844.19, 90=2791, 99=7575, 99.9=17695, 99.99=26159] 
2023-03-01 12:59:16:717 2870 sec: 636413396 operations; 219309.2 current ops/sec; est completion in 27 minutes [INSERT: Count=2193092, Max=169343, Min=233, Avg=1821.76, 90=2751, 99=7263, 99.9=18191, 99.99=99455] 
2023-03-01 12:59:26:717 2880 sec: 638607854 operations; 219445.8 current ops/sec; est completion in 27 minutes [INSERT: Count=2194453, Max=182911, Min=227, Avg=1820.61, 90=2727, 99=7091, 99.9=18671, 99.99=100927] 
2023-03-01 12:59:36:717 2890 sec: 640792511 operations; 218465.7 current ops/sec; est completion in 27 minutes [INSERT: Count=2184660, Max=142335, Min=242, Avg=1828.5, 90=2723, 99=6691, 99.9=17823, 99.99=48127] 
2023-03-01 12:59:46:717 2900 sec: 642971567 operations; 217905.6 current ops/sec; est completion in 26 minutes [INSERT: Count=2179053, Max=39039, Min=243, Avg=1833.82, 90=2765, 99=6975, 99.9=16847, 99.99=26303] 
2023-03-01 12:59:56:717 2910 sec: 645175644 operations; 220407.7 current ops/sec; est completion in 26 minutes [INSERT: Count=2204086, Max=37407, Min=244, Avg=1812.67, 90=2799, 99=6895, 99.9=16135, 99.99=32047] 
2023-03-01 13:00:06:717 2920 sec: 647365293 operations; 218964.9 current ops/sec; est completion in 26 minutes [INSERT: Count=2189648, Max=43519, Min=240, Avg=1824.62, 90=2807, 99=6955, 99.9=16719, 99.99=25615] 
2023-03-01 13:00:16:717 2930 sec: 649528134 operations; 216284.1 current ops/sec; est completion in 26 minutes [INSERT: Count=2162838, Max=163967, Min=228, Avg=1847.26, 90=2827, 99=7071, 99.9=17071, 99.99=105791] 
2023-03-01 13:00:26:717 2940 sec: 651714436 operations; 218630.2 current ops/sec; est completion in 26 minutes [INSERT: Count=2186300, Max=155647, Min=223, Avg=1827.37, 90=2793, 99=7355, 99.9=17327, 99.99=75711] 
2023-03-01 13:00:36:717 2950 sec: 653910912 operations; 219647.6 current ops/sec; est completion in 26 minutes [INSERT: Count=2196476, Max=40895, Min=233, Avg=1818.92, 90=2769, 99=7259, 99.9=18943, 99.99=26975] 
2023-03-01 13:00:46:717 2960 sec: 656103409 operations; 219249.7 current ops/sec; est completion in 25 minutes [INSERT: Count=2192492, Max=45151, Min=234, Avg=1822.29, 90=2749, 99=6779, 99.9=18447, 99.99=26095] 
2023-03-01 13:00:56:717 2970 sec: 658293485 operations; 219007.6 current ops/sec; est completion in 25 minutes [INSERT: Count=2190081, Max=38047, Min=240, Avg=1824.23, 90=2715, 99=6663, 99.9=16879, 99.99=25679] 
2023-03-01 13:01:06:717 2980 sec: 660507531 operations; 221404.6 current ops/sec; est completion in 25 minutes [INSERT: Count=2214047, Max=34271, Min=234, Avg=1804.48, 90=2735, 99=7023, 99.9=16279, 99.99=24143] 
2023-03-01 13:01:16:717 2990 sec: 662686176 operations; 217864.5 current ops/sec; est completion in 25 minutes [INSERT: Count=2178639, Max=138879, Min=220, Avg=1833.88, 90=2773, 99=6935, 99.9=18671, 99.99=89471] 
2023-03-01 13:01:26:717 3000 sec: 664854648 operations; 216847.2 current ops/sec; est completion in 25 minutes [INSERT: Count=2168472, Max=203903, Min=207, Avg=1842.47, 90=2765, 99=7047, 99.9=17807, 99.99=127039] 
2023-03-01 13:01:36:717 3010 sec: 667051411 operations; 219676.3 current ops/sec; est completion in 25 minutes [INSERT: Count=2196782, Max=86911, Min=243, Avg=1818.71, 90=2755, 99=7431, 99.9=18127, 99.99=81407] 
2023-03-01 13:01:46:717 3020 sec: 669237121 operations; 218571 current ops/sec; est completion in 24 minutes [INSERT: Count=2185710, Max=40191, Min=239, Avg=1827.91, 90=2773, 99=7395, 99.9=18607, 99.99=26991] 
2023-03-01 13:01:56:717 3030 sec: 671417594 operations; 218047.3 current ops/sec; est completion in 24 minutes [INSERT: Count=2180472, Max=270591, Min=235, Avg=1832.31, 90=2729, 99=6575, 99.9=16199, 99.99=205695] 
2023-03-01 13:02:06:717 3040 sec: 673600942 operations; 218334.8 current ops/sec; est completion in 24 minutes [INSERT: Count=2183347, Max=39359, Min=253, Avg=1829.88, 90=2727, 99=6615, 99.9=15807, 99.99=25807] 
2023-03-01 13:02:16:717 3050 sec: 675747780 operations; 214683.8 current ops/sec; est completion in 24 minutes [INSERT: Count=2146843, Max=205695, Min=235, Avg=1860.96, 90=2773, 99=7143, 99.9=17247, 99.99=147071] 
2023-03-01 13:02:26:717 3060 sec: 677924027 operations; 217624.7 current ops/sec; est completion in 24 minutes [INSERT: Count=2176227, Max=41215, Min=247, Avg=1835.92, 90=2811, 99=7519, 99.9=16415, 99.99=34111] 
2023-03-01 13:02:36:717 3070 sec: 680085516 operations; 216148.9 current ops/sec; est completion in 24 minutes [INSERT: Count=2161504, Max=39615, Min=243, Avg=1848.4, 90=2813, 99=7599, 99.9=19311, 99.99=28063] 
2023-03-01 13:02:46:717 3080 sec: 682260128 operations; 217461.2 current ops/sec; est completion in 23 minutes [INSERT: Count=2174615, Max=38463, Min=244, Avg=1837.23, 90=2787, 99=7235, 99.9=19647, 99.99=28047] 
2023-03-01 13:02:56:717 3090 sec: 684454646 operations; 219451.8 current ops/sec; est completion in 23 minutes [INSERT: Count=2194515, Max=38111, Min=240, Avg=1820.51, 90=2753, 99=7359, 99.9=17647, 99.99=33855] 
2023-03-01 13:03:06:717 3100 sec: 686629907 operations; 217526.1 current ops/sec; est completion in 23 minutes [INSERT: Count=2175250, Max=137983, Min=243, Avg=1836.72, 90=2743, 99=7743, 99.9=18047, 99.99=58911] 
2023-03-01 13:03:16:717 3110 sec: 688791072 operations; 216116.5 current ops/sec; est completion in 23 minutes [INSERT: Count=2161166, Max=198143, Min=239, Avg=1848.69, 90=2725, 99=6839, 99.9=16895, 99.99=129087] 
2023-03-01 13:03:26:717 3120 sec: 690979444 operations; 218837.2 current ops/sec; est completion in 23 minutes [INSERT: Count=2188379, Max=38783, Min=242, Avg=1825.68, 90=2757, 99=6759, 99.9=16447, 99.99=23199] 
2023-03-01 13:03:36:717 3130 sec: 693158015 operations; 217857.1 current ops/sec; est completion in 23 minutes [INSERT: Count=2178570, Max=115455, Min=239, Avg=1833.88, 90=2787, 99=7007, 99.9=17839, 99.99=51967] 
2023-03-01 13:03:46:717 3140 sec: 695343571 operations; 218555.6 current ops/sec; est completion in 22 minutes [INSERT: Count=2185564, Max=35295, Min=241, Avg=1828.08, 90=2787, 99=7247, 99.9=18239, 99.99=25519] 
2023-03-01 13:03:56:717 3150 sec: 697540650 operations; 219707.9 current ops/sec; est completion in 22 minutes [INSERT: Count=2197072, Max=206079, Min=236, Avg=1818.42, 90=2753, 99=6999, 99.9=16671, 99.99=133631] 
2023-03-01 13:04:06:717 3160 sec: 699714100 operations; 217345 current ops/sec; est completion in 22 minutes [INSERT: Count=2173453, Max=39999, Min=233, Avg=1838.25, 90=2799, 99=7539, 99.9=19183, 99.99=29711] 
2023-03-01 13:04:16:717 3170 sec: 701910923 operations; 219682.3 current ops/sec; est completion in 22 minutes [INSERT: Count=2196811, Max=39263, Min=240, Avg=1818.63, 90=2781, 99=6779, 99.9=16343, 99.99=28735] 
2023-03-01 13:04:26:717 3180 sec: 704062718 operations; 215179.5 current ops/sec; est completion in 22 minutes [INSERT: Count=2151795, Max=235775, Min=219, Avg=1856.76, 90=2751, 99=7051, 99.9=18719, 99.99=146303] 
2023-03-01 13:04:36:728 3190 sec: 706242749 operations; 217763.56 current ops/sec; est completion in 22 minutes [INSERT: Count=2180024, Max=159103, Min=224, Avg=1832.49, 90=2753, 99=7143, 99.9=18431, 99.99=66879] 
2023-03-01 13:04:46:717 3200 sec: 708418729 operations; 217837.62 current ops/sec; est completion in 21 minutes [INSERT: Count=2175988, Max=43935, Min=239, Avg=1836.27, 90=2785, 99=7559, 99.9=16463, 99.99=26591] 
2023-03-01 13:04:56:717 3210 sec: 710614876 operations; 219614.7 current ops/sec; est completion in 21 minutes [INSERT: Count=2196143, Max=81535, Min=246, Avg=1819.23, 90=2759, 99=6955, 99.9=16815, 99.99=27183] 
2023-03-01 13:05:06:717 3220 sec: 712778808 operations; 216393.2 current ops/sec; est completion in 21 minutes [INSERT: Count=2163944, Max=214015, Min=224, Avg=1846.28, 90=2807, 99=7279, 99.9=19935, 99.99=136831] 
2023-03-01 13:05:16:717 3230 sec: 714908114 operations; 212930.6 current ops/sec; est completion in 21 minutes [INSERT: Count=2129291, Max=194559, Min=218, Avg=1876.34, 90=2785, 99=7527, 99.9=22975, 99.99=152959] 
2023-03-01 13:05:26:717 3240 sec: 717083263 operations; 217514.9 current ops/sec; est completion in 21 minutes [INSERT: Count=2175157, Max=83007, Min=235, Avg=1836.81, 90=2765, 99=6971, 99.9=20415, 99.99=33439] 
2023-03-01 13:05:36:717 3250 sec: 719260155 operations; 217689.2 current ops/sec; est completion in 21 minutes [INSERT: Count=2176893, Max=93055, Min=234, Avg=1835.3, 90=2749, 99=6731, 99.9=16959, 99.99=35199] 
2023-03-01 13:05:46:717 3260 sec: 721449285 operations; 218913 current ops/sec; est completion in 20 minutes [INSERT: Count=2189127, Max=44735, Min=245, Avg=1825, 90=2745, 99=6779, 99.9=16279, 99.99=28399] 
2023-03-01 13:05:56:717 3270 sec: 723629134 operations; 217984.9 current ops/sec; est completion in 20 minutes [INSERT: Count=2179849, Max=131967, Min=236, Avg=1832.86, 90=2769, 99=6907, 99.9=17887, 99.99=66111] 
2023-03-01 13:06:06:717 3280 sec: 725819363 operations; 219022.9 current ops/sec; est completion in 20 minutes [INSERT: Count=2190232, Max=130879, Min=234, Avg=1824.12, 90=2773, 99=6999, 99.9=18175, 99.99=52671] 
2023-03-01 13:06:16:717 3290 sec: 727972484 operations; 215312.1 current ops/sec; est completion in 20 minutes [INSERT: Count=2153110, Max=184191, Min=241, Avg=1855.59, 90=2789, 99=7599, 99.9=20543, 99.99=91903] 
2023-03-01 13:06:26:717 3300 sec: 730143471 operations; 217098.7 current ops/sec; est completion in 20 minutes [INSERT: Count=2170991, Max=179839, Min=219, Avg=1840.37, 90=2753, 99=6707, 99.9=18159, 99.99=99711] 
2023-03-01 13:06:36:717 3310 sec: 732330779 operations; 218730.8 current ops/sec; est completion in 20 minutes [INSERT: Count=2187310, Max=35967, Min=239, Avg=1826.59, 90=2771, 99=7083, 99.9=17423, 99.99=25167] 
2023-03-01 13:06:46:717 3320 sec: 734506037 operations; 217525.8 current ops/sec; est completion in 20 minutes [INSERT: Count=2175251, Max=211839, Min=248, Avg=1836.7, 90=2743, 99=6871, 99.9=16063, 99.99=114303] 
2023-03-01 13:06:56:717 3330 sec: 736655067 operations; 214903 current ops/sec; est completion in 19 minutes [INSERT: Count=2149044, Max=145663, Min=241, Avg=1859.13, 90=2767, 99=7111, 99.9=19887, 99.99=63455] 
2023-03-01 13:07:06:717 3340 sec: 738818999 operations; 216393.2 current ops/sec; est completion in 19 minutes [INSERT: Count=2163925, Max=166783, Min=216, Avg=1846.34, 90=2753, 99=6911, 99.9=19487, 99.99=114303] 
2023-03-01 13:07:16:717 3350 sec: 740980585 operations; 216158.6 current ops/sec; est completion in 19 minutes [INSERT: Count=2161588, Max=249983, Min=223, Avg=1848.28, 90=2771, 99=6959, 99.9=17279, 99.99=158207] 
2023-03-01 13:07:26:717 3360 sec: 743162871 operations; 218228.6 current ops/sec; est completion in 19 minutes [INSERT: Count=2182282, Max=176127, Min=203, Avg=1830.85, 90=2729, 99=6735, 99.9=18239, 99.99=134527] 
2023-03-01 13:07:36:717 3370 sec: 745354495 operations; 219162.4 current ops/sec; est completion in 19 minutes [INSERT: Count=2191628, Max=44703, Min=238, Avg=1822.88, 90=2747, 99=7519, 99.9=19663, 99.99=28879] 
2023-03-01 13:07:46:717 3380 sec: 747589448 operations; 223495.3 current ops/sec; est completion in 19 minutes [INSERT: Count=2234957, Max=38783, Min=231, Avg=1787.62, 90=2783, 99=7695, 99.9=17247, 99.99=28639] 
2023-03-01 13:07:56:717 3390 sec: 749818867 operations; 222941.9 current ops/sec; est completion in 18 minutes [INSERT: Count=2229421, Max=196863, Min=223, Avg=1792.07, 90=2821, 99=7587, 99.9=17071, 99.99=123519] 
2023-03-01 13:08:06:717 3400 sec: 752014982 operations; 219611.5 current ops/sec; est completion in 18 minutes [INSERT: Count=2196109, Max=151551, Min=222, Avg=1819.27, 90=2847, 99=7635, 99.9=18943, 99.99=57439] 
2023-03-01 13:08:16:717 3410 sec: 754218524 operations; 220354.2 current ops/sec; est completion in 18 minutes [INSERT: Count=2203546, Max=205439, Min=221, Avg=1812.96, 90=2873, 99=8167, 99.9=20127, 99.99=118975] 
2023-03-01 13:08:26:717 3420 sec: 756475480 operations; 225695.6 current ops/sec; est completion in 18 minutes [INSERT: Count=2256954, Max=38207, Min=219, Avg=1770.19, 90=2885, 99=7719, 99.9=15775, 99.99=26431] 
2023-03-01 13:08:36:717 3430 sec: 758697270 operations; 222179 current ops/sec; est completion in 18 minutes [INSERT: Count=2221793, Max=30783, Min=214, Avg=1798.22, 90=2865, 99=8631, 99.9=17375, 99.99=23071] 
2023-03-01 13:08:46:717 3440 sec: 760919141 operations; 222187.1 current ops/sec; est completion in 18 minutes [INSERT: Count=2221866, Max=45343, Min=232, Avg=1798.11, 90=2819, 99=7711, 99.9=18447, 99.99=28463] 
2023-03-01 13:08:56:717 3450 sec: 763121396 operations; 220225.5 current ops/sec; est completion in 17 minutes [INSERT: Count=2202256, Max=201215, Min=221, Avg=1814.16, 90=2765, 99=7723, 99.9=19167, 99.99=121279] 
2023-03-01 13:09:06:717 3460 sec: 765326040 operations; 220464.4 current ops/sec; est completion in 17 minutes [INSERT: Count=2204642, Max=34623, Min=244, Avg=1812.18, 90=2785, 99=7175, 99.9=16783, 99.99=23695] 
2023-03-01 13:09:16:717 3470 sec: 767506068 operations; 218002.8 current ops/sec; est completion in 17 minutes [INSERT: Count=2180031, Max=36767, Min=241, Avg=1832.63, 90=2769, 99=6963, 99.9=17359, 99.99=24607] 
2023-03-01 13:09:26:717 3480 sec: 769665477 operations; 215940.9 current ops/sec; est completion in 17 minutes [INSERT: Count=2159404, Max=116095, Min=238, Avg=1850.2, 90=2779, 99=6795, 99.9=21871, 99.99=43167] 
2023-03-01 13:09:36:717 3490 sec: 771856680 operations; 219120.3 current ops/sec; est completion in 17 minutes [INSERT: Count=2191209, Max=80575, Min=234, Avg=1823.32, 90=2751, 99=7495, 99.9=18815, 99.99=28927] 
2023-03-01 13:09:46:717 3500 sec: 774061240 operations; 220456 current ops/sec; est completion in 17 minutes [INSERT: Count=2204559, Max=35391, Min=229, Avg=1812.23, 90=2769, 99=7111, 99.9=19055, 99.99=25839] 
2023-03-01 13:09:56:717 3510 sec: 776274924 operations; 221368.4 current ops/sec; est completion in 16 minutes [INSERT: Count=2213686, Max=99455, Min=242, Avg=1804.79, 90=2741, 99=6787, 99.9=16247, 99.99=54495] 
2023-03-01 13:10:06:717 3520 sec: 778426944 operations; 215202 current ops/sec; est completion in 16 minutes [INSERT: Count=2152017, Max=122175, Min=237, Avg=1856.61, 90=2747, 99=7387, 99.9=20703, 99.99=104063] 
2023-03-01 13:10:16:717 3530 sec: 780603811 operations; 217686.7 current ops/sec; est completion in 16 minutes [INSERT: Count=2176864, Max=69183, Min=248, Avg=1835.31, 90=2747, 99=7175, 99.9=17215, 99.99=31071] 
2023-03-01 13:10:26:717 3540 sec: 782755713 operations; 215190.2 current ops/sec; est completion in 16 minutes [INSERT: Count=2151903, Max=241407, Min=225, Avg=1856.68, 90=2747, 99=7059, 99.9=18031, 99.99=171391] 
2023-03-01 13:10:36:718 3550 sec: 784941164 operations; 218523.25 current ops/sec; est completion in 16 minutes [INSERT: Count=2185431, Max=78847, Min=246, Avg=1826.15, 90=2757, 99=6947, 99.9=17535, 99.99=30959] 
2023-03-01 13:10:46:717 3560 sec: 787134576 operations; 219363.14 current ops/sec; est completion in 16 minutes [INSERT: Count=2193444, Max=41503, Min=241, Avg=1823.45, 90=2763, 99=7163, 99.9=18175, 99.99=35679] 
2023-03-01 13:10:56:717 3570 sec: 789321703 operations; 218712.7 current ops/sec; est completion in 15 minutes [INSERT: Count=2187125, Max=186495, Min=243, Avg=1826.65, 90=2779, 99=7195, 99.9=15767, 99.99=119999] 
2023-03-01 13:11:06:717 3580 sec: 791485362 operations; 216365.9 current ops/sec; est completion in 15 minutes [INSERT: Count=2163661, Max=188031, Min=223, Avg=1846.59, 90=2759, 99=7635, 99.9=17503, 99.99=74367] 
2023-03-01 13:11:16:717 3590 sec: 793662711 operations; 217734.9 current ops/sec; est completion in 15 minutes [INSERT: Count=2177341, Max=36511, Min=234, Avg=1834.96, 90=2761, 99=7243, 99.9=17647, 99.99=32399] 
2023-03-01 13:11:26:717 3600 sec: 795846026 operations; 218331.5 current ops/sec; est completion in 15 minutes [INSERT: Count=2183331, Max=119231, Min=242, Avg=1829.89, 90=2761, 99=6967, 99.9=15839, 99.99=45503] 
2023-03-01 13:11:36:717 3610 sec: 798008858 operations; 216283.2 current ops/sec; est completion in 15 minutes [INSERT: Count=2162824, Max=152703, Min=245, Avg=1847.26, 90=2767, 99=6951, 99.9=20303, 99.99=45055] 
2023-03-01 13:11:46:717 3620 sec: 800174778 operations; 216592 current ops/sec; est completion in 15 minutes [INSERT: Count=2165928, Max=40671, Min=239, Avg=1844.59, 90=2769, 99=7063, 99.9=19551, 99.99=27775] 
2023-03-01 13:11:56:717 3630 sec: 802344878 operations; 217010 current ops/sec; est completion in 14 minutes [INSERT: Count=2170106, Max=43871, Min=241, Avg=1841.06, 90=2769, 99=6979, 99.9=17583, 99.99=33951] 
2023-03-01 13:12:06:717 3640 sec: 804525106 operations; 218022.8 current ops/sec; est completion in 14 minutes [INSERT: Count=2180225, Max=211967, Min=222, Avg=1832.6, 90=2761, 99=6679, 99.9=16527, 99.99=137599] 
2023-03-01 13:12:16:717 3650 sec: 806702925 operations; 217781.9 current ops/sec; est completion in 14 minutes [INSERT: Count=2177814, Max=117055, Min=243, Avg=1834.58, 90=2787, 99=7031, 99.9=17119, 99.99=38303] 
2023-03-01 13:12:26:717 3660 sec: 808875654 operations; 217272.9 current ops/sec; est completion in 14 minutes [INSERT: Count=2172728, Max=30895, Min=249, Avg=1838.79, 90=2805, 99=6711, 99.9=19919, 99.99=25839] 
2023-03-01 13:12:36:717 3670 sec: 811033938 operations; 215828.4 current ops/sec; est completion in 14 minutes [INSERT: Count=2158268, Max=212735, Min=239, Avg=1851.13, 90=2763, 99=6831, 99.9=17263, 99.99=123263] 
2023-03-01 13:12:46:717 3680 sec: 813211347 operations; 217740.9 current ops/sec; est completion in 14 minutes [INSERT: Count=2177414, Max=37727, Min=251, Avg=1834.86, 90=2765, 99=6855, 99.9=17631, 99.99=26623] 
2023-03-01 13:12:56:728 3690 sec: 815385065 operations; 217132.95 current ops/sec; est completion in 13 minutes [INSERT: Count=2173706, Max=49055, Min=242, Avg=1837.7, 90=2785, 99=6935, 99.9=19599, 99.99=27023] 
2023-03-01 13:13:06:717 3700 sec: 817571345 operations; 218868.76 current ops/sec; est completion in 13 minutes [INSERT: Count=2186293, Max=40127, Min=245, Avg=1827.73, 90=2755, 99=7135, 99.9=18447, 99.99=31407] 
2023-03-01 13:13:16:717 3710 sec: 819751930 operations; 218058.5 current ops/sec; est completion in 13 minutes [INSERT: Count=2180577, Max=113791, Min=244, Avg=1832.11, 90=2781, 99=7119, 99.9=16767, 99.99=76607] 
2023-03-01 13:13:26:717 3720 sec: 821958584 operations; 220665.4 current ops/sec; est completion in 13 minutes [INSERT: Count=2206669, Max=42047, Min=238, Avg=1810.6, 90=2789, 99=7427, 99.9=15943, 99.99=26783] 
2023-03-01 13:13:36:717 3730 sec: 824126372 operations; 216778.8 current ops/sec; est completion in 13 minutes [INSERT: Count=2167754, Max=144511, Min=232, Avg=1837.92, 90=2793, 99=8123, 99.9=22463, 99.99=58655] 
2023-03-01 13:13:46:717 3740 sec: 826318024 operations; 219165.2 current ops/sec; est completion in 13 minutes [INSERT: Count=2191685, Max=51871, Min=239, Avg=1827.93, 90=2829, 99=8207, 99.9=19999, 99.99=44575] 
2023-03-01 13:13:56:717 3750 sec: 828541313 operations; 222328.9 current ops/sec; est completion in 12 minutes [INSERT: Count=2223286, Max=76479, Min=244, Avg=1796.94, 90=2783, 99=7499, 99.9=17055, 99.99=25983] 
2023-03-01 13:14:06:717 3760 sec: 830734075 operations; 219276.2 current ops/sec; est completion in 12 minutes [INSERT: Count=2192755, Max=137855, Min=233, Avg=1822.06, 90=2765, 99=7831, 99.9=18575, 99.99=50847] 
2023-03-01 13:14:16:717 3770 sec: 832925482 operations; 219140.7 current ops/sec; est completion in 12 minutes [INSERT: Count=2191398, Max=142975, Min=245, Avg=1823.14, 90=2739, 99=7311, 99.9=18479, 99.99=76607] 
2023-03-01 13:14:26:717 3780 sec: 835095895 operations; 217041.3 current ops/sec; est completion in 12 minutes [INSERT: Count=2170417, Max=215551, Min=220, Avg=1840.85, 90=2751, 99=6719, 99.9=21135, 99.99=147839] 
2023-03-01 13:14:36:717 3790 sec: 837294409 operations; 219851.4 current ops/sec; est completion in 12 minutes [INSERT: Count=2198512, Max=140671, Min=245, Avg=1817.27, 90=2723, 99=6711, 99.9=18207, 99.99=45503] 
2023-03-01 13:14:46:717 3800 sec: 839474423 operations; 218001.4 current ops/sec; est completion in 12 minutes [INSERT: Count=2180011, Max=36127, Min=247, Avg=1832.64, 90=2739, 99=7135, 99.9=17055, 99.99=25615] 
2023-03-01 13:14:56:717 3810 sec: 841648293 operations; 217387 current ops/sec; est completion in 11 minutes [INSERT: Count=2173872, Max=93183, Min=230, Avg=1837.89, 90=2771, 99=6991, 99.9=17183, 99.99=32959] 
2023-03-01 13:15:06:717 3820 sec: 843832940 operations; 218464.7 current ops/sec; est completion in 11 minutes [INSERT: Count=2184647, Max=188031, Min=217, Avg=1828.79, 90=2779, 99=7347, 99.9=17599, 99.99=132223] 
2023-03-01 13:15:16:717 3830 sec: 846037292 operations; 220435.2 current ops/sec; est completion in 11 minutes [INSERT: Count=2204356, Max=38143, Min=220, Avg=1812.52, 90=2867, 99=8215, 99.9=18207, 99.99=30783] 
2023-03-01 13:15:26:717 3840 sec: 848196219 operations; 215892.7 current ops/sec; est completion in 11 minutes [INSERT: Count=2158929, Max=178815, Min=211, Avg=1850.57, 90=2833, 99=7739, 99.9=22239, 99.99=128383] 
2023-03-01 13:15:36:717 3850 sec: 850356627 operations; 216040.8 current ops/sec; est completion in 11 minutes [INSERT: Count=2160415, Max=188159, Min=218, Avg=1849.32, 90=2767, 99=7279, 99.9=22543, 99.99=117055] 
2023-03-01 13:15:46:717 3860 sec: 852553833 operations; 219720.6 current ops/sec; est completion in 11 minutes [INSERT: Count=2197193, Max=41631, Min=224, Avg=1818.26, 90=2859, 99=7735, 99.9=18447, 99.99=30767] 
2023-03-01 13:15:56:717 3870 sec: 854773940 operations; 222010.7 current ops/sec; est completion in 10 minutes [INSERT: Count=2220113, Max=120255, Min=212, Avg=1799.6, 90=2869, 99=7823, 99.9=18815, 99.99=39487] 
2023-03-01 13:16:06:717 3880 sec: 856942631 operations; 216869.1 current ops/sec; est completion in 10 minutes [INSERT: Count=2168685, Max=138751, Min=217, Avg=1842.18, 90=2865, 99=8055, 99.9=21103, 99.99=77567] 
2023-03-01 13:16:16:717 3890 sec: 859148758 operations; 220612.7 current ops/sec; est completion in 10 minutes [INSERT: Count=2206129, Max=140927, Min=209, Avg=1811.13, 90=2869, 99=7947, 99.9=17791, 99.99=74815] 
2023-03-01 13:16:26:717 3900 sec: 861394498 operations; 224574 current ops/sec; est completion in 10 minutes [INSERT: Count=2245737, Max=55039, Min=213, Avg=1778.98, 90=2871, 99=8551, 99.9=19871, 99.99=42271] 
2023-03-01 13:16:36:717 3910 sec: 863621994 operations; 222749.6 current ops/sec; est completion in 10 minutes [INSERT: Count=2227505, Max=104319, Min=223, Avg=1793.62, 90=2897, 99=8399, 99.9=20735, 99.99=44191] 
2023-03-01 13:16:46:717 3920 sec: 865828982 operations; 220698.8 current ops/sec; est completion in 10 minutes [INSERT: Count=2206986, Max=33983, Min=218, Avg=1810.22, 90=2855, 99=7343, 99.9=16119, 99.99=28175] 
2023-03-01 13:16:56:717 3930 sec: 868014754 operations; 218577.2 current ops/sec; est completion in 9 minutes [INSERT: Count=2185770, Max=185215, Min=217, Avg=1827.94, 90=2825, 99=7527, 99.9=17407, 99.99=90239] 
2023-03-01 13:17:06:717 3940 sec: 870213903 operations; 219914.9 current ops/sec; est completion in 9 minutes [INSERT: Count=2199144, Max=128127, Min=220, Avg=1816.71, 90=2829, 99=7579, 99.9=18191, 99.99=44095] 
2023-03-01 13:17:16:717 3950 sec: 872410055 operations; 219615.2 current ops/sec; est completion in 9 minutes [INSERT: Count=2196155, Max=211327, Min=210, Avg=1819.19, 90=2815, 99=7463, 99.9=18319, 99.99=166783] 
2023-03-01 13:17:26:717 3960 sec: 874673900 operations; 226384.5 current ops/sec; est completion in 9 minutes [INSERT: Count=2263848, Max=34175, Min=222, Avg=1764.71, 90=2863, 99=7691, 99.9=16719, 99.99=23503] 
2023-03-01 13:17:36:717 3970 sec: 876898631 operations; 222473.1 current ops/sec; est completion in 9 minutes [INSERT: Count=2224731, Max=238079, Min=207, Avg=1795.81, 90=2825, 99=9175, 99.9=22111, 99.99=143359] 
2023-03-01 13:17:46:717 3980 sec: 879095848 operations; 219721.7 current ops/sec; est completion in 9 minutes [INSERT: Count=2197216, Max=44575, Min=216, Avg=1818.3, 90=2923, 99=8743, 99.9=22191, 99.99=36127] 
2023-03-01 13:17:56:717 3990 sec: 881299720 operations; 220387.2 current ops/sec; est completion in 8 minutes [INSERT: Count=2203867, Max=123135, Min=217, Avg=1812.72, 90=2959, 99=9135, 99.9=22479, 99.99=52223] 
2023-03-01 13:18:06:717 4000 sec: 883537575 operations; 223785.5 current ops/sec; est completion in 8 minutes [INSERT: Count=2237862, Max=45087, Min=223, Avg=1785.34, 90=3011, 99=9855, 99.9=20863, 99.99=30591] 
2023-03-01 13:18:16:717 4010 sec: 885760737 operations; 222316.2 current ops/sec; est completion in 8 minutes [INSERT: Count=2223163, Max=171647, Min=204, Avg=1796.96, 90=2975, 99=9431, 99.9=21247, 99.99=123775] 
2023-03-01 13:18:26:717 4020 sec: 887999064 operations; 223832.7 current ops/sec; est completion in 8 minutes [INSERT: Count=2238322, Max=104447, Min=216, Avg=1784.84, 90=2891, 99=8567, 99.9=17727, 99.99=34399] 
2023-03-01 13:18:36:717 4030 sec: 890223219 operations; 222415.5 current ops/sec; est completion in 8 minutes [INSERT: Count=2224164, Max=44447, Min=229, Avg=1796.32, 90=2805, 99=8375, 99.9=18975, 99.99=29167] 
2023-03-01 13:18:46:717 4040 sec: 892443939 operations; 222072 current ops/sec; est completion in 8 minutes [INSERT: Count=2220709, Max=38399, Min=235, Avg=1798.9, 90=2795, 99=8479, 99.9=19855, 99.99=27855] 
2023-03-01 13:18:56:717 4050 sec: 894650465 operations; 220652.6 current ops/sec; est completion in 7 minutes [INSERT: Count=2206530, Max=42367, Min=224, Avg=1810.72, 90=2823, 99=7863, 99.9=19983, 99.99=35007] 
2023-03-01 13:19:06:725 4060 sec: 896853426 operations; 220120 current ops/sec; est completion in 7 minutes [INSERT: Count=2202965, Max=40479, Min=244, Avg=1812.33, 90=2787, 99=7083, 99.9=16431, 99.99=21503] 
2023-03-01 13:19:16:717 4070 sec: 899036864 operations; 218518.61 current ops/sec; est completion in 7 minutes [INSERT: Count=2183432, Max=126079, Min=236, Avg=1831.02, 90=2783, 99=7043, 99.9=18303, 99.99=42623] 
2023-03-01 13:19:26:717 4080 sec: 901217459 operations; 218059.5 current ops/sec; est completion in 7 minutes [INSERT: Count=2180595, Max=109119, Min=233, Avg=1832.24, 90=2753, 99=7331, 99.9=16831, 99.99=35647] 
2023-03-01 13:19:36:717 4090 sec: 903411415 operations; 219395.6 current ops/sec; est completion in 7 minutes [INSERT: Count=2193958, Max=120447, Min=239, Avg=1821.05, 90=2719, 99=7123, 99.9=17567, 99.99=55295] 
2023-03-01 13:19:46:717 4100 sec: 905622140 operations; 221072.5 current ops/sec; est completion in 7 minutes [INSERT: Count=2210722, Max=32671, Min=234, Avg=1807.24, 90=2775, 99=7591, 99.9=16383, 99.99=24191] 
2023-03-01 13:19:56:717 4110 sec: 907826683 operations; 220454.3 current ops/sec; est completion in 6 minutes [INSERT: Count=2204542, Max=47167, Min=227, Avg=1812.19, 90=2873, 99=8367, 99.9=17295, 99.99=27055] 
2023-03-01 13:20:06:717 4120 sec: 910038228 operations; 221154.5 current ops/sec; est completion in 6 minutes [INSERT: Count=2211549, Max=50623, Min=218, Avg=1806.6, 90=2877, 99=7667, 99.9=20687, 99.99=41119] 
2023-03-01 13:20:16:717 4130 sec: 912230203 operations; 219197.5 current ops/sec; est completion in 6 minutes [INSERT: Count=2191976, Max=47231, Min=232, Avg=1822.64, 90=2861, 99=8215, 99.9=22079, 99.99=41023] 
2023-03-01 13:20:26:717 4140 sec: 914464129 operations; 223392.6 current ops/sec; est completion in 6 minutes [INSERT: Count=2233922, Max=35231, Min=231, Avg=1788.34, 90=2903, 99=8215, 99.9=15687, 99.99=23087] 
2023-03-01 13:20:36:717 4150 sec: 916700480 operations; 223635.1 current ops/sec; est completion in 6 minutes [INSERT: Count=2236361, Max=161663, Min=224, Avg=1786.52, 90=2875, 99=8575, 99.9=19775, 99.99=82431] 
2023-03-01 13:20:46:717 4160 sec: 918955680 operations; 225520 current ops/sec; est completion in 6 minutes [INSERT: Count=2255195, Max=34367, Min=218, Avg=1771.54, 90=2973, 99=8351, 99.9=17903, 99.99=26447] 
2023-03-01 13:20:56:717 4170 sec: 921187954 operations; 223227.4 current ops/sec; est completion in 5 minutes [INSERT: Count=2232271, Max=38719, Min=230, Avg=1789.75, 90=2957, 99=8415, 99.9=17647, 99.99=26079] 
2023-03-01 13:21:06:717 4180 sec: 923367415 operations; 217946.1 current ops/sec; est completion in 5 minutes [INSERT: Count=2179461, Max=132351, Min=209, Avg=1833.15, 90=2919, 99=8223, 99.9=21247, 99.99=68223] 
2023-03-01 13:21:16:717 4190 sec: 925536410 operations; 216899.5 current ops/sec; est completion in 5 minutes [INSERT: Count=2168993, Max=222207, Min=214, Avg=1842.05, 90=2879, 99=7719, 99.9=17343, 99.99=157439] 
2023-03-01 13:21:26:717 4200 sec: 927728748 operations; 219233.8 current ops/sec; est completion in 5 minutes [INSERT: Count=2192341, Max=51199, Min=227, Avg=1822.35, 90=2869, 99=7675, 99.9=18191, 99.99=43039] 
2023-03-01 13:21:36:717 4210 sec: 929941372 operations; 221262.4 current ops/sec; est completion in 5 minutes [INSERT: Count=2212628, Max=103551, Min=225, Avg=1805.63, 90=2897, 99=8519, 99.9=17711, 99.99=48735] 
2023-03-01 13:21:46:717 4220 sec: 932135070 operations; 219369.8 current ops/sec; est completion in 5 minutes [INSERT: Count=2193695, Max=38431, Min=220, Avg=1821.27, 90=2957, 99=8999, 99.9=23231, 99.99=29999] 
2023-03-01 13:21:56:717 4230 sec: 934330174 operations; 219510.4 current ops/sec; est completion in 4 minutes [INSERT: Count=2195107, Max=36639, Min=230, Avg=1820.02, 90=2975, 99=9103, 99.9=18911, 99.99=30911] 
2023-03-01 13:22:06:717 4240 sec: 936568327 operations; 223815.3 current ops/sec; est completion in 4 minutes [INSERT: Count=2238146, Max=56671, Min=218, Avg=1784.92, 90=2859, 99=8911, 99.9=21807, 99.99=32175] 
2023-03-01 13:22:16:717 4250 sec: 938779563 operations; 221123.6 current ops/sec; est completion in 4 minutes [INSERT: Count=2211231, Max=206591, Min=222, Avg=1806.74, 90=3037, 99=9319, 99.9=22751, 99.99=122047] 
2023-03-01 13:22:26:717 4260 sec: 941026850 operations; 224728.7 current ops/sec; est completion in 4 minutes [INSERT: Count=2247293, Max=74687, Min=221, Avg=1777.77, 90=3137, 99=10007, 99.9=19343, 99.99=28943] 
2023-03-01 13:22:36:717 4270 sec: 943274202 operations; 224735.2 current ops/sec; est completion in 4 minutes [INSERT: Count=2247354, Max=211967, Min=209, Avg=1777.45, 90=3067, 99=10639, 99.9=22015, 99.99=135679] 
2023-03-01 13:22:46:717 4280 sec: 945539578 operations; 226537.6 current ops/sec; est completion in 4 minutes [INSERT: Count=2265385, Max=44191, Min=220, Avg=1763.9, 90=3207, 99=10207, 99.9=22015, 99.99=35423] 
2023-03-01 13:22:56:717 4290 sec: 947794310 operations; 225473.2 current ops/sec; est completion in 3 minutes [INSERT: Count=2254722, Max=49663, Min=219, Avg=1771.67, 90=3195, 99=11519, 99.9=22927, 99.99=34367] 
2023-03-01 13:23:06:717 4300 sec: 950050677 operations; 225636.7 current ops/sec; est completion in 3 minutes [INSERT: Count=2256358, Max=48927, Min=215, Avg=1770.71, 90=3137, 99=11687, 99.9=23631, 99.99=36639] 
2023-03-01 13:23:16:717 4310 sec: 952296789 operations; 224611.2 current ops/sec; est completion in 3 minutes [INSERT: Count=2246127, Max=47007, Min=226, Avg=1778.69, 90=3069, 99=9575, 99.9=20767, 99.99=31263] 
2023-03-01 13:23:26:717 4320 sec: 954524403 operations; 222761.4 current ops/sec; est completion in 3 minutes [INSERT: Count=2227610, Max=100863, Min=226, Avg=1793.48, 90=2969, 99=8551, 99.9=19023, 99.99=32287] 
2023-03-01 13:23:36:717 4330 sec: 956752753 operations; 222835 current ops/sec; est completion in 3 minutes [INSERT: Count=2228348, Max=39999, Min=216, Avg=1792.87, 90=2881, 99=8063, 99.9=17999, 99.99=27183] 
2023-03-01 13:23:46:717 4340 sec: 958979295 operations; 222654.2 current ops/sec; est completion in 3 minutes [INSERT: Count=2226546, Max=42719, Min=234, Avg=1794.33, 90=2839, 99=7751, 99.9=16383, 99.99=25263] 
2023-03-01 13:23:56:717 4350 sec: 961175665 operations; 219637 current ops/sec; est completion in 2 minutes [INSERT: Count=2196364, Max=71871, Min=233, Avg=1819.05, 90=2835, 99=8059, 99.9=17823, 99.99=27087] 
2023-03-01 13:24:06:717 4360 sec: 963375949 operations; 220028.4 current ops/sec; est completion in 2 minutes [INSERT: Count=2200283, Max=40095, Min=226, Avg=1815.74, 90=2877, 99=7507, 99.9=17167, 99.99=26079] 
2023-03-01 13:24:16:717 4370 sec: 965575234 operations; 219928.5 current ops/sec; est completion in 2 minutes [INSERT: Count=2199283, Max=110271, Min=217, Avg=1816.63, 90=2917, 99=8535, 99.9=20815, 99.99=94335] 
2023-03-01 13:24:26:717 4380 sec: 967802844 operations; 222761 current ops/sec; est completion in 2 minutes [INSERT: Count=2227610, Max=80191, Min=225, Avg=1793.28, 90=2959, 99=8051, 99.9=18463, 99.99=25263] 
2023-03-01 13:24:36:717 4390 sec: 970004931 operations; 220208.7 current ops/sec; est completion in 2 minutes [INSERT: Count=2202096, Max=108415, Min=218, Avg=1814.52, 90=2979, 99=9039, 99.9=24943, 99.99=51391] 
2023-03-01 13:24:46:717 4400 sec: 972224913 operations; 221998.2 current ops/sec; est completion in 2 minutes [INSERT: Count=2219987, Max=36287, Min=218, Avg=1799.6, 90=3125, 99=10175, 99.9=21359, 99.99=29199] 
2023-03-01 13:24:56:717 4410 sec: 974485360 operations; 226044.7 current ops/sec; est completion in 1 minute [INSERT: Count=2260442, Max=135679, Min=223, Avg=1767.45, 90=3031, 99=9279, 99.9=18703, 99.99=52735] 
2023-03-01 13:25:06:717 4420 sec: 976705308 operations; 221994.8 current ops/sec; est completion in 1 minute [INSERT: Count=2219948, Max=104255, Min=216, Avg=1799.69, 90=3149, 99=10263, 99.9=22959, 99.99=36735] 
2023-03-01 13:25:16:717 4430 sec: 978935113 operations; 222980.5 current ops/sec; est completion in 1 minute [INSERT: Count=2229801, Max=106559, Min=215, Avg=1791.71, 90=3135, 99=9671, 99.9=24959, 99.99=68095] 
2023-03-01 13:25:26:717 4440 sec: 981189632 operations; 225451.9 current ops/sec; est completion in 1 minute [INSERT: Count=2254519, Max=38111, Min=217, Avg=1772.05, 90=3123, 99=10207, 99.9=21679, 99.99=32479] 
2023-03-01 13:25:36:717 4450 sec: 983438560 operations; 224892.8 current ops/sec; est completion in 1 minute [INSERT: Count=2248936, Max=35103, Min=222, Avg=1776.47, 90=3063, 99=9623, 99.9=19071, 99.99=27295] 
2023-03-01 13:25:46:717 4460 sec: 985680515 operations; 224195.5 current ops/sec; est completion in 1 minute [INSERT: Count=2241951, Max=44511, Min=226, Avg=1782.01, 90=2959, 99=8671, 99.9=17199, 99.99=24943] 
2023-03-01 13:25:56:717 4470 sec: 987906893 operations; 222637.8 current ops/sec; est completion in 55 seconds [INSERT: Count=2226384, Max=152063, Min=225, Avg=1794.41, 90=2931, 99=8695, 99.9=17967, 99.99=71423] 
2023-03-01 13:26:06:717 4480 sec: 990147690 operations; 224079.7 current ops/sec; est completion in 45 seconds [INSERT: Count=2240787, Max=40895, Min=219, Avg=1782.9, 90=2963, 99=7927, 99.9=17151, 99.99=26751] 
2023-03-01 13:26:16:717 4490 sec: 992397603 operations; 224991.3 current ops/sec; est completion in 35 seconds [INSERT: Count=2249916, Max=94207, Min=227, Avg=1775.67, 90=2947, 99=8103, 99.9=18047, 99.99=30671] 
2023-03-01 13:26:26:717 4500 sec: 994621615 operations; 222401.2 current ops/sec; est completion in 25 seconds [INSERT: Count=2224015, Max=33631, Min=223, Avg=1796.44, 90=2957, 99=8047, 99.9=16527, 99.99=23215] 
2023-03-01 13:26:36:717 4510 sec: 996802513 operations; 218089.8 current ops/sec; est completion in 15 seconds [INSERT: Count=2180890, Max=91519, Min=222, Avg=1831.9, 90=2967, 99=8711, 99.9=21231, 99.99=46623] 
2023-03-01 13:26:46:717 4520 sec: 999011526 operations; 220901.3 current ops/sec; est completion in 5 second [CLEANUP: Count=13, Max=24, Min=3, Avg=5.69, 90=11, 99=24, 99.9=24, 99.99=24] [INSERT: Count=2209027, Max=47071, Min=221, Avg=1803, 90=2879, 99=7907, 99.9=19183, 99.99=37951] 
2023-03-01 13:26:56:043 4529 sec: 1000000000 operations; 106002.57 current ops/sec; [CLEANUP: Count=387, Max=2222079, Min=0, Avg=5741.01, 90=3, 99=15, 99.9=2222079, 99.99=2222079] [INSERT: Count=988444, Max=20975, Min=196, Avg=1423.19, 90=2243, 99=5159, 99.9=14895, 99.99=18111] 
[OVERALL], RunTime(ms), 4529323
[OVERALL], Throughput(ops/sec), 220783.54756328926
[TOTAL_GCS_PS_Scavenge], Count, 5206
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 48101
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0619909421341776
[TOTAL_GCS_PS_MarkSweep], Count, 10
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 669
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.014770419331984051
[TOTAL_GCs], Count, 5216
[TOTAL_GC_TIME], Time(ms), 48770
[TOTAL_GC_TIME_%], Time(%), 1.0767613614661617
[CLEANUP], Operations, 400
[CLEANUP], AverageLatency(us), 5554.615
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2222079
[CLEANUP], 95thPercentileLatency(us), 4
[CLEANUP], 99thPercentileLatency(us), 18
[INSERT], Operations, 1000000000
[INSERT], AverageLatency(us), 1806.907441129
[INSERT], MinLatency(us), 193
[INSERT], MaxLatency(us), 290559
[INSERT], 95thPercentileLatency(us), 3905
[INSERT], 99thPercentileLatency(us), 8383
[INSERT], Return=OK, 1000000000
