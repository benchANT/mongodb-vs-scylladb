bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=35.80.102.45,52.42.225.54,52.41.60.106 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=AH9zrN0p3Eutoxv -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 200 -p recordcount=500000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=250000000 -p insertcount=250000000
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.80.102.45,52.42.225.54,52.41.60.106 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=AH9zrN0p3Eutoxv -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 200 -p recordcount=500000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=250000000 -p insertcount=250000000 -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.80.102.45,52.42.225.54,52.41.60.106 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=AH9zrN0p3Eutoxv -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 200 -p recordcount=500000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=250000000 -p insertcount=250000000 -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
Starting test.
[Thread-9] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
[Thread-9] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
2023-05-04 11:10:37:992 0 sec: 0 operations; est completion in 0 second 
[Thread-9] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-9] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-9] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-9] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.42.225.54:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.41.60.106:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.188.164.221:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.80.102.45:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.13.155.228:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.229.236.137:9042 added
[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 638c151f-15f6-4914-a385-dddfb9970225

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.42.225.54; Rack: us-west-2a

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /54.188.164.221; Rack: us-west-2a

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.41.60.106; Rack: us-west-2c

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.13.155.228; Rack: us-west-2b

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.229.236.137; Rack: us-west-2b

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.80.102.45; Rack: us-west-2c

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-05-04 11:10:47:976 10 sec: 1325273 operations; 132514.05 current ops/sec; est completion in 31 minutes [INSERT: Count=1325447, Max=96767, Min=217, Avg=1397.64, 90=1849, 99=8471, 99.9=26543, 99.99=74879] 
2023-05-04 11:10:57:976 20 sec: 3009561 operations; 168428.8 current ops/sec; est completion in 27 minutes [INSERT: Count=1684174, Max=33631, Min=212, Avg=1184.89, 90=1665, 99=2679, 99.9=10543, 99.99=24911] 
2023-05-04 11:11:07:976 30 sec: 4513598 operations; 150403.7 current ops/sec; est completion in 27 minutes [INSERT: Count=1504052, Max=32735, Min=219, Avg=1327.4, 90=1881, 99=2713, 99.9=9775, 99.99=20991] 
2023-05-04 11:11:17:976 40 sec: 5886107 operations; 137250.9 current ops/sec; est completion in 27 minutes [INSERT: Count=1372497, Max=19951, Min=236, Avg=1454.86, 90=1957, 99=2821, 99.9=9111, 99.99=12343] 
2023-05-04 11:11:27:976 50 sec: 7352678 operations; 146657.1 current ops/sec; est completion in 27 minutes [INSERT: Count=1466555, Max=43967, Min=222, Avg=1361.38, 90=1914, 99=3025, 99.9=11551, 99.99=23167] 
2023-05-04 11:11:37:976 60 sec: 8646650 operations; 129397.2 current ops/sec; est completion in 27 minutes [INSERT: Count=1293982, Max=36671, Min=248, Avg=1543.31, 90=1960, 99=2961, 99.9=9047, 99.99=24447] 
2023-05-04 11:11:47:976 70 sec: 9972463 operations; 132594.56 current ops/sec; est completion in 28 minutes [INSERT: Count=1325817, Max=12951, Min=284, Avg=1506.16, 90=1931, 99=2741, 99.9=7559, 99.99=11711] 
2023-05-04 11:11:57:976 80 sec: 11286947 operations; 131435.26 current ops/sec; est completion in 28 minutes [INSERT: Count=1314477, Max=34335, Min=349, Avg=1519.19, 90=1938, 99=2827, 99.9=9343, 99.99=21759] 
2023-05-04 11:12:07:976 90 sec: 12602580 operations; 131563.3 current ops/sec; est completion in 28 minutes [INSERT: Count=1315644, Max=38687, Min=223, Avg=1517.88, 90=1946, 99=2901, 99.9=10679, 99.99=23071] 
2023-05-04 11:12:17:976 100 sec: 13908009 operations; 130542.9 current ops/sec; est completion in 28 minutes [INSERT: Count=1305417, Max=27775, Min=331, Avg=1529.74, 90=1998, 99=3929, 99.9=13439, 99.99=20655] 
2023-05-04 11:12:27:976 110 sec: 14815726 operations; 90780.78 current ops/sec; est completion in 29 minutes [INSERT: Count=907665, Max=275967, Min=227, Avg=2151.9, 90=2077, 99=16527, 99.9=92287, 99.99=196991] 
2023-05-04 11:12:37:976 120 sec: 15807213 operations; 99138.79 current ops/sec; est completion in 29 minutes [INSERT: Count=991565, Max=723967, Min=258, Avg=2059.89, 90=1942, 99=8039, 99.9=120767, 99.99=645631] 
2023-05-04 11:12:47:976 130 sec: 17114580 operations; 130736.7 current ops/sec; est completion in 29 minutes [INSERT: Count=1307340, Max=12895, Min=376, Avg=1527.46, 90=1936, 99=2615, 99.9=7787, 99.99=9543] 
2023-05-04 11:12:57:976 140 sec: 18414545 operations; 129996.5 current ops/sec; est completion in 29 minutes [INSERT: Count=1299980, Max=66815, Min=360, Avg=1536.21, 90=1933, 99=2729, 99.9=9935, 99.99=35007] 
2023-05-04 11:13:07:976 150 sec: 19701378 operations; 128683.3 current ops/sec; est completion in 29 minutes [INSERT: Count=1286859, Max=97087, Min=361, Avg=1551.88, 90=1950, 99=3055, 99.9=10463, 99.99=36351] 
2023-05-04 11:13:17:976 160 sec: 21003859 operations; 130248.1 current ops/sec; est completion in 29 minutes [INSERT: Count=1302441, Max=13359, Min=363, Avg=1533.22, 90=1979, 99=3293, 99.9=8295, 99.99=9815] 
2023-05-04 11:13:27:976 170 sec: 22271629 operations; 126777 current ops/sec; est completion in 28 minutes [INSERT: Count=1267786, Max=101119, Min=389, Avg=1575.27, 90=1991, 99=3317, 99.9=10175, 99.99=61087] 
2023-05-04 11:13:37:983 180 sec: 23453312 operations; 118085.64 current ops/sec; est completion in 28 minutes [INSERT: Count=1181645, Max=77055, Min=336, Avg=1691.44, 90=2315, 99=4671, 99.9=9215, 99.99=35647] 
2023-05-04 11:13:47:976 190 sec: 24609669 operations; 115716.7 current ops/sec; est completion in 29 minutes [INSERT: Count=1156369, Max=14943, Min=456, Avg=1726.1, 90=2431, 99=4771, 99.9=8187, 99.99=10039] 
2023-05-04 11:13:57:976 200 sec: 25821690 operations; 121202.1 current ops/sec; est completion in 28 minutes [INSERT: Count=1212022, Max=68543, Min=419, Avg=1647.89, 90=2119, 99=4231, 99.9=9807, 99.99=32639] 
2023-05-04 11:14:07:976 210 sec: 26996722 operations; 117503.2 current ops/sec; est completion in 28 minutes [INSERT: Count=1175036, Max=47743, Min=434, Avg=1699.87, 90=2451, 99=4535, 99.9=8943, 99.99=30159] 
2023-05-04 11:14:17:976 220 sec: 28206073 operations; 120935.1 current ops/sec; est completion in 28 minutes [INSERT: Count=1209359, Max=19759, Min=410, Avg=1651.53, 90=2137, 99=4155, 99.9=8719, 99.99=12039] 
2023-05-04 11:14:27:976 230 sec: 29413623 operations; 120755 current ops/sec; est completion in 28 minutes [INSERT: Count=1207552, Max=53727, Min=443, Avg=1654.01, 90=2139, 99=4315, 99.9=11727, 99.99=30175] 
2023-05-04 11:14:37:976 240 sec: 30596946 operations; 118344.13 current ops/sec; est completion in 28 minutes [INSERT: Count=1183322, Max=47871, Min=431, Avg=1687.84, 90=2315, 99=4487, 99.9=10519, 99.99=28511] 
2023-05-04 11:14:47:976 250 sec: 31789100 operations; 119203.48 current ops/sec; est completion in 28 minutes [INSERT: Count=1192185, Max=24415, Min=445, Avg=1675.41, 90=2161, 99=4779, 99.9=8671, 99.99=12159] 
2023-05-04 11:14:57:976 260 sec: 32979895 operations; 119091.41 current ops/sec; est completion in 28 minutes [INSERT: Count=1190747, Max=48863, Min=378, Avg=1677.28, 90=2311, 99=4495, 99.9=9751, 99.99=27343] 
2023-05-04 11:15:07:976 270 sec: 34118385 operations; 113837.62 current ops/sec; est completion in 28 minutes [INSERT: Count=1138501, Max=176511, Min=389, Avg=1754.46, 90=2473, 99=5103, 99.9=10223, 99.99=74815] 
2023-05-04 11:15:17:976 280 sec: 35299849 operations; 118158.22 current ops/sec; est completion in 28 minutes [INSERT: Count=1181481, Max=17423, Min=448, Avg=1690.44, 90=2199, 99=4971, 99.9=9815, 99.99=13183] 
2023-05-04 11:15:27:976 290 sec: 36456069 operations; 115610.44 current ops/sec; est completion in 28 minutes [INSERT: Count=1156204, Max=55839, Min=385, Avg=1727.56, 90=2477, 99=4815, 99.9=10271, 99.99=32239] 
2023-05-04 11:15:37:976 300 sec: 37608863 operations; 115279.4 current ops/sec; est completion in 28 minutes [INSERT: Count=1152805, Max=51487, Min=365, Avg=1732.7, 90=2435, 99=4971, 99.9=8847, 99.99=28015] 
2023-05-04 11:15:47:976 310 sec: 38793199 operations; 118433.6 current ops/sec; est completion in 28 minutes [INSERT: Count=1184329, Max=19807, Min=467, Avg=1686.44, 90=2255, 99=4663, 99.9=9559, 99.99=13487] 
2023-05-04 11:15:57:976 320 sec: 39941536 operations; 114833.7 current ops/sec; est completion in 28 minutes [INSERT: Count=1148374, Max=55615, Min=425, Avg=1739.43, 90=2549, 99=4775, 99.9=9175, 99.99=30655] 
2023-05-04 11:16:07:976 330 sec: 41088313 operations; 114689.17 current ops/sec; est completion in 27 minutes [INSERT: Count=1146717, Max=50943, Min=467, Avg=1741.72, 90=2407, 99=5067, 99.9=9335, 99.99=32431] 
2023-05-04 11:16:17:976 340 sec: 42257047 operations; 116861.71 current ops/sec; est completion in 27 minutes [INSERT: Count=1168762, Max=20223, Min=451, Avg=1709.02, 90=2331, 99=4911, 99.9=9639, 99.99=13735] 
2023-05-04 11:16:27:976 350 sec: 43411036 operations; 115398.9 current ops/sec; est completion in 27 minutes [INSERT: Count=1153962, Max=50111, Min=443, Avg=1730.87, 90=2513, 99=4707, 99.9=9247, 99.99=28127] 
2023-05-04 11:16:37:976 360 sec: 44571777 operations; 116074.1 current ops/sec; est completion in 27 minutes [INSERT: Count=1160736, Max=69247, Min=450, Avg=1720.8, 90=2335, 99=4791, 99.9=10239, 99.99=33183] 
2023-05-04 11:16:47:976 370 sec: 45737293 operations; 116551.6 current ops/sec; est completion in 27 minutes [INSERT: Count=1165523, Max=16591, Min=410, Avg=1713.71, 90=2399, 99=4835, 99.9=8655, 99.99=11831] 
2023-05-04 11:16:57:976 380 sec: 46878879 operations; 114170.02 current ops/sec; est completion in 27 minutes [INSERT: Count=1141585, Max=52095, Min=443, Avg=1749.75, 90=2571, 99=4943, 99.9=8943, 99.99=28559] 
2023-05-04 11:17:07:976 390 sec: 48033186 operations; 115419.16 current ops/sec; est completion in 27 minutes [INSERT: Count=1154303, Max=49343, Min=373, Avg=1730.41, 90=2369, 99=4951, 99.9=9791, 99.99=33535] 
2023-05-04 11:17:17:976 400 sec: 49199187 operations; 116600.1 current ops/sec; est completion in 27 minutes [INSERT: Count=1165991, Max=16511, Min=453, Avg=1712.97, 90=2419, 99=4711, 99.9=9215, 99.99=11623] 
2023-05-04 11:17:27:976 410 sec: 50338686 operations; 113949.9 current ops/sec; est completion in 27 minutes [INSERT: Count=1139498, Max=79423, Min=431, Avg=1752.93, 90=2541, 99=4863, 99.9=10375, 99.99=40895] 
2023-05-04 11:17:37:976 420 sec: 51499260 operations; 116057.4 current ops/sec; est completion in 26 minutes [INSERT: Count=1160566, Max=47231, Min=346, Avg=1721.02, 90=2357, 99=4923, 99.9=9447, 99.99=28671] 
2023-05-04 11:17:47:976 430 sec: 52650505 operations; 115124.5 current ops/sec; est completion in 26 minutes [INSERT: Count=1151264, Max=16959, Min=452, Avg=1735.03, 90=2483, 99=4903, 99.9=9495, 99.99=11951] 
2023-05-04 11:17:57:976 440 sec: 53784159 operations; 113365.4 current ops/sec; est completion in 26 minutes [INSERT: Count=1133667, Max=55583, Min=438, Avg=1761.95, 90=2587, 99=5027, 99.9=9255, 99.99=30879] 
2023-05-04 11:18:07:976 450 sec: 54940090 operations; 115593.1 current ops/sec; est completion in 26 minutes [INSERT: Count=1155913, Max=88767, Min=481, Avg=1727.92, 90=2375, 99=4979, 99.9=11039, 99.99=33279] 
2023-05-04 11:18:17:976 460 sec: 56092026 operations; 115193.6 current ops/sec; est completion in 26 minutes [INSERT: Count=1151941, Max=14639, Min=389, Avg=1733.99, 90=2511, 99=4787, 99.9=9103, 99.99=11231] 
2023-05-04 11:18:27:976 470 sec: 57222944 operations; 113091.8 current ops/sec; est completion in 26 minutes [INSERT: Count=1130914, Max=52351, Min=403, Avg=1766.29, 90=2593, 99=5051, 99.9=9495, 99.99=32991] 
2023-05-04 11:18:37:976 480 sec: 58371137 operations; 114819.3 current ops/sec; est completion in 26 minutes [INSERT: Count=1148203, Max=49407, Min=426, Avg=1739.54, 90=2415, 99=5139, 99.9=10927, 99.99=27423] 
2023-05-04 11:18:47:976 490 sec: 59502775 operations; 113163.8 current ops/sec; est completion in 26 minutes [INSERT: Count=1131634, Max=75135, Min=399, Avg=1765.19, 90=2603, 99=5083, 99.9=9815, 99.99=14303] 
2023-05-04 11:18:57:976 500 sec: 60636017 operations; 113324.2 current ops/sec; est completion in 26 minutes [INSERT: Count=1133237, Max=53343, Min=396, Avg=1762.66, 90=2589, 99=5103, 99.9=8783, 99.99=31839] 
2023-05-04 11:19:07:976 510 sec: 61789509 operations; 115349.2 current ops/sec; est completion in 25 minutes [INSERT: Count=1153497, Max=96639, Min=397, Avg=1731.56, 90=2381, 99=5143, 99.9=10527, 99.99=39583] 
2023-05-04 11:19:17:976 520 sec: 62917290 operations; 112778.1 current ops/sec; est completion in 25 minutes [INSERT: Count=1127788, Max=16279, Min=401, Avg=1771.16, 90=2665, 99=5079, 99.9=8099, 99.99=11063] 
2023-05-04 11:19:27:976 530 sec: 64046394 operations; 112910.4 current ops/sec; est completion in 25 minutes [INSERT: Count=1129096, Max=50207, Min=425, Avg=1769.09, 90=2589, 99=5167, 99.9=10399, 99.99=32767] 
2023-05-04 11:19:37:976 540 sec: 65185853 operations; 113945.9 current ops/sec; est completion in 25 minutes [INSERT: Count=1139459, Max=48671, Min=443, Avg=1752.98, 90=2459, 99=5511, 99.9=9799, 99.99=26399] 
2023-05-04 11:19:47:976 550 sec: 66312869 operations; 112701.6 current ops/sec; est completion in 25 minutes [INSERT: Count=1127019, Max=43871, Min=408, Avg=1772.38, 90=2689, 99=5011, 99.9=8927, 99.99=11799] 
2023-05-04 11:19:57:976 560 sec: 67435842 operations; 112297.3 current ops/sec; est completion in 25 minutes [INSERT: Count=1122977, Max=52575, Min=459, Avg=1778.78, 90=2627, 99=5275, 99.9=9567, 99.99=30783] 
2023-05-04 11:20:07:976 570 sec: 68579215 operations; 114337.3 current ops/sec; est completion in 25 minutes [INSERT: Count=1143367, Max=53407, Min=410, Avg=1746.94, 90=2465, 99=5059, 99.9=11447, 99.99=28303] 
2023-05-04 11:20:17:976 580 sec: 69698541 operations; 111932.6 current ops/sec; est completion in 25 minutes [INSERT: Count=1119312, Max=20255, Min=399, Avg=1784.59, 90=2743, 99=5047, 99.9=8679, 99.99=12207] 
2023-05-04 11:20:27:976 590 sec: 70810063 operations; 111152.2 current ops/sec; est completion in 24 minutes [INSERT: Count=1111540, Max=48831, Min=379, Avg=1797.16, 90=2661, 99=5731, 99.9=10151, 99.99=32671] 
2023-05-04 11:20:37:976 600 sec: 71933117 operations; 112305.4 current ops/sec; est completion in 24 minutes [INSERT: Count=1123043, Max=125887, Min=405, Avg=1778.61, 90=2539, 99=5431, 99.9=10007, 99.99=51519] 
2023-05-04 11:20:47:976 610 sec: 73055149 operations; 112203.2 current ops/sec; est completion in 24 minutes [INSERT: Count=1122032, Max=20847, Min=386, Avg=1780.27, 90=2731, 99=5063, 99.9=8903, 99.99=12687] 
2023-05-04 11:20:57:976 620 sec: 74179486 operations; 112433.7 current ops/sec; est completion in 24 minutes [INSERT: Count=1124337, Max=47071, Min=422, Avg=1776.6, 90=2617, 99=5343, 99.9=9319, 99.99=27375] 
2023-05-04 11:21:07:976 630 sec: 75292717 operations; 111323.1 current ops/sec; est completion in 24 minutes [INSERT: Count=1113236, Max=89919, Min=409, Avg=1794.41, 90=2631, 99=5687, 99.9=10031, 99.99=42847] 
2023-05-04 11:21:17:976 640 sec: 76417690 operations; 112497.3 current ops/sec; est completion in 24 minutes [INSERT: Count=1124971, Max=20831, Min=407, Avg=1775.59, 90=2723, 99=5199, 99.9=9823, 99.99=13231] 
2023-05-04 11:21:27:976 650 sec: 77552683 operations; 113499.3 current ops/sec; est completion in 24 minutes [INSERT: Count=1135002, Max=56191, Min=388, Avg=1759.86, 90=2547, 99=5115, 99.9=9951, 99.99=34367] 
2023-05-04 11:21:37:976 660 sec: 78670906 operations; 111822.3 current ops/sec; est completion in 23 minutes [INSERT: Count=1118205, Max=48319, Min=430, Avg=1786.33, 90=2641, 99=5463, 99.9=10647, 99.99=29919] 
2023-05-04 11:21:47:976 670 sec: 79777090 operations; 110629.46 current ops/sec; est completion in 23 minutes [INSERT: Count=1106182, Max=23727, Min=446, Avg=1805.84, 90=2773, 99=5635, 99.9=10799, 99.99=16399] 
2023-05-04 11:21:57:976 680 sec: 80903046 operations; 112584.34 current ops/sec; est completion in 23 minutes [INSERT: Count=1125965, Max=50687, Min=438, Avg=1774.03, 90=2611, 99=5239, 99.9=9407, 99.99=28623] 
2023-05-04 11:22:07:976 690 sec: 81998946 operations; 109590 current ops/sec; est completion in 23 minutes [INSERT: Count=1095894, Max=59519, Min=460, Avg=1822.75, 90=2727, 99=5799, 99.9=11575, 99.99=36447] 
2023-05-04 11:22:17:976 700 sec: 83117283 operations; 111833.7 current ops/sec; est completion in 23 minutes [INSERT: Count=1118343, Max=21647, Min=388, Avg=1786.13, 90=2735, 99=5243, 99.9=9167, 99.99=12543] 
2023-05-04 11:22:27:976 710 sec: 84225916 operations; 110863.3 current ops/sec; est completion in 23 minutes [INSERT: Count=1108636, Max=51199, Min=456, Avg=1801.76, 90=2645, 99=5767, 99.9=10999, 99.99=30031] 
2023-05-04 11:22:37:976 720 sec: 85310329 operations; 108452.15 current ops/sec; est completion in 23 minutes [INSERT: Count=1084406, Max=50047, Min=414, Avg=1842.07, 90=2779, 99=6099, 99.9=13087, 99.99=33183] 
2023-05-04 11:22:47:976 730 sec: 86425145 operations; 111470.45 current ops/sec; est completion in 23 minutes [INSERT: Count=1114821, Max=14231, Min=439, Avg=1791.83, 90=2763, 99=5295, 99.9=8367, 99.99=10647] 
2023-05-04 11:22:57:976 740 sec: 87532835 operations; 110780.08 current ops/sec; est completion in 22 minutes [INSERT: Count=1107690, Max=51359, Min=432, Avg=1803.31, 90=2679, 99=5627, 99.9=10399, 99.99=31151] 
2023-05-04 11:23:07:976 750 sec: 88624454 operations; 109150.98 current ops/sec; est completion in 22 minutes [INSERT: Count=1091612, Max=55871, Min=412, Avg=1829.93, 90=2735, 99=6187, 99.9=11135, 99.99=29263] 
2023-05-04 11:23:17:976 760 sec: 89732689 operations; 110823.5 current ops/sec; est completion in 22 minutes [INSERT: Count=1108240, Max=22847, Min=449, Avg=1802.48, 90=2775, 99=5431, 99.9=9343, 99.99=12935] 
2023-05-04 11:23:27:976 770 sec: 90813946 operations; 108125.7 current ops/sec; est completion in 22 minutes [INSERT: Count=1081252, Max=84031, Min=459, Avg=1847.47, 90=2737, 99=6599, 99.9=13567, 99.99=41151] 
2023-05-04 11:23:37:976 780 sec: 91913834 operations; 109988.8 current ops/sec; est completion in 22 minutes [INSERT: Count=1099898, Max=109055, Min=394, Avg=1816.11, 90=2707, 99=5595, 99.9=10551, 99.99=48703] 
2023-05-04 11:23:47:976 790 sec: 93001062 operations; 108722.8 current ops/sec; est completion in 22 minutes [INSERT: Count=1087217, Max=31391, Min=373, Avg=1837.23, 90=2779, 99=6247, 99.9=12143, 99.99=19407] 
2023-05-04 11:23:57:976 800 sec: 94097051 operations; 109598.9 current ops/sec; est completion in 22 minutes [INSERT: Count=1095985, Max=51391, Min=362, Avg=1822.7, 90=2715, 99=6063, 99.9=11599, 99.99=30927] 
2023-05-04 11:24:07:976 810 sec: 95199448 operations; 110250.73 current ops/sec; est completion in 21 minutes [INSERT: Count=1102406, Max=49727, Min=469, Avg=1811.97, 90=2719, 99=5679, 99.9=10319, 99.99=30543] 
2023-05-04 11:24:17:976 820 sec: 96276303 operations; 107674.73 current ops/sec; est completion in 21 minutes [INSERT: Count=1076847, Max=21935, Min=458, Avg=1854.98, 90=2867, 99=6419, 99.9=10751, 99.99=14839] 
2023-05-04 11:24:27:976 830 sec: 97362536 operations; 108634.16 current ops/sec; est completion in 21 minutes [INSERT: Count=1086240, Max=61567, Min=485, Avg=1839.1, 90=2757, 99=6331, 99.9=13039, 99.99=31263] 
2023-05-04 11:24:37:976 840 sec: 98463850 operations; 110131.4 current ops/sec; est completion in 21 minutes [INSERT: Count=1101313, Max=80639, Min=482, Avg=1813.71, 90=2673, 99=5711, 99.9=11767, 99.99=74751] 
2023-05-04 11:24:47:976 850 sec: 99554780 operations; 109082.09 current ops/sec; est completion in 21 minutes [INSERT: Count=1090939, Max=21359, Min=380, Avg=1831.21, 90=2829, 99=6003, 99.9=9799, 99.99=14183] 
2023-05-04 11:24:57:976 860 sec: 100644234 operations; 108945.4 current ops/sec; est completion in 21 minutes [INSERT: Count=1089444, Max=60479, Min=446, Avg=1833.34, 90=2811, 99=5763, 99.9=10903, 99.99=33183] 
2023-05-04 11:25:07:976 870 sec: 101692795 operations; 104866.59 current ops/sec; est completion in 21 minutes [INSERT: Count=1048557, Max=73471, Min=427, Avg=1905.33, 90=2683, 99=7427, 99.9=32623, 99.99=65087] 
2023-05-04 11:25:17:976 880 sec: 102801115 operations; 110832 current ops/sec; est completion in 21 minutes [INSERT: Count=1108342, Max=17327, Min=395, Avg=1802.29, 90=2743, 99=5659, 99.9=9103, 99.99=12583] 
2023-05-04 11:25:27:976 890 sec: 103885862 operations; 108463.85 current ops/sec; est completion in 20 minutes [INSERT: Count=1084741, Max=57055, Min=503, Avg=1841.54, 90=2847, 99=5927, 99.9=10735, 99.99=32607] 
2023-05-04 11:25:37:976 900 sec: 104972572 operations; 108671 current ops/sec; est completion in 20 minutes [INSERT: Count=1086705, Max=107455, Min=353, Avg=1838.2, 90=2733, 99=6415, 99.9=12919, 99.99=49599] 
2023-05-04 11:25:47:976 910 sec: 106066884 operations; 109431.2 current ops/sec; est completion in 20 minutes [INSERT: Count=1094307, Max=150527, Min=417, Avg=1825.32, 90=2747, 99=5783, 99.9=10247, 99.99=75007] 
2023-05-04 11:25:57:976 920 sec: 107135101 operations; 106821.7 current ops/sec; est completion in 20 minutes [INSERT: Count=1068216, Max=58751, Min=433, Avg=1870.03, 90=2889, 99=6379, 99.9=13471, 99.99=39199] 
2023-05-04 11:26:07:976 930 sec: 108234618 operations; 109951.7 current ops/sec; est completion in 20 minutes [INSERT: Count=1099506, Max=61599, Min=405, Avg=1816.59, 90=2715, 99=5867, 99.9=13511, 99.99=35167] 
2023-05-04 11:26:17:976 940 sec: 109307000 operations; 107238.2 current ops/sec; est completion in 20 minutes [INSERT: Count=1072408, Max=28319, Min=430, Avg=1862.94, 90=2827, 99=6951, 99.9=12791, 99.99=20351] 
2023-05-04 11:26:27:976 950 sec: 110387314 operations; 108031.4 current ops/sec; est completion in 20 minutes [INSERT: Count=1080299, Max=153215, Min=435, Avg=1849.08, 90=2857, 99=5723, 99.9=10039, 99.99=66943] 
2023-05-04 11:26:37:976 960 sec: 111466166 operations; 107885.2 current ops/sec; est completion in 19 minutes [INSERT: Count=1078848, Max=66943, Min=421, Avg=1851.58, 90=2807, 99=6407, 99.9=13463, 99.99=39263] 
2023-05-04 11:26:47:976 970 sec: 112529171 operations; 106300.5 current ops/sec; est completion in 19 minutes [INSERT: Count=1062997, Max=89215, Min=421, Avg=1879.14, 90=2771, 99=6479, 99.9=25743, 99.99=68479] 
2023-05-04 11:26:57:976 980 sec: 113610461 operations; 108139.81 current ops/sec; est completion in 19 minutes [INSERT: Count=1081301, Max=57503, Min=441, Avg=1847.44, 90=2913, 99=5599, 99.9=10199, 99.99=34495] 
2023-05-04 11:27:07:976 990 sec: 114693728 operations; 108315.87 current ops/sec; est completion in 19 minutes [INSERT: Count=1083264, Max=54367, Min=437, Avg=1844.07, 90=2863, 99=6087, 99.9=11519, 99.99=32671] 
2023-05-04 11:27:17:976 1000 sec: 115781811 operations; 108819.18 current ops/sec; est completion in 19 minutes [INSERT: Count=1088093, Max=25775, Min=449, Avg=1835.82, 90=2843, 99=6035, 99.9=10359, 99.99=16495] 
2023-05-04 11:27:27:976 1010 sec: 116837500 operations; 105558.34 current ops/sec; est completion in 19 minutes [INSERT: Count=1055664, Max=90495, Min=415, Avg=1892.22, 90=2929, 99=6455, 99.9=21135, 99.99=46911] 
2023-05-04 11:27:37:976 1020 sec: 117918496 operations; 108099.6 current ops/sec; est completion in 19 minutes [INSERT: Count=1081010, Max=97983, Min=338, Avg=1847.91, 90=2881, 99=6015, 99.9=10887, 99.99=44895] 
2023-05-04 11:27:47:976 1030 sec: 119013071 operations; 109468.45 current ops/sec; est completion in 18 minutes [INSERT: Count=1094578, Max=20591, Min=393, Avg=1824.93, 90=2817, 99=5943, 99.9=10079, 99.99=14311] 
2023-05-04 11:27:57:976 1040 sec: 120096276 operations; 108309.67 current ops/sec; est completion in 18 minutes [INSERT: Count=1083203, Max=58591, Min=403, Avg=1844.27, 90=2897, 99=5655, 99.9=10879, 99.99=40287] 
2023-05-04 11:28:07:976 1050 sec: 121159241 operations; 106296.5 current ops/sec; est completion in 18 minutes [INSERT: Count=1062973, Max=68991, Min=445, Avg=1879.24, 90=2901, 99=6795, 99.9=18383, 99.99=39903] 
2023-05-04 11:28:17:976 1060 sec: 122260988 operations; 110174.7 current ops/sec; est completion in 18 minutes [INSERT: Count=1101731, Max=26703, Min=396, Avg=1813.06, 90=2755, 99=5723, 99.9=10823, 99.99=21151] 
2023-05-04 11:28:27:976 1070 sec: 123338594 operations; 107771.38 current ops/sec; est completion in 18 minutes [INSERT: Count=1077606, Max=59199, Min=407, Avg=1853.79, 90=2931, 99=5871, 99.9=10695, 99.99=33119] 
2023-05-04 11:28:37:976 1080 sec: 124408243 operations; 106954.2 current ops/sec; est completion in 18 minutes [INSERT: Count=1069652, Max=82623, Min=307, Avg=1867.52, 90=2939, 99=6243, 99.9=12407, 99.99=38591] 
2023-05-04 11:28:47:976 1090 sec: 125505446 operations; 109720.3 current ops/sec; est completion in 18 minutes [INSERT: Count=1097208, Max=63391, Min=402, Avg=1820.6, 90=2779, 99=5871, 99.9=10551, 99.99=28879] 
2023-05-04 11:28:57:976 1100 sec: 126582026 operations; 107658 current ops/sec; est completion in 17 minutes [INSERT: Count=1076573, Max=53055, Min=460, Avg=1855.52, 90=2929, 99=5775, 99.9=10175, 99.99=32207] 
2023-05-04 11:29:07:976 1110 sec: 127632919 operations; 105089.3 current ops/sec; est completion in 17 minutes [INSERT: Count=1050891, Max=77119, Min=447, Avg=1900.84, 90=2991, 99=6751, 99.9=20543, 99.99=38271] 
2023-05-04 11:29:17:976 1120 sec: 128735104 operations; 110218.5 current ops/sec; est completion in 17 minutes [INSERT: Count=1102191, Max=21359, Min=391, Avg=1812.33, 90=2765, 99=5919, 99.9=10071, 99.99=14031] 
2023-05-04 11:29:27:976 1130 sec: 129809935 operations; 107483.1 current ops/sec; est completion in 17 minutes [INSERT: Count=1074841, Max=79039, Min=382, Avg=1858.56, 90=2891, 99=5863, 99.9=13119, 99.99=37151] 
2023-05-04 11:29:37:976 1140 sec: 130885763 operations; 107582.8 current ops/sec; est completion in 17 minutes [INSERT: Count=1075831, Max=51071, Min=398, Avg=1856.78, 90=2943, 99=5995, 99.9=11103, 99.99=33823] 
2023-05-04 11:29:47:976 1150 sec: 131978986 operations; 109322.3 current ops/sec; est completion in 17 minutes [INSERT: Count=1093223, Max=66111, Min=397, Avg=1827.18, 90=2803, 99=5815, 99.9=10863, 99.99=34047] 
2023-05-04 11:29:57:976 1160 sec: 133048984 operations; 106999.8 current ops/sec; est completion in 17 minutes [INSERT: Count=1070002, Max=63071, Min=428, Avg=1866.94, 90=2931, 99=6143, 99.9=10655, 99.99=33375] 
2023-05-04 11:30:07:976 1170 sec: 134103776 operations; 105479.2 current ops/sec; est completion in 16 minutes [INSERT: Count=1054792, Max=84607, Min=373, Avg=1893.87, 90=3039, 99=6403, 99.9=14791, 99.99=42719] 
2023-05-04 11:30:17:976 1180 sec: 135200161 operations; 109649.46 current ops/sec; est completion in 16 minutes [INSERT: Count=1096372, Max=17503, Min=474, Avg=1821.94, 90=2863, 99=5643, 99.9=9255, 99.99=11767] 
2023-05-04 11:30:27:976 1190 sec: 136276316 operations; 107604.74 current ops/sec; est completion in 16 minutes [INSERT: Count=1076148, Max=55839, Min=374, Avg=1856.24, 90=2913, 99=5955, 99.9=10887, 99.99=36447] 
2023-05-04 11:30:37:976 1200 sec: 137335435 operations; 105911.9 current ops/sec; est completion in 16 minutes [INSERT: Count=1059131, Max=54431, Min=393, Avg=1886.18, 90=3033, 99=6391, 99.9=13463, 99.99=34623] 
2023-05-04 11:30:47:976 1210 sec: 138417708 operations; 108227.3 current ops/sec; est completion in 16 minutes [INSERT: Count=1082264, Max=20191, Min=394, Avg=1845.68, 90=2939, 99=5887, 99.9=10055, 99.99=14695] 
2023-05-04 11:30:57:976 1220 sec: 139483999 operations; 106639.76 current ops/sec; est completion in 16 minutes [INSERT: Count=1066298, Max=51199, Min=433, Avg=1873.37, 90=2941, 99=6219, 99.9=10911, 99.99=33631] 
2023-05-04 11:31:07:976 1230 sec: 140556929 operations; 107293 current ops/sec; est completion in 15 minutes [INSERT: Count=1072926, Max=62751, Min=380, Avg=1861.8, 90=2929, 99=5855, 99.9=12143, 99.99=42847] 
2023-05-04 11:31:17:976 1240 sec: 141630210 operations; 107328.1 current ops/sec; est completion in 15 minutes [INSERT: Count=1073273, Max=25903, Min=419, Avg=1861.26, 90=2979, 99=6143, 99.9=9735, 99.99=14255] 
2023-05-04 11:31:27:976 1250 sec: 142664793 operations; 103458.3 current ops/sec; est completion in 15 minutes [INSERT: Count=1034603, Max=104511, Min=373, Avg=1930.91, 90=2851, 99=7127, 99.9=31967, 99.99=56799] 
2023-05-04 11:31:37:976 1260 sec: 143743225 operations; 107843.2 current ops/sec; est completion in 15 minutes [INSERT: Count=1078426, Max=50911, Min=432, Avg=1852.25, 90=2939, 99=5831, 99.9=9767, 99.99=32191] 
2023-05-04 11:31:47:976 1270 sec: 144816542 operations; 107331.7 current ops/sec; est completion in 15 minutes [INSERT: Count=1073300, Max=29711, Min=402, Avg=1861.18, 90=2995, 99=5983, 99.9=9543, 99.99=25247] 
2023-05-04 11:31:57:976 1280 sec: 145876614 operations; 105996.6 current ops/sec; est completion in 15 minutes [INSERT: Count=1060076, Max=58687, Min=398, Avg=1884.48, 90=2973, 99=6431, 99.9=11519, 99.99=35583] 
2023-05-04 11:32:07:976 1290 sec: 146913276 operations; 103666.2 current ops/sec; est completion in 15 minutes [INSERT: Count=1036665, Max=111999, Min=263, Avg=1927.07, 90=2769, 99=6915, 99.9=37407, 99.99=57727] 
2023-05-04 11:32:17:976 1300 sec: 147992058 operations; 107878.2 current ops/sec; est completion in 14 minutes [INSERT: Count=1078780, Max=26783, Min=432, Avg=1851.67, 90=2943, 99=6031, 99.9=9663, 99.99=14375] 
2023-05-04 11:32:27:976 1310 sec: 149071287 operations; 107922.9 current ops/sec; est completion in 14 minutes [INSERT: Count=1079235, Max=54079, Min=395, Avg=1850.95, 90=2877, 99=6047, 99.9=10207, 99.99=31455] 
2023-05-04 11:32:37:976 1320 sec: 150129276 operations; 105798.9 current ops/sec; est completion in 14 minutes [INSERT: Count=1057980, Max=50111, Min=462, Avg=1888.22, 90=2965, 99=6223, 99.9=20703, 99.99=32159] 
2023-05-04 11:32:47:976 1330 sec: 151205931 operations; 107665.5 current ops/sec; est completion in 14 minutes [INSERT: Count=1076661, Max=22671, Min=442, Avg=1855.36, 90=2981, 99=5951, 99.9=9903, 99.99=15023] 
2023-05-04 11:32:57:976 1340 sec: 152279153 operations; 107322.2 current ops/sec; est completion in 14 minutes [INSERT: Count=1073224, Max=51551, Min=433, Avg=1861.33, 90=2933, 99=6135, 99.9=9959, 99.99=32175] 
2023-05-04 11:33:07:976 1350 sec: 153348167 operations; 106901.4 current ops/sec; est completion in 14 minutes [INSERT: Count=1069018, Max=100415, Min=417, Avg=1868.68, 90=2917, 99=6055, 99.9=11863, 99.99=60639] 
2023-05-04 11:33:17:976 1360 sec: 154416454 operations; 106828.7 current ops/sec; est completion in 14 minutes [INSERT: Count=1068278, Max=22175, Min=439, Avg=1869.99, 90=2999, 99=6327, 99.9=10879, 99.99=16927] 
2023-05-04 11:33:27:978 1370 sec: 155485697 operations; 106902.92 current ops/sec; est completion in 13 minutes [INSERT: Count=1069268, Max=57535, Min=443, Avg=1867.82, 90=2919, 99=6339, 99.9=11575, 99.99=31007] 
2023-05-04 11:33:37:976 1380 sec: 156562214 operations; 107673.23 current ops/sec; est completion in 13 minutes [INSERT: Count=1076492, Max=66239, Min=403, Avg=1856.12, 90=2925, 99=5867, 99.9=10063, 99.99=34047] 
2023-05-04 11:33:47:976 1390 sec: 157607989 operations; 104587.96 current ops/sec; est completion in 13 minutes [INSERT: Count=1045774, Max=68287, Min=454, Avg=1910.17, 90=2961, 99=6803, 99.9=22751, 99.99=61535] 
2023-05-04 11:33:57:976 1400 sec: 158687397 operations; 107930.01 current ops/sec; est completion in 13 minutes [INSERT: Count=1079415, Max=57663, Min=457, Avg=1850.69, 90=2897, 99=5987, 99.9=10071, 99.99=33247] 
2023-05-04 11:34:07:976 1410 sec: 159741916 operations; 105451.9 current ops/sec; est completion in 13 minutes [INSERT: Count=1054513, Max=171135, Min=434, Avg=1894.42, 90=2901, 99=6419, 99.9=20591, 99.99=94463] 
2023-05-04 11:34:17:976 1420 sec: 160819234 operations; 107731.8 current ops/sec; est completion in 13 minutes [INSERT: Count=1077311, Max=34879, Min=455, Avg=1854.24, 90=2949, 99=5967, 99.9=10295, 99.99=15399] 
2023-05-04 11:34:27:976 1430 sec: 161879861 operations; 106073.31 current ops/sec; est completion in 12 minutes [INSERT: Count=1060628, Max=55007, Min=427, Avg=1883.3, 90=3009, 99=6379, 99.9=11127, 99.99=32639] 
2023-05-04 11:34:37:976 1440 sec: 162944940 operations; 106497.25 current ops/sec; est completion in 12 minutes [INSERT: Count=1065083, Max=74239, Min=430, Avg=1875.64, 90=2901, 99=6603, 99.9=12679, 99.99=37855] 
2023-05-04 11:34:47:976 1450 sec: 164028824 operations; 108388.4 current ops/sec; est completion in 12 minutes [INSERT: Count=1083884, Max=29135, Min=409, Avg=1843.01, 90=2885, 99=5943, 99.9=11143, 99.99=20463] 
2023-05-04 11:34:57:976 1460 sec: 165080940 operations; 105211.6 current ops/sec; est completion in 12 minutes [INSERT: Count=1052115, Max=62303, Min=458, Avg=1898.7, 90=3009, 99=6667, 99.9=13183, 99.99=42591] 
2023-05-04 11:35:07:976 1470 sec: 166151920 operations; 107098 current ops/sec; est completion in 12 minutes [INSERT: Count=1070978, Max=56511, Min=439, Avg=1865.23, 90=2917, 99=6155, 99.9=11831, 99.99=32063] 
2023-05-04 11:35:17:976 1480 sec: 167221019 operations; 106909.9 current ops/sec; est completion in 12 minutes [INSERT: Count=1069102, Max=20223, Min=405, Avg=1868.48, 90=2939, 99=6451, 99.9=10839, 99.99=15663] 
2023-05-04 11:35:27:976 1490 sec: 168285791 operations; 106477.2 current ops/sec; est completion in 12 minutes [INSERT: Count=1064774, Max=74175, Min=387, Avg=1876.13, 90=2861, 99=6231, 99.9=23855, 99.99=40511] 
2023-05-04 11:35:37:976 1500 sec: 169328731 operations; 104294 current ops/sec; est completion in 11 minutes [INSERT: Count=1042944, Max=98303, Min=398, Avg=1915.4, 90=2979, 99=6863, 99.9=15527, 99.99=49311] 
2023-05-04 11:35:47:976 1510 sec: 170405004 operations; 107638.06 current ops/sec; est completion in 11 minutes [INSERT: Count=1076281, Max=33791, Min=487, Avg=1856.05, 90=2871, 99=6195, 99.9=11087, 99.99=29311] 
2023-05-04 11:35:57:976 1520 sec: 171462208 operations; 105709.83 current ops/sec; est completion in 11 minutes [INSERT: Count=1057207, Max=48383, Min=388, Avg=1889.55, 90=2943, 99=6515, 99.9=20047, 99.99=39967] 
2023-05-04 11:36:07:976 1530 sec: 172480599 operations; 101839.1 current ops/sec; est completion in 11 minutes [INSERT: Count=1018374, Max=75071, Min=376, Avg=1961.65, 90=2665, 99=8247, 99.9=46687, 99.99=59295] 
2023-05-04 11:36:17:976 1540 sec: 173545613 operations; 106512.05 current ops/sec; est completion in 11 minutes [INSERT: Count=1065029, Max=29135, Min=456, Avg=1875.49, 90=2933, 99=6499, 99.9=13135, 99.99=23663] 
2023-05-04 11:36:27:976 1550 sec: 174549891 operations; 100417.76 current ops/sec; est completion in 11 minutes [INSERT: Count=1004258, Max=149631, Min=459, Avg=1989.51, 90=2581, 99=7627, 99.9=59743, 99.99=88767] 
2023-05-04 11:36:37:976 1560 sec: 175593632 operations; 104374.1 current ops/sec; est completion in 11 minutes [INSERT: Count=1043755, Max=68543, Min=453, Avg=1913.96, 90=2765, 99=6671, 99.9=44287, 99.99=56511] 
2023-05-04 11:36:47:976 1570 sec: 176615016 operations; 102138.4 current ops/sec; est completion in 10 minutes [INSERT: Count=1021373, Max=66879, Min=391, Avg=1955.89, 90=2563, 99=7859, 99.9=48863, 99.99=60479] 
2023-05-04 11:36:57:976 1580 sec: 177689278 operations; 107426.2 current ops/sec; est completion in 10 minutes [INSERT: Count=1074268, Max=72895, Min=422, Avg=1859.52, 90=2887, 99=6075, 99.9=14567, 99.99=41823] 
2023-05-04 11:37:07:976 1590 sec: 178699810 operations; 101053.2 current ops/sec; est completion in 10 minutes [INSERT: Count=1010552, Max=115391, Min=357, Avg=1976.89, 90=2631, 99=7063, 99.9=58879, 99.99=81599] 
2023-05-04 11:37:17:976 1600 sec: 179754739 operations; 105492.9 current ops/sec; est completion in 10 minutes [INSERT: Count=1054913, Max=58111, Min=460, Avg=1892.96, 90=2779, 99=6643, 99.9=30175, 99.99=49535] 
2023-05-04 11:37:27:976 1610 sec: 180795620 operations; 104088.1 current ops/sec; est completion in 10 minutes [INSERT: Count=1040878, Max=112959, Min=413, Avg=1919.91, 90=2743, 99=6111, 99.9=46879, 99.99=63135] 
2023-05-04 11:37:37:976 1620 sec: 181829012 operations; 103339.2 current ops/sec; est completion in 10 minutes [INSERT: Count=1033390, Max=107967, Min=412, Avg=1932.84, 90=2837, 99=7107, 99.9=35295, 99.99=72191] 
2023-05-04 11:37:47:976 1630 sec: 182885543 operations; 105653.1 current ops/sec; est completion in 9 minutes [INSERT: Count=1056535, Max=86719, Min=430, Avg=1891.15, 90=2845, 99=6479, 99.9=27599, 99.99=50367] 
2023-05-04 11:37:57:976 1640 sec: 183949910 operations; 106436.7 current ops/sec; est completion in 9 minutes [INSERT: Count=1064363, Max=53823, Min=394, Avg=1876.81, 90=2831, 99=5995, 99.9=26959, 99.99=39647] 
2023-05-04 11:38:07:976 1650 sec: 184989036 operations; 103912.6 current ops/sec; est completion in 9 minutes [INSERT: Count=1039120, Max=112959, Min=433, Avg=1920.89, 90=2929, 99=6683, 99.9=29983, 99.99=81535] 
2023-05-04 11:38:17:976 1660 sec: 186024569 operations; 103553.3 current ops/sec; est completion in 9 minutes [INSERT: Count=1035535, Max=79039, Min=412, Avg=1930.81, 90=2793, 99=6747, 99.9=38175, 99.99=59263] 
2023-05-04 11:38:27:976 1670 sec: 187082122 operations; 105755.3 current ops/sec; est completion in 9 minutes [INSERT: Count=1057553, Max=52895, Min=420, Avg=1889.02, 90=2729, 99=7027, 99.9=30479, 99.99=40511] 
2023-05-04 11:38:37:976 1680 sec: 188136736 operations; 105471.95 current ops/sec; est completion in 9 minutes [INSERT: Count=1054621, Max=74239, Min=421, Avg=1894.05, 90=2981, 99=6375, 99.9=17279, 99.99=59551] 
2023-05-04 11:38:47:976 1690 sec: 189134459 operations; 99772.3 current ops/sec; est completion in 9 minutes [INSERT: Count=997732, Max=108031, Min=418, Avg=2002.33, 90=2687, 99=8095, 99.9=55551, 99.99=90111] 
2023-05-04 11:38:57:976 1700 sec: 190173676 operations; 103921.7 current ops/sec; est completion in 8 minutes [INSERT: Count=1039202, Max=63199, Min=350, Avg=1921.6, 90=2689, 99=6967, 99.9=45983, 99.99=54975] 
2023-05-04 11:39:07:976 1710 sec: 191222489 operations; 104881.3 current ops/sec; est completion in 8 minutes [INSERT: Count=1048821, Max=73535, Min=416, Avg=1905.59, 90=2827, 99=6507, 99.9=45215, 99.99=61759] 
2023-05-04 11:39:17:976 1720 sec: 192273234 operations; 105063.99 current ops/sec; est completion in 8 minutes [INSERT: Count=1050748, Max=43135, Min=451, Avg=1900.83, 90=2853, 99=6859, 99.9=29119, 99.99=36991] 
2023-05-04 11:39:27:976 1730 sec: 193326597 operations; 105346.83 current ops/sec; est completion in 8 minutes [INSERT: Count=1053351, Max=49983, Min=419, Avg=1896.83, 90=2869, 99=6935, 99.9=23887, 99.99=36895] 
2023-05-04 11:39:37:976 1740 sec: 194366514 operations; 103991.7 current ops/sec; est completion in 8 minutes [INSERT: Count=1039917, Max=62783, Min=440, Avg=1920.96, 90=2709, 99=6547, 99.9=42079, 99.99=53471] 
2023-05-04 11:39:47:976 1750 sec: 195433437 operations; 106692.3 current ops/sec; est completion in 8 minutes [INSERT: Count=1066918, Max=43775, Min=393, Avg=1872.29, 90=2959, 99=6019, 99.9=17711, 99.99=32895] 
2023-05-04 11:39:57:976 1760 sec: 196460426 operations; 102688.63 current ops/sec; est completion in 8 minutes [INSERT: Count=1026998, Max=57055, Min=433, Avg=1945.35, 90=2831, 99=7367, 99.9=35999, 99.99=47327] 
2023-05-04 11:40:07:976 1770 sec: 197490270 operations; 102984.4 current ops/sec; est completion in 7 minutes [INSERT: Count=1029844, Max=114047, Min=394, Avg=1939.98, 90=2699, 99=7659, 99.9=39199, 99.99=62751] 
2023-05-04 11:40:17:976 1780 sec: 198574020 operations; 108375 current ops/sec; est completion in 7 minutes [INSERT: Count=1083756, Max=23647, Min=432, Avg=1843.16, 90=2959, 99=5543, 99.9=10231, 99.99=15279] 
2023-05-04 11:40:27:976 1790 sec: 199591760 operations; 101774 current ops/sec; est completion in 7 minutes [INSERT: Count=1017747, Max=81919, Min=352, Avg=1962.61, 90=2831, 99=8003, 99.9=38367, 99.99=49599] 
2023-05-04 11:40:37:976 1800 sec: 200619678 operations; 102791.8 current ops/sec; est completion in 7 minutes [INSERT: Count=1027909, Max=61247, Min=388, Avg=1943.5, 90=2793, 99=7479, 99.9=41631, 99.99=51775] 
2023-05-04 11:40:47:976 1810 sec: 201685960 operations; 106628.2 current ops/sec; est completion in 7 minutes [INSERT: Count=1066292, Max=36671, Min=443, Avg=1873.7, 90=2917, 99=5927, 99.9=21583, 99.99=29279] 
2023-05-04 11:40:57:976 1820 sec: 202721990 operations; 103603 current ops/sec; est completion in 7 minutes [INSERT: Count=1036019, Max=67263, Min=466, Avg=1928.03, 90=2905, 99=6751, 99.9=32015, 99.99=43423] 
2023-05-04 11:41:07:976 1830 sec: 203734365 operations; 101237.5 current ops/sec; est completion in 6 minutes [INSERT: Count=1012380, Max=158847, Min=403, Avg=1973.61, 90=2885, 99=8527, 99.9=31967, 99.99=57951] 
2023-05-04 11:41:17:976 1840 sec: 204783526 operations; 104916.1 current ops/sec; est completion in 6 minutes [INSERT: Count=1049156, Max=45343, Min=357, Avg=1904.09, 90=2845, 99=6171, 99.9=30463, 99.99=37791] 
2023-05-04 11:41:27:976 1850 sec: 205799793 operations; 101636.86 current ops/sec; est completion in 6 minutes [INSERT: Count=1016269, Max=83007, Min=421, Avg=1965.81, 90=2791, 99=6711, 99.9=51039, 99.99=75647] 
2023-05-04 11:41:37:976 1860 sec: 206834676 operations; 103488.3 current ops/sec; est completion in 6 minutes [INSERT: Count=1034874, Max=59135, Min=447, Avg=1930.18, 90=2909, 99=7239, 99.9=27231, 99.99=48479] 
2023-05-04 11:41:47:976 1870 sec: 207868523 operations; 103374.36 current ops/sec; est completion in 6 minutes [INSERT: Count=1033863, Max=44927, Min=388, Avg=1932.57, 90=2865, 99=7671, 99.9=26895, 99.99=38943] 
2023-05-04 11:41:57:976 1880 sec: 208911794 operations; 104327.1 current ops/sec; est completion in 6 minutes [INSERT: Count=1043264, Max=104063, Min=448, Avg=1914.81, 90=2783, 99=6919, 99.9=34399, 99.99=63711] 
2023-05-04 11:42:07:976 1890 sec: 209975638 operations; 106384.4 current ops/sec; est completion in 6 minutes [INSERT: Count=1063834, Max=62015, Min=379, Avg=1877.32, 90=2919, 99=6243, 99.9=21455, 99.99=40415] 
2023-05-04 11:42:17:976 1900 sec: 210980975 operations; 100543.75 current ops/sec; est completion in 5 minutes [INSERT: Count=1005341, Max=55103, Min=473, Avg=1987.67, 90=2827, 99=9559, 99.9=34527, 99.99=44383] 
2023-05-04 11:42:27:976 1910 sec: 212031557 operations; 105047.7 current ops/sec; est completion in 5 minutes [INSERT: Count=1050590, Max=78399, Min=383, Avg=1901.52, 90=2799, 99=6279, 99.9=35263, 99.99=65663] 
2023-05-04 11:42:37:976 1920 sec: 213094099 operations; 106254.2 current ops/sec; est completion in 5 minutes [INSERT: Count=1062547, Max=55135, Min=451, Avg=1880.1, 90=2915, 99=6263, 99.9=20927, 99.99=33919] 
2023-05-04 11:42:47:976 1930 sec: 214113741 operations; 101964.2 current ops/sec; est completion in 5 minutes [INSERT: Count=1019630, Max=54751, Min=367, Avg=1959.07, 90=2915, 99=7443, 99.9=33823, 99.99=43999] 
2023-05-04 11:42:57:976 1940 sec: 215164897 operations; 105115.6 current ops/sec; est completion in 5 minutes [INSERT: Count=1051150, Max=57311, Min=452, Avg=1900.51, 90=2829, 99=6775, 99.9=26351, 99.99=36383] 
2023-05-04 11:43:07:976 1950 sec: 216233756 operations; 106885.9 current ops/sec; est completion in 5 minutes [INSERT: Count=1068861, Max=85631, Min=412, Avg=1869.07, 90=2917, 99=5911, 99.9=19407, 99.99=42143] 
2023-05-04 11:43:17:976 1960 sec: 217261071 operations; 102731.5 current ops/sec; est completion in 4 minutes [INSERT: Count=1027315, Max=48831, Min=406, Avg=1944.46, 90=2907, 99=6911, 99.9=34239, 99.99=42591] 
2023-05-04 11:43:27:976 1970 sec: 218294908 operations; 103383.7 current ops/sec; est completion in 4 minutes [INSERT: Count=1033837, Max=54015, Min=411, Avg=1932.13, 90=2797, 99=8623, 99.9=28815, 99.99=40287] 
2023-05-04 11:43:37:976 1980 sec: 219354865 operations; 105995.7 current ops/sec; est completion in 4 minutes [INSERT: Count=1059963, Max=159615, Min=373, Avg=1885.02, 90=2893, 99=5995, 99.9=22911, 99.99=74751] 
2023-05-04 11:43:47:976 1990 sec: 220361169 operations; 100630.4 current ops/sec; est completion in 4 minutes [INSERT: Count=1006294, Max=53343, Min=448, Avg=1985.06, 90=2855, 99=8831, 99.9=38847, 99.99=47551] 
2023-05-04 11:43:57:976 2000 sec: 221400339 operations; 103917 current ops/sec; est completion in 4 minutes [INSERT: Count=1039182, Max=56575, Min=426, Avg=1922.23, 90=2919, 99=6983, 99.9=26351, 99.99=39519] 
2023-05-04 11:44:07:976 2010 sec: 222446235 operations; 104589.6 current ops/sec; est completion in 4 minutes [INSERT: Count=1045891, Max=95487, Min=386, Avg=1910.36, 90=2727, 99=6687, 99.9=36703, 99.99=49471] 
2023-05-04 11:44:17:976 2020 sec: 223484465 operations; 103823 current ops/sec; est completion in 4 minutes [INSERT: Count=1038230, Max=43103, Min=372, Avg=1924.02, 90=2961, 99=7043, 99.9=25951, 99.99=36703] 
2023-05-04 11:44:27:976 2030 sec: 224529710 operations; 104524.5 current ops/sec; est completion in 3 minutes [INSERT: Count=1045249, Max=64191, Min=430, Avg=1910.9, 90=3017, 99=6219, 99.9=23247, 99.99=48991] 
2023-05-04 11:44:37:976 2040 sec: 225572838 operations; 104312.8 current ops/sec; est completion in 3 minutes [INSERT: Count=1043134, Max=58719, Min=458, Avg=1915.71, 90=2827, 99=6899, 99.9=30527, 99.99=43199] 
2023-05-04 11:44:47:976 2050 sec: 226620312 operations; 104757.88 current ops/sec; est completion in 3 minutes [INSERT: Count=1047466, Max=34719, Min=395, Avg=1906.66, 90=2999, 99=6639, 99.9=20511, 99.99=27487] 
2023-05-04 11:44:57:976 2060 sec: 227673102 operations; 105268.47 current ops/sec; est completion in 3 minutes [INSERT: Count=1052783, Max=54975, Min=363, Avg=1897.8, 90=2971, 99=6063, 99.9=22863, 99.99=36959] 
2023-05-04 11:45:07:976 2070 sec: 228712803 operations; 103970.1 current ops/sec; est completion in 3 minutes [INSERT: Count=1039719, Max=111359, Min=383, Avg=1921.7, 90=2817, 99=6803, 99.9=30511, 99.99=51551] 
2023-05-04 11:45:17:976 2080 sec: 229768375 operations; 105567.76 current ops/sec; est completion in 3 minutes [INSERT: Count=1055573, Max=37375, Min=442, Avg=1892.45, 90=2981, 99=6219, 99.9=19711, 99.99=27951] 
2023-05-04 11:45:27:976 2090 sec: 230817306 operations; 104893.1 current ops/sec; est completion in 2 minutes [INSERT: Count=1048928, Max=51263, Min=361, Avg=1904.45, 90=2957, 99=6319, 99.9=22879, 99.99=34879] 
2023-05-04 11:45:37:976 2100 sec: 231849785 operations; 103237.58 current ops/sec; est completion in 2 minutes [INSERT: Count=1032464, Max=60607, Min=418, Avg=1934.87, 90=2805, 99=6399, 99.9=44959, 99.99=53151] 
2023-05-04 11:45:47:976 2110 sec: 232914144 operations; 106435.9 current ops/sec; est completion in 2 minutes [INSERT: Count=1064360, Max=33535, Min=435, Avg=1876.8, 90=2967, 99=5831, 99.9=19439, 99.99=27343] 
2023-05-04 11:45:57:976 2120 sec: 233949665 operations; 103562.46 current ops/sec; est completion in 2 minutes [INSERT: Count=1035523, Max=50559, Min=403, Avg=1929.3, 90=2871, 99=7387, 99.9=27023, 99.99=40735] 
2023-05-04 11:46:07:976 2130 sec: 234971307 operations; 102164.2 current ops/sec; est completion in 2 minutes [INSERT: Count=1021643, Max=96895, Min=391, Avg=1954.09, 90=2769, 99=6919, 99.9=50431, 99.99=76159] 
2023-05-04 11:46:17:976 2140 sec: 236023957 operations; 105254.47 current ops/sec; est completion in 2 minutes [INSERT: Count=1052648, Max=53663, Min=405, Avg=1899.04, 90=2887, 99=6383, 99.9=25823, 99.99=44735] 
2023-05-04 11:46:27:976 2150 sec: 237054953 operations; 103099.6 current ops/sec; est completion in 1 minute [INSERT: Count=1031000, Max=55487, Min=413, Avg=1937.68, 90=2821, 99=8895, 99.9=26367, 99.99=35199] 
2023-05-04 11:46:37:976 2160 sec: 238113989 operations; 105903.6 current ops/sec; est completion in 1 minute [INSERT: Count=1059037, Max=96703, Min=464, Avg=1886.24, 90=2975, 99=6387, 99.9=14879, 99.99=49439] 
2023-05-04 11:46:47:976 2170 sec: 239173715 operations; 105972.6 current ops/sec; est completion in 1 minute [INSERT: Count=1059724, Max=40383, Min=432, Avg=1885.02, 90=2841, 99=6407, 99.9=23119, 99.99=31407] 
2023-05-04 11:46:57:976 2180 sec: 240207004 operations; 103328.9 current ops/sec; est completion in 1 minute [INSERT: Count=1033292, Max=55359, Min=471, Avg=1933.47, 90=2863, 99=7839, 99.9=26431, 99.99=36927] 
2023-05-04 11:47:07:976 2190 sec: 241276549 operations; 106954.5 current ops/sec; est completion in 1 minute [INSERT: Count=1069552, Max=101119, Min=412, Avg=1867.8, 90=2973, 99=5683, 99.9=12303, 99.99=61535] 
2023-05-04 11:47:17:976 2200 sec: 242337883 operations; 106133.4 current ops/sec; est completion in 1 minute [INSERT: Count=1061319, Max=40991, Min=437, Avg=1881.86, 90=2865, 99=6199, 99.9=22479, 99.99=29695] 
2023-05-04 11:47:27:976 2210 sec: 243385486 operations; 104770.78 current ops/sec; est completion in 1 minute [INSERT: Count=1047620, Max=58815, Min=443, Avg=1907.24, 90=2835, 99=7219, 99.9=25327, 99.99=37919] 
2023-05-04 11:47:37:976 2220 sec: 244454825 operations; 106923.21 current ops/sec; est completion in 51 seconds [INSERT: Count=1069328, Max=49951, Min=444, Avg=1868.18, 90=3037, 99=5727, 99.9=10319, 99.99=34911] 
2023-05-04 11:47:47:976 2230 sec: 245498546 operations; 104372.1 current ops/sec; est completion in 41 seconds [INSERT: Count=1043712, Max=53311, Min=381, Avg=1914.03, 90=2883, 99=7187, 99.9=24207, 99.99=40991] 
2023-05-04 11:47:57:976 2240 sec: 246535441 operations; 103689.5 current ops/sec; est completion in 32 seconds [INSERT: Count=1036904, Max=50591, Min=418, Avg=1926.63, 90=2835, 99=7615, 99.9=31151, 99.99=40127] 
2023-05-04 11:48:07:976 2250 sec: 247603707 operations; 106826.6 current ops/sec; est completion in 22 seconds [INSERT: Count=1068271, Max=222591, Min=411, Avg=1869.98, 90=2973, 99=5479, 99.9=9831, 99.99=156927] 
2023-05-04 11:48:17:976 2260 sec: 248708905 operations; 110530.85 current ops/sec; est completion in 12 seconds [INSERT: Count=1105188, Max=43679, Min=429, Avg=1807.53, 90=2325, 99=7255, 99.9=26767, 99.99=34783] 
2023-05-04 11:48:27:976 2270 sec: 249958110 operations; 124920.5 current ops/sec; est completion in 1 second [CLEANUP: Count=120, Max=14, Min=1, Avg=2.88, 90=4, 99=8, 99.9=14, 99.99=14] [INSERT: Count=1249203, Max=42431, Min=364, Avg=1498.7, 90=1887, 99=2621, 99.9=9967, 99.99=26655] 
2023-05-04 11:48:32:516 2274 sec: 250000000 operations; 9224.84 current ops/sec; [CLEANUP: Count=80, Max=2222079, Min=1, Avg=27766.22, 90=4, 99=18, 99.9=2222079, 99.99=2222079] [INSERT: Count=41882, Max=13943, Min=347, Avg=1371.08, 90=1784, 99=1988, 99.9=7667, 99.99=12743] 
[OVERALL], RunTime(ms), 2274540
[OVERALL], Throughput(ops/sec), 109912.33392246344
[TOTAL_GCS_PS_Scavenge], Count, 4641
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 24029
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0564333887291495
[TOTAL_GCS_PS_MarkSweep], Count, 4
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 158
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.00694645950389969
[TOTAL_GCs], Count, 4645
[TOTAL_GC_TIME], Time(ms), 24187
[TOTAL_GC_TIME_%], Time(%), 1.0633798482330492
[CLEANUP], Operations, 200
[CLEANUP], AverageLatency(us), 11108.22
[CLEANUP], MinLatency(us), 1
[CLEANUP], MaxLatency(us), 2222079
[CLEANUP], 95thPercentileLatency(us), 4
[CLEANUP], 99thPercentileLatency(us), 14
[INSERT], Operations, 250000000
[INSERT], AverageLatency(us), 1812.918720668
[INSERT], MinLatency(us), 212
[INSERT], MaxLatency(us), 723967
[INSERT], 95thPercentileLatency(us), 3559
[INSERT], 99thPercentileLatency(us), 5859
[INSERT], Return=OK, 250000000
