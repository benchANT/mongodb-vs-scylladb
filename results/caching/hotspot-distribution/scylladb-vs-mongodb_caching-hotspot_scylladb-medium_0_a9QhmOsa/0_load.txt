bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=35.80.102.45,52.42.225.54,52.41.60.106 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=AH9zrN0p3Eutoxv -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 200 -p recordcount=250000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertcount=250000000
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.80.102.45,52.42.225.54,52.41.60.106 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=AH9zrN0p3Eutoxv -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 200 -p recordcount=250000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertcount=250000000 -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.80.102.45,52.42.225.54,52.41.60.106 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=AH9zrN0p3Eutoxv -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 200 -p recordcount=250000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertcount=250000000 -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
Starting test.
[Thread-9] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
2023-05-04 11:10:37:151 0 sec: 0 operations; est completion in 0 second 
[Thread-9] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
[Thread-9] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-9] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-9] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-9] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.42.225.54:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.41.60.106:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.188.164.221:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.80.102.45:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.13.155.228:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.229.236.137:9042 added
[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 638c151f-15f6-4914-a385-dddfb9970225

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.42.225.54; Rack: us-west-2a

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /54.188.164.221; Rack: us-west-2a

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.41.60.106; Rack: us-west-2c

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.13.155.228; Rack: us-west-2b

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.229.236.137; Rack: us-west-2b

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.80.102.45; Rack: us-west-2c

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-05-04 11:10:47:136 10 sec: 1219968 operations; 121996.8 current ops/sec; est completion in 34 minutes [INSERT: Count=1220155, Max=116479, Min=227, Avg=1519.01, 90=2177, 99=10007, 99.9=28095, 99.99=68991] 
2023-05-04 11:10:57:136 20 sec: 2842540 operations; 162257.2 current ops/sec; est completion in 28 minutes [INSERT: Count=1622448, Max=37951, Min=218, Avg=1229.83, 90=1758, 99=3079, 99.9=13015, 99.99=35551] 
2023-05-04 11:11:07:136 30 sec: 4343032 operations; 150049.2 current ops/sec; est completion in 28 minutes [INSERT: Count=1500519, Max=37919, Min=218, Avg=1330.28, 90=1894, 99=2761, 99.9=9575, 99.99=33471] 
2023-05-04 11:11:17:136 40 sec: 5729722 operations; 138669 current ops/sec; est completion in 28 minutes [INSERT: Count=1386651, Max=14767, Min=222, Avg=1439.81, 90=1962, 99=2749, 99.9=5799, 99.99=8751] 
2023-05-04 11:11:27:136 50 sec: 7187256 operations; 145753.4 current ops/sec; est completion in 28 minutes [INSERT: Count=1457578, Max=43103, Min=215, Avg=1369.7, 90=1948, 99=3059, 99.9=9839, 99.99=24415] 
2023-05-04 11:11:37:136 60 sec: 8485324 operations; 129806.8 current ops/sec; est completion in 28 minutes [INSERT: Count=1298026, Max=35679, Min=255, Avg=1538.29, 90=1960, 99=2901, 99.9=8115, 99.99=25487] 
2023-05-04 11:11:47:136 70 sec: 9797805 operations; 131248.1 current ops/sec; est completion in 28 minutes [INSERT: Count=1312473, Max=13879, Min=284, Avg=1521.37, 90=1950, 99=2839, 99.9=8255, 99.99=10511] 
2023-05-04 11:11:57:136 80 sec: 11110860 operations; 131305.5 current ops/sec; est completion in 28 minutes [INSERT: Count=1313050, Max=33791, Min=351, Avg=1520.68, 90=1945, 99=2827, 99.9=8415, 99.99=22287] 
2023-05-04 11:12:07:136 90 sec: 12419836 operations; 130897.6 current ops/sec; est completion in 28 minutes [INSERT: Count=1308989, Max=38879, Min=249, Avg=1525.42, 90=1957, 99=2905, 99.9=9687, 99.99=24479] 
2023-05-04 11:12:17:136 100 sec: 13730340 operations; 131050.4 current ops/sec; est completion in 28 minutes [INSERT: Count=1310489, Max=26335, Min=334, Avg=1523.68, 90=2014, 99=3657, 99.9=12783, 99.99=21359] 
2023-05-04 11:12:27:136 110 sec: 14709857 operations; 97951.7 current ops/sec; est completion in 29 minutes [INSERT: Count=979492, Max=194687, Min=223, Avg=2037.45, 90=2053, 99=13519, 99.9=78975, 99.99=150399] 
2023-05-04 11:12:37:136 120 sec: 15617504 operations; 90764.7 current ops/sec; est completion in 30 minutes [INSERT: Count=907685, Max=705023, Min=233, Avg=2203.22, 90=1957, 99=10503, 99.9=138111, 99.99=667135] 
2023-05-04 11:12:47:136 130 sec: 16924489 operations; 130698.5 current ops/sec; est completion in 29 minutes [INSERT: Count=1306985, Max=14791, Min=353, Avg=1527.78, 90=1939, 99=2591, 99.9=8991, 99.99=10527] 
2023-05-04 11:12:57:136 140 sec: 18222227 operations; 129773.8 current ops/sec; est completion in 29 minutes [INSERT: Count=1297733, Max=71359, Min=348, Avg=1538.67, 90=1940, 99=2717, 99.9=9551, 99.99=33023] 
2023-05-04 11:13:07:136 150 sec: 19508796 operations; 128656.9 current ops/sec; est completion in 29 minutes [INSERT: Count=1286562, Max=104831, Min=349, Avg=1552.06, 90=1954, 99=2975, 99.9=11231, 99.99=34079] 
2023-05-04 11:13:17:136 160 sec: 20802352 operations; 129355.6 current ops/sec; est completion in 29 minutes [INSERT: Count=1293569, Max=13695, Min=351, Avg=1543.65, 90=1989, 99=3349, 99.9=9639, 99.99=11263] 
2023-05-04 11:13:27:136 170 sec: 22080125 operations; 127777.3 current ops/sec; est completion in 29 minutes [INSERT: Count=1277767, Max=100543, Min=367, Avg=1562.75, 90=1992, 99=3237, 99.9=9055, 99.99=35583] 
2023-05-04 11:13:37:136 180 sec: 23263587 operations; 118346.2 current ops/sec; est completion in 29 minutes [INSERT: Count=1183473, Max=84543, Min=353, Avg=1687.59, 90=2287, 99=4495, 99.9=10607, 99.99=46975] 
2023-05-04 11:13:47:136 190 sec: 24419632 operations; 115604.5 current ops/sec; est completion in 29 minutes [INSERT: Count=1156024, Max=14239, Min=424, Avg=1727.68, 90=2437, 99=4731, 99.9=8591, 99.99=10511] 
2023-05-04 11:13:57:136 200 sec: 25629592 operations; 120996 current ops/sec; est completion in 29 minutes [INSERT: Count=1209968, Max=52447, Min=427, Avg=1650.55, 90=2117, 99=4243, 99.9=8991, 99.99=33119] 
2023-05-04 11:14:07:136 210 sec: 26801776 operations; 117218.4 current ops/sec; est completion in 29 minutes [INSERT: Count=1172188, Max=45823, Min=421, Avg=1703.85, 90=2465, 99=4551, 99.9=9151, 99.99=29167] 
2023-05-04 11:14:17:136 220 sec: 28004762 operations; 120298.6 current ops/sec; est completion in 29 minutes [INSERT: Count=1202990, Max=18591, Min=378, Avg=1660.07, 90=2163, 99=4227, 99.9=8575, 99.99=11423] 
2023-05-04 11:14:27:136 230 sec: 29210809 operations; 120604.7 current ops/sec; est completion in 28 minutes [INSERT: Count=1206035, Max=55903, Min=446, Avg=1655.89, 90=2135, 99=4487, 99.9=10903, 99.99=28383] 
2023-05-04 11:14:37:136 240 sec: 30395131 operations; 118432.2 current ops/sec; est completion in 28 minutes [INSERT: Count=1184308, Max=47455, Min=426, Avg=1685.95, 90=2321, 99=4447, 99.9=9215, 99.99=25631] 
2023-05-04 11:14:47:136 250 sec: 31584832 operations; 118970.1 current ops/sec; est completion in 28 minutes [INSERT: Count=1189716, Max=20703, Min=432, Avg=1679.09, 90=2183, 99=4635, 99.9=9023, 99.99=12519] 
2023-05-04 11:14:57:136 260 sec: 32777426 operations; 119259.4 current ops/sec; est completion in 28 minutes [INSERT: Count=1192582, Max=52991, Min=374, Avg=1674.56, 90=2275, 99=4607, 99.9=9223, 99.99=27855] 
2023-05-04 11:15:07:136 270 sec: 33918030 operations; 114060.4 current ops/sec; est completion in 28 minutes [INSERT: Count=1140612, Max=170111, Min=375, Avg=1751.1, 90=2489, 99=5083, 99.9=9671, 99.99=62751] 
2023-05-04 11:15:17:136 280 sec: 35089758 operations; 117172.8 current ops/sec; est completion in 28 minutes [INSERT: Count=1171742, Max=18191, Min=431, Avg=1704.46, 90=2231, 99=5127, 99.9=9351, 99.99=12623] 
2023-05-04 11:15:27:136 290 sec: 36249151 operations; 115939.3 current ops/sec; est completion in 28 minutes [INSERT: Count=1159392, Max=50367, Min=447, Avg=1722.69, 90=2451, 99=4807, 99.9=9839, 99.99=34015] 
2023-05-04 11:15:37:136 300 sec: 37399174 operations; 115002.3 current ops/sec; est completion in 28 minutes [INSERT: Count=1150014, Max=50591, Min=372, Avg=1736.71, 90=2459, 99=4875, 99.9=9935, 99.99=29567] 
2023-05-04 11:15:47:136 310 sec: 38583077 operations; 118390.3 current ops/sec; est completion in 28 minutes [INSERT: Count=1183910, Max=22431, Min=455, Avg=1686.94, 90=2251, 99=4691, 99.9=8815, 99.99=13783] 
2023-05-04 11:15:57:136 320 sec: 39730110 operations; 114703.3 current ops/sec; est completion in 28 minutes [INSERT: Count=1147042, Max=50079, Min=441, Avg=1741.25, 90=2549, 99=4887, 99.9=9119, 99.99=32559] 
2023-05-04 11:16:07:136 330 sec: 40877363 operations; 114725.3 current ops/sec; est completion in 28 minutes [INSERT: Count=1147235, Max=48767, Min=418, Avg=1740.92, 90=2431, 99=4999, 99.9=9807, 99.99=28671] 
2023-05-04 11:16:17:136 340 sec: 42046001 operations; 116863.8 current ops/sec; est completion in 28 minutes [INSERT: Count=1168618, Max=19727, Min=442, Avg=1708.99, 90=2323, 99=5031, 99.9=8943, 99.99=13591] 
2023-05-04 11:16:27:136 350 sec: 43198090 operations; 115208.9 current ops/sec; est completion in 27 minutes [INSERT: Count=1152094, Max=49279, Min=429, Avg=1733.55, 90=2519, 99=4711, 99.9=9951, 99.99=26511] 
2023-05-04 11:16:37:136 360 sec: 44357155 operations; 115906.5 current ops/sec; est completion in 27 minutes [INSERT: Count=1159081, Max=67199, Min=384, Avg=1723.21, 90=2355, 99=4787, 99.9=9719, 99.99=36319] 
2023-05-04 11:16:47:136 370 sec: 45520782 operations; 116362.7 current ops/sec; est completion in 27 minutes [INSERT: Count=1163633, Max=14311, Min=390, Avg=1716.4, 90=2391, 99=4955, 99.9=9111, 99.99=11295] 
2023-05-04 11:16:57:136 380 sec: 46665376 operations; 114459.4 current ops/sec; est completion in 27 minutes [INSERT: Count=1144578, Max=52671, Min=466, Avg=1744.98, 90=2559, 99=4799, 99.9=9527, 99.99=29887] 
2023-05-04 11:17:07:136 390 sec: 47815111 operations; 114973.5 current ops/sec; est completion in 27 minutes [INSERT: Count=1149758, Max=53535, Min=431, Avg=1737.14, 90=2395, 99=5051, 99.9=9519, 99.99=29647] 
2023-05-04 11:17:17:136 400 sec: 48981294 operations; 116618.3 current ops/sec; est completion in 27 minutes [INSERT: Count=1166175, Max=15767, Min=459, Avg=1712.56, 90=2411, 99=4719, 99.9=8035, 99.99=11183] 
2023-05-04 11:17:27:136 410 sec: 50117990 operations; 113669.6 current ops/sec; est completion in 27 minutes [INSERT: Count=1136684, Max=88191, Min=420, Avg=1757.12, 90=2563, 99=4951, 99.9=9655, 99.99=39647] 
2023-05-04 11:17:37:136 420 sec: 51276541 operations; 115855.1 current ops/sec; est completion in 27 minutes [INSERT: Count=1158558, Max=49471, Min=376, Avg=1723.84, 90=2371, 99=4891, 99.9=9327, 99.99=28719] 
2023-05-04 11:17:47:136 430 sec: 52431713 operations; 115517.2 current ops/sec; est completion in 27 minutes [INSERT: Count=1155172, Max=17967, Min=443, Avg=1729, 90=2457, 99=4863, 99.9=9391, 99.99=11783] 
2023-05-04 11:17:57:136 440 sec: 53560330 operations; 112861.7 current ops/sec; est completion in 26 minutes [INSERT: Count=1128606, Max=47935, Min=425, Avg=1769.74, 90=2611, 99=5087, 99.9=9615, 99.99=29871] 
2023-05-04 11:18:07:136 450 sec: 54712747 operations; 115241.7 current ops/sec; est completion in 26 minutes [INSERT: Count=1152422, Max=83711, Min=438, Avg=1733.08, 90=2393, 99=5015, 99.9=9343, 99.99=35583] 
2023-05-04 11:18:17:136 460 sec: 55865068 operations; 115232.1 current ops/sec; est completion in 26 minutes [INSERT: Count=1152329, Max=13967, Min=460, Avg=1733.25, 90=2491, 99=4887, 99.9=8255, 99.99=10479] 
2023-05-04 11:18:27:136 470 sec: 56995165 operations; 113009.7 current ops/sec; est completion in 26 minutes [INSERT: Count=1130095, Max=48063, Min=486, Avg=1767.37, 90=2613, 99=4983, 99.9=9599, 99.99=31999] 
2023-05-04 11:18:37:136 480 sec: 58144576 operations; 114941.1 current ops/sec; est completion in 26 minutes [INSERT: Count=1149411, Max=47647, Min=476, Avg=1737.56, 90=2425, 99=5207, 99.9=9999, 99.99=26367] 
2023-05-04 11:18:47:136 490 sec: 59271963 operations; 112738.7 current ops/sec; est completion in 26 minutes [INSERT: Count=1127369, Max=70911, Min=414, Avg=1771.66, 90=2595, 99=5191, 99.9=9759, 99.99=15511] 
2023-05-04 11:18:57:136 500 sec: 60401667 operations; 112970.4 current ops/sec; est completion in 26 minutes [INSERT: Count=1129708, Max=48255, Min=444, Avg=1768.03, 90=2613, 99=5055, 99.9=9607, 99.99=29583] 
2023-05-04 11:19:07:136 510 sec: 61553407 operations; 115174 current ops/sec; est completion in 26 minutes [INSERT: Count=1151742, Max=87679, Min=429, Avg=1734.11, 90=2389, 99=5079, 99.9=10527, 99.99=39647] 
2023-05-04 11:19:17:136 520 sec: 62684266 operations; 113085.9 current ops/sec; est completion in 25 minutes [INSERT: Count=1130883, Max=15303, Min=409, Avg=1766.23, 90=2635, 99=5051, 99.9=8463, 99.99=11031] 
2023-05-04 11:19:27:136 530 sec: 63810411 operations; 112614.5 current ops/sec; est completion in 25 minutes [INSERT: Count=1126114, Max=55391, Min=447, Avg=1773.59, 90=2617, 99=5127, 99.9=10287, 99.99=34943] 
2023-05-04 11:19:37:136 540 sec: 64941778 operations; 113136.7 current ops/sec; est completion in 25 minutes [INSERT: Count=1131403, Max=46847, Min=413, Avg=1765.45, 90=2475, 99=5699, 99.9=10015, 99.99=27951] 
2023-05-04 11:19:47:136 550 sec: 66073529 operations; 113175.1 current ops/sec; est completion in 25 minutes [INSERT: Count=1131717, Max=35551, Min=409, Avg=1764.71, 90=2659, 99=4899, 99.9=8623, 99.99=11263] 
2023-05-04 11:19:57:136 560 sec: 67192858 operations; 111932.9 current ops/sec; est completion in 25 minutes [INSERT: Count=1119326, Max=46655, Min=445, Avg=1784.45, 90=2655, 99=5327, 99.9=9751, 99.99=32319] 
2023-05-04 11:20:07:136 570 sec: 68334665 operations; 114180.7 current ops/sec; est completion in 25 minutes [INSERT: Count=1141803, Max=45567, Min=449, Avg=1749.26, 90=2473, 99=5163, 99.9=10695, 99.99=27871] 
2023-05-04 11:20:17:136 580 sec: 69450571 operations; 111590.6 current ops/sec; est completion in 25 minutes [INSERT: Count=1115905, Max=19311, Min=428, Avg=1789.87, 90=2731, 99=5147, 99.9=9567, 99.99=12495] 
2023-05-04 11:20:27:136 590 sec: 70555169 operations; 110459.8 current ops/sec; est completion in 25 minutes [INSERT: Count=1104602, Max=71039, Min=443, Avg=1808.24, 90=2695, 99=5739, 99.9=10415, 99.99=36159] 
2023-05-04 11:20:37:136 600 sec: 71680135 operations; 112496.6 current ops/sec; est completion in 24 minutes [INSERT: Count=1124960, Max=128575, Min=361, Avg=1775.45, 90=2529, 99=5359, 99.9=9551, 99.99=48575] 
2023-05-04 11:20:47:136 610 sec: 72797919 operations; 111778.4 current ops/sec; est completion in 24 minutes [INSERT: Count=1117789, Max=23855, Min=448, Avg=1786.88, 90=2747, 99=5227, 99.9=8727, 99.99=13927] 
2023-05-04 11:20:57:136 620 sec: 73920696 operations; 112277.7 current ops/sec; est completion in 24 minutes [INSERT: Count=1122775, Max=53983, Min=439, Avg=1778.93, 90=2637, 99=5291, 99.9=9007, 99.99=27039] 
2023-05-04 11:21:07:136 630 sec: 75032158 operations; 111146.2 current ops/sec; est completion in 24 minutes [INSERT: Count=1111468, Max=83647, Min=410, Avg=1797.09, 90=2633, 99=5667, 99.9=9575, 99.99=41759] 
2023-05-04 11:21:17:136 640 sec: 76143827 operations; 111166.9 current ops/sec; est completion in 24 minutes [INSERT: Count=1111678, Max=85951, Min=435, Avg=1796.79, 90=2737, 99=5211, 99.9=9607, 99.99=82623] 
2023-05-04 11:21:27:136 650 sec: 77277843 operations; 113401.6 current ops/sec; est completion in 24 minutes [INSERT: Count=1134010, Max=62335, Min=425, Avg=1761.27, 90=2567, 99=5167, 99.9=9743, 99.99=36607] 
2023-05-04 11:21:37:136 660 sec: 78399315 operations; 112147.2 current ops/sec; est completion in 24 minutes [INSERT: Count=1121463, Max=55999, Min=384, Avg=1780.98, 90=2623, 99=5439, 99.9=9471, 99.99=28639] 
2023-05-04 11:21:47:136 670 sec: 79499140 operations; 109982.5 current ops/sec; est completion in 23 minutes [INSERT: Count=1099824, Max=24415, Min=452, Avg=1816.17, 90=2785, 99=5811, 99.9=11279, 99.99=16607] 
2023-05-04 11:21:57:136 680 sec: 80626131 operations; 112699.1 current ops/sec; est completion in 23 minutes [INSERT: Count=1126995, Max=46879, Min=445, Avg=1772.31, 90=2611, 99=5223, 99.9=9103, 99.99=30143] 
2023-05-04 11:22:07:136 690 sec: 81725345 operations; 109921.4 current ops/sec; est completion in 23 minutes [INSERT: Count=1099222, Max=60415, Min=423, Avg=1817.08, 90=2717, 99=5743, 99.9=10823, 99.99=36319] 
2023-05-04 11:22:17:136 700 sec: 82837515 operations; 111217 current ops/sec; est completion in 23 minutes [INSERT: Count=1112160, Max=21471, Min=412, Avg=1795.98, 90=2765, 99=5423, 99.9=8591, 99.99=15423] 
2023-05-04 11:22:27:136 710 sec: 83952214 operations; 111469.9 current ops/sec; est completion in 23 minutes [INSERT: Count=1114707, Max=44735, Min=417, Avg=1791.82, 90=2633, 99=5579, 99.9=10847, 99.99=31311] 
2023-05-04 11:22:37:136 720 sec: 85040775 operations; 108856.1 current ops/sec; est completion in 23 minutes [INSERT: Count=1088547, Max=61119, Min=489, Avg=1834.91, 90=2759, 99=6075, 99.9=12159, 99.99=33023] 
2023-05-04 11:22:47:136 730 sec: 86156394 operations; 111561.9 current ops/sec; est completion in 23 minutes [INSERT: Count=1115623, Max=14623, Min=430, Avg=1790.47, 90=2759, 99=5295, 99.9=8471, 99.99=10895] 
2023-05-04 11:22:57:136 740 sec: 87263672 operations; 110727.8 current ops/sec; est completion in 23 minutes [INSERT: Count=1107275, Max=53535, Min=475, Avg=1803.92, 90=2695, 99=5675, 99.9=10031, 99.99=31071] 
2023-05-04 11:23:07:136 750 sec: 88355917 operations; 109224.5 current ops/sec; est completion in 22 minutes [INSERT: Count=1092260, Max=53695, Min=452, Avg=1828.68, 90=2735, 99=6235, 99.9=11191, 99.99=28943] 
2023-05-04 11:23:17:136 760 sec: 89464969 operations; 110905.2 current ops/sec; est completion in 22 minutes [INSERT: Count=1109051, Max=31007, Min=434, Avg=1801, 90=2763, 99=5363, 99.9=9223, 99.99=26895] 
2023-05-04 11:23:27:136 770 sec: 90545109 operations; 108014 current ops/sec; est completion in 22 minutes [INSERT: Count=1080150, Max=77055, Min=426, Avg=1849.23, 90=2751, 99=6619, 99.9=13503, 99.99=43967] 
2023-05-04 11:23:37:136 780 sec: 91649178 operations; 110406.9 current ops/sec; est completion in 22 minutes [INSERT: Count=1104067, Max=124863, Min=416, Avg=1809.2, 90=2685, 99=5563, 99.9=10991, 99.99=47647] 
2023-05-04 11:23:47:136 790 sec: 92741400 operations; 109222.2 current ops/sec; est completion in 22 minutes [INSERT: Count=1092207, Max=30431, Min=368, Avg=1828.79, 90=2769, 99=6143, 99.9=11879, 99.99=19839] 
2023-05-04 11:23:57:136 800 sec: 93830386 operations; 108898.6 current ops/sec; est completion in 22 minutes [INSERT: Count=1089003, Max=61983, Min=415, Avg=1834.22, 90=2745, 99=6335, 99.9=11511, 99.99=32047] 
2023-05-04 11:24:07:136 810 sec: 94937684 operations; 110729.8 current ops/sec; est completion in 22 minutes [INSERT: Count=1107288, Max=52639, Min=428, Avg=1803.85, 90=2699, 99=5551, 99.9=10439, 99.99=31695] 
2023-05-04 11:24:17:136 820 sec: 96016220 operations; 107853.6 current ops/sec; est completion in 21 minutes [INSERT: Count=1078546, Max=21199, Min=436, Avg=1852.04, 90=2863, 99=6491, 99.9=10743, 99.99=14511] 
2023-05-04 11:24:27:136 830 sec: 97101355 operations; 108513.5 current ops/sec; est completion in 21 minutes [INSERT: Count=1085133, Max=53087, Min=430, Avg=1840.77, 90=2773, 99=6375, 99.9=12327, 99.99=31439] 
2023-05-04 11:24:37:136 840 sec: 98212532 operations; 111117.7 current ops/sec; est completion in 21 minutes [INSERT: Count=1111171, Max=56159, Min=450, Avg=1797.49, 90=2651, 99=5679, 99.9=10791, 99.99=31647] 
2023-05-04 11:24:47:136 850 sec: 99302439 operations; 108990.7 current ops/sec; est completion in 21 minutes [INSERT: Count=1089901, Max=20975, Min=397, Avg=1832.7, 90=2829, 99=6019, 99.9=10015, 99.99=15143] 
2023-05-04 11:24:57:136 860 sec: 100391941 operations; 108950.2 current ops/sec; est completion in 21 minutes [INSERT: Count=1089502, Max=58911, Min=430, Avg=1833.31, 90=2829, 99=5743, 99.9=10287, 99.99=31887] 
2023-05-04 11:25:07:136 870 sec: 101442375 operations; 105043.4 current ops/sec; est completion in 21 minutes [INSERT: Count=1050428, Max=74623, Min=452, Avg=1901.69, 90=2671, 99=7407, 99.9=33759, 99.99=63967] 
2023-05-04 11:25:17:136 880 sec: 102551258 operations; 110888.3 current ops/sec; est completion in 21 minutes [INSERT: Count=1108885, Max=18127, Min=425, Avg=1801.21, 90=2737, 99=5619, 99.9=9367, 99.99=12711] 
2023-05-04 11:25:27:136 890 sec: 103632459 operations; 108120.1 current ops/sec; est completion in 20 minutes [INSERT: Count=1081206, Max=63967, Min=437, Avg=1847.49, 90=2861, 99=6055, 99.9=11023, 99.99=34175] 
2023-05-04 11:25:37:136 900 sec: 104714020 operations; 108156.1 current ops/sec; est completion in 20 minutes [INSERT: Count=1081560, Max=116799, Min=351, Avg=1846.83, 90=2753, 99=6599, 99.9=12687, 99.99=47775] 
2023-05-04 11:25:47:136 910 sec: 105814202 operations; 110018.2 current ops/sec; est completion in 20 minutes [INSERT: Count=1100182, Max=146687, Min=413, Avg=1815.55, 90=2731, 99=5731, 99.9=9743, 99.99=65439] 
2023-05-04 11:25:57:136 920 sec: 106875820 operations; 106161.8 current ops/sec; est completion in 20 minutes [INSERT: Count=1061609, Max=61471, Min=399, Avg=1881.55, 90=2923, 99=6579, 99.9=13431, 99.99=44127] 
2023-05-04 11:26:07:136 930 sec: 107973747 operations; 109792.7 current ops/sec; est completion in 20 minutes [INSERT: Count=1097930, Max=64607, Min=448, Avg=1819.28, 90=2733, 99=5879, 99.9=13047, 99.99=36607] 
2023-05-04 11:26:17:136 940 sec: 109048853 operations; 107510.6 current ops/sec; est completion in 20 minutes [INSERT: Count=1075109, Max=27199, Min=481, Avg=1857.9, 90=2815, 99=6811, 99.9=12655, 99.99=19807] 
2023-05-04 11:26:27:136 950 sec: 110128459 operations; 107960.6 current ops/sec; est completion in 20 minutes [INSERT: Count=1079611, Max=144511, Min=415, Avg=1850.16, 90=2849, 99=5711, 99.9=11239, 99.99=69311] 
2023-05-04 11:26:37:136 960 sec: 111208081 operations; 107962.2 current ops/sec; est completion in 19 minutes [INSERT: Count=1079618, Max=64671, Min=462, Avg=1850.14, 90=2805, 99=6407, 99.9=13543, 99.99=42847] 
2023-05-04 11:26:47:136 970 sec: 112272764 operations; 106468.3 current ops/sec; est completion in 19 minutes [INSERT: Count=1064688, Max=82815, Min=429, Avg=1876.11, 90=2777, 99=6571, 99.9=25407, 99.99=63455] 
2023-05-04 11:26:57:136 980 sec: 113354725 operations; 108196.1 current ops/sec; est completion in 19 minutes [INSERT: Count=1081960, Max=58655, Min=454, Avg=1846.2, 90=2901, 99=5571, 99.9=10079, 99.99=42431] 
2023-05-04 11:27:07:136 990 sec: 114436690 operations; 108196.5 current ops/sec; est completion in 19 minutes [INSERT: Count=1081965, Max=56895, Min=452, Avg=1846.12, 90=2871, 99=6111, 99.9=11031, 99.99=31535] 
2023-05-04 11:27:17:136 1000 sec: 115518941 operations; 108225.1 current ops/sec; est completion in 19 minutes [INSERT: Count=1082256, Max=59967, Min=451, Avg=1845.64, 90=2861, 99=6071, 99.9=10247, 99.99=54015] 
2023-05-04 11:27:27:136 1010 sec: 116576958 operations; 105801.7 current ops/sec; est completion in 19 minutes [INSERT: Count=1058012, Max=91135, Min=337, Avg=1887.9, 90=2929, 99=6355, 99.9=21215, 99.99=49631] 
2023-05-04 11:27:37:136 1020 sec: 117654702 operations; 107774.4 current ops/sec; est completion in 19 minutes [INSERT: Count=1077745, Max=81023, Min=374, Avg=1853.46, 90=2907, 99=6019, 99.9=11295, 99.99=40191] 
2023-05-04 11:27:47:136 1030 sec: 118746519 operations; 109181.7 current ops/sec; est completion in 18 minutes [INSERT: Count=1091825, Max=20255, Min=448, Avg=1829.38, 90=2823, 99=6107, 99.9=9967, 99.99=14223] 
2023-05-04 11:27:57:136 1040 sec: 119832989 operations; 108647 current ops/sec; est completion in 18 minutes [INSERT: Count=1086457, Max=65343, Min=427, Avg=1838.52, 90=2881, 99=5519, 99.9=10663, 99.99=43583] 
2023-05-04 11:28:07:136 1050 sec: 120899356 operations; 106636.7 current ops/sec; est completion in 18 minutes [INSERT: Count=1066367, Max=73791, Min=471, Avg=1873.21, 90=2923, 99=6411, 99.9=17423, 99.99=38047] 
2023-05-04 11:28:17:136 1060 sec: 121998170 operations; 109881.4 current ops/sec; est completion in 18 minutes [INSERT: Count=1098810, Max=28543, Min=413, Avg=1817.83, 90=2759, 99=5863, 99.9=11967, 99.99=21279] 
2023-05-04 11:28:27:136 1070 sec: 123074816 operations; 107664.6 current ops/sec; est completion in 18 minutes [INSERT: Count=1076649, Max=51199, Min=461, Avg=1855.3, 90=2931, 99=5895, 99.9=9951, 99.99=33887] 
2023-05-04 11:28:37:136 1080 sec: 124143830 operations; 106901.4 current ops/sec; est completion in 18 minutes [INSERT: Count=1069016, Max=65439, Min=426, Avg=1868.5, 90=2949, 99=6235, 99.9=12159, 99.99=40927] 
2023-05-04 11:28:47:136 1090 sec: 125238294 operations; 109446.4 current ops/sec; est completion in 18 minutes [INSERT: Count=1094458, Max=69439, Min=458, Avg=1824.98, 90=2795, 99=5931, 99.9=10831, 99.99=27599] 
2023-05-04 11:28:57:136 1100 sec: 126321131 operations; 108283.7 current ops/sec; est completion in 17 minutes [INSERT: Count=1082842, Max=50303, Min=384, Avg=1844.72, 90=2905, 99=5603, 99.9=10311, 99.99=32255] 
2023-05-04 11:29:07:136 1110 sec: 127371555 operations; 105042.4 current ops/sec; est completion in 17 minutes [INSERT: Count=1050427, Max=80511, Min=453, Avg=1901.67, 90=2979, 99=6775, 99.9=20623, 99.99=40543] 
2023-05-04 11:29:17:136 1120 sec: 128467131 operations; 109557.6 current ops/sec; est completion in 17 minutes [INSERT: Count=1095568, Max=23615, Min=381, Avg=1823.19, 90=2795, 99=6059, 99.9=10079, 99.99=14447] 
2023-05-04 11:29:27:136 1130 sec: 129540310 operations; 107317.9 current ops/sec; est completion in 17 minutes [INSERT: Count=1073181, Max=71999, Min=412, Avg=1861.25, 90=2891, 99=6011, 99.9=13055, 99.99=41439] 
2023-05-04 11:29:37:136 1140 sec: 130612953 operations; 107264.3 current ops/sec; est completion in 17 minutes [INSERT: Count=1072651, Max=54751, Min=445, Avg=1862.22, 90=2957, 99=6075, 99.9=10591, 99.99=34111] 
2023-05-04 11:29:47:136 1150 sec: 131703828 operations; 109087.5 current ops/sec; est completion in 17 minutes [INSERT: Count=1090869, Max=82751, Min=469, Avg=1831.06, 90=2811, 99=5827, 99.9=11487, 99.99=33919] 
2023-05-04 11:29:57:136 1160 sec: 132777490 operations; 107366.2 current ops/sec; est completion in 17 minutes [INSERT: Count=1073661, Max=59967, Min=409, Avg=1860.43, 90=2905, 99=6063, 99.9=11135, 99.99=32511] 
2023-05-04 11:30:07:136 1170 sec: 133829961 operations; 105247.1 current ops/sec; est completion in 16 minutes [INSERT: Count=1052467, Max=73919, Min=436, Avg=1898.02, 90=3049, 99=6471, 99.9=14487, 99.99=37343] 
2023-05-04 11:30:17:136 1180 sec: 134922150 operations; 109218.9 current ops/sec; est completion in 16 minutes [INSERT: Count=1092184, Max=21327, Min=418, Avg=1828.8, 90=2897, 99=5715, 99.9=9375, 99.99=12023] 
2023-05-04 11:30:27:136 1190 sec: 136001538 operations; 107938.8 current ops/sec; est completion in 16 minutes [INSERT: Count=1079406, Max=58655, Min=365, Avg=1850.57, 90=2895, 99=5859, 99.9=11167, 99.99=39615] 
2023-05-04 11:30:37:136 1200 sec: 137059555 operations; 105801.7 current ops/sec; est completion in 16 minutes [INSERT: Count=1058019, Max=56415, Min=379, Avg=1888.01, 90=3011, 99=6395, 99.9=14303, 99.99=36447] 
2023-05-04 11:30:47:136 1210 sec: 138141482 operations; 108192.7 current ops/sec; est completion in 16 minutes [INSERT: Count=1081944, Max=22943, Min=440, Avg=1846.22, 90=2943, 99=5851, 99.9=10063, 99.99=14895] 
2023-05-04 11:30:57:136 1220 sec: 139211138 operations; 106965.6 current ops/sec; est completion in 16 minutes [INSERT: Count=1069635, Max=53439, Min=404, Avg=1867.42, 90=2931, 99=6123, 99.9=10639, 99.99=33567] 
2023-05-04 11:31:07:136 1230 sec: 140285027 operations; 107388.9 current ops/sec; est completion in 16 minutes [INSERT: Count=1073888, Max=65439, Min=392, Avg=1860.02, 90=2931, 99=5899, 99.9=11263, 99.99=44095] 
2023-05-04 11:31:17:136 1240 sec: 141354821 operations; 106979.4 current ops/sec; est completion in 15 minutes [INSERT: Count=1069795, Max=27023, Min=380, Avg=1867.16, 90=2995, 99=6183, 99.9=10183, 99.99=14119] 
2023-05-04 11:31:27:136 1250 sec: 142388235 operations; 103341.4 current ops/sec; est completion in 15 minutes [INSERT: Count=1033410, Max=110079, Min=446, Avg=1933.01, 90=2849, 99=7059, 99.9=32015, 99.99=58367] 
2023-05-04 11:31:37:136 1260 sec: 143462832 operations; 107459.7 current ops/sec; est completion in 15 minutes [INSERT: Count=1074590, Max=56863, Min=424, Avg=1858.8, 90=2925, 99=5763, 99.9=10871, 99.99=54047] 
2023-05-04 11:31:47:136 1270 sec: 144539155 operations; 107632.3 current ops/sec; est completion in 15 minutes [INSERT: Count=1076323, Max=15879, Min=390, Avg=1855.88, 90=2981, 99=5947, 99.9=9151, 99.99=11951] 
2023-05-04 11:31:57:136 1280 sec: 145591625 operations; 105247 current ops/sec; est completion in 15 minutes [INSERT: Count=1052481, Max=68735, Min=394, Avg=1898.03, 90=2985, 99=6659, 99.9=12007, 99.99=40639] 
2023-05-04 11:32:07:136 1290 sec: 146631419 operations; 103979.4 current ops/sec; est completion in 15 minutes [INSERT: Count=1039797, Max=120255, Min=262, Avg=1921.16, 90=2763, 99=6803, 99.9=37055, 99.99=58463] 
2023-05-04 11:32:17:136 1300 sec: 147706933 operations; 107551.4 current ops/sec; est completion in 15 minutes [INSERT: Count=1075503, Max=26175, Min=364, Avg=1857.22, 90=2959, 99=6051, 99.9=9631, 99.99=16151] 
2023-05-04 11:32:27:136 1310 sec: 148782091 operations; 107515.8 current ops/sec; est completion in 14 minutes [INSERT: Count=1075166, Max=58015, Min=382, Avg=1857.92, 90=2887, 99=6119, 99.9=10663, 99.99=29983] 
2023-05-04 11:32:37:136 1320 sec: 149840093 operations; 105800.2 current ops/sec; est completion in 14 minutes [INSERT: Count=1058007, Max=52863, Min=455, Avg=1887.99, 90=2947, 99=6155, 99.9=20655, 99.99=32047] 
2023-05-04 11:32:47:136 1330 sec: 150914005 operations; 107391.2 current ops/sec; est completion in 14 minutes [INSERT: Count=1073922, Max=28559, Min=471, Avg=1860.09, 90=2995, 99=6043, 99.9=9535, 99.99=15671] 
2023-05-04 11:32:57:136 1340 sec: 151990580 operations; 107657.5 current ops/sec; est completion in 14 minutes [INSERT: Count=1076551, Max=56479, Min=392, Avg=1855.45, 90=2915, 99=5987, 99.9=10271, 99.99=33087] 
2023-05-04 11:33:07:136 1350 sec: 153053402 operations; 106282.2 current ops/sec; est completion in 14 minutes [INSERT: Count=1062816, Max=107135, Min=384, Avg=1879.45, 90=2935, 99=6171, 99.9=11911, 99.99=73023] 
2023-05-04 11:33:17:136 1360 sec: 154121297 operations; 106789.5 current ops/sec; est completion in 14 minutes [INSERT: Count=1067901, Max=25135, Min=417, Avg=1870.6, 90=3003, 99=6327, 99.9=10639, 99.99=17519] 
2023-05-04 11:33:27:136 1370 sec: 155186802 operations; 106550.5 current ops/sec; est completion in 13 minutes [INSERT: Count=1065503, Max=52767, Min=428, Avg=1874.61, 90=2923, 99=6447, 99.9=11831, 99.99=30719] 
2023-05-04 11:33:37:136 1380 sec: 156261828 operations; 107502.6 current ops/sec; est completion in 13 minutes [INSERT: Count=1075026, Max=62239, Min=449, Avg=1858.11, 90=2921, 99=5783, 99.9=9959, 99.99=34303] 
2023-05-04 11:33:47:136 1390 sec: 157307634 operations; 104580.6 current ops/sec; est completion in 13 minutes [INSERT: Count=1045808, Max=69631, Min=411, Avg=1910.03, 90=2951, 99=6883, 99.9=20511, 99.99=60767] 
2023-05-04 11:33:57:136 1400 sec: 158381727 operations; 107409.3 current ops/sec; est completion in 13 minutes [INSERT: Count=1074089, Max=54367, Min=465, Avg=1859.86, 90=2911, 99=6191, 99.9=11031, 99.99=33503] 
2023-05-04 11:34:07:136 1410 sec: 159434637 operations; 105291 current ops/sec; est completion in 13 minutes [INSERT: Count=1052911, Max=160383, Min=441, Avg=1897.16, 90=2903, 99=6407, 99.9=20623, 99.99=87039] 
2023-05-04 11:34:17:136 1420 sec: 160511093 operations; 107645.6 current ops/sec; est completion in 13 minutes [INSERT: Count=1076469, Max=31823, Min=434, Avg=1855.66, 90=2953, 99=5987, 99.9=9791, 99.99=14783] 
2023-05-04 11:34:27:136 1430 sec: 161571648 operations; 106055.5 current ops/sec; est completion in 13 minutes [INSERT: Count=1060544, Max=52863, Min=473, Avg=1883.56, 90=3017, 99=6271, 99.9=10927, 99.99=33727] 
2023-05-04 11:34:37:136 1440 sec: 162632977 operations; 106132.9 current ops/sec; est completion in 12 minutes [INSERT: Count=1061331, Max=78911, Min=437, Avg=1882.07, 90=2901, 99=6655, 99.9=13055, 99.99=39103] 
2023-05-04 11:34:47:136 1450 sec: 163717929 operations; 108495.2 current ops/sec; est completion in 12 minutes [INSERT: Count=1084955, Max=27951, Min=427, Avg=1841.14, 90=2877, 99=5963, 99.9=10231, 99.99=19615] 
2023-05-04 11:34:57:136 1460 sec: 164769184 operations; 105125.5 current ops/sec; est completion in 12 minutes [INSERT: Count=1051245, Max=64895, Min=404, Avg=1900.16, 90=3021, 99=6627, 99.9=12823, 99.99=42175] 
2023-05-04 11:35:07:136 1470 sec: 165836545 operations; 106736.1 current ops/sec; est completion in 12 minutes [INSERT: Count=1067363, Max=52927, Min=403, Avg=1871.49, 90=2933, 99=6163, 99.9=11479, 99.99=32047] 
2023-05-04 11:35:17:143 1480 sec: 166907109 operations; 106992.2 current ops/sec; est completion in 12 minutes [INSERT: Count=1070585, Max=20991, Min=423, Avg=1866.29, 90=2933, 99=6327, 99.9=11495, 99.99=17055] 
2023-05-04 11:35:27:136 1490 sec: 167969740 operations; 106326.9 current ops/sec; est completion in 12 minutes [INSERT: Count=1062618, Max=64351, Min=478, Avg=1879.43, 90=2865, 99=6163, 99.9=24815, 99.99=41183] 
2023-05-04 11:35:37:136 1500 sec: 169012729 operations; 104298.9 current ops/sec; est completion in 11 minutes [INSERT: Count=1042987, Max=83391, Min=366, Avg=1915.21, 90=2979, 99=6895, 99.9=15639, 99.99=49055] 
2023-05-04 11:35:47:136 1510 sec: 170087392 operations; 107466.3 current ops/sec; est completion in 11 minutes [INSERT: Count=1074671, Max=33599, Min=476, Avg=1858.78, 90=2873, 99=6291, 99.9=10903, 99.99=24911] 
2023-05-04 11:35:57:136 1520 sec: 171150829 operations; 106343.7 current ops/sec; est completion in 11 minutes [INSERT: Count=1063421, Max=60159, Min=410, Avg=1878.37, 90=2931, 99=6359, 99.9=16279, 99.99=40767] 
2023-05-04 11:36:07:136 1530 sec: 172165807 operations; 101497.8 current ops/sec; est completion in 11 minutes [INSERT: Count=1014988, Max=73023, Min=376, Avg=1968.2, 90=2661, 99=8115, 99.9=46111, 99.99=59007] 
2023-05-04 11:36:17:136 1540 sec: 173229114 operations; 106330.7 current ops/sec; est completion in 11 minutes [INSERT: Count=1063307, Max=29727, Min=427, Avg=1878.59, 90=2945, 99=6571, 99.9=11567, 99.99=22639] 
2023-05-04 11:36:27:136 1550 sec: 174230556 operations; 100144.2 current ops/sec; est completion in 11 minutes [INSERT: Count=1001437, Max=134527, Min=426, Avg=1994.81, 90=2577, 99=7927, 99.9=60095, 99.99=90495] 
2023-05-04 11:36:37:136 1560 sec: 175272830 operations; 104227.4 current ops/sec; est completion in 11 minutes [INSERT: Count=1042286, Max=66239, Min=471, Avg=1916.55, 90=2777, 99=6543, 99.9=44863, 99.99=56415] 
2023-05-04 11:36:47:136 1570 sec: 176297147 operations; 102431.7 current ops/sec; est completion in 10 minutes [INSERT: Count=1024298, Max=67711, Min=428, Avg=1950.25, 90=2543, 99=7971, 99.9=48671, 99.99=60703] 
2023-05-04 11:36:57:136 1580 sec: 177372250 operations; 107510.3 current ops/sec; est completion in 10 minutes [INSERT: Count=1075104, Max=61823, Min=418, Avg=1856.42, 90=2905, 99=5995, 99.9=12567, 99.99=37535] 
2023-05-04 11:37:07:136 1590 sec: 178377405 operations; 100515.5 current ops/sec; est completion in 10 minutes [INSERT: Count=1005170, Max=108223, Min=373, Avg=1989.16, 90=2625, 99=7195, 99.9=59263, 99.99=82239] 
2023-05-04 11:37:17:136 1600 sec: 179443863 operations; 106645.8 current ops/sec; est completion in 10 minutes [INSERT: Count=1066463, Max=45343, Min=395, Avg=1872.92, 90=2817, 99=6455, 99.9=22111, 99.99=35935] 
2023-05-04 11:37:27:136 1610 sec: 180473945 operations; 103008.2 current ops/sec; est completion in 10 minutes [INSERT: Count=1030073, Max=130111, Min=415, Avg=1939.38, 90=2695, 99=6347, 99.9=48639, 99.99=64351] 
2023-05-04 11:37:37:136 1620 sec: 181519373 operations; 104542.8 current ops/sec; est completion in 10 minutes [INSERT: Count=1045426, Max=119039, Min=438, Avg=1909.07, 90=2877, 99=6787, 99.9=27327, 99.99=70207] 
2023-05-04 11:37:47:136 1630 sec: 182565864 operations; 104649.1 current ops/sec; est completion in 10 minutes [INSERT: Count=1046491, Max=83647, Min=454, Avg=1910.48, 90=2813, 99=6647, 99.9=33183, 99.99=50943] 
2023-05-04 11:37:57:136 1640 sec: 183631762 operations; 106589.8 current ops/sec; est completion in 9 minutes [INSERT: Count=1065897, Max=53567, Min=414, Avg=1874.1, 90=2805, 99=6019, 99.9=26943, 99.99=40863] 
2023-05-04 11:38:07:136 1650 sec: 184676378 operations; 104461.6 current ops/sec; est completion in 9 minutes [INSERT: Count=1044618, Max=130303, Min=387, Avg=1912.25, 90=2965, 99=6535, 99.9=25183, 99.99=83071] 
2023-05-04 11:38:17:136 1660 sec: 185699125 operations; 102274.7 current ops/sec; est completion in 9 minutes [INSERT: Count=1022746, Max=76415, Min=375, Avg=1953.31, 90=2781, 99=6807, 99.9=41151, 99.99=60351] 
2023-05-04 11:38:27:136 1670 sec: 186754706 operations; 105558.1 current ops/sec; est completion in 9 minutes [INSERT: Count=1055592, Max=56543, Min=441, Avg=1892.31, 90=2731, 99=7059, 99.9=30095, 99.99=41087] 
2023-05-04 11:38:37:136 1680 sec: 187817297 operations; 106259.1 current ops/sec; est completion in 9 minutes [INSERT: Count=1062582, Max=71551, Min=457, Avg=1879.51, 90=2967, 99=6043, 99.9=14975, 99.99=55935] 
2023-05-04 11:38:47:136 1690 sec: 188817134 operations; 99983.7 current ops/sec; est completion in 9 minutes [INSERT: Count=999830, Max=105599, Min=404, Avg=1998.49, 90=2701, 99=7971, 99.9=56159, 99.99=90879] 
2023-05-04 11:38:57:136 1700 sec: 189865900 operations; 104876.6 current ops/sec; est completion in 8 minutes [INSERT: Count=1048766, Max=56447, Min=426, Avg=1903.47, 90=2729, 99=7199, 99.9=36415, 99.99=50719] 
2023-05-04 11:39:07:136 1710 sec: 190901121 operations; 103522.1 current ops/sec; est completion in 8 minutes [INSERT: Count=1035221, Max=70335, Min=438, Avg=1930.8, 90=2753, 99=6743, 99.9=50655, 99.99=61247] 
2023-05-04 11:39:17:136 1720 sec: 191963297 operations; 106217.6 current ops/sec; est completion in 8 minutes [INSERT: Count=1062181, Max=41695, Min=436, Avg=1880.05, 90=2873, 99=6423, 99.9=25871, 99.99=35583] 
2023-05-04 11:39:27:136 1730 sec: 193008091 operations; 104479.4 current ops/sec; est completion in 8 minutes [INSERT: Count=1044791, Max=50687, Min=448, Avg=1912.57, 90=2839, 99=7415, 99.9=27375, 99.99=38111] 
2023-05-04 11:39:37:136 1740 sec: 194052681 operations; 104459 current ops/sec; est completion in 8 minutes [INSERT: Count=1044580, Max=63391, Min=471, Avg=1912.3, 90=2689, 99=6495, 99.9=41503, 99.99=52255] 
2023-05-04 11:39:47:136 1750 sec: 195125735 operations; 107305.4 current ops/sec; est completion in 8 minutes [INSERT: Count=1073071, Max=33247, Min=404, Avg=1861.06, 90=2987, 99=5951, 99.9=10703, 99.99=20111] 
2023-05-04 11:39:57:137 1760 sec: 196146441 operations; 102060.39 current ops/sec; est completion in 8 minutes [INSERT: Count=1020715, Max=56319, Min=444, Avg=1957.08, 90=2805, 99=7719, 99.9=36127, 99.99=47807] 
2023-05-04 11:40:07:136 1770 sec: 197170943 operations; 102460.45 current ops/sec; est completion in 7 minutes [INSERT: Count=1024488, Max=112383, Min=428, Avg=1950.49, 90=2691, 99=8399, 99.9=40127, 99.99=61471] 
2023-05-04 11:40:17:136 1780 sec: 198256881 operations; 108593.8 current ops/sec; est completion in 7 minutes [INSERT: Count=1085931, Max=21295, Min=382, Avg=1839.44, 90=2951, 99=5595, 99.9=9215, 99.99=12951] 
2023-05-04 11:40:27:136 1790 sec: 199280012 operations; 102313.1 current ops/sec; est completion in 7 minutes [INSERT: Count=1023131, Max=92991, Min=416, Avg=1951.82, 90=2879, 99=7167, 99.9=35423, 99.99=48255] 
2023-05-04 11:40:37:136 1800 sec: 200300946 operations; 102093.4 current ops/sec; est completion in 7 minutes [INSERT: Count=1020946, Max=62783, Min=396, Avg=1957.41, 90=2785, 99=7803, 99.9=42175, 99.99=52191] 
2023-05-04 11:40:47:136 1810 sec: 201371132 operations; 107018.6 current ops/sec; est completion in 7 minutes [INSERT: Count=1070196, Max=36607, Min=430, Avg=1866.49, 90=2905, 99=5831, 99.9=22015, 99.99=29823] 
2023-05-04 11:40:57:136 1820 sec: 202406632 operations; 103550 current ops/sec; est completion in 7 minutes [INSERT: Count=1035482, Max=58975, Min=414, Avg=1929.09, 90=2925, 99=7003, 99.9=31247, 99.99=45215] 
2023-05-04 11:41:07:136 1830 sec: 203416715 operations; 101008.3 current ops/sec; est completion in 7 minutes [INSERT: Count=1010091, Max=140799, Min=443, Avg=1977.85, 90=2865, 99=8447, 99.9=33343, 99.99=59967] 
2023-05-04 11:41:17:136 1840 sec: 204462961 operations; 104624.6 current ops/sec; est completion in 6 minutes [INSERT: Count=1046242, Max=44543, Min=374, Avg=1909.29, 90=2863, 99=6331, 99.9=30175, 99.99=37055] 
2023-05-04 11:41:27:136 1850 sec: 205480875 operations; 101791.4 current ops/sec; est completion in 6 minutes [INSERT: Count=1017915, Max=84863, Min=426, Avg=1962.47, 90=2779, 99=6823, 99.9=50143, 99.99=76287] 
2023-05-04 11:41:37:136 1860 sec: 206515032 operations; 103415.7 current ops/sec; est completion in 6 minutes [INSERT: Count=1034158, Max=56927, Min=436, Avg=1931.5, 90=2955, 99=7099, 99.9=27215, 99.99=48351] 
2023-05-04 11:41:47:136 1870 sec: 207543603 operations; 102857.1 current ops/sec; est completion in 6 minutes [INSERT: Count=1028561, Max=47295, Min=405, Avg=1942.36, 90=2839, 99=8183, 99.9=27487, 99.99=38015] 
2023-05-04 11:41:57:136 1880 sec: 208584581 operations; 104097.8 current ops/sec; est completion in 6 minutes [INSERT: Count=1040976, Max=117695, Min=437, Avg=1918.96, 90=2789, 99=6795, 99.9=34943, 99.99=62431] 
2023-05-04 11:42:07:136 1890 sec: 209646024 operations; 106144.3 current ops/sec; est completion in 6 minutes [INSERT: Count=1061455, Max=71231, Min=442, Avg=1881.84, 90=2941, 99=6255, 99.9=20303, 99.99=39551] 
2023-05-04 11:42:17:136 1900 sec: 210653841 operations; 100781.7 current ops/sec; est completion in 5 minutes [INSERT: Count=1007806, Max=52319, Min=409, Avg=1981.66, 90=2869, 99=8751, 99.9=34367, 99.99=43295] 
2023-05-04 11:42:27:136 1910 sec: 211696604 operations; 104276.3 current ops/sec; est completion in 5 minutes [INSERT: Count=1042766, Max=78527, Min=438, Avg=1916.24, 90=2763, 99=6775, 99.9=35903, 99.99=64991] 
2023-05-04 11:42:37:136 1920 sec: 212761324 operations; 106472 current ops/sec; est completion in 5 minutes [INSERT: Count=1064718, Max=49951, Min=438, Avg=1876.07, 90=2917, 99=6151, 99.9=20015, 99.99=30943] 
2023-05-04 11:42:47:136 1930 sec: 213788944 operations; 102762 current ops/sec; est completion in 5 minutes [INSERT: Count=1027617, Max=50591, Min=405, Avg=1943.33, 90=2931, 99=6983, 99.9=33695, 99.99=44479] 
2023-05-04 11:42:57:136 1940 sec: 214834396 operations; 104545.2 current ops/sec; est completion in 5 minutes [INSERT: Count=1045465, Max=51167, Min=423, Avg=1910.9, 90=2825, 99=7179, 99.9=26479, 99.99=35711] 
2023-05-04 11:43:07:136 1950 sec: 215899477 operations; 106508.1 current ops/sec; est completion in 5 minutes [INSERT: Count=1065076, Max=81407, Min=409, Avg=1875.99, 90=2905, 99=5987, 99.9=21231, 99.99=40799] 
2023-05-04 11:43:17:136 1960 sec: 216933307 operations; 103383 current ops/sec; est completion in 4 minutes [INSERT: Count=1033826, Max=47679, Min=409, Avg=1932.13, 90=2927, 99=6659, 99.9=33503, 99.99=41759] 
2023-05-04 11:43:27:136 1970 sec: 217972624 operations; 103931.7 current ops/sec; est completion in 4 minutes [INSERT: Count=1039318, Max=57791, Min=407, Avg=1921.34, 90=2827, 99=7655, 99.9=28527, 99.99=39071] 
2023-05-04 11:43:37:136 1980 sec: 219021507 operations; 104888.3 current ops/sec; est completion in 4 minutes [INSERT: Count=1048889, Max=171391, Min=366, Avg=1905.29, 90=2851, 99=6351, 99.9=25039, 99.99=68159] 
2023-05-04 11:43:47:136 1990 sec: 220031760 operations; 101025.3 current ops/sec; est completion in 4 minutes [INSERT: Count=1010256, Max=53951, Min=454, Avg=1977.19, 90=2881, 99=8223, 99.9=38815, 99.99=47135] 
2023-05-04 11:43:57:136 2000 sec: 221070463 operations; 103870.3 current ops/sec; est completion in 4 minutes [INSERT: Count=1038702, Max=48863, Min=415, Avg=1923.37, 90=2931, 99=6939, 99.9=25519, 99.99=38623] 
2023-05-04 11:44:07:136 2010 sec: 222109901 operations; 103943.8 current ops/sec; est completion in 4 minutes [INSERT: Count=1039436, Max=108351, Min=410, Avg=1921.87, 90=2697, 99=7339, 99.9=36959, 99.99=48127] 
2023-05-04 11:44:17:136 2020 sec: 223151078 operations; 104117.7 current ops/sec; est completion in 4 minutes [INSERT: Count=1041184, Max=42751, Min=413, Avg=1918.11, 90=2987, 99=6719, 99.9=26239, 99.99=38207] 
2023-05-04 11:44:27:136 2030 sec: 224192800 operations; 104172.2 current ops/sec; est completion in 3 minutes [INSERT: Count=1041719, Max=47935, Min=398, Avg=1918.06, 90=3007, 99=6523, 99.9=23471, 99.99=35679] 
2023-05-04 11:44:37:136 2040 sec: 225230807 operations; 103800.7 current ops/sec; est completion in 3 minutes [INSERT: Count=1037996, Max=54271, Min=470, Avg=1924.44, 90=2821, 99=7075, 99.9=30575, 99.99=44415] 
2023-05-04 11:44:47:136 2050 sec: 226285396 operations; 105458.9 current ops/sec; est completion in 3 minutes [INSERT: Count=1054598, Max=36031, Min=406, Avg=1894.13, 90=3037, 99=6375, 99.9=16703, 99.99=25551] 
2023-05-04 11:44:57:136 2060 sec: 227332178 operations; 104678.2 current ops/sec; est completion in 3 minutes [INSERT: Count=1046768, Max=58943, Min=439, Avg=1908.41, 90=2967, 99=6439, 99.9=23103, 99.99=38047] 
2023-05-04 11:45:07:136 2070 sec: 228365048 operations; 103287 current ops/sec; est completion in 3 minutes [INSERT: Count=1032872, Max=94207, Min=420, Avg=1934.02, 90=2821, 99=7087, 99.9=30543, 99.99=52415] 
2023-05-04 11:45:17:141 2080 sec: 229425994 operations; 106041.58 current ops/sec; est completion in 3 minutes [INSERT: Count=1060971, Max=34367, Min=455, Avg=1882.57, 90=3011, 99=5991, 99.9=16295, 99.99=25695] 
2023-05-04 11:45:27:136 2090 sec: 230472740 operations; 104726.96 current ops/sec; est completion in 2 minutes [INSERT: Count=1046729, Max=54975, Min=398, Avg=1908.63, 90=2945, 99=6627, 99.9=22607, 99.99=33215] 
2023-05-04 11:45:37:136 2100 sec: 231497036 operations; 102429.6 current ops/sec; est completion in 2 minutes [INSERT: Count=1024300, Max=58175, Min=399, Avg=1950.31, 90=2817, 99=6899, 99.9=44959, 99.99=52991] 
2023-05-04 11:45:47:136 2110 sec: 232560020 operations; 106298.4 current ops/sec; est completion in 2 minutes [INSERT: Count=1062998, Max=36255, Min=405, Avg=1879.22, 90=2985, 99=5851, 99.9=18639, 99.99=26895] 
2023-05-04 11:45:57:136 2120 sec: 233595676 operations; 103565.6 current ops/sec; est completion in 2 minutes [INSERT: Count=1035635, Max=54111, Min=386, Avg=1928.47, 90=2851, 99=7455, 99.9=26623, 99.99=40127] 
2023-05-04 11:46:07:136 2130 sec: 234620737 operations; 102506.1 current ops/sec; est completion in 2 minutes [INSERT: Count=1025065, Max=91391, Min=448, Avg=1948.86, 90=2847, 99=6799, 99.9=51199, 99.99=75903] 
2023-05-04 11:46:17:136 2140 sec: 235667809 operations; 104707.2 current ops/sec; est completion in 2 minutes [INSERT: Count=1047072, Max=56863, Min=453, Avg=1908.08, 90=2827, 99=6359, 99.9=33727, 99.99=48831] 
2023-05-04 11:46:27:136 2150 sec: 236694680 operations; 102687.1 current ops/sec; est completion in 2 minutes [INSERT: Count=1026869, Max=57279, Min=403, Avg=1945.44, 90=2841, 99=9111, 99.9=26591, 99.99=35551] 
2023-05-04 11:46:37:136 2160 sec: 237753775 operations; 105909.5 current ops/sec; est completion in 1 minute [INSERT: Count=1059099, Max=97919, Min=391, Avg=1886.16, 90=2987, 99=6251, 99.9=14703, 99.99=48863] 
2023-05-04 11:46:47:136 2170 sec: 238813926 operations; 106015.1 current ops/sec; est completion in 1 minute [INSERT: Count=1060145, Max=38335, Min=352, Avg=1884.17, 90=2855, 99=6151, 99.9=23247, 99.99=31359] 
2023-05-04 11:46:57:136 2180 sec: 239849690 operations; 103576.4 current ops/sec; est completion in 1 minute [INSERT: Count=1035762, Max=62559, Min=442, Avg=1928.74, 90=2849, 99=7967, 99.9=26415, 99.99=37567] 
2023-05-04 11:47:07:136 2190 sec: 240916714 operations; 106702.4 current ops/sec; est completion in 1 minute [INSERT: Count=1067029, Max=107263, Min=429, Avg=1872.01, 90=2977, 99=5711, 99.9=12271, 99.99=64575] 
2023-05-04 11:47:17:136 2200 sec: 241981524 operations; 106481 current ops/sec; est completion in 1 minute [INSERT: Count=1064803, Max=40031, Min=413, Avg=1876.02, 90=2857, 99=6027, 99.9=22671, 99.99=30015] 
2023-05-04 11:47:27:136 2210 sec: 243023858 operations; 104233.4 current ops/sec; est completion in 1 minute [INSERT: Count=1042341, Max=62463, Min=385, Avg=1916.46, 90=2841, 99=7527, 99.9=25855, 99.99=39103] 
2023-05-04 11:47:37:136 2220 sec: 244091820 operations; 106796.2 current ops/sec; est completion in 54 seconds [INSERT: Count=1067971, Max=54655, Min=433, Avg=1870.38, 90=3031, 99=5691, 99.9=10839, 99.99=33023] 
2023-05-04 11:47:47:136 2230 sec: 245137996 operations; 104617.6 current ops/sec; est completion in 45 seconds [INSERT: Count=1046182, Max=51167, Min=393, Avg=1909.31, 90=2909, 99=6867, 99.9=23487, 99.99=41247] 
2023-05-04 11:47:57:136 2240 sec: 246171489 operations; 103349.3 current ops/sec; est completion in 35 seconds [INSERT: Count=1033480, Max=54271, Min=408, Avg=1933.1, 90=2829, 99=7895, 99.9=31215, 99.99=40607] 
2023-05-04 11:48:07:136 2250 sec: 247237377 operations; 106588.8 current ops/sec; est completion in 26 seconds [INSERT: Count=1065883, Max=218751, Min=357, Avg=1874.12, 90=2971, 99=5551, 99.9=10359, 99.99=141567] 
2023-05-04 11:48:17:136 2260 sec: 248320880 operations; 108350.3 current ops/sec; est completion in 16 seconds [INSERT: Count=1083507, Max=43519, Min=438, Avg=1843.58, 90=2499, 99=7215, 99.9=26751, 99.99=35487] 
2023-05-04 11:48:27:136 2270 sec: 249641649 operations; 132076.9 current ops/sec; est completion in 4 second [INSERT: Count=1320771, Max=44415, Min=341, Avg=1511.76, 90=1909, 99=2791, 99.9=8903, 99.99=24303] 
2023-05-04 11:48:34:703 2277 sec: 250000000 operations; 47363.34 current ops/sec; [CLEANUP: Count=200, Max=2220031, Min=0, Avg=11096.69, 90=3, 99=9, 99.9=2220031, 99.99=2220031] [INSERT: Count=358332, Max=16055, Min=232, Avg=1397.92, 90=1835, 99=2109, 99.9=8903, 99.99=12167] 
[OVERALL], RunTime(ms), 2277566
[OVERALL], Throughput(ops/sec), 109766.30314994165
[TOTAL_GCS_PS_Scavenge], Count, 4671
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 23863
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.047741316826823
[TOTAL_GCS_PS_MarkSweep], Count, 5
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 218
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.00957162163467491
[TOTAL_GCs], Count, 4676
[TOTAL_GC_TIME], Time(ms), 24081
[TOTAL_GC_TIME_%], Time(%), 1.0573129384614979
[CLEANUP], Operations, 200
[CLEANUP], AverageLatency(us), 11096.69
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2220031
[CLEANUP], 95thPercentileLatency(us), 3
[CLEANUP], 99thPercentileLatency(us), 9
[INSERT], Operations, 250000000
[INSERT], AverageLatency(us), 1815.084127068
[INSERT], MinLatency(us), 215
[INSERT], MaxLatency(us), 705023
[INSERT], 95thPercentileLatency(us), 3565
[INSERT], 99thPercentileLatency(us), 5879
[INSERT], Return=OK, 250000000
