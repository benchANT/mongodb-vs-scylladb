bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=35.80.102.45,52.42.225.54,52.41.60.106 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=AH9zrN0p3Eutoxv -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 200 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=750000000 -p insertcount=250000000
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.80.102.45,52.42.225.54,52.41.60.106 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=AH9zrN0p3Eutoxv -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 200 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=750000000 -p insertcount=250000000 -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.80.102.45,52.42.225.54,52.41.60.106 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=AH9zrN0p3Eutoxv -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 200 -p recordcount=1000000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=hotspot -p hotspotdatafraction=0.013 -p hotspotopnfraction=0.95 -p insertorder=ordered -p readproportion=0.95 -p updateproportion=0.05 -p insertproportion=0.0 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=750000000 -p insertcount=250000000 -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
Starting test.
[Thread-9] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
[Thread-9] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
2023-05-04 11:10:39:670 0 sec: 0 operations; est completion in 0 second 
[Thread-9] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-9] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-9] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-9] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.42.225.54:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.41.60.106:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.188.164.221:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.80.102.45:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.13.155.228:9042 added
[Thread-9] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.229.236.137:9042 added
[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 638c151f-15f6-4914-a385-dddfb9970225

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.42.225.54; Rack: us-west-2a

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /54.188.164.221; Rack: us-west-2a

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.41.60.106; Rack: us-west-2c

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.13.155.228; Rack: us-west-2b

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.229.236.137; Rack: us-west-2b

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.80.102.45; Rack: us-west-2c

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-9] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-05-04 11:10:49:651 10 sec: 1248126 operations; 124812.6 current ops/sec; est completion in 33 minutes [INSERT: Count=1248222, Max=97279, Min=212, Avg=1479.32, 90=2012, 99=9607, 99.9=29135, 99.99=78399] 
2023-05-04 11:10:59:651 20 sec: 2943253 operations; 169512.7 current ops/sec; est completion in 27 minutes [INSERT: Count=1695123, Max=34559, Min=195, Avg=1177.33, 90=1669, 99=2733, 99.9=10351, 99.99=32079] 
2023-05-04 11:11:09:651 30 sec: 4414815 operations; 147156.2 current ops/sec; est completion in 27 minutes [INSERT: Count=1471532, Max=30975, Min=192, Avg=1356.52, 90=1894, 99=2697, 99.9=9479, 99.99=20863] 
2023-05-04 11:11:19:651 40 sec: 5795640 operations; 138082.5 current ops/sec; est completion in 28 minutes [INSERT: Count=1380853, Max=18703, Min=214, Avg=1445.92, 90=1960, 99=2939, 99.9=9127, 99.99=12343] 
2023-05-04 11:11:29:652 50 sec: 7253629 operations; 145798.9 current ops/sec; est completion in 27 minutes [INSERT: Count=1458020, Max=41663, Min=193, Avg=1369.27, 90=1886, 99=2923, 99.9=13463, 99.99=24959] 
2023-05-04 11:11:39:651 60 sec: 8551929 operations; 129830 current ops/sec; est completion in 28 minutes [INSERT: Count=1298234, Max=37343, Min=215, Avg=1538.01, 90=1951, 99=3019, 99.9=9695, 99.99=25791] 
2023-05-04 11:11:49:651 70 sec: 9891253 operations; 133932.4 current ops/sec; est completion in 28 minutes [INSERT: Count=1339312, Max=15055, Min=235, Avg=1490.83, 90=1909, 99=2695, 99.9=9063, 99.99=11447] 
2023-05-04 11:11:59:651 80 sec: 11214000 operations; 132274.7 current ops/sec; est completion in 28 minutes [INSERT: Count=1322745, Max=33375, Min=356, Avg=1509.53, 90=1923, 99=2859, 99.9=9263, 99.99=22047] 
2023-05-04 11:12:09:651 90 sec: 12541810 operations; 132781 current ops/sec; est completion in 28 minutes [INSERT: Count=1327865, Max=38335, Min=233, Avg=1503.79, 90=1937, 99=2979, 99.9=8919, 99.99=20831] 
2023-05-04 11:12:19:651 100 sec: 13837364 operations; 129555.4 current ops/sec; est completion in 28 minutes [INSERT: Count=1295519, Max=34655, Min=311, Avg=1541.28, 90=1979, 99=4759, 99.9=15687, 99.99=24687] 
2023-05-04 11:12:29:651 110 sec: 14609495 operations; 77213.1 current ops/sec; est completion in 29 minutes [INSERT: Count=772081, Max=489215, Min=213, Avg=2574.15, 90=2257, 99=28223, 99.9=133759, 99.99=376575] 
2023-05-04 11:12:39:651 120 sec: 15773525 operations; 116403 current ops/sec; est completion in 29 minutes [INSERT: Count=1164063, Max=702975, Min=231, Avg=1724.85, 90=1912, 99=3531, 99.9=46591, 99.99=604159] 
2023-05-04 11:12:49:651 130 sec: 17100154 operations; 132662.9 current ops/sec; est completion in 29 minutes [INSERT: Count=1326638, Max=14599, Min=377, Avg=1505.15, 90=1908, 99=2537, 99.9=8735, 99.99=12855] 
2023-05-04 11:12:59:651 140 sec: 18409270 operations; 130911.6 current ops/sec; est completion in 29 minutes [INSERT: Count=1309122, Max=77439, Min=372, Avg=1525.29, 90=1913, 99=2779, 99.9=10687, 99.99=33119] 
2023-05-04 11:13:09:651 150 sec: 19710603 operations; 130133.3 current ops/sec; est completion in 29 minutes [INSERT: Count=1301337, Max=102655, Min=361, Avg=1534.45, 90=1938, 99=3127, 99.9=9551, 99.99=34111] 
2023-05-04 11:13:19:651 160 sec: 21027318 operations; 131671.5 current ops/sec; est completion in 29 minutes [INSERT: Count=1316711, Max=38239, Min=367, Avg=1516.49, 90=1957, 99=3275, 99.9=8647, 99.99=10783] 
2023-05-04 11:13:29:651 170 sec: 22292100 operations; 126478.2 current ops/sec; est completion in 28 minutes [INSERT: Count=1264779, Max=104959, Min=389, Avg=1578.86, 90=2001, 99=3481, 99.9=10071, 99.99=68159] 
2023-05-04 11:13:39:651 180 sec: 23469844 operations; 117774.4 current ops/sec; est completion in 28 minutes [INSERT: Count=1177783, Max=79615, Min=364, Avg=1695.71, 90=2355, 99=4623, 99.9=10695, 99.99=37471] 
2023-05-04 11:13:49:651 190 sec: 24644012 operations; 117416.8 current ops/sec; est completion in 28 minutes [INSERT: Count=1174126, Max=21247, Min=357, Avg=1700.93, 90=2343, 99=4603, 99.9=10031, 99.99=12879] 
2023-05-04 11:13:59:651 200 sec: 25868593 operations; 122458.1 current ops/sec; est completion in 28 minutes [INSERT: Count=1224588, Max=50847, Min=365, Avg=1630.84, 90=2139, 99=4115, 99.9=10063, 99.99=33727] 
2023-05-04 11:14:09:651 210 sec: 27055361 operations; 118676.8 current ops/sec; est completion in 28 minutes [INSERT: Count=1186765, Max=48831, Min=421, Avg=1682.91, 90=2383, 99=4455, 99.9=9575, 99.99=30207] 
2023-05-04 11:14:19:651 220 sec: 28280552 operations; 122519.1 current ops/sec; est completion in 28 minutes [INSERT: Count=1225207, Max=17807, Min=435, Avg=1630, 90=2089, 99=4131, 99.9=8679, 99.99=11895] 
2023-05-04 11:14:29:651 230 sec: 29493265 operations; 121271.3 current ops/sec; est completion in 28 minutes [INSERT: Count=1212697, Max=57375, Min=371, Avg=1646.8, 90=2175, 99=4367, 99.9=11503, 99.99=27823] 
2023-05-04 11:14:39:651 240 sec: 30683938 operations; 119067.3 current ops/sec; est completion in 28 minutes [INSERT: Count=1190669, Max=45887, Min=409, Avg=1677.39, 90=2291, 99=4515, 99.9=9311, 99.99=26047] 
2023-05-04 11:14:49:651 250 sec: 31888467 operations; 120452.9 current ops/sec; est completion in 28 minutes [INSERT: Count=1204556, Max=24095, Min=422, Avg=1657.96, 90=2125, 99=4791, 99.9=8983, 99.99=12511] 
2023-05-04 11:14:59:651 260 sec: 33080311 operations; 119184.4 current ops/sec; est completion in 28 minutes [INSERT: Count=1191802, Max=46047, Min=402, Avg=1675.67, 90=2377, 99=4535, 99.9=9271, 99.99=24991] 
2023-05-04 11:15:09:651 270 sec: 34225978 operations; 114566.7 current ops/sec; est completion in 28 minutes [INSERT: Count=1145687, Max=158463, Min=382, Avg=1743.27, 90=2415, 99=5163, 99.9=10727, 99.99=68799] 
2023-05-04 11:15:19:651 280 sec: 35419675 operations; 119369.7 current ops/sec; est completion in 28 minutes [INSERT: Count=1193695, Max=17583, Min=381, Avg=1672.99, 90=2181, 99=4927, 99.9=9455, 99.99=13343] 
2023-05-04 11:15:29:651 290 sec: 36576051 operations; 115637.6 current ops/sec; est completion in 28 minutes [INSERT: Count=1156363, Max=59391, Min=365, Avg=1727.16, 90=2507, 99=4791, 99.9=10735, 99.99=36735] 
2023-05-04 11:15:39:651 300 sec: 37741780 operations; 116572.9 current ops/sec; est completion in 28 minutes [INSERT: Count=1165730, Max=46335, Min=403, Avg=1713.23, 90=2359, 99=4851, 99.9=9807, 99.99=27215] 
2023-05-04 11:15:49:651 310 sec: 38931662 operations; 118988.2 current ops/sec; est completion in 28 minutes [INSERT: Count=1189886, Max=22527, Min=477, Avg=1678.48, 90=2287, 99=4691, 99.9=8967, 99.99=13863] 
2023-05-04 11:15:59:651 320 sec: 40087941 operations; 115627.9 current ops/sec; est completion in 27 minutes [INSERT: Count=1156273, Max=47839, Min=446, Avg=1727.32, 90=2539, 99=4851, 99.9=8903, 99.99=31567] 
2023-05-04 11:16:09:651 330 sec: 41244525 operations; 115658.4 current ops/sec; est completion in 27 minutes [INSERT: Count=1156569, Max=50175, Min=369, Avg=1726.8, 90=2345, 99=5047, 99.9=11327, 99.99=29983] 
2023-05-04 11:16:19:651 340 sec: 42423482 operations; 117895.7 current ops/sec; est completion in 27 minutes [INSERT: Count=1178963, Max=19775, Min=416, Avg=1694.04, 90=2363, 99=4823, 99.9=8599, 99.99=11463] 
2023-05-04 11:16:29:651 350 sec: 43586364 operations; 116288.2 current ops/sec; est completion in 27 minutes [INSERT: Count=1162872, Max=47647, Min=397, Avg=1717.53, 90=2479, 99=4711, 99.9=10303, 99.99=27439] 
2023-05-04 11:16:39:651 360 sec: 44756466 operations; 117010.2 current ops/sec; est completion in 27 minutes [INSERT: Count=1170102, Max=64639, Min=409, Avg=1706.87, 90=2313, 99=4791, 99.9=9823, 99.99=35583] 
2023-05-04 11:16:49:651 370 sec: 45929864 operations; 117339.8 current ops/sec; est completion in 27 minutes [INSERT: Count=1173420, Max=16895, Min=383, Avg=1702.1, 90=2413, 99=4779, 99.9=9103, 99.99=11839] 
2023-05-04 11:16:59:651 380 sec: 47079170 operations; 114930.6 current ops/sec; est completion in 27 minutes [INSERT: Count=1149306, Max=50399, Min=451, Avg=1737.85, 90=2537, 99=5003, 99.9=9007, 99.99=29119] 
2023-05-04 11:17:09:651 390 sec: 48248398 operations; 116922.8 current ops/sec; est completion in 27 minutes [INSERT: Count=1169246, Max=47231, Min=386, Avg=1708.17, 90=2335, 99=4903, 99.9=8679, 99.99=29455] 
2023-05-04 11:17:19:651 400 sec: 49419217 operations; 117081.9 current ops/sec; est completion in 27 minutes [INSERT: Count=1170797, Max=16991, Min=398, Avg=1705.81, 90=2443, 99=4683, 99.9=9119, 99.99=12391] 
2023-05-04 11:17:29:651 410 sec: 50569886 operations; 115066.9 current ops/sec; est completion in 26 minutes [INSERT: Count=1150664, Max=73919, Min=389, Avg=1735.76, 90=2497, 99=4883, 99.9=11311, 99.99=39615] 
2023-05-04 11:17:39:651 420 sec: 51743137 operations; 117325.1 current ops/sec; est completion in 26 minutes [INSERT: Count=1173259, Max=46623, Min=399, Avg=1702.33, 90=2329, 99=4855, 99.9=9719, 99.99=29199] 
2023-05-04 11:17:49:651 430 sec: 52898706 operations; 115556.9 current ops/sec; est completion in 26 minutes [INSERT: Count=1155560, Max=17103, Min=404, Avg=1728.4, 90=2509, 99=4935, 99.9=9519, 99.99=11919] 
2023-05-04 11:17:59:654 440 sec: 54045792 operations; 114674.2 current ops/sec; est completion in 26 minutes [INSERT: Count=1147114, Max=46175, Min=387, Avg=1741.1, 90=2529, 99=4963, 99.9=10039, 99.99=29295] 
2023-05-04 11:18:09:651 450 sec: 55216794 operations; 117135.34 current ops/sec; est completion in 26 minutes [INSERT: Count=1170968, Max=74175, Min=424, Avg=1705.6, 90=2347, 99=4843, 99.9=10439, 99.99=32799] 
2023-05-04 11:18:19:651 460 sec: 56371008 operations; 115421.4 current ops/sec; est completion in 26 minutes [INSERT: Count=1154221, Max=14447, Min=409, Avg=1730.4, 90=2545, 99=4843, 99.9=8727, 99.99=10903] 
2023-05-04 11:18:29:651 470 sec: 57516878 operations; 114587 current ops/sec; est completion in 26 minutes [INSERT: Count=1145864, Max=56543, Min=380, Avg=1743.07, 90=2529, 99=5015, 99.9=9959, 99.99=33343] 
2023-05-04 11:18:39:651 480 sec: 58677402 operations; 116052.4 current ops/sec; est completion in 26 minutes [INSERT: Count=1160519, Max=51071, Min=358, Avg=1721.01, 90=2405, 99=5215, 99.9=9287, 99.99=29423] 
2023-05-04 11:18:49:651 490 sec: 59807950 operations; 113054.8 current ops/sec; est completion in 25 minutes [INSERT: Count=1130558, Max=78335, Min=421, Avg=1766.69, 90=2653, 99=5147, 99.9=8887, 99.99=14543] 
2023-05-04 11:18:59:651 500 sec: 60955368 operations; 114741.8 current ops/sec; est completion in 25 minutes [INSERT: Count=1147409, Max=48255, Min=404, Avg=1740.68, 90=2519, 99=5039, 99.9=10279, 99.99=30847] 
2023-05-04 11:19:09:651 510 sec: 62117280 operations; 116191.2 current ops/sec; est completion in 25 minutes [INSERT: Count=1161906, Max=92671, Min=437, Avg=1718.96, 90=2381, 99=5119, 99.9=10175, 99.99=40767] 
2023-05-04 11:19:19:651 520 sec: 63249590 operations; 113231 current ops/sec; est completion in 25 minutes [INSERT: Count=1132313, Max=19775, Min=427, Avg=1763.93, 90=2677, 99=5047, 99.9=9271, 99.99=12071] 
2023-05-04 11:19:29:651 530 sec: 64383227 operations; 113363.7 current ops/sec; est completion in 25 minutes [INSERT: Count=1133639, Max=57791, Min=413, Avg=1761.9, 90=2559, 99=5403, 99.9=10519, 99.99=34879] 
2023-05-04 11:19:39:651 540 sec: 65538366 operations; 115513.9 current ops/sec; est completion in 25 minutes [INSERT: Count=1155150, Max=51711, Min=444, Avg=1729.05, 90=2443, 99=5263, 99.9=9527, 99.99=28495] 
2023-05-04 11:19:49:651 550 sec: 66671877 operations; 113351.1 current ops/sec; est completion in 25 minutes [INSERT: Count=1133506, Max=40543, Min=410, Avg=1762.16, 90=2705, 99=5035, 99.9=8879, 99.99=11695] 
2023-05-04 11:19:59:651 560 sec: 67810509 operations; 113863.2 current ops/sec; est completion in 25 minutes [INSERT: Count=1138625, Max=48575, Min=383, Avg=1754.14, 90=2555, 99=5255, 99.9=9767, 99.99=30943] 
2023-05-04 11:20:09:651 570 sec: 68965029 operations; 115452 current ops/sec; est completion in 24 minutes [INSERT: Count=1154530, Max=48575, Min=423, Avg=1730, 90=2475, 99=5083, 99.9=10943, 99.99=27231] 
2023-05-04 11:20:19:651 580 sec: 70085132 operations; 112010.3 current ops/sec; est completion in 24 minutes [INSERT: Count=1120085, Max=37471, Min=440, Avg=1783.16, 90=2757, 99=5179, 99.9=9239, 99.99=12415] 
2023-05-04 11:20:29:651 590 sec: 71210215 operations; 112508.3 current ops/sec; est completion in 24 minutes [INSERT: Count=1125112, Max=53727, Min=368, Avg=1775.38, 90=2595, 99=5639, 99.9=10655, 99.99=35263] 
2023-05-04 11:20:39:651 600 sec: 72349266 operations; 113905.1 current ops/sec; est completion in 24 minutes [INSERT: Count=1139022, Max=109311, Min=413, Avg=1753.48, 90=2525, 99=5191, 99.9=10687, 99.99=46527] 
2023-05-04 11:20:49:651 610 sec: 73478337 operations; 112907.1 current ops/sec; est completion in 24 minutes [INSERT: Count=1129097, Max=18943, Min=439, Avg=1769.1, 90=2733, 99=5079, 99.9=9591, 99.99=14207] 
2023-05-04 11:20:59:651 620 sec: 74614772 operations; 113643.5 current ops/sec; est completion in 24 minutes [INSERT: Count=1136407, Max=48991, Min=407, Avg=1757.56, 90=2565, 99=5363, 99.9=9215, 99.99=29279] 
2023-05-04 11:21:09:651 630 sec: 75732800 operations; 111802.8 current ops/sec; est completion in 24 minutes [INSERT: Count=1118042, Max=84927, Min=393, Avg=1786.57, 90=2647, 99=5667, 99.9=9919, 99.99=41535] 
2023-05-04 11:21:19:651 640 sec: 76870772 operations; 113797.2 current ops/sec; est completion in 24 minutes [INSERT: Count=1137979, Max=54239, Min=446, Avg=1755.2, 90=2689, 99=5131, 99.9=9071, 99.99=15199] 
2023-05-04 11:21:29:651 650 sec: 78021142 operations; 115037 current ops/sec; est completion in 23 minutes [INSERT: Count=1150355, Max=49631, Min=389, Avg=1736.26, 90=2499, 99=5095, 99.9=9831, 99.99=31423] 
2023-05-04 11:21:39:651 660 sec: 79141224 operations; 112008.2 current ops/sec; est completion in 23 minutes [INSERT: Count=1120080, Max=57727, Min=420, Avg=1783.3, 90=2661, 99=5643, 99.9=10559, 99.99=30351] 
2023-05-04 11:21:49:651 670 sec: 80266294 operations; 112507 current ops/sec; est completion in 23 minutes [INSERT: Count=1125073, Max=17551, Min=361, Avg=1775.34, 90=2725, 99=5375, 99.9=10215, 99.99=13831] 
2023-05-04 11:21:59:651 680 sec: 81398986 operations; 113269.2 current ops/sec; est completion in 23 minutes [INSERT: Count=1132689, Max=49983, Min=396, Avg=1763.38, 90=2593, 99=5359, 99.9=9151, 99.99=30399] 
2023-05-04 11:22:09:651 690 sec: 82494082 operations; 109509.6 current ops/sec; est completion in 23 minutes [INSERT: Count=1095121, Max=88831, Min=419, Avg=1823.91, 90=2719, 99=5755, 99.9=12807, 99.99=86399] 
2023-05-04 11:22:19:651 700 sec: 83624669 operations; 113058.7 current ops/sec; est completion in 23 minutes [INSERT: Count=1130579, Max=37151, Min=378, Avg=1766.79, 90=2709, 99=5231, 99.9=9423, 99.99=14703] 
2023-05-04 11:22:29:651 710 sec: 84741005 operations; 111633.6 current ops/sec; est completion in 23 minutes [INSERT: Count=1116327, Max=42367, Min=399, Avg=1789.25, 90=2643, 99=5803, 99.9=10799, 99.99=28335] 
2023-05-04 11:22:39:651 720 sec: 85840451 operations; 109944.6 current ops/sec; est completion in 22 minutes [INSERT: Count=1099433, Max=56223, Min=385, Avg=1816.9, 90=2747, 99=5955, 99.9=11375, 99.99=34111] 
2023-05-04 11:22:49:651 730 sec: 86969240 operations; 112878.9 current ops/sec; est completion in 22 minutes [INSERT: Count=1128799, Max=19183, Min=386, Avg=1769.57, 90=2725, 99=5283, 99.9=8303, 99.99=10783] 
2023-05-04 11:22:59:651 740 sec: 88080486 operations; 111124.6 current ops/sec; est completion in 22 minutes [INSERT: Count=1111240, Max=56415, Min=440, Avg=1797.49, 90=2661, 99=5927, 99.9=10719, 99.99=30751] 
2023-05-04 11:23:09:651 750 sec: 89189260 operations; 110877.4 current ops/sec; est completion in 22 minutes [INSERT: Count=1108779, Max=51263, Min=369, Avg=1801.58, 90=2719, 99=5767, 99.9=10415, 99.99=30383] 
2023-05-04 11:23:19:651 760 sec: 90302245 operations; 111298.5 current ops/sec; est completion in 22 minutes [INSERT: Count=1112997, Max=74111, Min=412, Avg=1794.74, 90=2753, 99=5563, 99.9=9759, 99.99=24239] 
2023-05-04 11:23:29:651 770 sec: 91396584 operations; 109433.9 current ops/sec; est completion in 22 minutes [INSERT: Count=1094318, Max=52415, Min=409, Avg=1825.26, 90=2711, 99=6487, 99.9=13031, 99.99=31119] 
2023-05-04 11:23:39:651 780 sec: 92513557 operations; 111697.3 current ops/sec; est completion in 22 minutes [INSERT: Count=1116987, Max=116991, Min=401, Avg=1788.34, 90=2673, 99=5431, 99.9=9575, 99.99=49951] 
2023-05-04 11:23:49:651 790 sec: 93607611 operations; 109405.4 current ops/sec; est completion in 22 minutes [INSERT: Count=1094046, Max=27007, Min=387, Avg=1825.81, 90=2773, 99=6331, 99.9=12823, 99.99=18783] 
2023-05-04 11:23:59:651 800 sec: 94718564 operations; 111095.3 current ops/sec; est completion in 21 minutes [INSERT: Count=1110958, Max=51647, Min=419, Avg=1797.95, 90=2699, 99=5839, 99.9=10231, 99.99=31599] 
2023-05-04 11:24:09:651 810 sec: 95827385 operations; 110882.1 current ops/sec; est completion in 21 minutes [INSERT: Count=1108817, Max=48383, Min=352, Avg=1801.49, 90=2725, 99=5755, 99.9=10279, 99.99=32159] 
2023-05-04 11:24:19:651 820 sec: 96909404 operations; 108201.9 current ops/sec; est completion in 21 minutes [INSERT: Count=1082016, Max=28367, Min=384, Avg=1846.13, 90=2861, 99=6539, 99.9=11335, 99.99=18127] 
2023-05-04 11:24:29:651 830 sec: 98020793 operations; 111138.9 current ops/sec; est completion in 21 minutes [INSERT: Count=1111398, Max=59039, Min=431, Avg=1797.3, 90=2677, 99=5947, 99.9=11415, 99.99=34303] 
2023-05-04 11:24:39:651 840 sec: 99131730 operations; 111093.7 current ops/sec; est completion in 21 minutes [INSERT: Count=1110936, Max=51583, Min=402, Avg=1798.01, 90=2691, 99=5891, 99.9=10911, 99.99=30975] 
2023-05-04 11:24:49:651 850 sec: 100235821 operations; 110409.1 current ops/sec; est completion in 21 minutes [INSERT: Count=1104116, Max=21183, Min=461, Avg=1809.27, 90=2813, 99=5699, 99.9=9863, 99.99=14807] 
2023-05-04 11:24:59:651 860 sec: 101329847 operations; 109402.6 current ops/sec; est completion in 21 minutes [INSERT: Count=1093996, Max=53375, Min=360, Avg=1825.81, 90=2783, 99=6163, 99.9=12199, 99.99=32335] 
2023-05-04 11:25:09:651 870 sec: 102396173 operations; 106632.6 current ops/sec; est completion in 20 minutes [INSERT: Count=1066329, Max=75263, Min=367, Avg=1873.37, 90=2649, 99=7007, 99.9=30703, 99.99=63775] 
2023-05-04 11:25:19:651 880 sec: 103515030 operations; 111885.7 current ops/sec; est completion in 20 minutes [INSERT: Count=1118846, Max=17983, Min=383, Avg=1785.24, 90=2735, 99=5523, 99.9=8679, 99.99=12271] 
2023-05-04 11:25:29:651 890 sec: 104602564 operations; 108753.4 current ops/sec; est completion in 20 minutes [INSERT: Count=1087543, Max=54239, Min=406, Avg=1836.75, 90=2845, 99=6183, 99.9=11167, 99.99=32863] 
2023-05-04 11:25:39:651 900 sec: 105705095 operations; 110253.1 current ops/sec; est completion in 20 minutes [INSERT: Count=1102529, Max=112703, Min=356, Avg=1811.74, 90=2677, 99=6171, 99.9=12175, 99.99=51487] 
2023-05-04 11:25:49:651 910 sec: 106803954 operations; 109885.9 current ops/sec; est completion in 20 minutes [INSERT: Count=1098857, Max=131711, Min=450, Avg=1817.85, 90=2763, 99=5983, 99.9=10079, 99.99=56031] 
2023-05-04 11:25:59:651 920 sec: 107887485 operations; 108353.1 current ops/sec; est completion in 20 minutes [INSERT: Count=1083534, Max=71231, Min=436, Avg=1843.63, 90=2857, 99=6175, 99.9=12167, 99.99=41823] 
2023-05-04 11:26:09:651 930 sec: 108989790 operations; 110230.5 current ops/sec; est completion in 20 minutes [INSERT: Count=1102310, Max=68031, Min=406, Avg=1812.09, 90=2689, 99=6175, 99.9=15383, 99.99=36319] 
2023-05-04 11:26:19:651 940 sec: 110075370 operations; 108558 current ops/sec; est completion in 19 minutes [INSERT: Count=1085583, Max=28079, Min=377, Avg=1840.11, 90=2817, 99=6563, 99.9=11463, 99.99=18015] 
2023-05-04 11:26:29:651 950 sec: 111166065 operations; 109069.5 current ops/sec; est completion in 19 minutes [INSERT: Count=1090684, Max=149375, Min=387, Avg=1831.4, 90=2829, 99=5555, 99.9=11047, 99.99=103295] 
2023-05-04 11:26:39:651 960 sec: 112254292 operations; 108822.7 current ops/sec; est completion in 19 minutes [INSERT: Count=1088218, Max=62495, Min=409, Avg=1835.64, 90=2769, 99=6595, 99.9=13279, 99.99=39647] 
2023-05-04 11:26:49:651 970 sec: 113327476 operations; 107318.4 current ops/sec; est completion in 19 minutes [INSERT: Count=1073203, Max=94655, Min=414, Avg=1861.32, 90=2747, 99=6375, 99.9=29407, 99.99=64735] 
2023-05-04 11:26:59:651 980 sec: 114416936 operations; 108946 current ops/sec; est completion in 19 minutes [INSERT: Count=1089460, Max=58591, Min=429, Avg=1833.5, 90=2905, 99=5699, 99.9=9735, 99.99=35135] 
2023-05-04 11:27:09:651 990 sec: 115512753 operations; 109581.7 current ops/sec; est completion in 19 minutes [INSERT: Count=1095824, Max=51199, Min=355, Avg=1822.91, 90=2807, 99=6143, 99.9=11231, 99.99=31583] 
2023-05-04 11:27:19:651 1000 sec: 116609760 operations; 109700.7 current ops/sec; est completion in 19 minutes [INSERT: Count=1097011, Max=25487, Min=403, Avg=1820.84, 90=2847, 99=6007, 99.9=9591, 99.99=16783] 
2023-05-04 11:27:29:651 1010 sec: 117673291 operations; 106353.1 current ops/sec; est completion in 18 minutes [INSERT: Count=1063523, Max=86015, Min=402, Avg=1878.34, 90=2919, 99=6431, 99.9=22015, 99.99=45983] 
2023-05-04 11:27:39:651 1020 sec: 118766568 operations; 109327.7 current ops/sec; est completion in 18 minutes [INSERT: Count=1093266, Max=104959, Min=371, Avg=1827.13, 90=2837, 99=5995, 99.9=11183, 99.99=42207] 
2023-05-04 11:27:49:651 1030 sec: 119870900 operations; 110433.2 current ops/sec; est completion in 18 minutes [INSERT: Count=1104340, Max=20239, Min=380, Avg=1808.77, 90=2807, 99=5839, 99.9=9671, 99.99=14031] 
2023-05-04 11:27:59:651 1040 sec: 120961574 operations; 109067.4 current ops/sec; est completion in 18 minutes [INSERT: Count=1090674, Max=86143, Min=414, Avg=1831.45, 90=2899, 99=5663, 99.9=9679, 99.99=42655] 
2023-05-04 11:28:09:651 1050 sec: 122036235 operations; 107466.1 current ops/sec; est completion in 18 minutes [INSERT: Count=1074659, Max=70527, Min=411, Avg=1858.86, 90=2835, 99=6863, 99.9=19903, 99.99=39391] 
2023-05-04 11:28:19:651 1060 sec: 123146692 operations; 111045.7 current ops/sec; est completion in 18 minutes [INSERT: Count=1110445, Max=24431, Min=402, Avg=1798.81, 90=2773, 99=5671, 99.9=9327, 99.99=16151] 
2023-05-04 11:28:29:651 1070 sec: 124232128 operations; 108543.6 current ops/sec; est completion in 18 minutes [INSERT: Count=1085439, Max=51743, Min=354, Avg=1840.31, 90=2919, 99=5795, 99.9=10983, 99.99=32895] 
2023-05-04 11:28:39:651 1080 sec: 125313668 operations; 108154 current ops/sec; est completion in 17 minutes [INSERT: Count=1081539, Max=74879, Min=364, Avg=1847.01, 90=2903, 99=6243, 99.9=12127, 99.99=37535] 
2023-05-04 11:28:49:651 1090 sec: 126422980 operations; 110931.2 current ops/sec; est completion in 17 minutes [INSERT: Count=1109304, Max=60543, Min=396, Avg=1800.68, 90=2753, 99=5679, 99.9=10575, 99.99=29231] 
2023-05-04 11:28:59:651 1100 sec: 127507446 operations; 108446.6 current ops/sec; est completion in 17 minutes [INSERT: Count=1084473, Max=55039, Min=420, Avg=1842.01, 90=2937, 99=5743, 99.9=9615, 99.99=32431] 
2023-05-04 11:29:09:651 1110 sec: 128563970 operations; 105652.4 current ops/sec; est completion in 17 minutes [INSERT: Count=1056528, Max=86527, Min=429, Avg=1890.72, 90=2953, 99=7067, 99.9=20559, 99.99=39455] 
2023-05-04 11:29:19:651 1120 sec: 129679707 operations; 111573.7 current ops/sec; est completion in 17 minutes [INSERT: Count=1115730, Max=77055, Min=379, Avg=1790.33, 90=2725, 99=5707, 99.9=9567, 99.99=21199] 
2023-05-04 11:29:29:651 1130 sec: 130756388 operations; 107668.1 current ops/sec; est completion in 17 minutes [INSERT: Count=1076695, Max=56863, Min=424, Avg=1855.29, 90=2917, 99=6119, 99.9=12647, 99.99=32735] 
2023-05-04 11:29:39:651 1140 sec: 131847000 operations; 109061.2 current ops/sec; est completion in 17 minutes [INSERT: Count=1090596, Max=54623, Min=445, Avg=1831.41, 90=2909, 99=5883, 99.9=10127, 99.99=32319] 
2023-05-04 11:29:49:651 1150 sec: 132948221 operations; 110122.1 current ops/sec; est completion in 16 minutes [INSERT: Count=1101233, Max=77631, Min=424, Avg=1814.12, 90=2769, 99=5823, 99.9=12039, 99.99=32927] 
2023-05-04 11:29:59:651 1160 sec: 134019012 operations; 107079.1 current ops/sec; est completion in 16 minutes [INSERT: Count=1070781, Max=54015, Min=378, Avg=1865.56, 90=2955, 99=6291, 99.9=11119, 99.99=33215] 
2023-05-04 11:30:09:651 1170 sec: 135085185 operations; 106617.3 current ops/sec; est completion in 16 minutes [INSERT: Count=1066181, Max=77119, Min=419, Avg=1873.54, 90=3009, 99=6263, 99.9=14319, 99.99=43007] 
2023-05-04 11:30:19:651 1180 sec: 136185862 operations; 110067.7 current ops/sec; est completion in 16 minutes [INSERT: Count=1100663, Max=52543, Min=371, Avg=1814.79, 90=2837, 99=5739, 99.9=9831, 99.99=22303] 
2023-05-04 11:30:29:651 1190 sec: 137270606 operations; 108474.4 current ops/sec; est completion in 16 minutes [INSERT: Count=1084750, Max=54367, Min=343, Avg=1841.54, 90=2895, 99=5843, 99.9=11855, 99.99=33791] 
2023-05-04 11:30:39:651 1200 sec: 138337317 operations; 106671.1 current ops/sec; est completion in 16 minutes [INSERT: Count=1066736, Max=64991, Min=399, Avg=1872.63, 90=3017, 99=6311, 99.9=12575, 99.99=35903] 
2023-05-04 11:30:49:651 1210 sec: 139429434 operations; 109211.7 current ops/sec; est completion in 16 minutes [INSERT: Count=1092105, Max=19471, Min=361, Avg=1829.01, 90=2881, 99=5951, 99.9=10167, 99.99=14103] 
2023-05-04 11:30:59:651 1220 sec: 140506556 operations; 107712.2 current ops/sec; est completion in 15 minutes [INSERT: Count=1077118, Max=52383, Min=369, Avg=1854.64, 90=2923, 99=6115, 99.9=10639, 99.99=33215] 
2023-05-04 11:31:09:651 1230 sec: 141594270 operations; 108771.4 current ops/sec; est completion in 15 minutes [INSERT: Count=1087715, Max=61215, Min=396, Avg=1836.46, 90=2905, 99=5687, 99.9=10815, 99.99=42335] 
2023-05-04 11:31:19:651 1240 sec: 142665815 operations; 107154.5 current ops/sec; est completion in 15 minutes [INSERT: Count=1071547, Max=107455, Min=426, Avg=1864.2, 90=2955, 99=6395, 99.9=11111, 99.99=43391] 
2023-05-04 11:31:29:651 1250 sec: 143712912 operations; 104709.7 current ops/sec; est completion in 15 minutes [INSERT: Count=1047086, Max=75519, Min=390, Avg=1907.79, 90=2843, 99=6947, 99.9=29695, 99.99=53407] 
2023-05-04 11:31:39:651 1260 sec: 144801991 operations; 108907.9 current ops/sec; est completion in 15 minutes [INSERT: Count=1089091, Max=53823, Min=384, Avg=1834.2, 90=2895, 99=5595, 99.9=10575, 99.99=48927] 
2023-05-04 11:31:49:651 1270 sec: 145880559 operations; 107856.8 current ops/sec; est completion in 15 minutes [INSERT: Count=1078573, Max=18287, Min=408, Avg=1852.03, 90=2983, 99=6139, 99.9=9271, 99.99=12807] 
2023-05-04 11:31:59:651 1280 sec: 146949525 operations; 106896.6 current ops/sec; est completion in 14 minutes [INSERT: Count=1068957, Max=58975, Min=274, Avg=1868.78, 90=2937, 99=6343, 99.9=11887, 99.99=34815] 
2023-05-04 11:32:09:651 1290 sec: 147997298 operations; 104777.3 current ops/sec; est completion in 14 minutes [INSERT: Count=1047774, Max=122431, Min=408, Avg=1906.55, 90=2735, 99=6643, 99.9=37119, 99.99=58591] 
2023-05-04 11:32:19:651 1300 sec: 149083682 operations; 108638.4 current ops/sec; est completion in 14 minutes [INSERT: Count=1086380, Max=28543, Min=378, Avg=1838.64, 90=2923, 99=5931, 99.9=10159, 99.99=14775] 
2023-05-04 11:32:29:651 1310 sec: 150170533 operations; 108685.1 current ops/sec; est completion in 14 minutes [INSERT: Count=1086865, Max=55903, Min=414, Avg=1838.05, 90=2871, 99=5919, 99.9=10855, 99.99=32271] 
2023-05-04 11:32:39:651 1320 sec: 151233265 operations; 106273.2 current ops/sec; est completion in 14 minutes [INSERT: Count=1062705, Max=49887, Min=399, Avg=1879.66, 90=2945, 99=6411, 99.9=20639, 99.99=32383] 
2023-05-04 11:32:49:651 1330 sec: 152322887 operations; 108962.2 current ops/sec; est completion in 14 minutes [INSERT: Count=1089633, Max=25599, Min=370, Avg=1833.31, 90=2945, 99=5851, 99.9=9231, 99.99=14591] 
2023-05-04 11:32:59:651 1340 sec: 153400550 operations; 107766.3 current ops/sec; est completion in 14 minutes [INSERT: Count=1077665, Max=52895, Min=417, Avg=1853.57, 90=2919, 99=6167, 99.9=10711, 99.99=31775] 
2023-05-04 11:33:09:651 1350 sec: 154477296 operations; 107674.6 current ops/sec; est completion in 13 minutes [INSERT: Count=1076742, Max=120511, Min=345, Avg=1855.3, 90=2903, 99=5999, 99.9=11615, 99.99=68671] 
2023-05-04 11:33:19:651 1360 sec: 155554340 operations; 107704.4 current ops/sec; est completion in 13 minutes [INSERT: Count=1077045, Max=28575, Min=387, Avg=1854.69, 90=2963, 99=6303, 99.9=11111, 99.99=17791] 
2023-05-04 11:33:29:651 1370 sec: 156637457 operations; 108311.7 current ops/sec; est completion in 13 minutes [INSERT: Count=1083131, Max=55807, Min=447, Avg=1844.31, 90=2873, 99=6115, 99.9=11223, 99.99=32319] 
2023-05-04 11:33:39:651 1380 sec: 157716257 operations; 107880 current ops/sec; est completion in 13 minutes [INSERT: Count=1078790, Max=61151, Min=396, Avg=1851.69, 90=2925, 99=5979, 99.9=10495, 99.99=34815] 
2023-05-04 11:33:49:651 1390 sec: 158772882 operations; 105662.5 current ops/sec; est completion in 13 minutes [INSERT: Count=1056621, Max=70015, Min=379, Avg=1890.63, 90=2929, 99=6679, 99.9=23615, 99.99=60895] 
2023-05-04 11:33:59:651 1400 sec: 159862192 operations; 108931 current ops/sec; est completion in 13 minutes [INSERT: Count=1089323, Max=58783, Min=438, Avg=1833.76, 90=2855, 99=5995, 99.9=9855, 99.99=32527] 
2023-05-04 11:34:09:651 1410 sec: 160920759 operations; 105856.7 current ops/sec; est completion in 13 minutes [INSERT: Count=1058556, Max=175231, Min=444, Avg=1887.11, 90=2891, 99=6503, 99.9=20895, 99.99=100095] 
2023-05-04 11:34:19:651 1420 sec: 162009549 operations; 108879 current ops/sec; est completion in 12 minutes [INSERT: Count=1088799, Max=23055, Min=399, Avg=1834.62, 90=2921, 99=5823, 99.9=10279, 99.99=13887] 
2023-05-04 11:34:29:651 1430 sec: 163078803 operations; 106925.4 current ops/sec; est completion in 12 minutes [INSERT: Count=1069251, Max=52607, Min=383, Avg=1868.25, 90=2981, 99=6375, 99.9=11391, 99.99=34047] 
2023-05-04 11:34:39:651 1440 sec: 164154072 operations; 107526.9 current ops/sec; est completion in 12 minutes [INSERT: Count=1075259, Max=64639, Min=426, Avg=1857.67, 90=2871, 99=6487, 99.9=13303, 99.99=38879] 
2023-05-04 11:34:49:651 1450 sec: 165242789 operations; 108871.7 current ops/sec; est completion in 12 minutes [INSERT: Count=1088721, Max=21135, Min=391, Avg=1834.64, 90=2885, 99=6047, 99.9=10183, 99.99=16495] 
2023-05-04 11:34:59:651 1460 sec: 166308373 operations; 106558.4 current ops/sec; est completion in 12 minutes [INSERT: Count=1065577, Max=56255, Min=428, Avg=1874.9, 90=2965, 99=6507, 99.9=13159, 99.99=39295] 
2023-05-04 11:35:09:651 1470 sec: 167388392 operations; 108001.9 current ops/sec; est completion in 12 minutes [INSERT: Count=1080036, Max=60031, Min=378, Avg=1849.63, 90=2895, 99=6043, 99.9=11951, 99.99=33087] 
2023-05-04 11:35:19:651 1480 sec: 168468879 operations; 108048.7 current ops/sec; est completion in 11 minutes [INSERT: Count=1080483, Max=58431, Min=393, Avg=1848.77, 90=2925, 99=6195, 99.9=10551, 99.99=18159] 
2023-05-04 11:35:29:651 1490 sec: 169533430 operations; 106455.1 current ops/sec; est completion in 11 minutes [INSERT: Count=1064542, Max=55679, Min=412, Avg=1876.44, 90=2891, 99=6387, 99.9=24207, 99.99=38943] 
2023-05-04 11:35:39:651 1500 sec: 170586559 operations; 105312.9 current ops/sec; est completion in 11 minutes [INSERT: Count=1053125, Max=90751, Min=415, Avg=1896.9, 90=2921, 99=7011, 99.9=15039, 99.99=48927] 
2023-05-04 11:35:49:651 1510 sec: 171676048 operations; 108948.9 current ops/sec; est completion in 11 minutes [INSERT: Count=1089505, Max=35039, Min=401, Avg=1833.52, 90=2859, 99=5931, 99.9=10655, 99.99=24751] 
2023-05-04 11:35:59:651 1520 sec: 172740522 operations; 106447.4 current ops/sec; est completion in 11 minutes [INSERT: Count=1064460, Max=55487, Min=338, Avg=1876.61, 90=2915, 99=6787, 99.9=18591, 99.99=40671] 
2023-05-04 11:36:09:651 1530 sec: 173772060 operations; 103153.8 current ops/sec; est completion in 11 minutes [INSERT: Count=1031549, Max=71615, Min=367, Avg=1936.66, 90=2621, 99=7667, 99.9=46463, 99.99=59231] 
2023-05-04 11:36:19:651 1540 sec: 174827900 operations; 105584 current ops/sec; est completion in 11 minutes [INSERT: Count=1055830, Max=63743, Min=407, Avg=1891.19, 90=2913, 99=6919, 99.9=18527, 99.99=59839] 
2023-05-04 11:36:29:651 1550 sec: 175846305 operations; 101840.5 current ops/sec; est completion in 10 minutes [INSERT: Count=1018406, Max=126207, Min=377, Avg=1962.44, 90=2595, 99=7095, 99.9=60287, 99.99=85311] 
2023-05-04 11:36:39:651 1560 sec: 176895697 operations; 104939.2 current ops/sec; est completion in 10 minutes [INSERT: Count=1049417, Max=72063, Min=378, Avg=1903.54, 90=2719, 99=6875, 99.9=44703, 99.99=56703] 
2023-05-04 11:36:49:651 1570 sec: 177933414 operations; 103771.7 current ops/sec; est completion in 10 minutes [INSERT: Count=1037691, Max=71423, Min=405, Avg=1925.17, 90=2571, 99=6995, 99.9=48319, 99.99=59711] 
2023-05-04 11:36:59:651 1580 sec: 179010960 operations; 107754.6 current ops/sec; est completion in 10 minutes [INSERT: Count=1077549, Max=67711, Min=453, Avg=1853.83, 90=2853, 99=6227, 99.9=18687, 99.99=40319] 
2023-05-04 11:37:09:651 1590 sec: 180033018 operations; 102205.8 current ops/sec; est completion in 10 minutes [INSERT: Count=1022062, Max=112191, Min=401, Avg=1954.65, 90=2633, 99=6447, 99.9=59135, 99.99=82175] 
2023-05-04 11:37:19:651 1600 sec: 181075236 operations; 104221.8 current ops/sec; est completion in 10 minutes [INSERT: Count=1042220, Max=68351, Min=362, Avg=1915.37, 90=2645, 99=6911, 99.9=41983, 99.99=57663] 
2023-05-04 11:37:29:651 1610 sec: 182147306 operations; 107207 current ops/sec; est completion in 10 minutes [INSERT: Count=1072070, Max=127423, Min=402, Avg=1864.67, 90=2835, 99=5867, 99.9=33439, 99.99=63167] 
2023-05-04 11:37:39:651 1620 sec: 183177566 operations; 103026 current ops/sec; est completion in 9 minutes [INSERT: Count=1030265, Max=99519, Min=435, Avg=1938.76, 90=2731, 99=7919, 99.9=37407, 99.99=73663] 
2023-05-04 11:37:49:651 1630 sec: 184249705 operations; 107213.9 current ops/sec; est completion in 9 minutes [INSERT: Count=1072129, Max=96511, Min=374, Avg=1862.93, 90=2851, 99=6259, 99.9=22079, 99.99=44991] 
2023-05-04 11:37:59:651 1640 sec: 185328973 operations; 107926.8 current ops/sec; est completion in 9 minutes [INSERT: Count=1079268, Max=55967, Min=390, Avg=1851.44, 90=2855, 99=5767, 99.9=23519, 99.99=35647] 
2023-05-04 11:38:09:651 1650 sec: 186361082 operations; 103210.9 current ops/sec; est completion in 9 minutes [INSERT: Count=1032117, Max=144255, Min=332, Avg=1934.47, 90=2835, 99=7039, 99.9=38271, 99.99=91199] 
2023-05-04 11:38:19:651 1660 sec: 187420121 operations; 105903.9 current ops/sec; est completion in 9 minutes [INSERT: Count=1059039, Max=51839, Min=369, Avg=1887.31, 90=2837, 99=6467, 99.9=33599, 99.99=43903] 
2023-05-04 11:38:29:651 1670 sec: 188487843 operations; 106772.2 current ops/sec; est completion in 9 minutes [INSERT: Count=1067708, Max=54847, Min=408, Avg=1870.95, 90=2701, 99=6859, 99.9=30175, 99.99=41119] 
2023-05-04 11:38:39:651 1680 sec: 189540358 operations; 105251.5 current ops/sec; est completion in 8 minutes [INSERT: Count=1052522, Max=81727, Min=387, Avg=1898.03, 90=2947, 99=6783, 99.9=23183, 99.99=60575] 
2023-05-04 11:38:49:651 1690 sec: 190556474 operations; 101611.6 current ops/sec; est completion in 8 minutes [INSERT: Count=1016123, Max=108735, Min=400, Avg=1966.04, 90=2689, 99=7127, 99.9=55071, 99.99=90175] 
2023-05-04 11:38:59:651 1700 sec: 191590044 operations; 103357 current ops/sec; est completion in 8 minutes [INSERT: Count=1033561, Max=73663, Min=337, Avg=1932.75, 90=2567, 99=7311, 99.9=50719, 99.99=60255] 
2023-05-04 11:39:09:651 1710 sec: 192664769 operations; 107472.5 current ops/sec; est completion in 8 minutes [INSERT: Count=1074724, Max=63775, Min=386, Avg=1858.67, 90=2871, 99=6151, 99.9=15847, 99.99=53567] 
2023-05-04 11:39:19:651 1720 sec: 193725203 operations; 106043.4 current ops/sec; est completion in 8 minutes [INSERT: Count=1060424, Max=42175, Min=361, Avg=1883.83, 90=2831, 99=6731, 99.9=28879, 99.99=36703] 
2023-05-04 11:39:29:651 1730 sec: 194774394 operations; 104919.1 current ops/sec; est completion in 8 minutes [INSERT: Count=1049203, Max=53535, Min=389, Avg=1902.88, 90=2767, 99=7439, 99.9=29887, 99.99=45407] 
2023-05-04 11:39:39:651 1740 sec: 195835040 operations; 106064.6 current ops/sec; est completion in 8 minutes [INSERT: Count=1060648, Max=64415, Min=398, Avg=1884.49, 90=2765, 99=6115, 99.9=40127, 99.99=51647] 
2023-05-04 11:39:49:651 1750 sec: 196899453 operations; 106441.3 current ops/sec; est completion in 7 minutes [INSERT: Count=1064410, Max=48671, Min=419, Avg=1876.76, 90=2899, 99=6383, 99.9=23551, 99.99=31903] 
2023-05-04 11:39:59:651 1760 sec: 197942863 operations; 104341 current ops/sec; est completion in 7 minutes [INSERT: Count=1043413, Max=54975, Min=410, Avg=1914.29, 90=2845, 99=6959, 99.9=36127, 99.99=47487] 
2023-05-04 11:40:09:651 1770 sec: 198983265 operations; 104040.2 current ops/sec; est completion in 7 minutes [INSERT: Count=1040397, Max=120255, Min=446, Avg=1920.35, 90=2691, 99=6935, 99.9=39839, 99.99=61631] 
2023-05-04 11:40:19:651 1780 sec: 200058192 operations; 107492.7 current ops/sec; est completion in 7 minutes [INSERT: Count=1075012, Max=47007, Min=406, Avg=1858.2, 90=2919, 99=5771, 99.9=22927, 99.99=34559] 
2023-05-04 11:40:29:653 1790 sec: 201090660 operations; 103226.15 current ops/sec; est completion in 7 minutes [INSERT: Count=1032399, Max=90367, Min=411, Avg=1934.3, 90=2835, 99=7271, 99.9=38143, 99.99=49503] 
2023-05-04 11:40:39:651 1800 sec: 202129194 operations; 103874.17 current ops/sec; est completion in 7 minutes [INSERT: Count=1038515, Max=61855, Min=383, Avg=1924.14, 90=2729, 99=7399, 99.9=40703, 99.99=51423] 
2023-05-04 11:40:49:651 1810 sec: 203204740 operations; 107554.6 current ops/sec; est completion in 6 minutes [INSERT: Count=1075544, Max=39999, Min=375, Avg=1857.17, 90=2935, 99=5979, 99.9=21247, 99.99=31807] 
2023-05-04 11:40:59:651 1820 sec: 204242838 operations; 103809.8 current ops/sec; est completion in 6 minutes [INSERT: Count=1038112, Max=60031, Min=421, Avg=1924.53, 90=2895, 99=7019, 99.9=32031, 99.99=44031] 
2023-05-04 11:41:09:651 1830 sec: 205272634 operations; 102979.6 current ops/sec; est completion in 6 minutes [INSERT: Count=1029794, Max=170239, Min=401, Avg=1939.67, 90=2899, 99=7459, 99.9=32415, 99.99=75647] 
2023-05-04 11:41:19:651 1840 sec: 206328307 operations; 105567.3 current ops/sec; est completion in 6 minutes [INSERT: Count=1055667, Max=47391, Min=386, Avg=1892.69, 90=2825, 99=6567, 99.9=30303, 99.99=37311] 
2023-05-04 11:41:29:651 1850 sec: 207341988 operations; 101368.1 current ops/sec; est completion in 6 minutes [INSERT: Count=1013679, Max=87039, Min=371, Avg=1970.23, 90=2761, 99=7343, 99.9=51007, 99.99=76415] 
2023-05-04 11:41:39:651 1860 sec: 208386280 operations; 104429.2 current ops/sec; est completion in 6 minutes [INSERT: Count=1044295, Max=57311, Min=403, Avg=1913.46, 90=2885, 99=6983, 99.9=27439, 99.99=48319] 
2023-05-04 11:41:49:651 1870 sec: 209432417 operations; 104613.7 current ops/sec; est completion in 6 minutes [INSERT: Count=1046137, Max=58655, Min=354, Avg=1909.41, 90=2857, 99=7007, 99.9=27183, 99.99=54655] 
2023-05-04 11:41:59:651 1880 sec: 210481723 operations; 104930.6 current ops/sec; est completion in 5 minutes [INSERT: Count=1049305, Max=86719, Min=411, Avg=1903.6, 90=2745, 99=7067, 99.9=34559, 99.99=63679] 
2023-05-04 11:42:09:651 1890 sec: 211533528 operations; 105180.5 current ops/sec; est completion in 5 minutes [INSERT: Count=1051803, Max=73343, Min=384, Avg=1899.01, 90=2879, 99=6607, 99.9=30143, 99.99=41695] 
2023-05-04 11:42:19:651 1900 sec: 212563230 operations; 102970.2 current ops/sec; est completion in 5 minutes [INSERT: Count=1029698, Max=56575, Min=380, Avg=1940.74, 90=2869, 99=7603, 99.9=32111, 99.99=44223] 
2023-05-04 11:42:29:651 1910 sec: 213620316 operations; 105708.6 current ops/sec; est completion in 5 minutes [INSERT: Count=1057089, Max=80063, Min=396, Avg=1889.7, 90=2719, 99=6611, 99.9=34239, 99.99=64959] 
2023-05-04 11:42:39:651 1920 sec: 214694853 operations; 107453.7 current ops/sec; est completion in 5 minutes [INSERT: Count=1074540, Max=51903, Min=423, Avg=1858.46, 90=2921, 99=5947, 99.9=18783, 99.99=37151] 
2023-05-04 11:42:49:651 1930 sec: 215711132 operations; 101627.9 current ops/sec; est completion in 5 minutes [INSERT: Count=1016277, Max=49887, Min=385, Avg=1966.21, 90=2851, 99=8679, 99.9=33855, 99.99=43743] 
2023-05-04 11:42:59:651 1940 sec: 216775628 operations; 106449.6 current ops/sec; est completion in 4 minutes [INSERT: Count=1064492, Max=53407, Min=417, Avg=1876.75, 90=2799, 99=6947, 99.9=24751, 99.99=35551] 
2023-05-04 11:43:09:651 1950 sec: 217856139 operations; 108051.1 current ops/sec; est completion in 4 minutes [INSERT: Count=1080515, Max=88639, Min=413, Avg=1848.7, 90=2955, 99=5799, 99.9=11495, 99.99=41407] 
2023-05-04 11:43:19:651 1960 sec: 218878810 operations; 102267.1 current ops/sec; est completion in 4 minutes [INSERT: Count=1022673, Max=49599, Min=408, Avg=1953.26, 90=2835, 99=7811, 99.9=34303, 99.99=42527] 
2023-05-04 11:43:29:651 1970 sec: 219918454 operations; 103964.4 current ops/sec; est completion in 4 minutes [INSERT: Count=1039642, Max=65151, Min=422, Avg=1921.74, 90=2783, 99=8607, 99.9=28175, 99.99=41439] 
2023-05-04 11:43:39:651 1980 sec: 220993678 operations; 107522.4 current ops/sec; est completion in 4 minutes [INSERT: Count=1075221, Max=154111, Min=375, Avg=1857.76, 90=2929, 99=5811, 99.9=14999, 99.99=58879] 
2023-05-04 11:43:49:651 1990 sec: 222008579 operations; 101490.1 current ops/sec; est completion in 4 minutes [INSERT: Count=1014899, Max=55359, Min=442, Avg=1968.46, 90=2839, 99=8495, 99.9=38975, 99.99=47999] 
2023-05-04 11:43:59:651 2000 sec: 223046298 operations; 103771.9 current ops/sec; est completion in 4 minutes [INSERT: Count=1037732, Max=55935, Min=414, Avg=1925.03, 90=2837, 99=7895, 99.9=27711, 99.99=39583] 
2023-05-04 11:44:09:651 2010 sec: 224113712 operations; 106741.4 current ops/sec; est completion in 3 minutes [INSERT: Count=1067410, Max=81407, Min=411, Avg=1871.53, 90=2793, 99=5879, 99.9=36351, 99.99=48863] 
2023-05-04 11:44:19:651 2020 sec: 225155513 operations; 104180.1 current ops/sec; est completion in 3 minutes [INSERT: Count=1041795, Max=48255, Min=399, Avg=1917.45, 90=2933, 99=7459, 99.9=26223, 99.99=36735] 
2023-05-04 11:44:29:651 2030 sec: 226200710 operations; 104519.7 current ops/sec; est completion in 3 minutes [INSERT: Count=1045213, Max=53759, Min=394, Avg=1911.34, 90=2963, 99=6807, 99.9=24271, 99.99=37247] 
2023-05-04 11:44:39:651 2040 sec: 227264361 operations; 106365.1 current ops/sec; est completion in 3 minutes [INSERT: Count=1063629, Max=55583, Min=420, Avg=1878.1, 90=2843, 99=6079, 99.9=29135, 99.99=42399] 
2023-05-04 11:44:49:651 2050 sec: 228317303 operations; 105294.2 current ops/sec; est completion in 3 minutes [INSERT: Count=1052948, Max=38687, Min=362, Avg=1897.23, 90=2931, 99=7035, 99.9=22735, 99.99=30927] 
2023-05-04 11:44:59:651 2060 sec: 229374474 operations; 105717.1 current ops/sec; est completion in 3 minutes [INSERT: Count=1057179, Max=55007, Min=416, Avg=1889.61, 90=2953, 99=6103, 99.9=23503, 99.99=38367] 
2023-05-04 11:45:09:651 2070 sec: 230426521 operations; 105204.7 current ops/sec; est completion in 2 minutes [INSERT: Count=1052053, Max=83455, Min=367, Avg=1898.77, 90=2841, 99=6379, 99.9=30863, 99.99=51263] 
2023-05-04 11:45:19:651 2080 sec: 231484301 operations; 105778 current ops/sec; est completion in 2 minutes [INSERT: Count=1057764, Max=36223, Min=407, Avg=1888.48, 90=2933, 99=6459, 99.9=21375, 99.99=28447] 
2023-05-04 11:45:29:651 2090 sec: 232545990 operations; 106168.9 current ops/sec; est completion in 2 minutes [INSERT: Count=1061691, Max=54367, Min=422, Avg=1881.52, 90=2975, 99=6091, 99.9=21119, 99.99=33439] 
2023-05-04 11:45:39:651 2100 sec: 233583107 operations; 103711.7 current ops/sec; est completion in 2 minutes [INSERT: Count=1037120, Max=58527, Min=360, Avg=1926.19, 90=2789, 99=6735, 99.9=44863, 99.99=52991] 
2023-05-04 11:45:49:651 2110 sec: 234645768 operations; 106266.1 current ops/sec; est completion in 2 minutes [INSERT: Count=1062654, Max=48191, Min=407, Avg=1879.29, 90=2901, 99=5975, 99.9=23615, 99.99=37503] 
2023-05-04 11:45:59:651 2120 sec: 235705698 operations; 105993 current ops/sec; est completion in 2 minutes [INSERT: Count=1059942, Max=49119, Min=339, Avg=1885.21, 90=2889, 99=6367, 99.9=23759, 99.99=35839] 
2023-05-04 11:46:09:651 2130 sec: 236727060 operations; 102136.2 current ops/sec; est completion in 2 minutes [INSERT: Count=1021354, Max=98687, Min=341, Avg=1955.95, 90=2699, 99=7091, 99.9=52223, 99.99=76415] 
2023-05-04 11:46:19:651 2140 sec: 237787363 operations; 106030.3 current ops/sec; est completion in 1 minute [INSERT: Count=1060305, Max=41183, Min=403, Avg=1883.99, 90=2933, 99=6743, 99.9=21775, 99.99=32415] 
2023-05-04 11:46:29:651 2150 sec: 238830121 operations; 104275.8 current ops/sec; est completion in 1 minute [INSERT: Count=1042758, Max=53631, Min=370, Avg=1915.74, 90=2807, 99=8071, 99.9=26447, 99.99=35615] 
2023-05-04 11:46:39:651 2160 sec: 239894495 operations; 106437.4 current ops/sec; est completion in 1 minute [INSERT: Count=1064375, Max=84991, Min=397, Avg=1876.61, 90=2903, 99=6499, 99.9=23759, 99.99=47327] 
2023-05-04 11:46:49:651 2170 sec: 240965608 operations; 107111.3 current ops/sec; est completion in 1 minute [INSERT: Count=1071113, Max=35039, Min=366, Avg=1865.13, 90=2885, 99=6275, 99.9=20895, 99.99=27151] 
2023-05-04 11:46:59:651 2180 sec: 242014294 operations; 104868.6 current ops/sec; est completion in 1 minute [INSERT: Count=1048685, Max=59583, Min=368, Avg=1904.96, 90=2827, 99=7267, 99.9=26335, 99.99=35935] 
2023-05-04 11:47:09:651 2190 sec: 243087481 operations; 107318.7 current ops/sec; est completion in 1 minute [INSERT: Count=1073190, Max=90431, Min=398, Avg=1861.19, 90=2937, 99=5715, 99.9=20751, 99.99=59039] 
2023-05-04 11:47:19:651 2200 sec: 244149190 operations; 106170.9 current ops/sec; est completion in 53 seconds [INSERT: Count=1061702, Max=70911, Min=388, Avg=1881.76, 90=2837, 99=6779, 99.9=22703, 99.99=44671] 
2023-05-04 11:47:29:651 2210 sec: 245210329 operations; 106113.9 current ops/sec; est completion in 44 seconds [INSERT: Count=1061148, Max=69823, Min=389, Avg=1882.52, 90=2841, 99=6475, 99.9=25327, 99.99=39327] 
2023-05-04 11:47:39:651 2220 sec: 246288752 operations; 107842.3 current ops/sec; est completion in 34 seconds [INSERT: Count=1078426, Max=51551, Min=420, Avg=1852.32, 90=3015, 99=5807, 99.9=9839, 99.99=33567] 
2023-05-04 11:47:49:651 2230 sec: 247340782 operations; 105203 current ops/sec; est completion in 24 seconds [INSERT: Count=1052027, Max=51615, Min=412, Avg=1898.86, 90=2877, 99=6903, 99.9=23919, 99.99=40703] 
2023-05-04 11:47:59:651 2240 sec: 248390936 operations; 105015.4 current ops/sec; est completion in 15 seconds [INSERT: Count=1050154, Max=49311, Min=394, Avg=1902.25, 90=2801, 99=7251, 99.9=31055, 99.99=39999] 
2023-05-04 11:48:09:651 2250 sec: 249464133 operations; 107319.7 current ops/sec; est completion in 5 second [INSERT: Count=1073201, Max=226559, Min=388, Avg=1861.33, 90=2955, 99=5651, 99.9=12135, 99.99=152447] 
2023-05-04 11:48:19:651 2260 sec: 250000000 operations; 53586.7 current ops/sec; [CLEANUP: Count=199, Max=21, Min=1, Avg=2.64, 90=3, 99=9, 99.9=21, 99.99=21] [INSERT: Count=535846, Max=42175, Min=457, Avg=1878.02, 90=2481, 99=11751, 99.9=29327, 99.99=36287] 
2023-05-04 11:48:20:120 2260 sec: 250000000 operations; 0 current ops/sec; [CLEANUP: Count=1, Max=2222079, Min=2220032, Avg=2221056, 90=2222079, 99=2222079, 99.9=2222079, 99.99=2222079] [INSERT: Count=0, Max=0, Min=9223372036854775807, Avg=?, 90=0, 99=0, 99.9=0, 99.99=0] 
[OVERALL], RunTime(ms), 2260469
[OVERALL], Throughput(ops/sec), 110596.51780227908
[TOTAL_GCS_PS_Scavenge], Count, 4547
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 23811
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.053365474156027
[TOTAL_GCS_PS_MarkSweep], Count, 6
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 278
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.012298332779613435
[TOTAL_GCs], Count, 4553
[TOTAL_GC_TIME], Time(ms), 24089
[TOTAL_GC_TIME_%], Time(%), 1.0656638069356403
[CLEANUP], Operations, 200
[CLEANUP], AverageLatency(us), 11107.905
[CLEANUP], MinLatency(us), 1
[CLEANUP], MaxLatency(us), 2222079
[CLEANUP], 95thPercentileLatency(us), 4
[CLEANUP], 99thPercentileLatency(us), 9
[INSERT], Operations, 250000000
[INSERT], AverageLatency(us), 1801.139338036
[INSERT], MinLatency(us), 192
[INSERT], MaxLatency(us), 702975
[INSERT], 95thPercentileLatency(us), 3547
[INSERT], 99thPercentileLatency(us), 5851
[INSERT], Return=OK, 250000000
