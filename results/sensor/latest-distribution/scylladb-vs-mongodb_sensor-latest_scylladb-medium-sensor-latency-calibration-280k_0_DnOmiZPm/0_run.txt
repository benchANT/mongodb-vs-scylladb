bin/ycsb run scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=625000000 -p operationcount=999900000 -target 70000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=500000000 -p insertcount=125000000 -p measurementtype=hdrhistogram  -p hdrhistogram.fileoutput=true  -p hdrhistogram.output.path=/home/developer/results/ 
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=625000000 -p operationcount=999900000 -target 70000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=500000000 -p insertcount=125000000 -p measurementtype=hdrhistogram -p hdrhistogram.fileoutput=true -p hdrhistogram.output.path=/home/developer/results/ -t
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=625000000 -p operationcount=999900000 -target 70000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=500000000 -p insertcount=125000000 -p measurementtype=hdrhistogram -p hdrhistogram.fileoutput=true -p hdrhistogram.output.path=/home/developer/results/ -t
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
 (might take a few minutes for large data sets)
Starting test.
[Thread-8] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
Maximum execution time specified as: 1800 secs
[Thread-8] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
2023-04-30 10:28:21:425 0 sec: 0 operations; est completion in 0 second 
[Thread-8] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-8] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.224.14.50:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.25.70.101:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.236.216.15:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.155.229.124:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.166.69.220:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /34.214.116.240:9042 added
[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 04c1c4a5-1f5b-4be8-8b3b-2bc1e2431452

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.155.229.124; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.224.14.50; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /34.214.116.240; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.166.69.220; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.236.216.15; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.25.70.101; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: QUORUM

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
2023-04-30 10:28:31:407 10 sec: 649263 operations; 64926.3 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=44140, Max=48543, Min=530, Avg=1597.96, 90=2287, 99=5123, 99.9=15543, 99.99=37119] [INSERT: Count=587139, Max=57663, Min=435, Avg=1359.56, 90=1970, 99=5095, 99.9=17487, 99.99=43391] [READ-FAILED: Count=20754, Max=57887, Min=470, Avg=1617, 90=2275, 99=7239, 99.9=32255, 99.99=53695] 
2023-04-30 10:28:41:407 20 sec: 1349237 operations; 69997.4 current ops/sec; est completion in 4 hours 6 minutes [READ: Count=52734, Max=32863, Min=521, Avg=1679.23, 90=2659, 99=3967, 99.9=6415, 99.99=21055] [INSERT: Count=628714, Max=33695, Min=444, Avg=1393.55, 90=2435, 99=3223, 99.9=5831, 99.99=19551] [READ-FAILED: Count=17563, Max=23263, Min=499, Avg=1559.61, 90=2521, 99=3669, 99.9=5403, 99.99=12967] 
2023-04-30 10:28:51:407 30 sec: 2049214 operations; 69997.7 current ops/sec; est completion in 4 hours 3 minutes [READ: Count=54716, Max=44543, Min=533, Avg=1876.41, 90=2963, 99=4215, 99.9=6139, 99.99=20383] [INSERT: Count=629222, Max=42911, Min=453, Avg=1578.61, 90=2617, 99=3287, 99.9=5427, 99.99=19951] [READ-FAILED: Count=15746, Max=25967, Min=501, Avg=1763.4, 90=2833, 99=3849, 99.9=6335, 99.99=20719] 
2023-04-30 10:29:01:407 40 sec: 2749207 operations; 69999.3 current ops/sec; est completion in 4 hours 1 minute [READ: Count=55179, Max=56575, Min=538, Avg=2014.16, 90=3129, 99=4623, 99.9=6767, 99.99=12623] [INSERT: Count=630189, Max=64671, Min=459, Avg=1690.37, 90=2675, 99=3517, 99.9=6567, 99.99=13167] [READ-FAILED: Count=14762, Max=65247, Min=512, Avg=1899.46, 90=2967, 99=4099, 99.9=6915, 99.99=52095] 
2023-04-30 10:29:11:407 50 sec: 3449123 operations; 69991.6 current ops/sec; est completion in 4 hours [READ: Count=55994, Max=48863, Min=536, Avg=1953.96, 90=3093, 99=4599, 99.9=7451, 99.99=12727] [INSERT: Count=630313, Max=50559, Min=470, Avg=1640.51, 90=2699, 99=3531, 99.9=7239, 99.99=22127] [READ-FAILED: Count=13654, Max=42079, Min=511, Avg=1831, 90=2901, 99=4049, 99.9=7423, 99.99=40031] 
2023-04-30 10:29:21:407 60 sec: 4149110 operations; 69998.7 current ops/sec; est completion in 4 hours [READ: Count=56882, Max=41343, Min=536, Avg=2140.12, 90=3423, 99=5355, 99.9=8019, 99.99=25183] [INSERT: Count=629076, Max=49855, Min=462, Avg=1784.16, 90=2859, 99=3827, 99.9=7515, 99.99=21775] [READ-FAILED: Count=12990, Max=27135, Min=525, Avg=2009.53, 90=3205, 99=4447, 99.9=7291, 99.99=19743] 
2023-04-30 10:29:31:407 70 sec: 4849145 operations; 70003.5 current ops/sec; est completion in 3 hours 59 minutes [READ: Count=57708, Max=17647, Min=520, Avg=2164.36, 90=3407, 99=5355, 99.9=7775, 99.99=14927] [INSERT: Count=630720, Max=20783, Min=482, Avg=1808.16, 90=2793, 99=3829, 99.9=7179, 99.99=13751] [READ-FAILED: Count=12310, Max=10527, Min=560, Avg=2033.01, 90=3145, 99=4455, 99.9=7439, 99.99=9839] 
2023-04-30 10:29:41:407 80 sec: 5529819 operations; 68067.4 current ops/sec; est completion in 3 hours 59 minutes [READ: Count=56374, Max=39519, Min=573, Avg=2538.13, 90=3789, 99=5919, 99.9=8051, 99.99=25743] [INSERT: Count=612745, Max=40447, Min=465, Avg=2119.99, 90=3065, 99=3967, 99.9=7139, 99.99=18959] [READ-FAILED: Count=11458, Max=12391, Min=540, Avg=2363.56, 90=3509, 99=4687, 99.9=6975, 99.99=7923] 
2023-04-30 10:29:51:407 90 sec: 6172890 operations; 64307.1 current ops/sec; est completion in 4 hours 1 minute [READ: Count=53931, Max=37791, Min=563, Avg=2714.46, 90=3931, 99=6147, 99.9=8231, 99.99=26767] [INSERT: Count=578760, Max=39359, Min=472, Avg=2289.79, 90=3275, 99=4045, 99.9=7555, 99.99=24415] [READ-FAILED: Count=10641, Max=39807, Min=529, Avg=2538.89, 90=3641, 99=4879, 99.9=7887, 99.99=9031] 
2023-04-30 10:30:01:407 100 sec: 6837197 operations; 66430.7 current ops/sec; est completion in 4 hours 2 minutes [READ: Count=55894, Max=15983, Min=574, Avg=2655.19, 90=3863, 99=6023, 99.9=8075, 99.99=12119] [INSERT: Count=597562, Max=16135, Min=468, Avg=2214.21, 90=3151, 99=4019, 99.9=7179, 99.99=10143] [READ-FAILED: Count=10605, Max=10871, Min=514, Avg=2484.95, 90=3589, 99=4999, 99.9=7447, 99.99=9111] 
2023-04-30 10:30:11:407 110 sec: 7543257 operations; 70606 current ops/sec; est completion in 4 hours 1 minute [READ: Count=59974, Max=36991, Min=546, Avg=2508.27, 90=3737, 99=5879, 99.9=8187, 99.99=24303] [INSERT: Count=635475, Max=48191, Min=479, Avg=2081.75, 90=3061, 99=3887, 99.9=7431, 99.99=23407] [READ-FAILED: Count=10706, Max=25551, Min=538, Avg=2347.43, 90=3471, 99=4903, 99.9=7995, 99.99=21439] 
2023-04-30 10:30:21:407 120 sec: 8217441 operations; 67418.4 current ops/sec; est completion in 4 hours 1 minute [READ: Count=57736, Max=38239, Min=540, Avg=2613.83, 90=3899, 99=6167, 99.9=8295, 99.99=26847] [INSERT: Count=606475, Max=36511, Min=461, Avg=2182.05, 90=3211, 99=3933, 99.9=7655, 99.99=21759] [READ-FAILED: Count=10192, Max=17727, Min=520, Avg=2428.57, 90=3621, 99=4979, 99.9=7483, 99.99=14975] 
2023-04-30 10:30:31:407 130 sec: 8886676 operations; 66923.5 current ops/sec; est completion in 4 hours 1 minute [READ: Count=57565, Max=14943, Min=528, Avg=2628.4, 90=3909, 99=6159, 99.9=8095, 99.99=10903] [INSERT: Count=601953, Max=21935, Min=480, Avg=2198.36, 90=3217, 99=3987, 99.9=7179, 99.99=11911] [READ-FAILED: Count=9668, Max=14383, Min=525, Avg=2456.5, 90=3623, 99=4919, 99.9=7615, 99.99=13583] 
2023-04-30 10:30:41:407 140 sec: 9528962 operations; 64228.6 current ops/sec; est completion in 4 hours 2 minutes [READ: Count=55291, Max=95039, Min=557, Avg=2714.88, 90=4007, 99=6263, 99.9=8527, 99.99=30447] [INSERT: Count=577773, Max=99263, Min=468, Avg=2293.61, 90=3337, 99=4011, 99.9=7507, 99.99=54527] [READ-FAILED: Count=9199, Max=70271, Min=507, Avg=2532.49, 90=3693, 99=4943, 99.9=6659, 99.99=7467] 
2023-04-30 10:30:51:407 150 sec: 10153310 operations; 62434.8 current ops/sec; est completion in 4 hours 3 minutes [READ: Count=54262, Max=63807, Min=532, Avg=2779.54, 90=4057, 99=6359, 99.9=8751, 99.99=22831] [INSERT: Count=561148, Max=78079, Min=460, Avg=2360.54, 90=3343, 99=4091, 99.9=7891, 99.99=36767] [READ-FAILED: Count=8667, Max=38815, Min=517, Avg=2613.67, 90=3733, 99=5107, 99.9=7399, 99.99=8871] 
2023-04-30 10:31:01:407 160 sec: 10763579 operations; 61026.9 current ops/sec; est completion in 4 hours 5 minutes [READ: Count=52814, Max=14983, Min=509, Avg=2882.91, 90=4191, 99=6591, 99.9=8559, 99.99=13135] [INSERT: Count=549221, Max=16879, Min=461, Avg=2411.17, 90=3383, 99=4111, 99.9=7515, 99.99=9375] [READ-FAILED: Count=8259, Max=14399, Min=505, Avg=2693.88, 90=3815, 99=5379, 99.9=7747, 99.99=10991] 
2023-04-30 10:31:11:407 170 sec: 11407160 operations; 64358.1 current ops/sec; est completion in 4 hours 5 minutes [READ: Count=55912, Max=36415, Min=561, Avg=2740.26, 90=4009, 99=6299, 99.9=8647, 99.99=21455] [INSERT: Count=579323, Max=36287, Min=456, Avg=2284.3, 90=3235, 99=3947, 99.9=7731, 99.99=22671] [READ-FAILED: Count=8552, Max=28511, Min=522, Avg=2575.84, 90=3655, 99=5075, 99.9=8207, 99.99=10487] 
2023-04-30 10:31:21:407 180 sec: 12107685 operations; 70052.5 current ops/sec; est completion in 4 hours 4 minutes [READ: Count=60588, Max=24735, Min=550, Avg=2546.31, 90=3837, 99=5899, 99.9=8063, 99.99=18863] [INSERT: Count=630935, Max=40767, Min=462, Avg=2096.13, 90=3121, 99=3869, 99.9=7211, 99.99=19519] [READ-FAILED: Count=9082, Max=24335, Min=525, Avg=2393.78, 90=3579, 99=4895, 99.9=7939, 99.99=20415] 
2023-04-30 10:31:31:407 190 sec: 12799699 operations; 69201.4 current ops/sec; est completion in 4 hours 4 minutes [READ: Count=60794, Max=17487, Min=536, Avg=2573.07, 90=3873, 99=6023, 99.9=8167, 99.99=11239] [INSERT: Count=621956, Max=15119, Min=469, Avg=2122.49, 90=3205, 99=3913, 99.9=7463, 99.99=11087] [READ-FAILED: Count=8957, Max=14431, Min=519, Avg=2423.68, 90=3635, 99=4991, 99.9=8015, 99.99=10951] 
2023-04-30 10:31:41:407 200 sec: 13491313 operations; 69161.4 current ops/sec; est completion in 4 hours 3 minutes [READ: Count=60488, Max=177151, Min=550, Avg=2598.78, 90=3883, 99=6051, 99.9=9279, 99.99=132479] [INSERT: Count=622659, Max=197247, Min=466, Avg=2120.42, 90=3131, 99=3957, 99.9=7703, 99.99=104255] [READ-FAILED: Count=8635, Max=167935, Min=504, Avg=2431.65, 90=3633, 99=5031, 99.9=7731, 99.99=25647] 
2023-04-30 10:31:51:407 210 sec: 14108157 operations; 61684.4 current ops/sec; est completion in 4 hours 4 minutes [READ: Count=54250, Max=40191, Min=580, Avg=2868.34, 90=4131, 99=6287, 99.9=8191, 99.99=21167] [INSERT: Count=554832, Max=40927, Min=479, Avg=2383.58, 90=3307, 99=4025, 99.9=7383, 99.99=23471] [READ-FAILED: Count=7584, Max=13711, Min=527, Avg=2682.83, 90=3765, 99=5223, 99.9=7575, 99.99=10319] 
2023-04-30 10:32:01:407 220 sec: 14689656 operations; 58149.9 current ops/sec; est completion in 4 hours 5 minutes [READ: Count=51007, Max=79167, Min=548, Avg=3025.23, 90=4287, 99=6583, 99.9=8083, 99.99=13807] [INSERT: Count=523433, Max=79999, Min=476, Avg=2530.94, 90=3407, 99=4191, 99.9=7071, 99.99=15199] [READ-FAILED: Count=6944, Max=13495, Min=514, Avg=2823.72, 90=3855, 99=5543, 99.9=7719, 99.99=12287] 
2023-04-30 10:32:11:407 230 sec: 15271325 operations; 58166.9 current ops/sec; est completion in 4 hours 7 minutes [READ: Count=50764, Max=40159, Min=561, Avg=3049.05, 90=4335, 99=6739, 99.9=9079, 99.99=28783] [INSERT: Count=523977, Max=36831, Min=456, Avg=2526.38, 90=3401, 99=4195, 99.9=7483, 99.99=24735] [READ-FAILED: Count=7029, Max=33375, Min=553, Avg=2873.82, 90=3873, 99=5615, 99.9=8199, 99.99=24911] 
2023-04-30 10:32:21:407 240 sec: 15868121 operations; 59679.6 current ops/sec; est completion in 4 hours 8 minutes [READ: Count=52565, Max=46207, Min=587, Avg=2997.07, 90=4267, 99=6651, 99.9=9159, 99.99=22143] [INSERT: Count=537291, Max=39263, Min=489, Avg=2459.71, 90=3291, 99=4131, 99.9=7839, 99.99=23039] [READ-FAILED: Count=6960, Max=27391, Min=622, Avg=2819.6, 90=3849, 99=5551, 99.9=8391, 99.99=22447] 
2023-04-30 10:32:31:407 250 sec: 16469928 operations; 60180.7 current ops/sec; est completion in 4 hours 8 minutes [READ: Count=53502, Max=16367, Min=584, Avg=2966.44, 90=4247, 99=6531, 99.9=8263, 99.99=12447] [INSERT: Count=541224, Max=17951, Min=504, Avg=2439.59, 90=3333, 99=4219, 99.9=7343, 99.99=11983] [READ-FAILED: Count=7021, Max=10567, Min=623, Avg=2779.7, 90=3829, 99=5543, 99.9=7227, 99.99=9135] 
2023-04-30 10:32:41:407 260 sec: 17065866 operations; 59593.8 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=52894, Max=124223, Min=549, Avg=2992.86, 90=4287, 99=6579, 99.9=9007, 99.99=103103] [INSERT: Count=536362, Max=133631, Min=469, Avg=2463.97, 90=3383, 99=4267, 99.9=7583, 99.99=73151] [READ-FAILED: Count=6831, Max=126079, Min=527, Avg=2801.41, 90=3831, 99=5411, 99.9=8447, 99.99=35679] 
2023-04-30 10:32:51:407 270 sec: 17719100 operations; 65323.4 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=57817, Max=34079, Min=553, Avg=2735.23, 90=4015, 99=6287, 99.9=9063, 99.99=26511] [INSERT: Count=588214, Max=46783, Min=469, Avg=2247.23, 90=3179, 99=4013, 99.9=8183, 99.99=24703] [READ-FAILED: Count=7316, Max=26495, Min=512, Avg=2554.43, 90=3655, 99=5283, 99.9=8775, 99.99=22639] 
2023-04-30 10:33:01:407 280 sec: 18330112 operations; 61101.2 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=54187, Max=14535, Min=563, Avg=2909.37, 90=4175, 99=6467, 99.9=8139, 99.99=10775] [INSERT: Count=549808, Max=16343, Min=481, Avg=2405.01, 90=3327, 99=4035, 99.9=7207, 99.99=9119] [READ-FAILED: Count=6827, Max=14663, Min=549, Avg=2705.68, 90=3779, 99=5167, 99.9=7271, 99.99=8527] 
2023-04-30 10:33:11:407 290 sec: 18942066 operations; 61195.4 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=54328, Max=63647, Min=546, Avg=2873.95, 90=4131, 99=6431, 99.9=8279, 99.99=26351] [INSERT: Count=550920, Max=66559, Min=468, Avg=2403.78, 90=3365, 99=4167, 99.9=7539, 99.99=27279] [READ-FAILED: Count=6652, Max=33567, Min=537, Avg=2707.06, 90=3815, 99=5251, 99.9=8103, 99.99=30543] 
2023-04-30 10:33:21:407 300 sec: 19551691 operations; 60962.5 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=54754, Max=36607, Min=562, Avg=2900.86, 90=4159, 99=6535, 99.9=9079, 99.99=29199] [INSERT: Count=548227, Max=68223, Min=472, Avg=2410.8, 90=3375, 99=4139, 99.9=8103, 99.99=27871] [READ-FAILED: Count=6627, Max=64671, Min=532, Avg=2726.27, 90=3825, 99=5115, 99.9=7479, 99.99=29487] 
2023-04-30 10:33:31:407 310 sec: 20186419 operations; 63472.8 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=56486, Max=16199, Min=533, Avg=2787.03, 90=4047, 99=6275, 99.9=8095, 99.99=11527] [INSERT: Count=571662, Max=16375, Min=475, Avg=2315.64, 90=3295, 99=3961, 99.9=7115, 99.99=11367] [READ-FAILED: Count=6678, Max=11087, Min=513, Avg=2613.37, 90=3719, 99=4935, 99.9=6143, 99.99=9431] 
2023-04-30 10:33:41:407 320 sec: 20880150 operations; 69373.1 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=61904, Max=103615, Min=543, Avg=2559.84, 90=3837, 99=6015, 99.9=8207, 99.99=48575] [INSERT: Count=624526, Max=116223, Min=472, Avg=2117.56, 90=3173, 99=3933, 99.9=7551, 99.99=47263] [READ-FAILED: Count=7390, Max=30367, Min=523, Avg=2377.29, 90=3571, 99=4675, 99.9=6883, 99.99=8375] 
2023-04-30 10:33:51:407 330 sec: 21575530 operations; 69538 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=62087, Max=107903, Min=529, Avg=2545.55, 90=3825, 99=5895, 99.9=9343, 99.99=69439] [INSERT: Count=626060, Max=109631, Min=464, Avg=2113.04, 90=3203, 99=3921, 99.9=8279, 99.99=60255] [READ-FAILED: Count=7280, Max=40767, Min=523, Avg=2398.63, 90=3577, 99=4727, 99.9=13639, 99.99=30911] 
2023-04-30 10:34:01:407 340 sec: 22273679 operations; 69814.9 current ops/sec; est completion in 4 hours 8 minutes [READ: Count=63102, Max=53375, Min=547, Avg=2535.74, 90=3807, 99=5947, 99.9=8599, 99.99=17695] [INSERT: Count=627837, Max=65023, Min=463, Avg=2104.79, 90=3137, 99=3903, 99.9=7835, 99.99=19407] [READ-FAILED: Count=7074, Max=13271, Min=526, Avg=2386.99, 90=3569, 99=4955, 99.9=8359, 99.99=12167] 
2023-04-30 10:34:11:407 350 sec: 22914697 operations; 64101.8 current ops/sec; est completion in 4 hours 8 minutes [READ: Count=57964, Max=37151, Min=542, Avg=2741.55, 90=3989, 99=6183, 99.9=8359, 99.99=29791] [INSERT: Count=576639, Max=49855, Min=458, Avg=2294.82, 90=3233, 99=3971, 99.9=7571, 99.99=25663] [READ-FAILED: Count=6547, Max=10671, Min=523, Avg=2574.74, 90=3679, 99=5187, 99.9=7715, 99.99=8631] 
2023-04-30 10:34:21:407 360 sec: 23520265 operations; 60556.8 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=54619, Max=38975, Min=554, Avg=2912.77, 90=4175, 99=6571, 99.9=8887, 99.99=27247] [INSERT: Count=544883, Max=63167, Min=482, Avg=2428.27, 90=3373, 99=4151, 99.9=7799, 99.99=25727] [READ-FAILED: Count=5979, Max=17855, Min=544, Avg=2731.98, 90=3843, 99=5287, 99.9=7619, 99.99=8799] 
2023-04-30 10:34:31:407 370 sec: 24141593 operations; 62132.8 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=55917, Max=14487, Min=583, Avg=2867.85, 90=4135, 99=6599, 99.9=8631, 99.99=11751] [INSERT: Count=559153, Max=17327, Min=483, Avg=2362.75, 90=3257, 99=4087, 99.9=7831, 99.99=11215] [READ-FAILED: Count=6148, Max=10783, Min=563, Avg=2705.4, 90=3771, 99=5503, 99.9=8271, 99.99=9455] 
2023-04-30 10:34:41:407 380 sec: 24786497 operations; 64490.4 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=58169, Max=92351, Min=536, Avg=2794.33, 90=4063, 99=6595, 99.9=9567, 99.99=30879] [INSERT: Count=580593, Max=94463, Min=472, Avg=2273.28, 90=3169, 99=3991, 99.9=8103, 99.99=30783] [READ-FAILED: Count=6454, Max=24463, Min=529, Avg=2585.52, 90=3649, 99=5067, 99.9=8487, 99.99=10543] 
2023-04-30 10:34:51:407 390 sec: 25422168 operations; 63567.1 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=57524, Max=34559, Min=546, Avg=2816.77, 90=4131, 99=6499, 99.9=9079, 99.99=24687] [INSERT: Count=571581, Max=35679, Min=475, Avg=2308.58, 90=3263, 99=4075, 99.9=8151, 99.99=22367] [READ-FAILED: Count=6247, Max=13775, Min=522, Avg=2638.24, 90=3753, 99=5535, 99.9=7995, 99.99=10559] 
2023-04-30 10:35:01:407 400 sec: 26066831 operations; 64466.3 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=57782, Max=15983, Min=561, Avg=2779.21, 90=4099, 99=6331, 99.9=8935, 99.99=12071] [INSERT: Count=580846, Max=16239, Min=467, Avg=2275.85, 90=3251, 99=3981, 99.9=7875, 99.99=11183] [READ-FAILED: Count=6140, Max=11575, Min=523, Avg=2602.23, 90=3749, 99=5171, 99.9=7947, 99.99=10071] 
2023-04-30 10:35:11:407 410 sec: 26732154 operations; 66532.3 current ops/sec; est completion in 4 hours 8 minutes [READ: Count=60305, Max=71359, Min=541, Avg=2715.21, 90=4039, 99=6627, 99.9=9495, 99.99=31215] [INSERT: Count=598705, Max=74559, Min=471, Avg=2202.94, 90=3199, 99=3905, 99.9=8151, 99.99=27599] [READ-FAILED: Count=6272, Max=25535, Min=504, Avg=2528.92, 90=3667, 99=5247, 99.9=8487, 99.99=18639] 
2023-04-30 10:35:21:407 420 sec: 27360341 operations; 62818.7 current ops/sec; est completion in 4 hours 8 minutes [READ: Count=57024, Max=64063, Min=534, Avg=2838.51, 90=4175, 99=6507, 99.9=8935, 99.99=28367] [INSERT: Count=565391, Max=65727, Min=476, Avg=2337.47, 90=3291, 99=3969, 99.9=8207, 99.99=26415] [READ-FAILED: Count=5836, Max=10783, Min=532, Avg=2645.69, 90=3761, 99=5223, 99.9=7951, 99.99=10231] 
2023-04-30 10:35:31:407 430 sec: 27941201 operations; 58086 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=52985, Max=14063, Min=549, Avg=3051.67, 90=4387, 99=6735, 99.9=8767, 99.99=11671] [INSERT: Count=522388, Max=16335, Min=473, Avg=2529.52, 90=3443, 99=4223, 99.9=7927, 99.99=11535] [READ-FAILED: Count=5409, Max=15367, Min=550, Avg=2864.03, 90=3927, 99=5635, 99.9=8535, 99.99=11263] 
2023-04-30 10:35:41:407 440 sec: 28534430 operations; 59322.9 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=53951, Max=143871, Min=556, Avg=3005.49, 90=4315, 99=6755, 99.9=9831, 99.99=36959] [INSERT: Count=533951, Max=155647, Min=465, Avg=2474.62, 90=3393, 99=4051, 99.9=8511, 99.99=78143] [READ-FAILED: Count=5523, Max=25119, Min=514, Avg=2786.96, 90=3887, 99=5627, 99.9=8375, 99.99=21279] 
2023-04-30 10:35:51:407 450 sec: 29157650 operations; 62322 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=56658, Max=48479, Min=547, Avg=2864.09, 90=4207, 99=6479, 99.9=9479, 99.99=23503] [INSERT: Count=560921, Max=73407, Min=455, Avg=2355.44, 90=3365, 99=4159, 99.9=8091, 99.99=28047] [READ-FAILED: Count=5610, Max=8463, Min=522, Avg=2676.92, 90=3863, 99=5219, 99.9=7887, 99.99=8359] 
2023-04-30 10:36:01:407 460 sec: 29775125 operations; 61747.5 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=56129, Max=63839, Min=558, Avg=2898.88, 90=4263, 99=6599, 99.9=8575, 99.99=11335] [INSERT: Count=555767, Max=71167, Min=470, Avg=2376.37, 90=3371, 99=4163, 99.9=7695, 99.99=14311] [READ-FAILED: Count=5535, Max=15679, Min=538, Avg=2712.56, 90=3865, 99=5315, 99.9=7591, 99.99=13303] 
2023-04-30 10:36:11:407 470 sec: 30403388 operations; 62826.3 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=57430, Max=47007, Min=545, Avg=2845.59, 90=4199, 99=6543, 99.9=8887, 99.99=16255] [INSERT: Count=565320, Max=65247, Min=466, Avg=2335.5, 90=3347, 99=3925, 99.9=8095, 99.99=26687] [READ-FAILED: Count=5617, Max=58015, Min=523, Avg=2666.44, 90=3799, 99=5227, 99.9=8103, 99.99=26927] 
2023-04-30 10:36:21:407 480 sec: 31016571 operations; 61318.3 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=56338, Max=91135, Min=527, Avg=2930.19, 90=4275, 99=6747, 99.9=9399, 99.99=38463] [INSERT: Count=551193, Max=98367, Min=466, Avg=2392.34, 90=3357, 99=3949, 99.9=7679, 99.99=44255] [READ-FAILED: Count=5373, Max=16751, Min=495, Avg=2706.51, 90=3791, 99=5379, 99.9=7875, 99.99=16175] 
2023-04-30 10:36:31:407 490 sec: 31598476 operations; 58190.5 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=53078, Max=18495, Min=534, Avg=3066.71, 90=4391, 99=6791, 99.9=8503, 99.99=13703] [INSERT: Count=523721, Max=18159, Min=458, Avg=2523.56, 90=3425, 99=4015, 99.9=7591, 99.99=11095] [READ-FAILED: Count=4997, Max=13071, Min=524, Avg=2838.43, 90=3839, 99=5395, 99.9=8383, 99.99=13071] 
2023-04-30 10:36:41:407 500 sec: 32151775 operations; 55329.9 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=50371, Max=115775, Min=556, Avg=3221.48, 90=4599, 99=7035, 99.9=9375, 99.99=89599] [INSERT: Count=498039, Max=122431, Min=460, Avg=2654.95, 90=3495, 99=4223, 99.9=7831, 99.99=46783] [READ-FAILED: Count=4831, Max=27663, Min=525, Avg=2974.06, 90=3955, 99=5495, 99.9=8359, 99.99=27663] 
2023-04-30 10:36:51:407 510 sec: 32684017 operations; 53224.2 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=48457, Max=49439, Min=566, Avg=3319.03, 90=4755, 99=7031, 99.9=9471, 99.99=31615] [INSERT: Count=479097, Max=49215, Min=473, Avg=2762.93, 90=3561, 99=4339, 99.9=7347, 99.99=28063] [READ-FAILED: Count=4598, Max=9399, Min=579, Avg=3092.89, 90=4081, 99=5691, 99.9=8255, 99.99=9399] 
2023-04-30 10:37:01:407 520 sec: 33216594 operations; 53257.7 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=48840, Max=19343, Min=582, Avg=3324.91, 90=4811, 99=7055, 99.9=9279, 99.99=18111] [INSERT: Count=479324, Max=21295, Min=492, Avg=2759.99, 90=3525, 99=4311, 99.9=7263, 99.99=9239] [READ-FAILED: Count=4516, Max=17935, Min=727, Avg=3082.38, 90=4041, 99=5575, 99.9=7839, 99.99=17935] 
2023-04-30 10:37:11:407 530 sec: 33734468 operations; 51787.4 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=47052, Max=89471, Min=585, Avg=3432.06, 90=5007, 99=7243, 99.9=9719, 99.99=33951] [INSERT: Count=466384, Max=92991, Min=484, Avg=2837.96, 90=3587, 99=4411, 99.9=8003, 99.99=31743] [READ-FAILED: Count=4363, Max=11455, Min=569, Avg=3149.04, 90=4119, 99=5627, 99.9=8359, 99.99=11455] 
2023-04-30 10:37:21:407 540 sec: 34249118 operations; 51465 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=46884, Max=92223, Min=618, Avg=3481.82, 90=5055, 99=7283, 99.9=10799, 99.99=37055] [INSERT: Count=463451, Max=95039, Min=478, Avg=2852, 90=3581, 99=4395, 99.9=7975, 99.99=40991] [READ-FAILED: Count=4298, Max=44671, Min=825, Avg=3219.95, 90=4179, 99=5831, 99.9=8879, 99.99=44671] 
2023-04-30 10:37:31:407 550 sec: 34786818 operations; 53770 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=49575, Max=15647, Min=549, Avg=3348.78, 90=4895, 99=7135, 99.9=8967, 99.99=10735] [INSERT: Count=483728, Max=18767, Min=504, Avg=2727.12, 90=3527, 99=4339, 99.9=7599, 99.99=9855] [READ-FAILED: Count=4501, Max=14887, Min=749, Avg=3065.06, 90=4077, 99=5619, 99.9=8115, 99.99=14887] 
2023-04-30 10:37:41:407 560 sec: 35356919 operations; 57010.1 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=52284, Max=75455, Min=516, Avg=3204.7, 90=4607, 99=6975, 99.9=10023, 99.99=43263] [INSERT: Count=513395, Max=78591, Min=469, Avg=2567.52, 90=3427, 99=4243, 99.9=7531, 99.99=29919] [READ-FAILED: Count=4565, Max=21615, Min=606, Avg=2939.05, 90=3983, 99=5607, 99.9=8591, 99.99=21615] 
2023-04-30 10:37:51:407 570 sec: 35939659 operations; 58274 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=53499, Max=46463, Min=561, Avg=3110.11, 90=4443, 99=6819, 99.9=8959, 99.99=29503] [INSERT: Count=524106, Max=44703, Min=472, Avg=2515.05, 90=3459, 99=4271, 99.9=7495, 99.99=25935] [READ-FAILED: Count=4827, Max=26671, Min=521, Avg=2882.73, 90=3979, 99=5495, 99.9=8287, 99.99=26671] 
2023-04-30 10:38:01:407 580 sec: 36519184 operations; 57952.5 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=53260, Max=16247, Min=535, Avg=3112.09, 90=4463, 99=6839, 99.9=9319, 99.99=14015] [INSERT: Count=521782, Max=18143, Min=455, Avg=2528.94, 90=3477, 99=4247, 99.9=7359, 99.99=13063] [READ-FAILED: Count=4723, Max=9663, Min=535, Avg=2868.24, 90=3965, 99=5319, 99.9=7419, 99.99=9663] 
2023-04-30 10:38:11:407 590 sec: 37077713 operations; 55852.9 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=51447, Max=35487, Min=537, Avg=3215.98, 90=4583, 99=6971, 99.9=9215, 99.99=27087] [INSERT: Count=502569, Max=39743, Min=473, Avg=2626.5, 90=3525, 99=4335, 99.9=7687, 99.99=23023] [READ-FAILED: Count=4501, Max=26111, Min=577, Avg=2969.65, 90=3973, 99=5387, 99.9=7351, 99.99=26111] 
2023-04-30 10:38:21:407 600 sec: 37629763 operations; 55205 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=50776, Max=87487, Min=580, Avg=3254.77, 90=4683, 99=7159, 99.9=10311, 99.99=27775] [INSERT: Count=496885, Max=80575, Min=468, Avg=2657.11, 90=3525, 99=4339, 99.9=8271, 99.99=28959] [READ-FAILED: Count=4402, Max=59903, Min=570, Avg=2992.49, 90=3973, 99=5507, 99.9=8279, 99.99=59903] 
2023-04-30 10:38:31:407 610 sec: 38214740 operations; 58497.7 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=53743, Max=14351, Min=551, Avg=3052.28, 90=4355, 99=6647, 99.9=8607, 99.99=12711] [INSERT: Count=526728, Max=18927, Min=459, Avg=2509.45, 90=3467, 99=4175, 99.9=7523, 99.99=12623] [READ-FAILED: Count=4542, Max=7683, Min=529, Avg=2838.18, 90=3895, 99=5239, 99.9=7219, 99.99=7683] 
2023-04-30 10:38:41:407 620 sec: 38795161 operations; 58042.1 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=53339, Max=45087, Min=532, Avg=3072.61, 90=4391, 99=6799, 99.9=9247, 99.99=23103] [INSERT: Count=522571, Max=68031, Min=463, Avg=2529.96, 90=3467, 99=4187, 99.9=7663, 99.99=26303] [READ-FAILED: Count=4604, Max=25647, Min=545, Avg=2829.76, 90=3877, 99=5343, 99.9=7527, 99.99=25647] 
2023-04-30 10:38:51:407 630 sec: 39382368 operations; 58720.7 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=54446, Max=56543, Min=549, Avg=3035.62, 90=4383, 99=6759, 99.9=9143, 99.99=29647] [INSERT: Count=528159, Max=80575, Min=462, Avg=2500.55, 90=3433, 99=4267, 99.9=7751, 99.99=30383] [READ-FAILED: Count=4606, Max=13471, Min=511, Avg=2784.85, 90=3791, 99=5195, 99.9=7391, 99.99=13471] 
2023-04-30 10:39:01:407 640 sec: 39959963 operations; 57759.5 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=53669, Max=30255, Min=547, Avg=3084.95, 90=4451, 99=6807, 99.9=9023, 99.99=12863] [INSERT: Count=519374, Max=57791, Min=459, Avg=2542.16, 90=3453, 99=4263, 99.9=7019, 99.99=10255] [READ-FAILED: Count=4531, Max=13903, Min=530, Avg=2834.63, 90=3843, 99=5219, 99.9=7431, 99.99=13903] 
2023-04-30 10:39:11:407 650 sec: 40549611 operations; 58964.8 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=54120, Max=113535, Min=540, Avg=3031.25, 90=4391, 99=6843, 99.9=9231, 99.99=61695] [INSERT: Count=530977, Max=117503, Min=446, Avg=2490.1, 90=3387, 99=4247, 99.9=7647, 99.99=28847] [READ-FAILED: Count=4423, Max=25359, Min=524, Avg=2748.47, 90=3811, 99=5219, 99.9=7223, 99.99=25359] 
2023-04-30 10:39:21:407 660 sec: 41124420 operations; 57480.9 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=52941, Max=33375, Min=528, Avg=3081.36, 90=4419, 99=6719, 99.9=8919, 99.99=28223] [INSERT: Count=517411, Max=52159, Min=459, Avg=2557.24, 90=3417, 99=4215, 99.9=7875, 99.99=25535] [READ-FAILED: Count=4381, Max=32863, Min=542, Avg=2820.06, 90=3845, 99=5451, 99.9=8543, 99.99=32863] 
2023-04-30 10:39:31:407 670 sec: 41694485 operations; 57006.5 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=52853, Max=14727, Min=526, Avg=3112.08, 90=4495, 99=6667, 99.9=8471, 99.99=10927] [INSERT: Count=512939, Max=19439, Min=456, Avg=2577.41, 90=3417, 99=4243, 99.9=7207, 99.99=10735] [READ-FAILED: Count=4369, Max=14151, Min=563, Avg=2874.55, 90=3867, 99=5543, 99.9=7635, 99.99=14151] 
2023-04-30 10:39:41:407 680 sec: 42246550 operations; 55206.5 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=51005, Max=122623, Min=701, Avg=3225.34, 90=4719, 99=7035, 99.9=9871, 99.99=73535] [INSERT: Count=496813, Max=124735, Min=486, Avg=2660.77, 90=3523, 99=4271, 99.9=7595, 99.99=63071] [READ-FAILED: Count=4174, Max=24111, Min=912, Avg=2965.84, 90=3989, 99=5459, 99.9=8647, 99.99=24111] 
2023-04-30 10:39:51:407 690 sec: 42798717 operations; 55216.7 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=51335, Max=41183, Min=589, Avg=3222.46, 90=4675, 99=7051, 99.9=9679, 99.99=30703] [INSERT: Count=496682, Max=38783, Min=499, Avg=2660.06, 90=3521, 99=4371, 99.9=7855, 99.99=21311] [READ-FAILED: Count=4106, Max=9279, Min=598, Avg=2933.82, 90=3981, 99=5487, 99.9=8511, 99.99=9279] 
2023-04-30 10:40:01:407 700 sec: 43367676 operations; 56895.9 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=52809, Max=104895, Min=563, Avg=3136.56, 90=4535, 99=6867, 99.9=8983, 99.99=31071] [INSERT: Count=512165, Max=107455, Min=467, Avg=2580.08, 90=3441, 99=4255, 99.9=7643, 99.99=28991] [READ-FAILED: Count=4194, Max=90367, Min=522, Avg=2874.04, 90=3893, 99=5271, 99.9=9311, 99.99=90367] 
2023-04-30 10:40:11:407 710 sec: 43972178 operations; 60450.2 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=56068, Max=85055, Min=538, Avg=2953.26, 90=4339, 99=6687, 99.9=8983, 99.99=30575] [INSERT: Count=543892, Max=89855, Min=478, Avg=2428.41, 90=3351, 99=4075, 99.9=7719, 99.99=28367] [READ-FAILED: Count=4584, Max=52415, Min=536, Avg=2711.16, 90=3763, 99=5139, 99.9=7987, 99.99=52415] 
2023-04-30 10:40:21:407 720 sec: 44565817 operations; 59363.9 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=54946, Max=36991, Min=525, Avg=3017.32, 90=4403, 99=6751, 99.9=8975, 99.99=23167] [INSERT: Count=534311, Max=49887, Min=470, Avg=2472.14, 90=3325, 99=4077, 99.9=7855, 99.99=24335] [READ-FAILED: Count=4343, Max=32463, Min=533, Avg=2774.75, 90=3809, 99=5331, 99.9=7911, 99.99=32463] 
2023-04-30 10:40:31:407 730 sec: 45161282 operations; 59546.5 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=55188, Max=15135, Min=550, Avg=3000.36, 90=4423, 99=6663, 99.9=8535, 99.99=12727] [INSERT: Count=535936, Max=15839, Min=473, Avg=2465.35, 90=3365, 99=4231, 99.9=7283, 99.99=11503] [READ-FAILED: Count=4313, Max=11887, Min=505, Avg=2746.26, 90=3823, 99=5227, 99.9=7935, 99.99=11887] 
2023-04-30 10:40:41:407 740 sec: 45746765 operations; 58548.3 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=53983, Max=144639, Min=531, Avg=3037.17, 90=4395, 99=6631, 99.9=9423, 99.99=65055] [INSERT: Count=527278, Max=179327, Min=448, Avg=2510.29, 90=3387, 99=4215, 99.9=8171, 99.99=126079] [READ-FAILED: Count=4161, Max=10303, Min=528, Avg=2771.44, 90=3835, 99=5223, 99.9=6527, 99.99=10303] 
2023-04-30 10:40:51:407 750 sec: 46330959 operations; 58419.4 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=54411, Max=89663, Min=554, Avg=3085.2, 90=4431, 99=6779, 99.9=9271, 99.99=31327] [INSERT: Count=525639, Max=103167, Min=453, Avg=2508.55, 90=3369, 99=4163, 99.9=7571, 99.99=31023] [READ-FAILED: Count=4273, Max=73535, Min=542, Avg=2831.56, 90=3797, 99=5243, 99.9=9647, 99.99=73535] 
2023-04-30 10:41:01:407 760 sec: 46904894 operations; 57393.5 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=53195, Max=68351, Min=524, Avg=3131.6, 90=4499, 99=6879, 99.9=9535, 99.99=13335] [INSERT: Count=516354, Max=127167, Min=477, Avg=2555.92, 90=3363, 99=4175, 99.9=7951, 99.99=57631] [READ-FAILED: Count=4150, Max=77567, Min=570, Avg=2880.42, 90=3849, 99=5427, 99.9=8359, 99.99=77567] 
2023-04-30 10:41:11:407 770 sec: 47489517 operations; 58462.3 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=54683, Max=30927, Min=529, Avg=3081.07, 90=4531, 99=6947, 99.9=9455, 99.99=22287] [INSERT: Count=525903, Max=35935, Min=459, Avg=2507.67, 90=3403, 99=4223, 99.9=7787, 99.99=21567] [READ-FAILED: Count=4120, Max=35455, Min=516, Avg=2804.33, 90=3859, 99=5443, 99.9=8255, 99.99=35455] 
2023-04-30 10:41:21:407 780 sec: 48097990 operations; 60847.3 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=57021, Max=66943, Min=523, Avg=2960.52, 90=4359, 99=6799, 99.9=9895, 99.99=25407] [INSERT: Count=547098, Max=75007, Min=446, Avg=2409.17, 90=3323, 99=4135, 99.9=8039, 99.99=25791] [READ-FAILED: Count=4402, Max=26319, Min=514, Avg=2708.95, 90=3819, 99=5107, 99.9=8047, 99.99=26319] 
2023-04-30 10:41:31:407 790 sec: 48705025 operations; 60703.5 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=56653, Max=51583, Min=514, Avg=2964.69, 90=4355, 99=6627, 99.9=9111, 99.99=50047] [INSERT: Count=546084, Max=51903, Min=462, Avg=2415.45, 90=3289, 99=3997, 99.9=7903, 99.99=49919] [READ-FAILED: Count=4319, Max=11639, Min=534, Avg=2714.24, 90=3797, 99=5247, 99.9=8495, 99.99=11639] 
2023-04-30 10:41:41:407 800 sec: 49310221 operations; 60519.6 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=56193, Max=29231, Min=522, Avg=2957.25, 90=4351, 99=6547, 99.9=8935, 99.99=16143] [INSERT: Count=544615, Max=39071, Min=465, Avg=2425.06, 90=3339, 99=4171, 99.9=7459, 99.99=21103] [READ-FAILED: Count=4318, Max=9471, Min=546, Avg=2725.09, 90=3831, 99=5191, 99.9=7687, 99.99=9471] 
2023-04-30 10:41:51:407 810 sec: 49899371 operations; 58915 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=54837, Max=40063, Min=539, Avg=3045.5, 90=4459, 99=6623, 99.9=8927, 99.99=19167] [INSERT: Count=530226, Max=40031, Min=461, Avg=2489.81, 90=3405, 99=4207, 99.9=7619, 99.99=20415] [READ-FAILED: Count=4098, Max=28063, Min=503, Avg=2812.18, 90=3893, 99=5319, 99.9=6951, 99.99=28063] 
2023-04-30 10:42:01:407 820 sec: 50478196 operations; 57882.5 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=53953, Max=16023, Min=530, Avg=3114.89, 90=4591, 99=6791, 99.9=8823, 99.99=11551] [INSERT: Count=520758, Max=17263, Min=464, Avg=2533.07, 90=3449, 99=4223, 99.9=7299, 99.99=10735] [READ-FAILED: Count=4026, Max=9367, Min=514, Avg=2879.53, 90=3897, 99=5399, 99.9=7751, 99.99=9367] 
2023-04-30 10:42:11:407 830 sec: 50998117 operations; 51992.1 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=48765, Max=50143, Min=570, Avg=3475.54, 90=5167, 99=7959, 99.9=24783, 99.99=42175] [INSERT: Count=467577, Max=59039, Min=478, Avg=2819.82, 90=3583, 99=4555, 99.9=22239, 99.99=41695] [READ-FAILED: Count=3436, Max=32543, Min=563, Avg=3171.08, 90=4147, 99=6091, 99.9=16815, 99.99=32543] 
2023-04-30 10:42:21:407 840 sec: 51509640 operations; 51152.3 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=47519, Max=41695, Min=914, Avg=3528.55, 90=5203, 99=7587, 99.9=10447, 99.99=30527] [INSERT: Count=460613, Max=38463, Min=554, Avg=2866.03, 90=3627, 99=4475, 99.9=7475, 99.99=24815] [READ-FAILED: Count=3391, Max=33183, Min=1069, Avg=3243.11, 90=4219, 99=5803, 99.9=8479, 99.99=33183] 
2023-04-30 10:42:31:407 850 sec: 52052044 operations; 54240.4 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50714, Max=16399, Min=556, Avg=3379.45, 90=5031, 99=7219, 99.9=9519, 99.99=12583] [INSERT: Count=488151, Max=17039, Min=503, Avg=2696.34, 90=3579, 99=4335, 99.9=7291, 99.99=10807] [READ-FAILED: Count=3660, Max=8687, Min=984, Avg=3097.23, 90=4127, 99=5491, 99.9=8147, 99.99=8687] 
2023-04-30 10:42:41:407 860 sec: 52653785 operations; 60174.1 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=56422, Max=33759, Min=569, Avg=3067.68, 90=4531, 99=6935, 99.9=10167, 99.99=20223] [INSERT: Count=541444, Max=29215, Min=476, Avg=2429.25, 90=3351, 99=4231, 99.9=8655, 99.99=21839] [READ-FAILED: Count=4045, Max=14231, Min=602, Avg=2815.15, 90=3873, 99=5463, 99.9=7807, 99.99=14231] 
2023-04-30 10:42:51:407 870 sec: 53291117 operations; 63733.2 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=59520, Max=15095, Min=569, Avg=2892.43, 90=4319, 99=6639, 99.9=8671, 99.99=11231] [INSERT: Count=573604, Max=15959, Min=499, Avg=2291.49, 90=3209, 99=4091, 99.9=7327, 99.99=9823] [READ-FAILED: Count=4245, Max=15415, Min=577, Avg=2659.83, 90=3759, 99=5575, 99.9=8107, 99.99=15415] 
2023-04-30 10:43:01:407 880 sec: 53956894 operations; 66577.7 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=61569, Max=56031, Min=630, Avg=2766.71, 90=4171, 99=6491, 99.9=8599, 99.99=27055] [INSERT: Count=599922, Max=47103, Min=501, Avg=2195.62, 90=3093, 99=3983, 99.9=7519, 99.99=22559] [READ-FAILED: Count=4401, Max=29199, Min=627, Avg=2540.17, 90=3637, 99=5211, 99.9=7971, 99.99=29199] 
2023-04-30 10:43:11:407 890 sec: 54624574 operations; 66768 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=62143, Max=31791, Min=578, Avg=2758.42, 90=4163, 99=6423, 99.9=8575, 99.99=25343] [INSERT: Count=600987, Max=30655, Min=502, Avg=2189.38, 90=3081, 99=3949, 99.9=7499, 99.99=20735] [READ-FAILED: Count=4397, Max=13823, Min=604, Avg=2502.23, 90=3619, 99=5135, 99.9=7667, 99.99=13823] 
2023-04-30 10:43:21:407 900 sec: 55293155 operations; 66858.1 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=62611, Max=19439, Min=554, Avg=2740.18, 90=4139, 99=6495, 99.9=8519, 99.99=16031] [INSERT: Count=601652, Max=19535, Min=480, Avg=2187.64, 90=3095, 99=3899, 99.9=7471, 99.99=15095] [READ-FAILED: Count=4298, Max=19263, Min=541, Avg=2535.97, 90=3643, 99=5239, 99.9=8583, 99.99=19263] 
2023-04-30 10:43:31:407 910 sec: 55840550 operations; 54739.5 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=51102, Max=37439, Min=563, Avg=3291.18, 90=4979, 99=7223, 99.9=9335, 99.99=26079] [INSERT: Count=492423, Max=37343, Min=486, Avg=2680.52, 90=3533, 99=4407, 99.9=7779, 99.99=21359] [READ-FAILED: Count=3521, Max=8079, Min=629, Avg=2978.69, 90=4067, 99=5679, 99.9=7583, 99.99=8079] 
2023-04-30 10:43:41:407 920 sec: 56340329 operations; 49977.9 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=46862, Max=13055, Min=618, Avg=3542.8, 90=5315, 99=7263, 99.9=9303, 99.99=11351] [INSERT: Count=449814, Max=12703, Min=464, Avg=2940.75, 90=3639, 99=4435, 99.9=7379, 99.99=8775] [READ-FAILED: Count=3106, Max=9287, Min=684, Avg=3212.15, 90=4163, 99=5607, 99.9=7751, 99.99=9287] 
2023-04-30 10:43:51:407 930 sec: 56915030 operations; 57470.1 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=54363, Max=44415, Min=529, Avg=3142.26, 90=4747, 99=6959, 99.9=9231, 99.99=26975] [INSERT: Count=516900, Max=51199, Min=492, Avg=2548.94, 90=3483, 99=4319, 99.9=7643, 99.99=20239] [READ-FAILED: Count=3762, Max=15967, Min=556, Avg=2884.17, 90=3947, 99=5615, 99.9=7803, 99.99=15967] 
2023-04-30 10:44:01:407 940 sec: 57551424 operations; 63639.4 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=59830, Max=15159, Min=573, Avg=2875.27, 90=4335, 99=6643, 99.9=8735, 99.99=11583] [INSERT: Count=572508, Max=15535, Min=484, Avg=2298.23, 90=3231, 99=4031, 99.9=7495, 99.99=9447] [READ-FAILED: Count=4088, Max=9343, Min=605, Avg=2644.9, 90=3721, 99=5507, 99.9=8303, 99.99=9343] 
2023-04-30 10:44:11:407 950 sec: 58196700 operations; 64527.6 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=59997, Max=34847, Min=580, Avg=2842.42, 90=4279, 99=6543, 99.9=8567, 99.99=23199] [INSERT: Count=581241, Max=31919, Min=469, Avg=2266.63, 90=3193, 99=4083, 99.9=7251, 99.99=22751] [READ-FAILED: Count=4066, Max=9471, Min=563, Avg=2609.78, 90=3685, 99=5503, 99.9=7535, 99.99=9471] 
2023-04-30 10:44:21:407 960 sec: 58846985 operations; 65028.5 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=60832, Max=53759, Min=550, Avg=2810.19, 90=4199, 99=6539, 99.9=9271, 99.99=23711] [INSERT: Count=585433, Max=49503, Min=459, Avg=2250.06, 90=3199, 99=4043, 99.9=8071, 99.99=19247] [READ-FAILED: Count=4063, Max=15399, Min=536, Avg=2577.89, 90=3699, 99=5071, 99.9=7967, 99.99=15399] 
2023-04-30 10:44:31:407 970 sec: 59505092 operations; 65810.7 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=61398, Max=15495, Min=557, Avg=2784, 90=4159, 99=6359, 99.9=8271, 99.99=10535] [INSERT: Count=592502, Max=17903, Min=482, Avg=2222.65, 90=3137, 99=4075, 99.9=7107, 99.99=11279] [READ-FAILED: Count=4105, Max=14927, Min=539, Avg=2574.61, 90=3671, 99=5295, 99.9=7899, 99.99=14927] 
2023-04-30 10:44:41:407 980 sec: 60065631 operations; 56053.9 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=52688, Max=30399, Min=568, Avg=3244.79, 90=4883, 99=7135, 99.9=9247, 99.99=19103] [INSERT: Count=504050, Max=34239, Min=462, Avg=2614.19, 90=3495, 99=4339, 99.9=7251, 99.99=23087] [READ-FAILED: Count=3415, Max=10687, Min=531, Avg=2940.99, 90=3989, 99=5527, 99.9=7927, 99.99=10687] 
2023-04-30 10:44:51:407 990 sec: 60569396 operations; 50376.5 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=47060, Max=11799, Min=552, Avg=3528.61, 90=5255, 99=7199, 99.9=8935, 99.99=10855] [INSERT: Count=453693, Max=13383, Min=477, Avg=2915.74, 90=3627, 99=4359, 99.9=7215, 99.99=10671] [READ-FAILED: Count=3091, Max=24319, Min=559, Avg=3204.76, 90=4111, 99=5747, 99.9=7719, 99.99=24319] 
2023-04-30 10:45:01:407 1000 sec: 61106494 operations; 53709.8 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=50819, Max=33439, Min=566, Avg=3377.33, 90=5087, 99=7287, 99.9=10591, 99.99=21103] [INSERT: Count=482934, Max=35935, Min=477, Avg=2727.73, 90=3535, 99=4263, 99.9=8863, 99.99=23631] [READ-FAILED: Count=3273, Max=27887, Min=538, Avg=3037.95, 90=4055, 99=5791, 99.9=9167, 99.99=27887] 
2023-04-30 10:45:11:407 1010 sec: 61664492 operations; 55799.8 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=52010, Max=71871, Min=608, Avg=3296.86, 90=4999, 99=7331, 99.9=10479, 99.99=29695] [INSERT: Count=502776, Max=69375, Min=501, Avg=2619.73, 90=3437, 99=4235, 99.9=7703, 99.99=29823] [READ-FAILED: Count=3445, Max=26527, Min=603, Avg=2946.37, 90=3973, 99=5535, 99.9=8287, 99.99=26527] 
2023-04-30 10:45:21:407 1020 sec: 62244325 operations; 57983.3 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=54382, Max=38623, Min=618, Avg=3185.06, 90=4787, 99=7099, 99.9=9335, 99.99=12407] [INSERT: Count=522041, Max=85695, Min=490, Avg=2520.27, 90=3399, 99=4203, 99.9=7571, 99.99=15207] [READ-FAILED: Count=3444, Max=10663, Min=630, Avg=2901.74, 90=3957, 99=5615, 99.9=8383, 99.99=10663] 
2023-04-30 10:45:31:407 1030 sec: 62826707 operations; 58238.2 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=54468, Max=34879, Min=565, Avg=3154.83, 90=4699, 99=6919, 99.9=9623, 99.99=29887] [INSERT: Count=524415, Max=33023, Min=467, Avg=2511.17, 90=3389, 99=4303, 99.9=7819, 99.99=21343] [READ-FAILED: Count=3522, Max=18895, Min=565, Avg=2858.45, 90=3909, 99=5567, 99.9=9703, 99.99=18895] 
2023-04-30 10:45:41:407 1040 sec: 63413585 operations; 58687.8 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=55165, Max=74495, Min=557, Avg=3135.58, 90=4715, 99=6887, 99.9=9151, 99.99=42239] [INSERT: Count=528438, Max=82175, Min=469, Avg=2490.37, 90=3369, 99=4203, 99.9=7623, 99.99=19519] [READ-FAILED: Count=3527, Max=77375, Min=562, Avg=2870.54, 90=3877, 99=5355, 99.9=8207, 99.99=77375] 
2023-04-30 10:45:51:407 1050 sec: 63991871 operations; 57828.6 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=54386, Max=33119, Min=509, Avg=3165.76, 90=4799, 99=7059, 99.9=9143, 99.99=21615] [INSERT: Count=520429, Max=34943, Min=448, Avg=2530.49, 90=3431, 99=4203, 99.9=7547, 99.99=25439] [READ-FAILED: Count=3349, Max=9823, Min=535, Avg=2875.01, 90=3897, 99=5503, 99.9=7851, 99.99=9823] 
2023-04-30 10:46:01:407 1060 sec: 64494260 operations; 50238.9 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=46841, Max=32767, Min=561, Avg=3574, 90=5379, 99=7471, 99.9=10287, 99.99=24863] [INSERT: Count=452215, Max=38879, Min=479, Avg=2921.7, 90=3623, 99=4431, 99.9=7787, 99.99=21567] [READ-FAILED: Count=3033, Max=9543, Min=567, Avg=3247.04, 90=4175, 99=5743, 99.9=7791, 99.99=9543] 
2023-04-30 10:46:11:407 1070 sec: 64997166 operations; 50290.6 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=47118, Max=15007, Min=573, Avg=3573.25, 90=5419, 99=7479, 99.9=9847, 99.99=11959] [INSERT: Count=452754, Max=16719, Min=488, Avg=2917.16, 90=3605, 99=4391, 99.9=7539, 99.99=10455] [READ-FAILED: Count=3004, Max=9951, Min=540, Avg=3200.7, 90=4093, 99=5699, 99.9=7827, 99.99=9951] 
2023-04-30 10:46:21:407 1080 sec: 65523840 operations; 52667.4 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=49570, Max=37855, Min=564, Avg=3464.27, 90=5279, 99=7515, 99.9=10575, 99.99=20687] [INSERT: Count=474186, Max=34591, Min=471, Avg=2779.37, 90=3537, 99=4323, 99.9=7651, 99.99=22207] [READ-FAILED: Count=3036, Max=10007, Min=578, Avg=3127.96, 90=4171, 99=5943, 99.9=7763, 99.99=10007] 
2023-04-30 10:46:31:407 1090 sec: 66066480 operations; 54264 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=51839, Max=18927, Min=598, Avg=3381.21, 90=5127, 99=7291, 99.9=9735, 99.99=14047] [INSERT: Count=487601, Max=18703, Min=492, Avg=2694.5, 90=3493, 99=4339, 99.9=7307, 99.99=11319] [READ-FAILED: Count=3173, Max=8983, Min=607, Avg=3057.84, 90=4111, 99=5723, 99.9=7711, 99.99=8983] 
2023-04-30 10:46:41:407 1100 sec: 66611244 operations; 54476.4 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=51057, Max=94527, Min=550, Avg=3349.24, 90=5019, 99=7259, 99.9=10895, 99.99=45215] [INSERT: Count=490641, Max=125887, Min=478, Avg=2687.47, 90=3521, 99=4367, 99.9=7859, 99.99=49151] [READ-FAILED: Count=3116, Max=9239, Min=528, Avg=3000.84, 90=4073, 99=5615, 99.9=7655, 99.99=9239] 
2023-04-30 10:46:51:407 1110 sec: 67157526 operations; 54628.2 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=51451, Max=49247, Min=530, Avg=3340.9, 90=4971, 99=7143, 99.9=10287, 99.99=45919] [INSERT: Count=491197, Max=62687, Min=474, Avg=2681.15, 90=3535, 99=4343, 99.9=7951, 99.99=46111] [READ-FAILED: Count=3144, Max=44799, Min=543, Avg=3062.33, 90=4077, 99=5659, 99.9=10119, 99.99=44799] 
2023-04-30 10:47:01:407 1120 sec: 67716257 operations; 55873.1 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=52257, Max=81407, Min=564, Avg=3278.8, 90=4959, 99=7027, 99.9=9535, 99.99=19167] [INSERT: Count=503870, Max=84863, Min=476, Avg=2616.82, 90=3495, 99=4303, 99.9=7723, 99.99=18863] [READ-FAILED: Count=3285, Max=9319, Min=538, Avg=2968.53, 90=4045, 99=5423, 99.9=7643, 99.99=9319] 
2023-04-30 10:47:11:407 1130 sec: 68256374 operations; 54011.7 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=51175, Max=30239, Min=578, Avg=3363.23, 90=5071, 99=7191, 99.9=9287, 99.99=19407] [INSERT: Count=485665, Max=37951, Min=489, Avg=2711.79, 90=3509, 99=4319, 99.9=7567, 99.99=21583] [READ-FAILED: Count=3103, Max=28351, Min=595, Avg=3067.25, 90=3999, 99=5335, 99.9=18991, 99.99=28351] 
2023-04-30 10:47:21:407 1140 sec: 68768059 operations; 51168.5 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=48328, Max=18063, Min=563, Avg=3505.12, 90=5303, 99=7391, 99.9=10151, 99.99=12647] [INSERT: Count=459985, Max=17631, Min=486, Avg=2869.59, 90=3617, 99=4395, 99.9=7483, 99.99=14095] [READ-FAILED: Count=2905, Max=8935, Min=543, Avg=3161.19, 90=4135, 99=5687, 99.9=7359, 99.99=8935] 
2023-04-30 10:47:31:407 1150 sec: 69263494 operations; 49543.5 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=46527, Max=29103, Min=616, Avg=3622.84, 90=5495, 99=7683, 99.9=11639, 99.99=19663] [INSERT: Count=446433, Max=32351, Min=514, Avg=2959.74, 90=3633, 99=4531, 99.9=8075, 99.99=23231] [READ-FAILED: Count=2848, Max=16431, Min=925, Avg=3223.23, 90=4115, 99=5887, 99.9=8447, 99.99=16431] 
2023-04-30 10:47:41:407 1160 sec: 69801196 operations; 53770.2 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50578, Max=36351, Min=567, Avg=3378.52, 90=5143, 99=7367, 99.9=10711, 99.99=28191] [INSERT: Count=484271, Max=39839, Min=466, Avg=2723.74, 90=3525, 99=4331, 99.9=7635, 99.99=24239] [READ-FAILED: Count=3027, Max=27119, Min=638, Avg=3053.42, 90=4059, 99=5835, 99.9=8327, 99.99=27119] 
2023-04-30 10:47:51:407 1170 sec: 70345653 operations; 54445.7 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=51517, Max=19999, Min=608, Avg=3354.06, 90=5075, 99=7331, 99.9=9807, 99.99=12679] [INSERT: Count=489847, Max=50047, Min=505, Avg=2688.59, 90=3497, 99=4331, 99.9=7359, 99.99=8999] [READ-FAILED: Count=2961, Max=8839, Min=781, Avg=2989.63, 90=3985, 99=5583, 99.9=7647, 99.99=8839] 
2023-04-30 10:48:01:407 1180 sec: 70877612 operations; 53195.9 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50115, Max=69055, Min=584, Avg=3403.18, 90=5155, 99=7295, 99.9=10503, 99.99=42911] [INSERT: Count=478876, Max=71935, Min=492, Avg=2754.88, 90=3555, 99=4431, 99.9=7579, 99.99=30207] [READ-FAILED: Count=2938, Max=32431, Min=653, Avg=3079.62, 90=4171, 99=5607, 99.9=6947, 99.99=32431] 
2023-04-30 10:48:11:407 1190 sec: 71421803 operations; 54419.1 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=51681, Max=14151, Min=581, Avg=3320.33, 90=4999, 99=7039, 99.9=8743, 99.99=11975] [INSERT: Count=489518, Max=18079, Min=513, Avg=2692.59, 90=3511, 99=4371, 99.9=7159, 99.99=9607] [READ-FAILED: Count=2992, Max=9031, Min=592, Avg=3052.14, 90=4085, 99=5755, 99.9=7347, 99.99=9031] 
2023-04-30 10:48:21:407 1200 sec: 71990763 operations; 56896 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=54100, Max=36095, Min=598, Avg=3211.62, 90=4867, 99=7043, 99.9=9407, 99.99=30719] [INSERT: Count=511794, Max=35679, Min=493, Avg=2571.59, 90=3423, 99=4243, 99.9=7539, 99.99=24687] [READ-FAILED: Count=3137, Max=10063, Min=638, Avg=2919.48, 90=3975, 99=5479, 99.9=7891, 99.99=10063] 
2023-04-30 10:48:31:407 1210 sec: 72525356 operations; 53459.3 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50417, Max=34591, Min=611, Avg=3373.68, 90=5107, 99=7103, 99.9=9407, 99.99=24703] [INSERT: Count=481187, Max=34751, Min=499, Avg=2742.8, 90=3517, 99=4155, 99.9=7935, 99.99=23247] [READ-FAILED: Count=2884, Max=8839, Min=773, Avg=3038.19, 90=4023, 99=5555, 99.9=7847, 99.99=8839] 
2023-04-30 10:48:41:407 1220 sec: 73044599 operations; 51924.3 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=49379, Max=76031, Min=600, Avg=3473.55, 90=5275, 99=7323, 99.9=10247, 99.99=12615] [INSERT: Count=467005, Max=89599, Min=488, Avg=2823.62, 90=3567, 99=4171, 99.9=6635, 99.99=32303] [READ-FAILED: Count=2815, Max=73343, Min=980, Avg=3154.8, 90=4115, 99=5651, 99.9=8043, 99.99=73343] 
2023-04-30 10:48:51:407 1230 sec: 73563746 operations; 51914.7 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=48963, Max=35551, Min=625, Avg=3503.66, 90=5331, 99=7571, 99.9=11047, 99.99=31071] [INSERT: Count=467504, Max=37247, Min=509, Avg=2820.99, 90=3587, 99=4371, 99.9=7231, 99.99=25439] [READ-FAILED: Count=2819, Max=18879, Min=905, Avg=3145.29, 90=4171, 99=5987, 99.9=8511, 99.99=18879] 
2023-04-30 10:49:01:407 1240 sec: 74103012 operations; 53926.6 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51162, Max=15887, Min=589, Avg=3370.02, 90=5103, 99=7319, 99.9=9807, 99.99=12895] [INSERT: Count=485242, Max=15647, Min=492, Avg=2715.65, 90=3539, 99=4367, 99.9=7271, 99.99=9279] [READ-FAILED: Count=2928, Max=9863, Min=534, Avg=3041.86, 90=4077, 99=5559, 99.9=7491, 99.99=9863] 
2023-04-30 10:49:11:407 1250 sec: 74653742 operations; 55073 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=52268, Max=108863, Min=550, Avg=3307.48, 90=5039, 99=7219, 99.9=10295, 99.99=32927] [INSERT: Count=495562, Max=121855, Min=489, Avg=2658.09, 90=3493, 99=4331, 99.9=7403, 99.99=58207] [READ-FAILED: Count=2982, Max=9991, Min=542, Avg=2990.44, 90=4017, 99=5999, 99.9=9079, 99.99=9991] 
2023-04-30 10:49:21:407 1260 sec: 75202968 operations; 54922.6 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=52089, Max=125439, Min=604, Avg=3317.02, 90=5027, 99=7295, 99.9=9607, 99.99=16159] [INSERT: Count=493935, Max=116799, Min=484, Avg=2665.57, 90=3509, 99=4351, 99.9=7547, 99.99=50207] [READ-FAILED: Count=3013, Max=8127, Min=732, Avg=3020.76, 90=4089, 99=5919, 99.9=7443, 99.99=8127] 
2023-04-30 10:49:31:407 1270 sec: 75748165 operations; 54519.7 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51434, Max=40287, Min=581, Avg=3327.26, 90=5003, 99=7159, 99.9=9895, 99.99=27583] [INSERT: Count=490869, Max=38399, Min=480, Avg=2686.86, 90=3533, 99=4387, 99.9=7939, 99.99=22191] [READ-FAILED: Count=2891, Max=14911, Min=596, Avg=3028.19, 90=4029, 99=5807, 99.9=7947, 99.99=14911] 
2023-04-30 10:49:41:407 1280 sec: 76292704 operations; 54453.9 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51511, Max=28479, Min=555, Avg=3357.21, 90=5123, 99=7347, 99.9=10255, 99.99=25695] [INSERT: Count=490078, Max=45759, Min=485, Avg=2687.35, 90=3513, 99=4315, 99.9=7387, 99.99=21167] [READ-FAILED: Count=2949, Max=9047, Min=561, Avg=3048.6, 90=4043, 99=5999, 99.9=8151, 99.99=9047] 
2023-04-30 10:49:51:407 1290 sec: 76827949 operations; 53524.5 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=50777, Max=17471, Min=538, Avg=3391.92, 90=5187, 99=7319, 99.9=9551, 99.99=13247] [INSERT: Count=481631, Max=16767, Min=470, Avg=2736.46, 90=3549, 99=4323, 99.9=7563, 99.99=10031] [READ-FAILED: Count=2839, Max=16687, Min=575, Avg=3051.42, 90=4073, 99=5775, 99.9=8407, 99.99=16687] 
2023-04-30 10:50:01:407 1300 sec: 77347319 operations; 51937 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=49160, Max=121151, Min=533, Avg=3500.76, 90=5307, 99=7439, 99.9=10487, 99.99=107711] [INSERT: Count=467395, Max=130175, Min=483, Avg=2820.2, 90=3577, 99=4411, 99.9=7991, 99.99=74815] [READ-FAILED: Count=2747, Max=94591, Min=535, Avg=3162.35, 90=4203, 99=5855, 99.9=8759, 99.99=94591] 
2023-04-30 10:50:11:407 1310 sec: 77845097 operations; 49777.8 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=47082, Max=98879, Min=608, Avg=3634.76, 90=5491, 99=7527, 99.9=10111, 99.99=18239] [INSERT: Count=447979, Max=104703, Min=480, Avg=2944.47, 90=3621, 99=4395, 99.9=7615, 99.99=50335] [READ-FAILED: Count=2659, Max=8751, Min=945, Avg=3253.8, 90=4211, 99=5811, 99.9=8343, 99.99=8751] 
2023-04-30 10:50:21:407 1320 sec: 78357696 operations; 51259.9 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=48342, Max=84031, Min=547, Avg=3542.07, 90=5335, 99=7443, 99.9=11183, 99.99=39423] [INSERT: Count=461651, Max=82239, Min=469, Avg=2857.96, 90=3585, 99=4395, 99.9=7671, 99.99=36031] [READ-FAILED: Count=2660, Max=9823, Min=531, Avg=3209.29, 90=4175, 99=6243, 99.9=8663, 99.99=9823] 
2023-04-30 10:50:31:407 1330 sec: 78887703 operations; 53000.7 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=50443, Max=28303, Min=562, Avg=3443.97, 90=5259, 99=7371, 99.9=10847, 99.99=19311] [INSERT: Count=476946, Max=32287, Min=469, Avg=2761.04, 90=3535, 99=4443, 99.9=8311, 99.99=22239] [READ-FAILED: Count=2696, Max=13063, Min=505, Avg=3097.26, 90=4079, 99=5791, 99.9=8783, 99.99=13063] 
2023-04-30 10:50:41:407 1340 sec: 79424786 operations; 53708.3 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=50994, Max=128255, Min=555, Avg=3416.21, 90=5167, 99=7399, 99.9=10615, 99.99=99071] [INSERT: Count=483304, Max=142463, Min=465, Avg=2723.34, 90=3529, 99=4363, 99.9=7627, 99.99=88575] [READ-FAILED: Count=2803, Max=33631, Min=607, Avg=3080.26, 90=4079, 99=5799, 99.9=8567, 99.99=33631] 
2023-04-30 10:50:51:407 1350 sec: 79953444 operations; 52865.8 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=49769, Max=33471, Min=610, Avg=3446.47, 90=5199, 99=7151, 99.9=9311, 99.99=14935] [INSERT: Count=476054, Max=33759, Min=491, Avg=2770.18, 90=3551, 99=4387, 99.9=7239, 99.99=24111] [READ-FAILED: Count=2702, Max=16559, Min=593, Avg=3106.68, 90=4167, 99=5775, 99.9=8399, 99.99=16559] 
2023-04-30 10:51:01:407 1360 sec: 80470995 operations; 51755.1 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=48937, Max=75519, Min=563, Avg=3508.67, 90=5323, 99=7487, 99.9=11599, 99.99=27519] [INSERT: Count=466020, Max=109951, Min=498, Avg=2830.21, 90=3573, 99=4443, 99.9=8703, 99.99=28287] [READ-FAILED: Count=2631, Max=10535, Min=799, Avg=3160.08, 90=4077, 99=5771, 99.9=8247, 99.99=10535] 
2023-04-30 10:51:11:407 1370 sec: 81029815 operations; 55882 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=53127, Max=84607, Min=570, Avg=3260.36, 90=4939, 99=7123, 99.9=9639, 99.99=16463] [INSERT: Count=502989, Max=111679, Min=476, Avg=2619.19, 90=3455, 99=4291, 99.9=7575, 99.99=20767] [READ-FAILED: Count=2880, Max=7667, Min=718, Avg=2938.88, 90=3979, 99=5515, 99.9=6999, 99.99=7667] 
2023-04-30 10:51:21:407 1380 sec: 81596684 operations; 56686.9 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=53549, Max=46143, Min=540, Avg=3216.23, 90=4887, 99=7075, 99.9=9895, 99.99=23855] [INSERT: Count=510345, Max=27759, Min=479, Avg=2582.75, 90=3435, 99=4271, 99.9=7379, 99.99=20527] [READ-FAILED: Count=2924, Max=44127, Min=517, Avg=2925.77, 90=3913, 99=5411, 99.9=9903, 99.99=44127] 
2023-04-30 10:51:31:407 1390 sec: 82097023 operations; 50033.9 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=47343, Max=38687, Min=572, Avg=3588.4, 90=5447, 99=7579, 99.9=11999, 99.99=31855] [INSERT: Count=450314, Max=48607, Min=468, Avg=2932.52, 90=3645, 99=4735, 99.9=8687, 99.99=24095] [READ-FAILED: Count=2568, Max=28319, Min=576, Avg=3242.71, 90=4211, 99=5999, 99.9=9335, 99.99=28319] 
2023-04-30 10:51:41:407 1400 sec: 82639543 operations; 54252 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=51022, Max=132479, Min=566, Avg=3321.55, 90=5047, 99=7087, 99.9=10607, 99.99=40415] [INSERT: Count=488994, Max=133119, Min=463, Avg=2702.59, 90=3575, 99=4383, 99.9=7471, 99.99=43967] [READ-FAILED: Count=2725, Max=9247, Min=549, Avg=2982.85, 90=4051, 99=5631, 99.9=7707, 99.99=9247] 
2023-04-30 10:51:51:407 1410 sec: 83212146 operations; 57260.3 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=54020, Max=29967, Min=536, Avg=3175.02, 90=4859, 99=6975, 99.9=9327, 99.99=24367] [INSERT: Count=515708, Max=39391, Min=454, Avg=2557.5, 90=3491, 99=4359, 99.9=7627, 99.99=22191] [READ-FAILED: Count=2931, Max=9263, Min=523, Avg=2855.51, 90=4001, 99=5479, 99.9=7835, 99.99=9263] 
2023-04-30 10:52:01:407 1420 sec: 83797042 operations; 58489.6 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=55229, Max=29727, Min=524, Avg=3137.22, 90=4795, 99=6871, 99.9=8647, 99.99=12591] [INSERT: Count=526744, Max=28767, Min=458, Avg=2500.6, 90=3445, 99=4307, 99.9=7311, 99.99=12807] [READ-FAILED: Count=2931, Max=8051, Min=531, Avg=2848.61, 90=3987, 99=5563, 99.9=7387, 99.99=8051] 
2023-04-30 10:52:11:407 1430 sec: 84359630 operations; 56258.8 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=53378, Max=79807, Min=517, Avg=3257.47, 90=4995, 99=7211, 99.9=10471, 99.99=21151] [INSERT: Count=506326, Max=107071, Min=465, Avg=2600.68, 90=3493, 99=4383, 99.9=7855, 99.99=28735] [READ-FAILED: Count=2825, Max=14991, Min=532, Avg=2942.68, 90=3983, 99=5531, 99.9=7967, 99.99=14991] 
2023-04-30 10:52:21:407 1440 sec: 84916745 operations; 55711.5 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=52772, Max=50047, Min=543, Avg=3293.34, 90=4975, 99=7047, 99.9=9015, 99.99=17487] [INSERT: Count=501410, Max=47167, Min=473, Avg=2624.61, 90=3487, 99=4275, 99.9=7627, 99.99=23791] [READ-FAILED: Count=2867, Max=13143, Min=638, Avg=2989.66, 90=4007, 99=5431, 99.9=7943, 99.99=13143] 
2023-04-30 10:52:31:407 1450 sec: 85545703 operations; 62895.8 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=59692, Max=17423, Min=537, Avg=2918.14, 90=4423, 99=6611, 99.9=8575, 99.99=11263] [INSERT: Count=566257, Max=19247, Min=461, Avg=2324.64, 90=3317, 99=4107, 99.9=7267, 99.99=10311] [READ-FAILED: Count=3158, Max=9015, Min=535, Avg=2657.93, 90=3791, 99=5483, 99.9=7847, 99.99=9015] 
2023-04-30 10:52:41:407 1460 sec: 86127004 operations; 58130.1 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=55265, Max=105215, Min=539, Avg=3119.22, 90=4731, 99=7019, 99.9=11927, 99.99=57919] [INSERT: Count=522938, Max=114239, Min=441, Avg=2520.4, 90=3443, 99=4259, 99.9=10983, 99.99=66687] [READ-FAILED: Count=2900, Max=40959, Min=519, Avg=2792.74, 90=3849, 99=5359, 99.9=8495, 99.99=40959] 
2023-04-30 10:52:51:407 1470 sec: 86664118 operations; 53711.4 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=50515, Max=19471, Min=563, Avg=3340.63, 90=5099, 99=7179, 99.9=9311, 99.99=12527] [INSERT: Count=483929, Max=20287, Min=500, Avg=2731.65, 90=3553, 99=4343, 99.9=7315, 99.99=10383] [READ-FAILED: Count=2644, Max=8767, Min=682, Avg=3017.66, 90=4021, 99=5311, 99.9=8039, 99.99=8767] 
2023-04-30 10:53:01:407 1480 sec: 87244568 operations; 58045 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=54942, Max=40575, Min=611, Avg=3121.67, 90=4775, 99=7039, 99.9=9695, 99.99=30415] [INSERT: Count=522704, Max=78783, Min=475, Avg=2523.81, 90=3441, 99=4251, 99.9=7591, 99.99=30671] [READ-FAILED: Count=2904, Max=18783, Min=530, Avg=2828.43, 90=3897, 99=5643, 99.9=9047, 99.99=18783] 
2023-04-30 10:53:11:407 1490 sec: 87857112 operations; 61254.4 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=58596, Max=106623, Min=526, Avg=2990.06, 90=4563, 99=6895, 99.9=8991, 99.99=11663] [INSERT: Count=551051, Max=111551, Min=475, Avg=2387.03, 90=3329, 99=3967, 99.9=7471, 99.99=35231] [READ-FAILED: Count=3063, Max=12343, Min=527, Avg=2653.04, 90=3761, 99=5159, 99.9=7947, 99.99=12343] 
2023-04-30 10:53:21:407 1500 sec: 88515778 operations; 65866.6 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=62472, Max=86975, Min=538, Avg=2809.76, 90=4319, 99=6655, 99.9=9903, 99.99=48575] [INSERT: Count=592998, Max=83263, Min=465, Avg=2217.29, 90=3209, 99=3943, 99.9=7455, 99.99=28191] [READ-FAILED: Count=3291, Max=56959, Min=535, Avg=2540.45, 90=3651, 99=5483, 99.9=8343, 99.99=56959] 
2023-04-30 10:53:31:407 1510 sec: 89147782 operations; 63200.4 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=60196, Max=17951, Min=533, Avg=2910.3, 90=4391, 99=6603, 99.9=8951, 99.99=12399] [INSERT: Count=568651, Max=16303, Min=461, Avg=2313.17, 90=3243, 99=4067, 99.9=7467, 99.99=11087] [READ-FAILED: Count=2938, Max=8895, Min=513, Avg=2652.73, 90=3743, 99=5319, 99.9=7139, 99.99=8895] 
2023-04-30 10:53:41:407 1520 sec: 89755662 operations; 60788 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=57715, Max=37407, Min=584, Avg=3035.04, 90=4555, 99=6819, 99.9=9727, 99.99=28719] [INSERT: Count=547245, Max=55967, Min=478, Avg=2403.66, 90=3323, 99=4219, 99.9=7647, 99.99=27135] [READ-FAILED: Count=2879, Max=46463, Min=640, Avg=2772.53, 90=3857, 99=5375, 99.9=8311, 99.99=46463] 
2023-04-30 10:53:51:407 1530 sec: 90339641 operations; 58397.9 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=55754, Max=94591, Min=551, Avg=3159.61, 90=4807, 99=7103, 99.9=9559, 99.99=19567] [INSERT: Count=525222, Max=116287, Min=477, Avg=2502.67, 90=3399, 99=4195, 99.9=7907, 99.99=30271] [READ-FAILED: Count=2877, Max=17711, Min=727, Avg=2844.35, 90=3905, 99=5591, 99.9=8415, 99.99=17711] 
2023-04-30 10:54:01:407 1540 sec: 90832088 operations; 49244.7 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=46296, Max=52095, Min=561, Avg=3675.66, 90=5555, 99=7531, 99.9=10751, 99.99=13535] [INSERT: Count=443628, Max=52031, Min=472, Avg=2976.96, 90=3651, 99=4435, 99.9=7467, 99.99=13167] [READ-FAILED: Count=2399, Max=10847, Min=686, Avg=3321.67, 90=4259, 99=5927, 99.9=7879, 99.99=10847] 
2023-04-30 10:54:11:407 1550 sec: 91371405 operations; 53931.7 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=51312, Max=36735, Min=561, Avg=3400.52, 90=5143, 99=7119, 99.9=9799, 99.99=30655] [INSERT: Count=485455, Max=35391, Min=474, Avg=2711.27, 90=3543, 99=4359, 99.9=7335, 99.99=24191] [READ-FAILED: Count=2719, Max=30031, Min=549, Avg=3059.71, 90=4021, 99=5431, 99.9=7395, 99.99=30031] 
2023-04-30 10:54:21:407 1560 sec: 91980109 operations; 60870.4 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=57819, Max=57439, Min=576, Avg=3056.09, 90=4647, 99=6863, 99.9=9615, 99.99=17279] [INSERT: Count=548286, Max=58751, Min=479, Avg=2397.13, 90=3291, 99=4085, 99.9=7639, 99.99=15823] [READ-FAILED: Count=3006, Max=10263, Min=636, Avg=2763.07, 90=3801, 99=5423, 99.9=8327, 99.99=10263] 
2023-04-30 10:54:31:407 1570 sec: 92639872 operations; 65976.3 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=62755, Max=33983, Min=560, Avg=2850.51, 90=4399, 99=7003, 99.9=9479, 99.99=26399] [INSERT: Count=593821, Max=34495, Min=490, Avg=2208.48, 90=3151, 99=3979, 99.9=7875, 99.99=20783] [READ-FAILED: Count=3054, Max=31071, Min=543, Avg=2574.57, 90=3679, 99=5579, 99.9=9295, 99.99=31071] 
2023-04-30 10:54:41:407 1580 sec: 93337627 operations; 69775.5 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=66550, Max=119103, Min=532, Avg=2652.62, 90=4103, 99=6427, 99.9=8839, 99.99=28239] [INSERT: Count=627991, Max=121599, Min=463, Avg=2092.33, 90=3091, 99=3935, 99.9=7123, 99.99=46783] [READ-FAILED: Count=3262, Max=8415, Min=523, Avg=2407.66, 90=3615, 99=5171, 99.9=7931, 99.99=8415] 
2023-04-30 10:54:51:407 1590 sec: 94026136 operations; 68850.9 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=65449, Max=46431, Min=546, Avg=2700.15, 90=4183, 99=6495, 99.9=8895, 99.99=25839] [INSERT: Count=619777, Max=56639, Min=470, Avg=2119.93, 90=3087, 99=3991, 99.9=7579, 99.99=24559] [READ-FAILED: Count=3244, Max=9159, Min=509, Avg=2444.58, 90=3627, 99=5147, 99.9=7523, 99.99=9159] 
2023-04-30 10:55:01:407 1600 sec: 94666616 operations; 64048 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=60617, Max=49311, Min=564, Avg=2904.5, 90=4423, 99=6791, 99.9=9471, 99.99=27647] [INSERT: Count=576637, Max=46943, Min=466, Avg=2279.61, 90=3259, 99=3965, 99.9=7547, 99.99=26223] [READ-FAILED: Count=2990, Max=30399, Min=576, Avg=2602.74, 90=3715, 99=5291, 99.9=7623, 99.99=30399] 
2023-04-30 10:55:11:407 1610 sec: 95192570 operations; 52595.4 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=50034, Max=112767, Min=538, Avg=3441.47, 90=5247, 99=7179, 99.9=9631, 99.99=27551] [INSERT: Count=473340, Max=107967, Min=469, Avg=2786.58, 90=3577, 99=4411, 99.9=7587, 99.99=15959] [READ-FAILED: Count=2464, Max=13735, Min=609, Avg=3079.34, 90=4025, 99=5763, 99.9=7859, 99.99=13735] 
2023-04-30 10:55:21:407 1620 sec: 95759284 operations; 56671.4 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=53967, Max=46079, Min=551, Avg=3207.38, 90=4855, 99=6819, 99.9=9231, 99.99=27999] [INSERT: Count=510254, Max=41663, Min=465, Avg=2583.18, 90=3499, 99=4335, 99.9=7831, 99.99=26703] [READ-FAILED: Count=2650, Max=21695, Min=548, Avg=2912.49, 90=3991, 99=5843, 99.9=8983, 99.99=21695] 
2023-04-30 10:55:31:407 1630 sec: 96364257 operations; 60497.3 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=58119, Max=18335, Min=520, Avg=3060.37, 90=4767, 99=7003, 99.9=8919, 99.99=13511] [INSERT: Count=544309, Max=17007, Min=462, Avg=2413.39, 90=3373, 99=4119, 99.9=7499, 99.99=13311] [READ-FAILED: Count=2877, Max=11695, Min=542, Avg=2735.05, 90=3847, 99=5367, 99.9=7355, 99.99=11695] 
2023-04-30 10:55:41:407 1640 sec: 97016839 operations; 65258.2 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=61888, Max=100351, Min=546, Avg=2851.1, 90=4403, 99=6891, 99.9=9927, 99.99=37183] [INSERT: Count=587636, Max=109759, Min=470, Avg=2236.11, 90=3183, 99=3963, 99.9=8255, 99.99=55039] [READ-FAILED: Count=2964, Max=9215, Min=542, Avg=2558.8, 90=3727, 99=5243, 99.9=8247, 99.99=9215] 
2023-04-30 10:55:51:407 1650 sec: 97682946 operations; 66610.7 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=63916, Max=27711, Min=548, Avg=2785.76, 90=4307, 99=6647, 99.9=8855, 99.99=19247] [INSERT: Count=599393, Max=36831, Min=467, Avg=2190.99, 90=3161, 99=3957, 99.9=7395, 99.99=22751] [READ-FAILED: Count=3083, Max=8775, Min=547, Avg=2500.99, 90=3641, 99=5107, 99.9=7775, 99.99=8775] 
2023-04-30 10:56:01:407 1660 sec: 98357040 operations; 67409.4 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=64536, Max=62175, Min=537, Avg=2762.04, 90=4271, 99=6627, 99.9=9135, 99.99=33567] [INSERT: Count=606071, Max=63647, Min=458, Avg=2164.53, 90=3157, 99=3975, 99.9=7583, 99.99=13127] [READ-FAILED: Count=3128, Max=14103, Min=533, Avg=2487.6, 90=3657, 99=5059, 99.9=8127, 99.99=14103] 
2023-04-30 10:56:11:407 1670 sec: 98960615 operations; 60357.5 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=57428, Max=36831, Min=556, Avg=3060.57, 90=4619, 99=6823, 99.9=9383, 99.99=28863] [INSERT: Count=542874, Max=36287, Min=463, Avg=2422.23, 90=3365, 99=4151, 99.9=7463, 99.99=23487] [READ-FAILED: Count=2817, Max=24047, Min=552, Avg=2748.8, 90=3851, 99=5207, 99.9=8623, 99.99=24047] 
2023-04-30 10:56:21:407 1680 sec: 99451263 operations; 49064.8 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=46909, Max=83455, Min=584, Avg=3668.12, 90=5551, 99=7395, 99.9=10215, 99.99=17247] [INSERT: Count=441583, Max=82367, Min=477, Avg=2988.24, 90=3663, 99=4459, 99.9=7735, 99.99=18015] [READ-FAILED: Count=2182, Max=12903, Min=631, Avg=3308.55, 90=4223, 99=5811, 99.9=9615, 99.99=12903] 
2023-04-30 10:56:31:407 1690 sec: 99982520 operations; 53125.7 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=50846, Max=33663, Min=581, Avg=3444.64, 90=5279, 99=7271, 99.9=10319, 99.99=27423] [INSERT: Count=478127, Max=33055, Min=480, Avg=2752.12, 90=3545, 99=4455, 99.9=8407, 99.99=22639] [READ-FAILED: Count=2496, Max=15351, Min=612, Avg=3116.94, 90=4155, 99=5831, 99.9=9023, 99.99=15351] 
2023-04-30 10:56:41:407 1700 sec: 100566000 operations; 58348 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=55681, Max=101503, Min=521, Avg=3164.92, 90=4863, 99=7083, 99.9=10079, 99.99=61727] [INSERT: Count=525258, Max=132991, Min=454, Avg=2503.92, 90=3375, 99=4045, 99.9=7907, 99.99=54367] [READ-FAILED: Count=2602, Max=8887, Min=508, Avg=2851.79, 90=3919, 99=5559, 99.9=8351, 99.99=8887] 
2023-04-30 10:56:51:407 1710 sec: 101159704 operations; 59370.4 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=56495, Max=16191, Min=552, Avg=3106.86, 90=4695, 99=6891, 99.9=9015, 99.99=10807] [INSERT: Count=534591, Max=22047, Min=472, Avg=2461.24, 90=3369, 99=3951, 99.9=7215, 99.99=8735] [READ-FAILED: Count=2656, Max=8767, Min=531, Avg=2802.23, 90=3827, 99=5487, 99.9=7899, 99.99=8767] 
2023-04-30 10:57:01:407 1720 sec: 101784888 operations; 62518.4 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=59759, Max=87167, Min=524, Avg=2977.24, 90=4467, 99=6719, 99.9=8975, 99.99=27263] [INSERT: Count=562960, Max=93375, Min=470, Avg=2333.29, 90=3313, 99=3975, 99.9=7799, 99.99=28063] [READ-FAILED: Count=2774, Max=88447, Min=568, Avg=2788.16, 90=3897, 99=5687, 99.9=11615, 99.99=88447] 
2023-04-30 10:57:11:407 1730 sec: 102424313 operations; 63942.5 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=61212, Max=128575, Min=560, Avg=2910.27, 90=4375, 99=6563, 99.9=8823, 99.99=33695] [INSERT: Count=575184, Max=140927, Min=468, Avg=2281.87, 90=3291, 99=4005, 99.9=7675, 99.99=25503] [READ-FAILED: Count=2811, Max=41695, Min=505, Avg=2638, 90=3761, 99=5239, 99.9=7895, 99.99=41695] 
2023-04-30 10:57:21:407 1740 sec: 103059220 operations; 63490.7 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=60353, Max=84863, Min=555, Avg=2913.81, 90=4359, 99=6635, 99.9=9879, 99.99=36063] [INSERT: Count=571814, Max=88255, Min=467, Avg=2300.4, 90=3289, 99=3961, 99.9=8631, 99.99=26879] [READ-FAILED: Count=2871, Max=18799, Min=548, Avg=2658.98, 90=3787, 99=5267, 99.9=9311, 99.99=18799] 
2023-04-30 10:57:31:407 1750 sec: 103601977 operations; 54275.7 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=51527, Max=22591, Min=526, Avg=3400.41, 90=5211, 99=7419, 99.9=10479, 99.99=14663] [INSERT: Count=488580, Max=43807, Min=477, Avg=2693.99, 90=3529, 99=4411, 99.9=7783, 99.99=15503] [READ-FAILED: Count=2327, Max=8583, Min=552, Avg=3055.81, 90=4115, 99=5603, 99.9=7547, 99.99=8583] 
2023-04-30 10:57:41:407 1760 sec: 104135152 operations; 53317.5 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=50840, Max=83263, Min=575, Avg=3439.96, 90=5307, 99=7467, 99.9=10007, 99.99=33599] [INSERT: Count=480159, Max=121727, Min=488, Avg=2742.22, 90=3571, 99=4371, 99.9=8055, 99.99=43295] [READ-FAILED: Count=2295, Max=121855, Min=542, Avg=3187.51, 90=4115, 99=5959, 99.9=12887, 99.99=121855] 
2023-04-30 10:57:51:407 1770 sec: 104680935 operations; 54578.3 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=52197, Max=35071, Min=533, Avg=3380.41, 90=5243, 99=7355, 99.9=10103, 99.99=27503] [INSERT: Count=490603, Max=39711, Min=483, Avg=2679.86, 90=3515, 99=4267, 99.9=7967, 99.99=24847] [READ-FAILED: Count=2337, Max=24831, Min=591, Avg=3033.04, 90=4039, 99=5939, 99.9=10759, 99.99=24831] 
2023-04-30 10:58:01:407 1780 sec: 105228645 operations; 54771 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=52647, Max=18815, Min=588, Avg=3365.98, 90=5167, 99=7411, 99.9=10287, 99.99=14047] [INSERT: Count=493176, Max=21503, Min=463, Avg=2665.07, 90=3481, 99=4143, 99.9=7915, 99.99=14455] [READ-FAILED: Count=2420, Max=10495, Min=556, Avg=2993.07, 90=3937, 99=5895, 99.9=8815, 99.99=10495] 
2023-04-30 10:58:11:407 1790 sec: 105807485 operations; 57884 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=55155, Max=131967, Min=557, Avg=3199.91, 90=4859, 99=7167, 99.9=10767, 99.99=32559] [INSERT: Count=521313, Max=173311, Min=460, Avg=2526.87, 90=3431, 99=4139, 99.9=8711, 99.99=79871] [READ-FAILED: Count=2516, Max=30239, Min=566, Avg=2908.27, 90=3973, 99=5635, 99.9=7879, 99.99=30239] 
Maximum time elapsed. Requesting stop for the workload.
Stop requested for workload. Now Joining!
2023-04-30 10:58:21:407 1800 sec: 106418348 operations; 61086.3 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=58403, Max=157567, Min=552, Avg=3023.12, 90=4539, 99=6799, 99.9=9127, 99.99=41791] [INSERT: Count=549591, Max=166271, Min=455, Avg=2386.8, 90=3399, 99=4099, 99.9=7883, 99.99=83967] [READ-FAILED: Count=2681, Max=17647, Min=529, Avg=2716.04, 90=3861, 99=5299, 99.9=8799, 99.99=17647] 
Still waiting for thread Thread-19 to complete. Workload status: true
2023-04-30 10:58:23:648 1802 sec: 106419439 operations; 486.84 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=88, Max=6267, Min=1041, Avg=2938.94, 90=4139, 99=5495, 99.9=6267, 99.99=6267] [CLEANUP: Count=150, Max=2222079, Min=0, Avg=14808.23, 90=2, 99=20, 99.9=2222079, 99.99=2222079] [INSERT: Count=0, Max=0, Min=9223372036854775807, Avg=?, 90=0, 99=0, 99.9=0, 99.99=0] [READ-FAILED: Count=0, Max=0, Min=9223372036854775807, Avg=?, 90=0, 99=0, 99.9=0, 99.99=0] 
[OVERALL], RunTime(ms), 1802241
[OVERALL], Throughput(ops/sec), 59048.395303402816
[TOTAL_GCS_PS_Scavenge], Count, 5400
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 18418
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0219498946034409
[TOTAL_GCS_PS_MarkSweep], Count, 4
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 147
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.008156511809463885
[TOTAL_GCs], Count, 5404
[TOTAL_GC_TIME], Time(ms), 18565
[TOTAL_GC_TIME_%], Time(%), 1.0301064064129049
[READ], Operations, 9778223
[READ], AverageLatency(us), 3039.273719263715
[READ], MinLatency(us), 509
[READ], MaxLatency(us), 177151
[READ], 95thPercentileLatency(us), 5515
[READ], 99thPercentileLatency(us), 6919
[READ], Return=OK, 9778223
[READ], Return=NOT_FOUND, 862762
[CLEANUP], Operations, 150
[CLEANUP], AverageLatency(us), 14808.233333333334
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2222079
[CLEANUP], 95thPercentileLatency(us), 3
[CLEANUP], 99thPercentileLatency(us), 20
[INSERT], Operations, 95778454
[INSERT], AverageLatency(us), 2455.645191746361
[INSERT], MinLatency(us), 435
[INSERT], MaxLatency(us), 197247
[INSERT], 95thPercentileLatency(us), 3635
[INSERT], 99thPercentileLatency(us), 4203
[INSERT], Return=OK, 95778454
[READ-FAILED], Operations, 862762
[READ-FAILED], AverageLatency(us), 2648.441252628187
[READ-FAILED], MinLatency(us), 470
[READ-FAILED], MaxLatency(us), 167935
[READ-FAILED], 95thPercentileLatency(us), 4199
[READ-FAILED], 99thPercentileLatency(us), 5367
