bin/ycsb run scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=750000000 -p operationcount=999900000 -target 70000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=625000000 -p insertcount=125000000 -p measurementtype=hdrhistogram  -p hdrhistogram.fileoutput=true  -p hdrhistogram.output.path=/home/developer/results/ 
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=750000000 -p operationcount=999900000 -target 70000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=625000000 -p insertcount=125000000 -p measurementtype=hdrhistogram -p hdrhistogram.fileoutput=true -p hdrhistogram.output.path=/home/developer/results/ -t
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=750000000 -p operationcount=999900000 -target 70000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=625000000 -p insertcount=125000000 -p measurementtype=hdrhistogram -p hdrhistogram.fileoutput=true -p hdrhistogram.output.path=/home/developer/results/ -t
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
 (might take a few minutes for large data sets)
Starting test.
[Thread-8] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
Maximum execution time specified as: 1800 secs
[Thread-8] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
2023-04-30 10:28:30:874 0 sec: 0 operations; est completion in 0 second 
[Thread-8] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-8] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.224.14.50:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.25.70.101:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.236.216.15:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.155.229.124:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.166.69.220:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /34.214.116.240:9042 added
[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 04c1c4a5-1f5b-4be8-8b3b-2bc1e2431452

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.155.229.124; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.224.14.50; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /34.214.116.240; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.166.69.220; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.236.216.15; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.25.70.101; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: QUORUM

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-04-30 10:28:40:858 10 sec: 646158 operations; 64615.8 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=41724, Max=111615, Min=546, Avg=1878.55, 90=2901, 99=6647, 99.9=21199, 99.99=39487] [INSERT: Count=584390, Max=126335, Min=444, Avg=1627.01, 90=2621, 99=6531, 99.9=22271, 99.99=115391] [READ-FAILED: Count=22887, Max=124735, Min=476, Avg=1888.42, 90=2873, 99=8255, 99.9=25935, 99.99=118463] 
2023-04-30 10:28:50:857 20 sec: 1346129 operations; 69997.1 current ops/sec; est completion in 4 hours 7 minutes [READ: Count=50396, Max=10935, Min=544, Avg=1868.47, 90=2953, 99=4227, 99.9=6635, 99.99=9663] [INSERT: Count=628377, Max=12871, Min=450, Avg=1577.01, 90=2619, 99=3323, 99.9=6227, 99.99=8879] [READ-FAILED: Count=19872, Max=9751, Min=508, Avg=1766.47, 90=2839, 99=3857, 99.9=6243, 99.99=8011] 
2023-04-30 10:29:00:858 30 sec: 2046126 operations; 69999.7 current ops/sec; est completion in 4 hours 3 minutes [READ: Count=52049, Max=46431, Min=555, Avg=2015.45, 90=3119, 99=4723, 99.9=8607, 99.99=25119] [INSERT: Count=630247, Max=64959, Min=455, Avg=1701.37, 90=2679, 99=3573, 99.9=7795, 99.99=23631] [READ-FAILED: Count=17966, Max=59167, Min=517, Avg=1894.21, 90=2963, 99=4103, 99.9=8199, 99.99=34943] 
2023-04-30 10:29:10:857 40 sec: 2746103 operations; 69997.7 current ops/sec; est completion in 4 hours 2 minutes [READ: Count=53315, Max=45951, Min=568, Avg=1940.43, 90=3035, 99=4515, 99.9=8187, 99.99=20639] [INSERT: Count=629532, Max=48095, Min=460, Avg=1642.13, 90=2691, 99=3491, 99.9=7995, 99.99=20879] [READ-FAILED: Count=16756, Max=27503, Min=514, Avg=1834.29, 90=2923, 99=3939, 99.9=7691, 99.99=12775] 
2023-04-30 10:29:20:857 50 sec: 3446081 operations; 69997.8 current ops/sec; est completion in 4 hours [READ: Count=54348, Max=14351, Min=554, Avg=2101.69, 90=3355, 99=4991, 99.9=7119, 99.99=9935] [INSERT: Count=629906, Max=20543, Min=471, Avg=1773.62, 90=2863, 99=3791, 99.9=6555, 99.99=8695] [READ-FAILED: Count=15746, Max=13751, Min=519, Avg=1994.07, 90=3183, 99=4315, 99.9=6655, 99.99=8975] 
2023-04-30 10:29:30:857 60 sec: 4146055 operations; 69997.4 current ops/sec; est completion in 4 hours [READ: Count=54718, Max=42783, Min=583, Avg=2152.02, 90=3343, 99=5211, 99.9=7775, 99.99=23407] [INSERT: Count=629982, Max=43839, Min=485, Avg=1806.22, 90=2797, 99=3835, 99.9=7359, 99.99=22623] [READ-FAILED: Count=15258, Max=15735, Min=531, Avg=2041.78, 90=3143, 99=4487, 99.9=8135, 99.99=14415] 
2023-04-30 10:29:40:857 70 sec: 4829176 operations; 68312.1 current ops/sec; est completion in 4 hours [READ: Count=54072, Max=37631, Min=591, Avg=2483.56, 90=3695, 99=5655, 99.9=7619, 99.99=26591] [INSERT: Count=614788, Max=39583, Min=485, Avg=2106.08, 90=3045, 99=3941, 99.9=7055, 99.99=20479] [READ-FAILED: Count=14158, Max=30927, Min=522, Avg=2351.21, 90=3501, 99=4595, 99.9=7507, 99.99=8855] 
2023-04-30 10:29:50:857 80 sec: 5475181 operations; 64600.5 current ops/sec; est completion in 4 hours 2 minutes [READ: Count=51954, Max=10231, Min=571, Avg=2676.99, 90=3843, 99=5831, 99.9=7599, 99.99=8991] [INSERT: Count=580989, Max=10615, Min=479, Avg=2282.9, 90=3257, 99=4037, 99.9=6939, 99.99=8383] [READ-FAILED: Count=13023, Max=9255, Min=547, Avg=2536.72, 90=3647, 99=4855, 99.9=7251, 99.99=8631] 
2023-04-30 10:30:00:857 90 sec: 6137664 operations; 66248.3 current ops/sec; est completion in 4 hours 2 minutes [READ: Count=53066, Max=42239, Min=547, Avg=2618.28, 90=3781, 99=5843, 99.9=7955, 99.99=22255] [INSERT: Count=596598, Max=43071, Min=475, Avg=2224.94, 90=3155, 99=4021, 99.9=7587, 99.99=23759] [READ-FAILED: Count=12941, Max=21567, Min=526, Avg=2490.88, 90=3591, 99=4883, 99.9=8199, 99.99=20623] 
2023-04-30 10:30:10:857 100 sec: 6843589 operations; 70592.5 current ops/sec; est completion in 4 hours 1 minute [READ: Count=56908, Max=36799, Min=553, Avg=2480.56, 90=3669, 99=5715, 99.9=8415, 99.99=24895] [INSERT: Count=635627, Max=45631, Min=468, Avg=2085.57, 90=3059, 99=3865, 99.9=7815, 99.99=23679] [READ-FAILED: Count=13433, Max=27455, Min=540, Avg=2353.03, 90=3477, 99=4795, 99.9=7855, 99.99=19807] 
2023-04-30 10:30:20:857 110 sec: 7523143 operations; 67955.4 current ops/sec; est completion in 4 hours 1 minute [READ: Count=54936, Max=19791, Min=547, Avg=2563.42, 90=3797, 99=6035, 99.9=8011, 99.99=10359] [INSERT: Count=611981, Max=19151, Min=457, Avg=2168.52, 90=3199, 99=3895, 99.9=7411, 99.99=9039] [READ-FAILED: Count=12504, Max=12735, Min=521, Avg=2432.28, 90=3595, 99=4847, 99.9=7487, 99.99=8879] 
2023-04-30 10:30:30:857 120 sec: 8193431 operations; 67028.8 current ops/sec; est completion in 4 hours 2 minutes [READ: Count=55106, Max=29151, Min=537, Avg=2600.5, 90=3831, 99=5963, 99.9=8415, 99.99=22383] [INSERT: Count=603482, Max=40543, Min=479, Avg=2197.86, 90=3213, 99=3935, 99.9=7631, 99.99=20879] [READ-FAILED: Count=11649, Max=29087, Min=533, Avg=2472.55, 90=3633, 99=4967, 99.9=7503, 99.99=26399] 
2023-04-30 10:30:40:857 130 sec: 8835701 operations; 64227 current ops/sec; est completion in 4 hours 3 minutes [READ: Count=52862, Max=96127, Min=530, Avg=2692.78, 90=3901, 99=6179, 99.9=9087, 99.99=77951] [INSERT: Count=578146, Max=104063, Min=468, Avg=2296.2, 90=3335, 99=4069, 99.9=7811, 99.99=57695] [READ-FAILED: Count=11263, Max=37215, Min=514, Avg=2539.29, 90=3703, 99=5127, 99.9=7891, 99.99=29375] 
2023-04-30 10:30:50:857 140 sec: 9465514 operations; 62981.3 current ops/sec; est completion in 4 hours 4 minutes [READ: Count=51975, Max=58431, Min=530, Avg=2722.96, 90=3943, 99=6147, 99.9=8103, 99.99=13439] [INSERT: Count=567193, Max=78015, Min=461, Avg=2344.29, 90=3329, 99=3999, 99.9=7447, 99.99=11847] [READ-FAILED: Count=10609, Max=8639, Min=519, Avg=2591.79, 90=3719, 99=4991, 99.9=7627, 99.99=8599] 
2023-04-30 10:31:00:857 150 sec: 10076456 operations; 61094.2 current ops/sec; est completion in 4 hours 5 minutes [READ: Count=50981, Max=36639, Min=545, Avg=2843.9, 90=4077, 99=6415, 99.9=8287, 99.99=28495] [INSERT: Count=549364, Max=38815, Min=466, Avg=2413.45, 90=3383, 99=4187, 99.9=7159, 99.99=23135] [READ-FAILED: Count=10183, Max=28063, Min=515, Avg=2690.14, 90=3793, 99=5395, 99.9=7719, 99.99=19167] 
2023-04-30 10:31:10:857 160 sec: 10717877 operations; 64142.1 current ops/sec; est completion in 4 hours 6 minutes [READ: Count=53337, Max=29775, Min=547, Avg=2719.48, 90=3921, 99=6167, 99.9=8543, 99.99=24623] [INSERT: Count=578045, Max=35615, Min=457, Avg=2294.83, 90=3245, 99=3929, 99.9=7383, 99.99=22223] [READ-FAILED: Count=10598, Max=19807, Min=508, Avg=2578.21, 90=3689, 99=5079, 99.9=7547, 99.99=10815] 
2023-04-30 10:31:20:857 170 sec: 11418601 operations; 70072.4 current ops/sec; est completion in 4 hours 5 minutes [READ: Count=59042, Max=17503, Min=541, Avg=2514.82, 90=3765, 99=5811, 99.9=7943, 99.99=11247] [INSERT: Count=630249, Max=16847, Min=470, Avg=2098.58, 90=3121, 99=3879, 99.9=7263, 99.99=10607] [READ-FAILED: Count=11447, Max=15031, Min=525, Avg=2378.95, 90=3547, 99=4827, 99.9=7939, 99.99=12895] 
2023-04-30 10:31:30:857 180 sec: 12107847 operations; 68924.6 current ops/sec; est completion in 4 hours 4 minutes [READ: Count=58311, Max=47455, Min=543, Avg=2556.01, 90=3831, 99=5895, 99.9=8503, 99.99=19311] [INSERT: Count=620062, Max=44223, Min=447, Avg=2133.42, 90=3211, 99=3973, 99.9=7599, 99.99=19727] [READ-FAILED: Count=10913, Max=25935, Min=492, Avg=2441.48, 90=3685, 99=5155, 99.9=8719, 99.99=20431] 
2023-04-30 10:31:40:857 190 sec: 12802348 operations; 69450.1 current ops/sec; est completion in 4 hours 4 minutes [READ: Count=58497, Max=180095, Min=544, Avg=2541.98, 90=3813, 99=5859, 99.9=8679, 99.99=30303] [INSERT: Count=625014, Max=188543, Min=473, Avg=2117.52, 90=3137, 99=3959, 99.9=7711, 99.99=113599] [READ-FAILED: Count=10912, Max=16031, Min=512, Avg=2405.04, 90=3623, 99=5011, 99.9=7791, 99.99=10415] 
2023-04-30 10:31:50:857 200 sec: 13424882 operations; 62253.4 current ops/sec; est completion in 4 hours 4 minutes [READ: Count=52949, Max=10975, Min=540, Avg=2812.77, 90=4013, 99=6163, 99.9=7727, 99.99=9743] [INSERT: Count=559910, Max=10591, Min=479, Avg=2364.71, 90=3297, 99=4029, 99.9=6951, 99.99=8471] [READ-FAILED: Count=9566, Max=13111, Min=528, Avg=2691.58, 90=3761, 99=5203, 99.9=7511, 99.99=13055] 
2023-04-30 10:32:00:857 210 sec: 14006953 operations; 58207.1 current ops/sec; est completion in 4 hours 6 minutes [READ: Count=49121, Max=76991, Min=537, Avg=2982.14, 90=4155, 99=6435, 99.9=8863, 99.99=19615] [INSERT: Count=524037, Max=81535, Min=479, Avg=2532.47, 90=3397, 99=4275, 99.9=8175, 99.99=28719] [READ-FAILED: Count=8703, Max=9415, Min=546, Avg=2818.67, 90=3865, 99=5315, 99.9=7275, 99.99=9343] 
2023-04-30 10:32:10:857 220 sec: 14587492 operations; 58053.9 current ops/sec; est completion in 4 hours 7 minutes [READ: Count=49460, Max=35583, Min=504, Avg=3014, 90=4199, 99=6503, 99.9=8471, 99.99=26655] [INSERT: Count=522631, Max=39135, Min=471, Avg=2536.06, 90=3423, 99=4171, 99.9=7187, 99.99=23983] [READ-FAILED: Count=8567, Max=32623, Min=528, Avg=2850.91, 90=3891, 99=5303, 99.9=8311, 99.99=14599] 
2023-04-30 10:32:20:857 230 sec: 15187657 operations; 60016.5 current ops/sec; est completion in 4 hours 8 minutes [READ: Count=51014, Max=31423, Min=607, Avg=2948.85, 90=4139, 99=6515, 99.9=8271, 99.99=11215] [INSERT: Count=540273, Max=30223, Min=481, Avg=2449.58, 90=3291, 99=4035, 99.9=7219, 99.99=9783] [READ-FAILED: Count=8782, Max=30719, Min=578, Avg=2799.79, 90=3843, 99=5451, 99.9=7575, 99.99=9231] 
2023-04-30 10:32:30:857 240 sec: 15789012 operations; 60135.5 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=51701, Max=39903, Min=624, Avg=2931.96, 90=4147, 99=6403, 99.9=8807, 99.99=27343] [INSERT: Count=541127, Max=41599, Min=492, Avg=2446.78, 90=3341, 99=4231, 99.9=7703, 99.99=22575] [READ-FAILED: Count=8648, Max=39615, Min=633, Avg=2789.78, 90=3851, 99=5451, 99.9=7827, 99.99=36927] 
2023-04-30 10:32:40:857 250 sec: 16383903 operations; 59489.1 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=50932, Max=132095, Min=538, Avg=2956.51, 90=4183, 99=6491, 99.9=9151, 99.99=66495] [INSERT: Count=535444, Max=142975, Min=477, Avg=2471.64, 90=3397, 99=4271, 99.9=7371, 99.99=85055] [READ-FAILED: Count=8549, Max=83967, Min=528, Avg=2807.3, 90=3883, 99=5563, 99.9=8319, 99.99=46335] 
2023-04-30 10:32:50:857 260 sec: 17038519 operations; 65461.6 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=56614, Max=42079, Min=548, Avg=2706.18, 90=3945, 99=6027, 99.9=7751, 99.99=9591] [INSERT: Count=589063, Max=45407, Min=469, Avg=2244.58, 90=3197, 99=4017, 99.9=6987, 99.99=11927] [READ-FAILED: Count=9006, Max=8823, Min=500, Avg=2572.06, 90=3695, 99=5151, 99.9=7479, 99.99=8607] 
2023-04-30 10:33:00:857 270 sec: 17651754 operations; 61323.5 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=52741, Max=33695, Min=534, Avg=2860.26, 90=4059, 99=6367, 99.9=8367, 99.99=25727] [INSERT: Count=551797, Max=30111, Min=459, Avg=2400.02, 90=3325, 99=4099, 99.9=7367, 99.99=24239] [READ-FAILED: Count=8553, Max=19327, Min=524, Avg=2725.43, 90=3801, 99=5327, 99.9=7731, 99.99=16295] 
2023-04-30 10:33:10:858 280 sec: 18265322 operations; 61356.8 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=52833, Max=70719, Min=558, Avg=2831.68, 90=4003, 99=6307, 99.9=8207, 99.99=26767] [INSERT: Count=552464, Max=67903, Min=467, Avg=2401.48, 90=3353, 99=4073, 99.9=7447, 99.99=26335] [READ-FAILED: Count=8337, Max=29839, Min=530, Avg=2687.78, 90=3761, 99=5139, 99.9=7575, 99.99=15463] 
2023-04-30 10:33:20:857 290 sec: 18878317 operations; 61299.5 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=53083, Max=15967, Min=562, Avg=2850.24, 90=4059, 99=6263, 99.9=7915, 99.99=10783] [INSERT: Count=551952, Max=64287, Min=475, Avg=2402.37, 90=3357, 99=4107, 99.9=7055, 99.99=12631] [READ-FAILED: Count=7884, Max=9071, Min=557, Avg=2709.65, 90=3789, 99=5171, 99.9=7019, 99.99=9031] 
2023-04-30 10:33:30:857 300 sec: 19509422 operations; 63110.5 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=54718, Max=32863, Min=542, Avg=2765, 90=3941, 99=6175, 99.9=8487, 99.99=25791] [INSERT: Count=568185, Max=40575, Min=479, Avg=2334.56, 90=3289, 99=4027, 99.9=7903, 99.99=21247] [READ-FAILED: Count=8362, Max=26927, Min=576, Avg=2643.13, 90=3739, 99=5023, 99.9=8023, 99.99=13831] 
2023-04-30 10:33:40:857 310 sec: 20203268 operations; 69384.6 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=60569, Max=109119, Min=512, Avg=2524.98, 90=3739, 99=5747, 99.9=8791, 99.99=68927] [INSERT: Count=624407, Max=112319, Min=469, Avg=2118.09, 90=3159, 99=3841, 99.9=7755, 99.99=50559] [READ-FAILED: Count=8985, Max=69631, Min=532, Avg=2435.55, 90=3585, 99=4619, 99.9=8943, 99.99=50111] 
2023-04-30 10:33:50:857 320 sec: 20900893 operations; 69762.5 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=60825, Max=96319, Min=564, Avg=2516.96, 90=3763, 99=5667, 99.9=8111, 99.99=65535] [INSERT: Count=627798, Max=107967, Min=471, Avg=2108.34, 90=3201, 99=3881, 99.9=7147, 99.99=47519] [READ-FAILED: Count=9020, Max=89855, Min=525, Avg=2401.7, 90=3593, 99=4671, 99.9=7195, 99.99=64415] 
2023-04-30 10:34:00:857 330 sec: 21600642 operations; 69974.9 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=61286, Max=67519, Min=546, Avg=2505.6, 90=3753, 99=5731, 99.9=8003, 99.99=26463] [INSERT: Count=629476, Max=65503, Min=458, Avg=2103.15, 90=3147, 99=3915, 99.9=7619, 99.99=27999] [READ-FAILED: Count=8869, Max=13551, Min=533, Avg=2358.77, 90=3539, 99=4707, 99.9=7251, 99.99=10191] 
2023-04-30 10:34:10:857 340 sec: 22244650 operations; 64400.8 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=55937, Max=42623, Min=536, Avg=2700.61, 90=3897, 99=6099, 99.9=8263, 99.99=23295] [INSERT: Count=580022, Max=50655, Min=468, Avg=2287.95, 90=3233, 99=3995, 99.9=7627, 99.99=27247] [READ-FAILED: Count=7940, Max=20111, Min=504, Avg=2566.48, 90=3657, 99=4939, 99.9=7371, 99.99=16055] 
2023-04-30 10:34:20:857 350 sec: 22854387 operations; 60973.7 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=53447, Max=42815, Min=553, Avg=2848.49, 90=4047, 99=6231, 99.9=7855, 99.99=10815] [INSERT: Count=548551, Max=61951, Min=477, Avg=2416.56, 90=3359, 99=4053, 99.9=6991, 99.99=12127] [READ-FAILED: Count=7697, Max=14527, Min=522, Avg=2699.04, 90=3795, 99=5035, 99.9=7167, 99.99=8543] 
2023-04-30 10:34:30:857 360 sec: 23475079 operations; 62069.2 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=54613, Max=32511, Min=507, Avg=2836.65, 90=4035, 99=6375, 99.9=9151, 99.99=24959] [INSERT: Count=558535, Max=34879, Min=472, Avg=2369.38, 90=3271, 99=4089, 99.9=7939, 99.99=22815] [READ-FAILED: Count=7630, Max=21599, Min=549, Avg=2674.07, 90=3719, 99=5259, 99.9=8295, 99.99=15031] 
2023-04-30 10:34:40:857 370 sec: 24121970 operations; 64689.1 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=56469, Max=101759, Min=536, Avg=2753.63, 90=3927, 99=6331, 99.9=8727, 99.99=42815] [INSERT: Count=582579, Max=99199, Min=477, Avg=2270.19, 90=3165, 99=3947, 99.9=7819, 99.99=28959] [READ-FAILED: Count=7884, Max=65183, Min=560, Avg=2596.94, 90=3687, 99=5231, 99.9=8123, 99.99=39071] 
2023-04-30 10:34:50:857 380 sec: 24764275 operations; 64230.5 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=56426, Max=11767, Min=553, Avg=2756.89, 90=4005, 99=6227, 99.9=7927, 99.99=9927] [INSERT: Count=578058, Max=9735, Min=463, Avg=2288.34, 90=3249, 99=3975, 99.9=7115, 99.99=8527] [READ-FAILED: Count=7719, Max=8823, Min=527, Avg=2612.5, 90=3765, 99=5135, 99.9=7223, 99.99=8423] 
2023-04-30 10:35:00:857 390 sec: 25407484 operations; 64320.9 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=56790, Max=32271, Min=550, Avg=2750.6, 90=4027, 99=6239, 99.9=8127, 99.99=26255] [INSERT: Count=579050, Max=50719, Min=474, Avg=2284.81, 90=3255, 99=4049, 99.9=7395, 99.99=21791] [READ-FAILED: Count=7488, Max=29951, Min=524, Avg=2604.03, 90=3747, 99=5263, 99.9=8231, 99.99=23759] 
2023-04-30 10:35:10:857 400 sec: 26076523 operations; 66903.9 current ops/sec; est completion in 4 hours 8 minutes [READ: Count=59281, Max=68287, Min=537, Avg=2658.28, 90=3931, 99=6367, 99.9=8471, 99.99=23615] [INSERT: Count=601882, Max=75135, Min=467, Avg=2194.79, 90=3193, 99=3927, 99.9=7491, 99.99=29839] [READ-FAILED: Count=7855, Max=36767, Min=518, Avg=2527.23, 90=3669, 99=5303, 99.9=8155, 99.99=19455] 
2023-04-30 10:35:20:857 410 sec: 26711454 operations; 63493.1 current ops/sec; est completion in 4 hours 8 minutes [READ: Count=56016, Max=38783, Min=535, Avg=2777.97, 90=4035, 99=6251, 99.9=8087, 99.99=10471] [INSERT: Count=571297, Max=66815, Min=468, Avg=2316.26, 90=3279, 99=3945, 99.9=7155, 99.99=11983] [READ-FAILED: Count=7494, Max=9191, Min=519, Avg=2629.46, 90=3753, 99=5207, 99.9=7599, 99.99=8271] 
2023-04-30 10:35:30:857 420 sec: 27295377 operations; 58392.3 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=51934, Max=33215, Min=544, Avg=2985.83, 90=4211, 99=6503, 99.9=8583, 99.99=28927] [INSERT: Count=525187, Max=31455, Min=463, Avg=2522.05, 90=3439, 99=4195, 99.9=7999, 99.99=23439] [READ-FAILED: Count=6731, Max=9887, Min=525, Avg=2834.81, 90=3917, 99=5387, 99.9=8271, 99.99=9031] 
2023-04-30 10:35:40:858 430 sec: 27890333 operations; 59495.6 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=53055, Max=137983, Min=525, Avg=2959.57, 90=4175, 99=6487, 99.9=8879, 99.99=77823] [INSERT: Count=535268, Max=160255, Min=473, Avg=2470.88, 90=3381, 99=3939, 99.9=8711, 99.99=65727] [READ-FAILED: Count=6725, Max=121919, Min=534, Avg=2804.5, 90=3877, 99=5227, 99.9=8863, 99.99=35647] 
2023-04-30 10:35:50:857 440 sec: 28518162 operations; 62782.9 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=55765, Max=73471, Min=556, Avg=2807.58, 90=4083, 99=6259, 99.9=7883, 99.99=10343] [INSERT: Count=565057, Max=74431, Min=461, Avg=2342.36, 90=3357, 99=4057, 99.9=7059, 99.99=8783] [READ-FAILED: Count=7007, Max=8807, Min=532, Avg=2650.76, 90=3823, 99=5135, 99.9=7031, 99.99=8447] 
2023-04-30 10:36:00:857 450 sec: 29137024 operations; 61886.2 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=54847, Max=31359, Min=527, Avg=2857.36, 90=4155, 99=6459, 99.9=8999, 99.99=23199] [INSERT: Count=557344, Max=67455, Min=465, Avg=2375.48, 90=3361, 99=4143, 99.9=7819, 99.99=27759] [READ-FAILED: Count=6833, Max=20031, Min=550, Avg=2673.35, 90=3829, 99=5159, 99.9=7451, 99.99=8511] 
2023-04-30 10:36:10:857 460 sec: 29765288 operations; 62826.4 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=56015, Max=60415, Min=541, Avg=2806.16, 90=4079, 99=6407, 99.9=8431, 99.99=26511] [INSERT: Count=565130, Max=65599, Min=468, Avg=2340.46, 90=3353, 99=3951, 99.9=7883, 99.99=24495] [READ-FAILED: Count=6985, Max=19119, Min=515, Avg=2650.4, 90=3767, 99=5291, 99.9=8271, 99.99=8943] 
2023-04-30 10:36:20:857 470 sec: 30382363 operations; 61707.5 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=54443, Max=82047, Min=530, Avg=2873.16, 90=4139, 99=6603, 99.9=8503, 99.99=13447] [INSERT: Count=556040, Max=97407, Min=461, Avg=2382.19, 90=3359, 99=3933, 99.9=7247, 99.99=44863] [READ-FAILED: Count=6579, Max=84031, Min=524, Avg=2702.09, 90=3783, 99=5335, 99.9=7655, 99.99=14535] 
2023-04-30 10:36:30:857 480 sec: 30964110 operations; 58174.7 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=51639, Max=47999, Min=553, Avg=3040.2, 90=4287, 99=6807, 99.9=9255, 99.99=19551] [INSERT: Count=523911, Max=47455, Min=457, Avg=2527.66, 90=3429, 99=4055, 99.9=8075, 99.99=21599] [READ-FAILED: Count=6171, Max=17903, Min=526, Avg=2841.44, 90=3871, 99=5403, 99.9=7967, 99.99=10887] 
2023-04-30 10:36:40:857 490 sec: 31519531 operations; 55542.1 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=49524, Max=126335, Min=550, Avg=3161.54, 90=4415, 99=6983, 99.9=9543, 99.99=36991] [INSERT: Count=499932, Max=127103, Min=469, Avg=2649.94, 90=3497, 99=4311, 99.9=7555, 99.99=36575] [READ-FAILED: Count=5869, Max=9719, Min=516, Avg=2956.02, 90=3971, 99=5843, 99.9=8051, 99.99=9175] 
2023-04-30 10:36:50:857 500 sec: 32054360 operations; 53482.9 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=48031, Max=13159, Min=553, Avg=3261.49, 90=4487, 99=6955, 99.9=8807, 99.99=11415] [INSERT: Count=481244, Max=50207, Min=468, Avg=2753.94, 90=3565, 99=4295, 99.9=7207, 99.99=8647] [READ-FAILED: Count=5512, Max=39583, Min=584, Avg=3065.85, 90=4027, 99=5535, 99.9=7471, 99.99=8927] 
2023-04-30 10:37:00:857 510 sec: 32586270 operations; 53191 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=47543, Max=31807, Min=606, Avg=3296.89, 90=4567, 99=6983, 99.9=9823, 99.99=23183] [INSERT: Count=478797, Max=38303, Min=499, Avg=2766.95, 90=3537, 99=4363, 99.9=7363, 99.99=25311] [READ-FAILED: Count=5581, Max=32703, Min=547, Avg=3100.23, 90=4099, 99=5779, 99.9=8519, 99.99=14583] 
2023-04-30 10:37:10:857 520 sec: 33104872 operations; 51860.2 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=46273, Max=94271, Min=604, Avg=3394.34, 90=4739, 99=7155, 99.9=10007, 99.99=50143] [INSERT: Count=466885, Max=93887, Min=517, Avg=2837.32, 90=3591, 99=4395, 99.9=7527, 99.99=29935] [READ-FAILED: Count=5429, Max=24847, Min=913, Avg=3162.96, 90=4091, 99=5735, 99.9=8703, 99.99=22143] 
2023-04-30 10:37:20:857 530 sec: 33621368 operations; 51649.6 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=45765, Max=69439, Min=579, Avg=3420.92, 90=4787, 99=7071, 99.9=8911, 99.99=11927] [INSERT: Count=465340, Max=96447, Min=485, Avg=2847.84, 90=3589, 99=4391, 99.9=7199, 99.99=40575] [READ-FAILED: Count=5264, Max=25519, Min=720, Avg=3198.21, 90=4131, 99=5611, 99.9=8583, 99.99=16687] 
2023-04-30 10:37:30:857 540 sec: 34157522 operations; 53615.4 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=47607, Max=36607, Min=678, Avg=3315.89, 90=4663, 99=6991, 99.9=9135, 99.99=29631] [INSERT: Count=483083, Max=31999, Min=505, Avg=2740.89, 90=3543, 99=4387, 99.9=7563, 99.99=23551] [READ-FAILED: Count=5549, Max=12767, Min=696, Avg=3073.93, 90=4083, 99=5567, 99.9=7615, 99.99=9079] 
2023-04-30 10:37:40:857 550 sec: 34727256 operations; 56973.4 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=51100, Max=69695, Min=579, Avg=3151.96, 90=4427, 99=6815, 99.9=9623, 99.99=29663] [INSERT: Count=512991, Max=78335, Min=444, Avg=2574.99, 90=3437, 99=4295, 99.9=7615, 99.99=30895] [READ-FAILED: Count=5742, Max=22143, Min=551, Avg=2955.4, 90=3987, 99=5511, 99.9=8231, 99.99=8999] 
2023-04-30 10:37:50:857 560 sec: 35309705 operations; 58244.9 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=52560, Max=12951, Min=570, Avg=3077.57, 90=4355, 99=6767, 99.9=8471, 99.99=10119] [INSERT: Count=524025, Max=12127, Min=471, Avg=2518.88, 90=3469, 99=4267, 99.9=7467, 99.99=9151] [READ-FAILED: Count=5858, Max=11103, Min=543, Avg=2880.75, 90=3949, 99=5427, 99.9=7323, 99.99=8091] 
2023-04-30 10:38:00:857 570 sec: 35891752 operations; 58204.7 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=52120, Max=46207, Min=552, Avg=3063.87, 90=4347, 99=6791, 99.9=9111, 99.99=25503] [INSERT: Count=524198, Max=53023, Min=470, Avg=2523.17, 90=3479, 99=4311, 99.9=7415, 99.99=24431] [READ-FAILED: Count=5834, Max=37343, Min=542, Avg=2890.65, 90=4003, 99=5539, 99.9=7071, 99.99=8903] 
2023-04-30 10:38:10:857 580 sec: 36450255 operations; 55850.3 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=50523, Max=33887, Min=554, Avg=3174.85, 90=4419, 99=6867, 99.9=8855, 99.99=24335] [INSERT: Count=502233, Max=38527, Min=465, Avg=2631.59, 90=3539, 99=4363, 99.9=7359, 99.99=24511] [READ-FAILED: Count=5545, Max=34463, Min=562, Avg=2968.45, 90=3963, 99=5611, 99.9=8903, 99.99=21791] 
2023-04-30 10:38:20:857 590 sec: 37003866 operations; 55361.1 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=50165, Max=85759, Min=576, Avg=3206.27, 90=4447, 99=7039, 99.9=9351, 99.99=12575] [INSERT: Count=497990, Max=87423, Min=466, Avg=2653.82, 90=3525, 99=4323, 99.9=7463, 99.99=12047] [READ-FAILED: Count=5499, Max=9599, Min=578, Avg=2972.7, 90=3983, 99=5475, 99.9=7911, 99.99=9415] 
2023-04-30 10:38:30:857 600 sec: 37586824 operations; 58295.8 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=52751, Max=35775, Min=534, Avg=3038.43, 90=4275, 99=6639, 99.9=9047, 99.99=27247] [INSERT: Count=524540, Max=36479, Min=470, Avg=2520.74, 90=3471, 99=4183, 99.9=7819, 99.99=21119] [READ-FAILED: Count=5801, Max=27967, Min=507, Avg=2844.43, 90=3851, 99=5619, 99.9=8319, 99.99=14631] 
2023-04-30 10:38:40:857 610 sec: 38165175 operations; 57835.1 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=52636, Max=66111, Min=549, Avg=3051.95, 90=4323, 99=6731, 99.9=9095, 99.99=31183] [INSERT: Count=520286, Max=71743, Min=454, Avg=2542.12, 90=3481, 99=4335, 99.9=7455, 99.99=25279] [READ-FAILED: Count=5493, Max=26991, Min=531, Avg=2859.83, 90=3939, 99=5491, 99.9=9015, 99.99=26191] 
2023-04-30 10:38:50:857 620 sec: 38753351 operations; 58817.6 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=52950, Max=74751, Min=527, Avg=3022, 90=4339, 99=6651, 99.9=8567, 99.99=11151] [INSERT: Count=529720, Max=82175, Min=450, Avg=2497.92, 90=3439, 99=4207, 99.9=7183, 99.99=11431] [READ-FAILED: Count=5559, Max=66367, Min=554, Avg=2801.48, 90=3827, 99=5211, 99.9=7927, 99.99=8559] 
2023-04-30 10:39:00:857 630 sec: 39330265 operations; 57691.4 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=52132, Max=57759, Min=557, Avg=3061.21, 90=4351, 99=6767, 99.9=9247, 99.99=25247] [INSERT: Count=519355, Max=56831, Min=467, Avg=2549.06, 90=3457, 99=4303, 99.9=7459, 99.99=24335] [READ-FAILED: Count=5430, Max=13887, Min=531, Avg=2823.69, 90=3853, 99=5335, 99.9=7627, 99.99=8255] 
2023-04-30 10:39:10:857 640 sec: 39920079 operations; 58981.4 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=53623, Max=111423, Min=539, Avg=3015.75, 90=4323, 99=6795, 99.9=10495, 99.99=82623] [INSERT: Count=530613, Max=111679, Min=465, Avg=2490.64, 90=3383, 99=4183, 99.9=7435, 99.99=27039] [READ-FAILED: Count=5425, Max=34527, Min=520, Avg=2782.05, 90=3835, 99=5451, 99.9=8127, 99.99=9063] 
2023-04-30 10:39:20:857 650 sec: 40496412 operations; 57633.3 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=52009, Max=34079, Min=533, Avg=3045.17, 90=4339, 99=6643, 99.9=8383, 99.99=13023] [INSERT: Count=518925, Max=43743, Min=466, Avg=2553.87, 90=3415, 99=4207, 99.9=7119, 99.99=9119] [READ-FAILED: Count=5344, Max=9535, Min=540, Avg=2824.11, 90=3831, 99=5247, 99.9=8319, 99.99=8903] 
2023-04-30 10:39:30:857 660 sec: 41065942 operations; 56953 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=52030, Max=30303, Min=566, Avg=3093.95, 90=4383, 99=6619, 99.9=8679, 99.99=20815] [INSERT: Count=512303, Max=41215, Min=480, Avg=2582.28, 90=3421, 99=4251, 99.9=7639, 99.99=21007] [READ-FAILED: Count=5156, Max=39391, Min=511, Avg=2888.14, 90=3879, 99=5367, 99.9=10639, 99.99=19455] 
2023-04-30 10:39:40:857 670 sec: 41617713 operations; 55177.1 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50146, Max=110207, Min=709, Avg=3198.33, 90=4523, 99=7067, 99.9=11247, 99.99=33023] [INSERT: Count=496530, Max=119615, Min=520, Avg=2664.87, 90=3527, 99=4371, 99.9=8247, 99.99=34911] [READ-FAILED: Count=5054, Max=10647, Min=575, Avg=2939.34, 90=3993, 99=5599, 99.9=7995, 99.99=8559] 
2023-04-30 10:39:50:857 680 sec: 42171839 operations; 55412.6 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50461, Max=13311, Min=591, Avg=3179.75, 90=4475, 99=6971, 99.9=8911, 99.99=10727] [INSERT: Count=498599, Max=12095, Min=498, Avg=2654.43, 90=3521, 99=4315, 99.9=7479, 99.99=9031] [READ-FAILED: Count=5057, Max=12167, Min=568, Avg=2956.13, 90=4003, 99=5615, 99.9=7599, 99.99=8759] 
2023-04-30 10:40:00:857 690 sec: 42737985 operations; 56614.6 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50947, Max=33791, Min=566, Avg=3121.57, 90=4447, 99=6815, 99.9=8991, 99.99=27615] [INSERT: Count=510530, Max=114303, Min=483, Avg=2596.98, 90=3439, 99=4279, 99.9=7711, 99.99=34943] [READ-FAILED: Count=4965, Max=75071, Min=608, Avg=2901.44, 90=3903, 99=5335, 99.9=7411, 99.99=75071] 
2023-04-30 10:40:10:857 700 sec: 43341538 operations; 60355.3 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=55277, Max=44895, Min=544, Avg=2924.57, 90=4275, 99=6555, 99.9=8719, 99.99=25567] [INSERT: Count=542691, Max=88959, Min=475, Avg=2435.95, 90=3363, 99=4199, 99.9=7327, 99.99=28319] [READ-FAILED: Count=5427, Max=28399, Min=567, Avg=2719.41, 90=3795, 99=5383, 99.9=7583, 99.99=9783] 
2023-04-30 10:40:20:857 710 sec: 43936982 operations; 59544.4 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=54568, Max=51039, Min=569, Avg=2978.61, 90=4315, 99=6575, 99.9=8367, 99.99=10759] [INSERT: Count=535639, Max=50175, Min=475, Avg=2467.41, 90=3327, 99=4091, 99.9=7239, 99.99=9599] [READ-FAILED: Count=5265, Max=42111, Min=542, Avg=2766.26, 90=3825, 99=5339, 99.9=7887, 99.99=9679] 
2023-04-30 10:40:30:857 720 sec: 44531335 operations; 59435.3 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=53946, Max=28431, Min=544, Avg=2983.14, 90=4347, 99=6659, 99.9=8951, 99.99=22895] [INSERT: Count=535260, Max=39743, Min=462, Avg=2472.93, 90=3367, 99=4271, 99.9=7867, 99.99=21983] [READ-FAILED: Count=5133, Max=27583, Min=517, Avg=2763.83, 90=3869, 99=5471, 99.9=8895, 99.99=22015] 
2023-04-30 10:40:40:857 730 sec: 45116803 operations; 58546.8 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=53512, Max=126783, Min=533, Avg=3013.27, 90=4343, 99=6607, 99.9=9191, 99.99=43423] [INSERT: Count=526878, Max=174335, Min=471, Avg=2511.76, 90=3401, 99=4287, 99.9=7875, 99.99=108095] [READ-FAILED: Count=5074, Max=22815, Min=509, Avg=2785.38, 90=3891, 99=5411, 99.9=8011, 99.99=9743] 
2023-04-30 10:40:50:857 740 sec: 45702383 operations; 58558 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=53420, Max=93247, Min=543, Avg=3049.48, 90=4363, 99=6663, 99.9=8519, 99.99=11143] [INSERT: Count=527090, Max=105599, Min=478, Avg=2507.39, 90=3383, 99=4187, 99.9=7335, 99.99=27247] [READ-FAILED: Count=5036, Max=8719, Min=565, Avg=2806.96, 90=3829, 99=5043, 99.9=7523, 99.99=8407] 
2023-04-30 10:41:00:857 750 sec: 46275861 operations; 57347.8 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=51813, Max=113087, Min=524, Avg=3117.95, 90=4423, 99=6755, 99.9=9167, 99.99=27087] [INSERT: Count=516666, Max=118463, Min=460, Avg=2560.08, 90=3369, 99=4295, 99.9=7847, 99.99=31327] [READ-FAILED: Count=4968, Max=75391, Min=598, Avg=2904.35, 90=3931, 99=5495, 99.9=8711, 99.99=75391] 
2023-04-30 10:41:10:857 760 sec: 46859165 operations; 58330.4 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=53563, Max=30399, Min=530, Avg=3062.27, 90=4431, 99=6783, 99.9=8831, 99.99=23743] [INSERT: Count=524945, Max=34591, Min=472, Avg=2516.5, 90=3415, 99=4267, 99.9=7551, 99.99=22191] [READ-FAILED: Count=4896, Max=30639, Min=524, Avg=2829.96, 90=3883, 99=5455, 99.9=8271, 99.99=30639] 
2023-04-30 10:41:20:862 770 sec: 47468359 operations; 60888.96 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=55958, Max=73599, Min=553, Avg=2940.54, 90=4303, 99=6711, 99.9=8967, 99.99=11783] [INSERT: Count=548285, Max=74303, Min=466, Avg=2410.05, 90=3331, 99=4159, 99.9=7631, 99.99=13087] [READ-FAILED: Count=5020, Max=10111, Min=572, Avg=2702.76, 90=3797, 99=5415, 99.9=8159, 99.99=9447] 
2023-04-30 10:41:30:857 780 sec: 48076530 operations; 60847.52 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=55843, Max=29871, Min=546, Avg=2928.19, 90=4267, 99=6615, 99.9=9063, 99.99=21615] [INSERT: Count=547383, Max=48671, Min=467, Avg=2413.49, 90=3299, 99=4085, 99.9=7859, 99.99=19775] [READ-FAILED: Count=4932, Max=22575, Min=513, Avg=2696.9, 90=3755, 99=5175, 99.9=7575, 99.99=22575] 
2023-04-30 10:41:40:857 790 sec: 48682837 operations; 60630.7 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=55584, Max=40831, Min=534, Avg=2940.53, 90=4287, 99=6543, 99.9=9191, 99.99=20783] [INSERT: Count=545619, Max=34623, Min=462, Avg=2421.98, 90=3335, 99=4159, 99.9=7543, 99.99=19807] [READ-FAILED: Count=5023, Max=15295, Min=484, Avg=2737.66, 90=3811, 99=5095, 99.9=7311, 99.99=8975] 
2023-04-30 10:41:50:857 800 sec: 49272620 operations; 58978.3 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=54166, Max=11799, Min=538, Avg=3016.37, 90=4347, 99=6571, 99.9=8327, 99.99=9959] [INSERT: Count=530774, Max=10743, Min=466, Avg=2489.94, 90=3401, 99=4143, 99.9=7403, 99.99=8887] [READ-FAILED: Count=4868, Max=9119, Min=532, Avg=2813.54, 90=3877, 99=5335, 99.9=7883, 99.99=9119] 
2023-04-30 10:42:00:857 810 sec: 49852309 operations; 57968.9 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=53179, Max=37887, Min=539, Avg=3088.64, 90=4475, 99=6763, 99.9=9031, 99.99=23167] [INSERT: Count=521212, Max=40735, Min=457, Avg=2533.72, 90=3455, 99=4227, 99.9=7975, 99.99=23151] [READ-FAILED: Count=4751, Max=10423, Min=518, Avg=2827.47, 90=3865, 99=5247, 99.9=7679, 99.99=10423] 
2023-04-30 10:42:10:857 820 sec: 50374705 operations; 52239.6 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=47921, Max=63071, Min=576, Avg=3439.75, 90=4987, 99=7967, 99.9=29839, 99.99=53567] [INSERT: Count=470764, Max=60895, Min=481, Avg=2807.34, 90=3575, 99=4735, 99.9=21791, 99.99=38783] [READ-FAILED: Count=4146, Max=58367, Min=531, Avg=3152.62, 90=4135, 99=6431, 99.9=26559, 99.99=58367] 
2023-04-30 10:42:20:857 830 sec: 50887010 operations; 51230.5 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=47067, Max=15207, Min=872, Avg=3494.61, 90=5067, 99=7455, 99.9=9991, 99.99=13175] [INSERT: Count=460957, Max=15367, Min=530, Avg=2865.23, 90=3635, 99=4431, 99.9=7279, 99.99=9695] [READ-FAILED: Count=4099, Max=9191, Min=935, Avg=3217.49, 90=4179, 99=5739, 99.9=7835, 99.99=9191] 
2023-04-30 10:42:30:857 840 sec: 51422354 operations; 53534.4 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=49327, Max=57535, Min=760, Avg=3387.12, 90=4935, 99=7159, 99.9=10247, 99.99=54687] [INSERT: Count=481636, Max=55455, Min=522, Avg=2737.68, 90=3597, 99=4431, 99.9=8519, 99.99=53311] [READ-FAILED: Count=4225, Max=54367, Min=806, Avg=3126, 90=4151, 99=5863, 99.9=8591, 99.99=54367] 
2023-04-30 10:42:40:857 850 sec: 52021567 operations; 59921.3 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=55036, Max=35103, Min=628, Avg=3050.85, 90=4463, 99=6763, 99.9=9055, 99.99=23583] [INSERT: Count=539734, Max=31279, Min=495, Avg=2441.12, 90=3375, 99=4347, 99.9=8107, 99.99=23039] [READ-FAILED: Count=4743, Max=26687, Min=593, Avg=2836.21, 90=3945, 99=5803, 99.9=8199, 99.99=26687] 
2023-04-30 10:42:50:857 860 sec: 52656498 operations; 63493.1 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=58534, Max=17215, Min=604, Avg=2888.54, 90=4279, 99=6543, 99.9=8727, 99.99=14319] [INSERT: Count=571897, Max=16191, Min=477, Avg=2302.53, 90=3225, 99=4155, 99.9=7295, 99.99=13255] [READ-FAILED: Count=4921, Max=15551, Min=572, Avg=2658.23, 90=3773, 99=5567, 99.9=7643, 99.99=15551] 
2023-04-30 10:43:00:857 870 sec: 53322189 operations; 66569.1 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=61683, Max=32799, Min=577, Avg=2742.37, 90=4093, 99=6359, 99.9=8519, 99.99=25935] [INSERT: Count=598645, Max=45567, Min=515, Avg=2197.84, 90=3093, 99=3933, 99.9=7407, 99.99=22287] [READ-FAILED: Count=5186, Max=35039, Min=627, Avg=2525.04, 90=3623, 99=4975, 99.9=6803, 99.99=20447] 
2023-04-30 10:43:10:857 880 sec: 53992503 operations; 67031.4 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=61896, Max=16639, Min=601, Avg=2733.34, 90=4085, 99=6331, 99.9=8335, 99.99=11175] [INSERT: Count=603394, Max=16079, Min=501, Avg=2183.12, 90=3075, 99=3889, 99.9=7367, 99.99=8751] [READ-FAILED: Count=5112, Max=8679, Min=553, Avg=2503.56, 90=3613, 99=5111, 99.9=7743, 99.99=8567] 
2023-04-30 10:43:20:857 890 sec: 54661367 operations; 66886.4 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=61972, Max=35295, Min=599, Avg=2722.24, 90=4091, 99=6411, 99.9=9111, 99.99=17887] [INSERT: Count=601711, Max=29551, Min=462, Avg=2187.5, 90=3087, 99=3905, 99.9=8295, 99.99=21471] [READ-FAILED: Count=5045, Max=23135, Min=554, Avg=2517.37, 90=3617, 99=5203, 99.9=8359, 99.99=12199] 
2023-04-30 10:43:30:857 900 sec: 55217122 operations; 55575.5 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=51420, Max=33887, Min=561, Avg=3216.1, 90=4739, 99=7095, 99.9=9351, 99.99=21407] [INSERT: Count=499781, Max=37247, Min=488, Avg=2642.58, 90=3505, 99=4387, 99.9=7367, 99.99=23631] [READ-FAILED: Count=4206, Max=23279, Min=732, Avg=2978.15, 90=4049, 99=5699, 99.9=8343, 99.99=23279] 
2023-04-30 10:43:40:857 910 sec: 55713833 operations; 49671.1 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=46096, Max=13303, Min=664, Avg=3530.57, 90=5195, 99=7171, 99.9=9175, 99.99=11199] [INSERT: Count=446991, Max=12887, Min=486, Avg=2962.28, 90=3639, 99=4499, 99.9=7495, 99.99=8935] [READ-FAILED: Count=3706, Max=10575, Min=835, Avg=3251.72, 90=4175, 99=5719, 99.9=7967, 99.99=10575] 
2023-04-30 10:43:50:857 920 sec: 56284585 operations; 57075.2 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=52680, Max=45119, Min=539, Avg=3131.47, 90=4635, 99=6851, 99.9=8887, 99.99=16023] [INSERT: Count=514210, Max=46207, Min=470, Avg=2571.1, 90=3497, 99=4283, 99.9=7147, 99.99=21311] [READ-FAILED: Count=4206, Max=44479, Min=636, Avg=2863.96, 90=3873, 99=5551, 99.9=7771, 99.99=44479] 
2023-04-30 10:44:00:857 930 sec: 56919216 operations; 63463.1 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=58643, Max=11671, Min=543, Avg=2870.79, 90=4283, 99=6675, 99.9=8423, 99.99=11023] [INSERT: Count=571400, Max=15759, Min=477, Avg=2306.5, 90=3243, 99=4079, 99.9=6971, 99.99=8607] [READ-FAILED: Count=4630, Max=10407, Min=570, Avg=2647.51, 90=3751, 99=5511, 99.9=7379, 99.99=10407] 
2023-04-30 10:44:10:857 940 sec: 57563285 operations; 64406.9 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=59621, Max=38591, Min=559, Avg=2838.02, 90=4227, 99=6563, 99.9=9111, 99.99=26511] [INSERT: Count=579649, Max=31567, Min=475, Avg=2272.25, 90=3193, 99=3989, 99.9=8199, 99.99=23759] [READ-FAILED: Count=4802, Max=25423, Min=541, Avg=2594.31, 90=3655, 99=5239, 99.9=8783, 99.99=25423] 
2023-04-30 10:44:20:857 950 sec: 58214847 operations; 65156.2 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=60018, Max=16575, Min=545, Avg=2790.29, 90=4143, 99=6439, 99.9=8583, 99.99=12023] [INSERT: Count=586974, Max=20079, Min=456, Avg=2246.63, 90=3197, 99=3989, 99.9=7511, 99.99=10807] [READ-FAILED: Count=4552, Max=10591, Min=551, Avg=2582.57, 90=3671, 99=5051, 99.9=7383, 99.99=10591] 
2023-04-30 10:44:30:857 960 sec: 58871747 operations; 65690 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=60724, Max=31887, Min=581, Avg=2764.12, 90=4095, 99=6311, 99.9=8391, 99.99=17199] [INSERT: Count=591342, Max=45151, Min=475, Avg=2228.99, 90=3139, 99=4111, 99.9=7375, 99.99=21535] [READ-FAILED: Count=4784, Max=22351, Min=553, Avg=2576.6, 90=3653, 99=5139, 99.9=8087, 99.99=22351] 
2023-04-30 10:44:40:857 970 sec: 59439703 operations; 56795.6 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=53028, Max=30415, Min=578, Avg=3174.56, 90=4667, 99=7067, 99.9=8903, 99.99=24767] [INSERT: Count=510560, Max=33055, Min=462, Avg=2582.16, 90=3471, 99=4283, 99.9=7459, 99.99=20719] [READ-FAILED: Count=4080, Max=31775, Min=550, Avg=2922.24, 90=3955, 99=5659, 99.9=8123, 99.99=31775] 
2023-04-30 10:44:50:857 980 sec: 59942514 operations; 50281.1 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=46902, Max=14751, Min=550, Avg=3514.48, 90=5211, 99=7211, 99.9=8967, 99.99=11647] [INSERT: Count=452446, Max=9847, Min=490, Avg=2924.17, 90=3639, 99=4503, 99.9=7115, 99.99=8447] [READ-FAILED: Count=3445, Max=10599, Min=640, Avg=3191.71, 90=4091, 99=5447, 99.9=8447, 99.99=10599] 
2023-04-30 10:45:00:857 990 sec: 60478097 operations; 53558.3 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=49796, Max=35871, Min=524, Avg=3356.21, 90=4995, 99=7351, 99.9=9815, 99.99=26207] [INSERT: Count=482225, Max=34527, Min=475, Avg=2738.93, 90=3553, 99=4355, 99.9=7823, 99.99=23551] [READ-FAILED: Count=3669, Max=29343, Min=547, Avg=3048.7, 90=4045, 99=5627, 99.9=8279, 99.99=29343] 
2023-04-30 10:45:10:857 1000 sec: 61034912 operations; 55681.5 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=51489, Max=58079, Min=691, Avg=3302.72, 90=4971, 99=7291, 99.9=10015, 99.99=32959] [INSERT: Count=500823, Max=72447, Min=502, Avg=2628.46, 90=3443, 99=4283, 99.9=7483, 99.99=27583] [READ-FAILED: Count=3959, Max=12295, Min=666, Avg=2957.29, 90=3947, 99=5595, 99.9=7971, 99.99=12295] 
2023-04-30 10:45:20:857 1010 sec: 61613955 operations; 57904.3 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=53861, Max=76287, Min=584, Avg=3170, 90=4695, 99=6991, 99.9=9199, 99.99=18351] [INSERT: Count=521732, Max=86783, Min=504, Avg=2523.44, 90=3405, 99=4203, 99.9=7347, 99.99=17583] [READ-FAILED: Count=3999, Max=67711, Min=575, Avg=2926.74, 90=4027, 99=5639, 99.9=8767, 99.99=67711] 
2023-04-30 10:45:30:857 1020 sec: 62196857 operations; 58290.2 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=54440, Max=34079, Min=580, Avg=3136.62, 90=4615, 99=6903, 99.9=9639, 99.99=29903] [INSERT: Count=524534, Max=34207, Min=474, Avg=2509.87, 90=3393, 99=4295, 99.9=7739, 99.99=21951] [READ-FAILED: Count=3974, Max=14199, Min=624, Avg=2886.41, 90=3973, 99=5627, 99.9=9671, 99.99=14199] 
2023-04-30 10:45:40:857 1030 sec: 62786198 operations; 58934.1 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=55036, Max=77311, Min=566, Avg=3103.94, 90=4579, 99=6719, 99.9=8543, 99.99=28511] [INSERT: Count=530392, Max=79295, Min=470, Avg=2482.42, 90=3373, 99=4057, 99.9=7039, 99.99=10367] [READ-FAILED: Count=4038, Max=72511, Min=566, Avg=2848.37, 90=3883, 99=5195, 99.9=8151, 99.99=72511] 
2023-04-30 10:45:50:857 1040 sec: 63368012 operations; 58181.4 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=54656, Max=32223, Min=559, Avg=3137.04, 90=4663, 99=6979, 99.9=9631, 99.99=27471] [INSERT: Count=523258, Max=35263, Min=474, Avg=2515.65, 90=3417, 99=4135, 99.9=7331, 99.99=24399] [READ-FAILED: Count=3804, Max=27423, Min=565, Avg=2865.77, 90=3923, 99=5571, 99.9=8135, 99.99=27423] 
2023-04-30 10:46:00:857 1050 sec: 63872412 operations; 50440 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=47238, Max=33471, Min=554, Avg=3550.84, 90=5331, 99=7375, 99.9=9991, 99.99=24255] [INSERT: Count=453525, Max=38655, Min=481, Avg=2910.31, 90=3629, 99=4555, 99.9=7587, 99.99=24287] [READ-FAILED: Count=3335, Max=19935, Min=570, Avg=3226.92, 90=4243, 99=5871, 99.9=8207, 99.99=19935] 
2023-04-30 10:46:10:857 1060 sec: 64373944 operations; 50153.2 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=46869, Max=18719, Min=596, Avg=3567.01, 90=5331, 99=7391, 99.9=9775, 99.99=12847] [INSERT: Count=451401, Max=18175, Min=482, Avg=2926.51, 90=3609, 99=4359, 99.9=7187, 99.99=8607] [READ-FAILED: Count=3296, Max=8871, Min=545, Avg=3245.82, 90=4211, 99=5623, 99.9=7511, 99.99=8871] 
2023-04-30 10:46:20:857 1070 sec: 64899227 operations; 52528.3 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=49131, Max=29711, Min=577, Avg=3457.01, 90=5231, 99=7447, 99.9=10087, 99.99=19215] [INSERT: Count=472761, Max=39871, Min=484, Avg=2788.66, 90=3543, 99=4347, 99.9=7287, 99.99=24175] [READ-FAILED: Count=3459, Max=9055, Min=565, Avg=3100.61, 90=4123, 99=5595, 99.9=7867, 99.99=9055] 
2023-04-30 10:46:30:857 1080 sec: 65441596 operations; 54236.9 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50654, Max=15807, Min=635, Avg=3365.28, 90=5071, 99=7315, 99.9=9839, 99.99=13695] [INSERT: Count=488370, Max=18575, Min=492, Avg=2698.83, 90=3491, 99=4315, 99.9=7547, 99.99=13455] [READ-FAILED: Count=3465, Max=16591, Min=663, Avg=3058.12, 90=4093, 99=5863, 99.9=8639, 99.99=16591] 
2023-04-30 10:46:40:857 1090 sec: 65985782 operations; 54418.6 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=51217, Max=118015, Min=558, Avg=3336.51, 90=4939, 99=7227, 99.9=10831, 99.99=35615] [INSERT: Count=489499, Max=123455, Min=481, Avg=2691.08, 90=3523, 99=4415, 99.9=7659, 99.99=45887] [READ-FAILED: Count=3516, Max=47295, Min=574, Avg=3061.84, 90=4127, 99=5975, 99.9=8863, 99.99=47295] 
2023-04-30 10:46:50:857 1100 sec: 66533199 operations; 54741.7 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50998, Max=62847, Min=575, Avg=3312.4, 90=4887, 99=7079, 99.9=9207, 99.99=23887] [INSERT: Count=492922, Max=63807, Min=480, Avg=2676.12, 90=3539, 99=4379, 99.9=7719, 99.99=27647] [READ-FAILED: Count=3526, Max=14511, Min=539, Avg=3044.83, 90=4139, 99=5743, 99.9=7983, 99.99=14511] 
2023-04-30 10:47:00:857 1110 sec: 67092030 operations; 55883.1 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=52710, Max=66559, Min=576, Avg=3269.97, 90=4899, 99=7015, 99.9=8951, 99.99=18751] [INSERT: Count=502507, Max=85439, Min=481, Avg=2617.95, 90=3495, 99=4307, 99.9=7131, 99.99=20191] [READ-FAILED: Count=3580, Max=8535, Min=560, Avg=2990.88, 90=4079, 99=5423, 99.9=6931, 99.99=8535] 
2023-04-30 10:47:10:857 1120 sec: 67636082 operations; 54405.2 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50547, Max=36991, Min=557, Avg=3326.74, 90=4999, 99=7155, 99.9=9175, 99.99=25935] [INSERT: Count=489924, Max=38815, Min=485, Avg=2694.82, 90=3497, 99=4263, 99.9=7451, 99.99=24111] [READ-FAILED: Count=3408, Max=25951, Min=606, Avg=2991.16, 90=3973, 99=5495, 99.9=8187, 99.99=25951] 
2023-04-30 10:47:20:857 1130 sec: 68149592 operations; 51351 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=48198, Max=17567, Min=593, Avg=3483.8, 90=5239, 99=7303, 99.9=9599, 99.99=12303] [INSERT: Count=462136, Max=17247, Min=470, Avg=2858.63, 90=3613, 99=4355, 99.9=7119, 99.99=8407] [READ-FAILED: Count=3130, Max=8151, Min=571, Avg=3154.16, 90=4111, 99=5811, 99.9=7555, 99.99=8151] 
2023-04-30 10:47:30:857 1140 sec: 68646588 operations; 49699.6 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=46798, Max=27839, Min=655, Avg=3598.32, 90=5431, 99=7595, 99.9=11143, 99.99=18383] [INSERT: Count=447062, Max=31615, Min=515, Avg=2953.46, 90=3631, 99=4499, 99.9=7903, 99.99=23999] [READ-FAILED: Count=3099, Max=9895, Min=928, Avg=3257.59, 90=4231, 99=5779, 99.9=8011, 99.99=9895] 
2023-04-30 10:47:40:857 1150 sec: 69181406 operations; 53481.8 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50301, Max=48831, Min=607, Avg=3382.69, 90=5107, 99=7435, 99.9=11143, 99.99=23055] [INSERT: Count=481416, Max=30959, Min=471, Avg=2739.68, 90=3533, 99=4347, 99.9=7383, 99.99=23615] [READ-FAILED: Count=3268, Max=32735, Min=557, Avg=3052.11, 90=4075, 99=5703, 99.9=8479, 99.99=32735] 
2023-04-30 10:47:50:857 1160 sec: 69724114 operations; 54270.8 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=51042, Max=52863, Min=605, Avg=3354.68, 90=5051, 99=7395, 99.9=10327, 99.99=34879] [INSERT: Count=488305, Max=50719, Min=521, Avg=2698.01, 90=3497, 99=4355, 99.9=7419, 99.99=32687] [READ-FAILED: Count=3350, Max=8447, Min=714, Avg=3019.91, 90=4027, 99=5715, 99.9=8007, 99.99=8447] 
2023-04-30 10:48:00:857 1170 sec: 70256271 operations; 53215.7 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=50050, Max=43423, Min=629, Avg=3390.61, 90=5107, 99=7243, 99.9=9943, 99.99=30591] [INSERT: Count=478659, Max=71743, Min=531, Avg=2754.83, 90=3559, 99=4467, 99.9=7367, 99.99=28719] [READ-FAILED: Count=3350, Max=35839, Min=585, Avg=3084.78, 90=4099, 99=5671, 99.9=8223, 99.99=35839] 
2023-04-30 10:48:10:857 1180 sec: 70799101 operations; 54283 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51059, Max=14847, Min=592, Avg=3319.69, 90=4955, 99=7059, 99.9=8935, 99.99=12159] [INSERT: Count=488766, Max=18687, Min=488, Avg=2700.61, 90=3517, 99=4343, 99.9=7303, 99.99=9535] [READ-FAILED: Count=3250, Max=9063, Min=605, Avg=3025.25, 90=4061, 99=5591, 99.9=7579, 99.99=9063] 
2023-04-30 10:48:20:857 1190 sec: 71368919 operations; 56981.8 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=53450, Max=32767, Min=557, Avg=3182.49, 90=4787, 99=7007, 99.9=9263, 99.99=23535] [INSERT: Count=512856, Max=33503, Min=478, Avg=2570.79, 90=3417, 99=4251, 99.9=7383, 99.99=25711] [READ-FAILED: Count=3506, Max=9119, Min=654, Avg=2884.5, 90=3967, 99=5543, 99.9=7523, 99.99=9119] 
2023-04-30 10:48:30:857 1200 sec: 71902309 operations; 53339 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=49846, Max=36031, Min=626, Avg=3365.37, 90=5051, 99=7127, 99.9=9751, 99.99=19359] [INSERT: Count=480240, Max=41535, Min=490, Avg=2751.1, 90=3529, 99=4435, 99.9=7547, 99.99=24863] [READ-FAILED: Count=3199, Max=29183, Min=587, Avg=3067.02, 90=4079, 99=5607, 99.9=8887, 99.99=29183] 
2023-04-30 10:48:40:857 1210 sec: 72419445 operations; 51713.6 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=48714, Max=86079, Min=578, Avg=3477.89, 90=5251, 99=7367, 99.9=10287, 99.99=51199] [INSERT: Count=465128, Max=88575, Min=464, Avg=2836.44, 90=3579, 99=4415, 99.9=7267, 99.99=23567] [READ-FAILED: Count=3169, Max=9343, Min=776, Avg=3142.76, 90=4115, 99=5871, 99.9=9007, 99.99=9343] 
2023-04-30 10:48:50:857 1220 sec: 72937888 operations; 51844.3 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=48574, Max=34879, Min=601, Avg=3489.44, 90=5247, 99=7511, 99.9=10767, 99.99=25439] [INSERT: Count=466922, Max=39103, Min=511, Avg=2826.87, 90=3589, 99=4355, 99.9=7543, 99.99=24703] [READ-FAILED: Count=3006, Max=26879, Min=869, Avg=3161.93, 90=4163, 99=5919, 99.9=12135, 99.99=26879] 
2023-04-30 10:49:00:857 1230 sec: 73476222 operations; 53833.4 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=50942, Max=17407, Min=564, Avg=3361.55, 90=5083, 99=7343, 99.9=9927, 99.99=12975] [INSERT: Count=484456, Max=16703, Min=483, Avg=2722, 90=3541, 99=4355, 99.9=7187, 99.99=8951] [READ-FAILED: Count=3041, Max=8647, Min=559, Avg=3002.8, 90=4059, 99=5551, 99.9=7691, 99.99=8647] 
2023-04-30 10:49:10:857 1240 sec: 74025602 operations; 54938 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51740, Max=117183, Min=574, Avg=3297.12, 90=4919, 99=7207, 99.9=10431, 99.99=75519] [INSERT: Count=494526, Max=120447, Min=463, Avg=2666.73, 90=3493, 99=4315, 99.9=7675, 99.99=43775] [READ-FAILED: Count=3123, Max=27295, Min=560, Avg=2987.07, 90=4009, 99=5831, 99.9=8767, 99.99=27295] 
2023-04-30 10:49:20:857 1250 sec: 74576413 operations; 55081.1 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51901, Max=112831, Min=571, Avg=3297.88, 90=4971, 99=7303, 99.9=9759, 99.99=13183] [INSERT: Count=495530, Max=127103, Min=490, Avg=2659.27, 90=3499, 99=4351, 99.9=7343, 99.99=27055] [READ-FAILED: Count=3250, Max=8103, Min=607, Avg=2983.9, 90=4029, 99=5711, 99.9=7659, 99.99=8103] 
2023-04-30 10:49:30:857 1260 sec: 75121251 operations; 54483.8 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51500, Max=34559, Min=566, Avg=3311.32, 90=4959, 99=7051, 99.9=9439, 99.99=25295] [INSERT: Count=490251, Max=40671, Min=478, Avg=2690.19, 90=3537, 99=4403, 99.9=7643, 99.99=21327] [READ-FAILED: Count=3087, Max=9879, Min=595, Avg=3039.53, 90=4059, 99=5543, 99.9=8343, 99.99=9879] 
2023-04-30 10:49:40:857 1270 sec: 75666374 operations; 54512.3 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51755, Max=54079, Min=528, Avg=3343.13, 90=5083, 99=7331, 99.9=10311, 99.99=22175] [INSERT: Count=490344, Max=29039, Min=481, Avg=2685.05, 90=3507, 99=4255, 99.9=7579, 99.99=21583] [READ-FAILED: Count=3030, Max=9823, Min=588, Avg=3054.45, 90=4067, 99=5875, 99.9=8999, 99.99=9823] 
2023-04-30 10:49:50:857 1280 sec: 76200564 operations; 53419 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=50707, Max=16991, Min=577, Avg=3382.86, 90=5111, 99=7171, 99.9=9463, 99.99=12759] [INSERT: Count=480488, Max=16847, Min=482, Avg=2743.02, 90=3547, 99=4319, 99.9=7363, 99.99=10495] [READ-FAILED: Count=3025, Max=9831, Min=591, Avg=3088.45, 90=4089, 99=5623, 99.9=9199, 99.99=9831] 
2023-04-30 10:50:00:857 1290 sec: 76722405 operations; 52184.1 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=49262, Max=121983, Min=571, Avg=3476.03, 90=5247, 99=7463, 99.9=11207, 99.99=89663] [INSERT: Count=469592, Max=130559, Min=470, Avg=2807.89, 90=3575, 99=4431, 99.9=7623, 99.99=55007] [READ-FAILED: Count=2931, Max=58495, Min=580, Avg=3111.24, 90=4095, 99=5835, 99.9=8199, 99.99=58495] 
2023-04-30 10:50:10:857 1300 sec: 77219660 operations; 49725.5 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=46632, Max=76671, Min=606, Avg=3631.26, 90=5467, 99=7503, 99.9=10591, 99.99=17039] [INSERT: Count=447832, Max=104767, Min=485, Avg=2948.66, 90=3629, 99=4499, 99.9=7115, 99.99=10711] [READ-FAILED: Count=2701, Max=9623, Min=991, Avg=3271.32, 90=4203, 99=5811, 99.9=7787, 99.99=9623] 
2023-04-30 10:50:20:857 1310 sec: 77731384 operations; 51172.4 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=48638, Max=65727, Min=563, Avg=3529.34, 90=5307, 99=7363, 99.9=10415, 99.99=25759] [INSERT: Count=460318, Max=83135, Min=479, Avg=2864.09, 90=3585, 99=4383, 99.9=7619, 99.99=43295] [READ-FAILED: Count=2837, Max=8999, Min=693, Avg=3183.41, 90=4111, 99=5743, 99.9=7195, 99.99=8999] 
2023-04-30 10:50:30:857 1320 sec: 78258981 operations; 52759.7 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=49944, Max=31343, Min=569, Avg=3449.08, 90=5159, 99=7427, 99.9=11183, 99.99=22111] [INSERT: Count=474854, Max=31871, Min=476, Avg=2774.68, 90=3547, 99=4415, 99.9=8359, 99.99=22431] [READ-FAILED: Count=2892, Max=18815, Min=610, Avg=3143.51, 90=4107, 99=6079, 99.9=9207, 99.99=18815] 
2023-04-30 10:50:40:857 1330 sec: 78797180 operations; 53819.9 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=50779, Max=117759, Min=529, Avg=3391.1, 90=5099, 99=7319, 99.9=10319, 99.99=83199] [INSERT: Count=484465, Max=147327, Min=466, Avg=2719.76, 90=3525, 99=4347, 99.9=7567, 99.99=93183] [READ-FAILED: Count=2927, Max=29951, Min=547, Avg=3068.37, 90=4083, 99=5843, 99.9=9151, 99.99=29951] 
2023-04-30 10:50:50:857 1340 sec: 79324935 operations; 52775.5 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=49465, Max=35359, Min=585, Avg=3453.81, 90=5227, 99=7247, 99.9=9671, 99.99=24015] [INSERT: Count=475401, Max=33375, Min=490, Avg=2774.68, 90=3551, 99=4415, 99.9=7251, 99.99=22479] [READ-FAILED: Count=2863, Max=8231, Min=712, Avg=3090.07, 90=4095, 99=5463, 99.9=6935, 99.99=8231] 
2023-04-30 10:51:00:857 1350 sec: 79842751 operations; 51781.6 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=49080, Max=105727, Min=555, Avg=3503.03, 90=5259, 99=7399, 99.9=10911, 99.99=32575] [INSERT: Count=465754, Max=111807, Min=489, Avg=2828.78, 90=3571, 99=4443, 99.9=7891, 99.99=31007] [READ-FAILED: Count=2930, Max=18239, Min=739, Avg=3185.82, 90=4203, 99=5911, 99.9=9103, 99.99=18239] 
2023-04-30 10:51:10:857 1360 sec: 80398314 operations; 55556.3 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=52578, Max=83903, Min=544, Avg=3284.51, 90=4935, 99=7151, 99.9=9831, 99.99=49631] [INSERT: Count=500230, Max=115583, Min=478, Avg=2634.12, 90=3463, 99=4319, 99.9=7211, 99.99=19423] [READ-FAILED: Count=2938, Max=8615, Min=582, Avg=2951.07, 90=3973, 99=5603, 99.9=7899, 99.99=8615] 
2023-04-30 10:51:20:857 1370 sec: 80967671 operations; 56935.7 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=53880, Max=35455, Min=541, Avg=3195.12, 90=4835, 99=7019, 99.9=9135, 99.99=22543] [INSERT: Count=512394, Max=31007, Min=471, Avg=2571.91, 90=3421, 99=4219, 99.9=7155, 99.99=21871] [READ-FAILED: Count=3029, Max=17455, Min=517, Avg=2882.92, 90=3921, 99=5311, 99.9=7975, 99.99=17455] 
2023-04-30 10:51:30:857 1380 sec: 81470134 operations; 50246.3 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=47630, Max=50719, Min=537, Avg=3556.94, 90=5355, 99=7439, 99.9=10759, 99.99=32207] [INSERT: Count=452088, Max=34719, Min=469, Avg=2921.71, 90=3643, 99=4639, 99.9=7955, 99.99=24815] [READ-FAILED: Count=2618, Max=24015, Min=588, Avg=3227.14, 90=4159, 99=5875, 99.9=7471, 99.99=24015] 
2023-04-30 10:51:40:857 1390 sec: 82010198 operations; 54006.4 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=51360, Max=122303, Min=526, Avg=3327.01, 90=5051, 99=7155, 99.9=10727, 99.99=16479] [INSERT: Count=486016, Max=133631, Min=454, Avg=2714.92, 90=3577, 99=4399, 99.9=7591, 99.99=20367] [READ-FAILED: Count=2840, Max=113407, Min=528, Avg=3035.02, 90=4053, 99=5439, 99.9=7743, 99.99=113407] 
2023-04-30 10:51:50:857 1400 sec: 82582114 operations; 57191.6 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=54201, Max=45023, Min=533, Avg=3172.98, 90=4827, 99=6903, 99.9=9383, 99.99=28159] [INSERT: Count=514811, Max=40031, Min=468, Avg=2560.6, 90=3493, 99=4315, 99.9=7599, 99.99=22927] [READ-FAILED: Count=2978, Max=19039, Min=518, Avg=2885.78, 90=4017, 99=5475, 99.9=8519, 99.99=19039] 
2023-04-30 10:52:00:857 1410 sec: 83165303 operations; 58318.9 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=55455, Max=31647, Min=552, Avg=3139.2, 90=4779, 99=6891, 99.9=9767, 99.99=13519] [INSERT: Count=524407, Max=28943, Min=464, Avg=2509.06, 90=3435, 99=4315, 99.9=7563, 99.99=13535] [READ-FAILED: Count=3046, Max=11879, Min=544, Avg=2852.7, 90=3997, 99=5619, 99.9=7319, 99.99=11879] 
2023-04-30 10:52:10:857 1420 sec: 83729028 operations; 56372.5 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=53003, Max=114943, Min=535, Avg=3252.24, 90=4955, 99=7163, 99.9=10415, 99.99=38655] [INSERT: Count=507999, Max=109503, Min=456, Avg=2594.32, 90=3487, 99=4359, 99.9=8223, 99.99=27759] [READ-FAILED: Count=2900, Max=19711, Min=537, Avg=2934.61, 90=4007, 99=5727, 99.9=16135, 99.99=19711] 
2023-04-30 10:52:20:857 1430 sec: 84282647 operations; 55361.9 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=52904, Max=47071, Min=590, Avg=3308.03, 90=4995, 99=7043, 99.9=9359, 99.99=26175] [INSERT: Count=497995, Max=42911, Min=474, Avg=2641.36, 90=3491, 99=4319, 99.9=7415, 99.99=22143] [READ-FAILED: Count=2793, Max=19887, Min=571, Avg=2984.92, 90=4045, 99=5531, 99.9=7855, 99.99=19887] 
2023-04-30 10:52:30:857 1440 sec: 84909400 operations; 62675.3 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=60088, Max=19775, Min=549, Avg=2922.59, 90=4419, 99=6579, 99.9=8575, 99.99=13495] [INSERT: Count=563652, Max=17727, Min=463, Avg=2332.59, 90=3315, 99=4107, 99.9=7363, 99.99=13111] [READ-FAILED: Count=3178, Max=8239, Min=523, Avg=2625.64, 90=3713, 99=5103, 99.9=6811, 99.99=8239] 
2023-04-30 10:52:40:857 1450 sec: 85498511 operations; 58911.1 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=55752, Max=104447, Min=550, Avg=3067.96, 90=4655, 99=6967, 99.9=9543, 99.99=34879] [INSERT: Count=530098, Max=111231, Min=452, Avg=2488.27, 90=3417, 99=4251, 99.9=7863, 99.99=59583] [READ-FAILED: Count=3081, Max=22911, Min=534, Avg=2769.43, 90=3819, 99=5911, 99.9=20639, 99.99=22911] 
2023-04-30 10:52:50:857 1460 sec: 86034169 operations; 53565.8 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51012, Max=17903, Min=561, Avg=3363.15, 90=5163, 99=7219, 99.9=9239, 99.99=13711] [INSERT: Count=482003, Max=20751, Min=488, Avg=2737.25, 90=3555, 99=4367, 99.9=7279, 99.99=12295] [READ-FAILED: Count=2535, Max=7827, Min=543, Avg=3001.95, 90=3983, 99=5479, 99.9=6451, 99.99=7827] 
2023-04-30 10:53:00:857 1470 sec: 86613342 operations; 57917.3 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=55080, Max=69439, Min=569, Avg=3131.45, 90=4743, 99=7039, 99.9=10079, 99.99=31983] [INSERT: Count=521372, Max=77887, Min=490, Avg=2528.49, 90=3441, 99=4159, 99.9=7827, 99.99=26591] [READ-FAILED: Count=2856, Max=18751, Min=838, Avg=2833.07, 90=3875, 99=5535, 99.9=8271, 99.99=18751] 
2023-04-30 10:53:10:857 1480 sec: 87222411 operations; 60906.9 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=58243, Max=108991, Min=574, Avg=3008.71, 90=4579, 99=6879, 99.9=8903, 99.99=13615] [INSERT: Count=548008, Max=103935, Min=480, Avg=2400.48, 90=3341, 99=3979, 99.9=7183, 99.99=14983] [READ-FAILED: Count=2984, Max=14359, Min=556, Avg=2706.27, 90=3803, 99=5343, 99.9=8055, 99.99=14359] 
2023-04-30 10:53:20:857 1490 sec: 87881393 operations; 65898.2 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=62782, Max=87359, Min=540, Avg=2787.64, 90=4247, 99=6579, 99.9=9527, 99.99=26927] [INSERT: Count=593087, Max=82687, Min=458, Avg=2218.12, 90=3209, 99=3895, 99.9=7971, 99.99=27071] [READ-FAILED: Count=3171, Max=25551, Min=535, Avg=2510.39, 90=3673, 99=5287, 99.9=8023, 99.99=25551] 
2023-04-30 10:53:30:857 1500 sec: 88513411 operations; 63201.8 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=60316, Max=18207, Min=549, Avg=2892.71, 90=4355, 99=6543, 99.9=9087, 99.99=14423] [INSERT: Count=568491, Max=24367, Min=471, Avg=2314.15, 90=3241, 99=4135, 99.9=7947, 99.99=16879] [READ-FAILED: Count=3054, Max=7791, Min=541, Avg=2633.67, 90=3767, 99=5255, 99.9=7263, 99.99=7791] 
2023-04-30 10:53:40:857 1510 sec: 89121006 operations; 60759.5 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=57797, Max=51167, Min=548, Avg=3032.06, 90=4547, 99=6767, 99.9=9663, 99.99=34559] [INSERT: Count=546809, Max=56543, Min=480, Avg=2405.29, 90=3311, 99=4219, 99.9=7907, 99.99=27615] [READ-FAILED: Count=2926, Max=9319, Min=536, Avg=2739.63, 90=3863, 99=5171, 99.9=8463, 99.99=9319] 
2023-04-30 10:53:50:857 1520 sec: 89706703 operations; 58569.7 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=55824, Max=110015, Min=559, Avg=3151.01, 90=4771, 99=7019, 99.9=9487, 99.99=46687] [INSERT: Count=527081, Max=112511, Min=470, Avg=2495.03, 90=3393, 99=4239, 99.9=7283, 99.99=46559] [READ-FAILED: Count=2731, Max=91839, Min=598, Avg=2859.74, 90=3859, 99=5511, 99.9=10823, 99.99=91839] 
2023-04-30 10:54:00:857 1530 sec: 90199944 operations; 49324.1 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=47074, Max=52639, Min=578, Avg=3668, 90=5551, 99=7415, 99.9=9759, 99.99=31487] [INSERT: Count=443616, Max=47999, Min=488, Avg=2971.81, 90=3651, 99=4531, 99.9=7503, 99.99=26095] [READ-FAILED: Count=2335, Max=21615, Min=719, Avg=3305.27, 90=4251, 99=5831, 99.9=8439, 99.99=21615] 
2023-04-30 10:54:10:857 1540 sec: 90734066 operations; 53412.2 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=51066, Max=33727, Min=572, Avg=3428.96, 90=5191, 99=7199, 99.9=9815, 99.99=21919] [INSERT: Count=480875, Max=35007, Min=470, Avg=2737.94, 90=3553, 99=4399, 99.9=7803, 99.99=24319] [READ-FAILED: Count=2448, Max=22975, Min=671, Avg=3096.76, 90=4103, 99=5875, 99.9=8743, 99.99=22975] 
2023-04-30 10:54:20:857 1550 sec: 91339129 operations; 60506.3 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=58045, Max=50047, Min=552, Avg=3081.82, 90=4655, 99=6863, 99.9=8743, 99.99=12951] [INSERT: Count=544285, Max=59007, Min=478, Avg=2410.25, 90=3309, 99=4093, 99.9=7127, 99.99=13407] [READ-FAILED: Count=2851, Max=9623, Min=582, Avg=2780.54, 90=3877, 99=5439, 99.9=7763, 99.99=9623] 
2023-04-30 10:54:30:857 1560 sec: 91995322 operations; 65619.3 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=62190, Max=38111, Min=552, Avg=2866.7, 90=4419, 99=6999, 99.9=10215, 99.99=27903] [INSERT: Count=591367, Max=32687, Min=487, Avg=2220.15, 90=3157, 99=3965, 99.9=8191, 99.99=21743] [READ-FAILED: Count=2927, Max=10295, Min=524, Avg=2607.06, 90=3745, 99=5831, 99.9=7823, 99.99=10295] 
2023-04-30 10:54:40:857 1570 sec: 92689319 operations; 69399.7 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=66247, Max=123903, Min=534, Avg=2676.61, 90=4103, 99=6491, 99.9=8943, 99.99=79231] [INSERT: Count=624656, Max=124735, Min=474, Avg=2102.83, 90=3099, 99=3901, 99.9=7543, 99.99=54591] [READ-FAILED: Count=3174, Max=8599, Min=540, Avg=2405.63, 90=3569, 99=5043, 99.9=7339, 99.99=8599] 
2023-04-30 10:54:50:857 1580 sec: 93379366 operations; 69004.7 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=66094, Max=38655, Min=568, Avg=2692.6, 90=4159, 99=6531, 99.9=8855, 99.99=25807] [INSERT: Count=620699, Max=57023, Min=480, Avg=2114.89, 90=3087, 99=3951, 99.9=7739, 99.99=25423] [READ-FAILED: Count=3049, Max=21871, Min=590, Avg=2444.09, 90=3599, 99=5207, 99.9=7403, 99.99=21871] 
2023-04-30 10:55:00:857 1590 sec: 94023418 operations; 64405.2 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=61451, Max=40607, Min=552, Avg=2892.96, 90=4419, 99=6767, 99.9=9311, 99.99=26351] [INSERT: Count=579476, Max=46911, Min=461, Avg=2266.06, 90=3241, 99=3959, 99.9=7575, 99.99=25711] [READ-FAILED: Count=2844, Max=11431, Min=517, Avg=2585.72, 90=3739, 99=5311, 99.9=7835, 99.99=11431] 
2023-04-30 10:55:10:857 1600 sec: 94551514 operations; 52809.6 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=50490, Max=114879, Min=551, Avg=3432.36, 90=5239, 99=7255, 99.9=9527, 99.99=15703] [INSERT: Count=475182, Max=114623, Min=470, Avg=2774.45, 90=3571, 99=4399, 99.9=7707, 99.99=39903] [READ-FAILED: Count=2328, Max=9143, Min=543, Avg=3094.67, 90=4053, 99=5835, 99.9=8091, 99.99=9143] 
2023-04-30 10:55:20:857 1610 sec: 95114762 operations; 56324.8 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=53482, Max=45215, Min=554, Avg=3232.97, 90=4879, 99=6831, 99.9=8975, 99.99=36543] [INSERT: Count=507569, Max=43807, Min=462, Avg=2598.87, 90=3505, 99=4363, 99.9=7579, 99.99=26335] [READ-FAILED: Count=2435, Max=34207, Min=601, Avg=2914.53, 90=3955, 99=5399, 99.9=8751, 99.99=34207] 
2023-04-30 10:55:30:857 1620 sec: 95716953 operations; 60219.1 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=57625, Max=16879, Min=542, Avg=3071.55, 90=4775, 99=6995, 99.9=9031, 99.99=12127] [INSERT: Count=542105, Max=18047, Min=470, Avg=2425.08, 90=3387, 99=4187, 99.9=7243, 99.99=13735] [READ-FAILED: Count=2587, Max=17167, Min=539, Avg=2772.89, 90=3865, 99=5843, 99.9=8099, 99.99=17167] 
2023-04-30 10:55:40:857 1630 sec: 96367187 operations; 65023.4 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=62171, Max=102143, Min=526, Avg=2855.33, 90=4395, 99=6811, 99.9=9279, 99.99=30719] [INSERT: Count=585200, Max=105407, Min=461, Avg=2244.54, 90=3199, 99=4031, 99.9=7599, 99.99=47967] [READ-FAILED: Count=2801, Max=9207, Min=525, Avg=2571.28, 90=3673, 99=5203, 99.9=8671, 99.99=9207] 
2023-04-30 10:55:50:857 1640 sec: 97033237 operations; 66605 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=63721, Max=11967, Min=536, Avg=2790.41, 90=4323, 99=6631, 99.9=8855, 99.99=11239] [INSERT: Count=598883, Max=26815, Min=461, Avg=2192.07, 90=3167, 99=3937, 99.9=7519, 99.99=12399] [READ-FAILED: Count=2857, Max=8695, Min=538, Avg=2497.74, 90=3659, 99=5255, 99.9=7603, 99.99=8695] 
2023-04-30 10:56:00:857 1650 sec: 97708420 operations; 67518.3 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=64961, Max=63743, Min=545, Avg=2752.55, 90=4255, 99=6567, 99.9=8927, 99.99=29487] [INSERT: Count=608114, Max=61215, Min=465, Avg=2160.1, 90=3159, 99=3959, 99.9=7203, 99.99=25247] [READ-FAILED: Count=2729, Max=57759, Min=547, Avg=2491.5, 90=3657, 99=5163, 99.9=7179, 99.99=57759] 
2023-04-30 10:56:10:857 1660 sec: 98317743 operations; 60932.3 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=58739, Max=39391, Min=576, Avg=3036.37, 90=4591, 99=6907, 99.9=9439, 99.99=31183] [INSERT: Count=547784, Max=37951, Min=478, Avg=2397.43, 90=3333, 99=4087, 99.9=7939, 99.99=21679] [READ-FAILED: Count=2476, Max=8431, Min=556, Avg=2765.5, 90=3903, 99=5291, 99.9=8035, 99.99=8431] 
2023-04-30 10:56:20:857 1670 sec: 98811215 operations; 49347.2 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=47106, Max=81599, Min=586, Avg=3651.49, 90=5519, 99=7355, 99.9=9559, 99.99=13583] [INSERT: Count=444168, Max=83135, Min=483, Avg=2971.98, 90=3665, 99=4443, 99.9=7499, 99.99=13559] [READ-FAILED: Count=2004, Max=8399, Min=869, Avg=3272.49, 90=4191, 99=5687, 99.9=7251, 99.99=8399] 
2023-04-30 10:56:30:857 1680 sec: 99338279 operations; 52706.4 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=50447, Max=35775, Min=557, Avg=3473.9, 90=5295, 99=7255, 99.9=10999, 99.99=28783] [INSERT: Count=474673, Max=35103, Min=487, Avg=2774.89, 90=3561, 99=4415, 99.9=7979, 99.99=22079] [READ-FAILED: Count=2118, Max=17727, Min=569, Avg=3132.75, 90=4085, 99=6095, 99.9=11535, 99.99=17727] 
2023-04-30 10:56:40:857 1690 sec: 99920220 operations; 58194.1 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=55996, Max=133759, Min=525, Avg=3177.54, 90=4879, 99=7139, 99.9=10143, 99.99=54175] [INSERT: Count=523944, Max=136831, Min=471, Avg=2509.52, 90=3377, 99=4087, 99.9=7651, 99.99=48991] [READ-FAILED: Count=2365, Max=100415, Min=529, Avg=2866.16, 90=3867, 99=5583, 99.9=21103, 99.99=100415] 
2023-04-30 10:56:50:857 1700 sec: 100512275 operations; 59205.5 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=57144, Max=21791, Min=511, Avg=3124.82, 90=4779, 99=6947, 99.9=8943, 99.99=11567] [INSERT: Count=532461, Max=23903, Min=459, Avg=2466.5, 90=3375, 99=3951, 99.9=7323, 99.99=8855] [READ-FAILED: Count=2441, Max=8703, Min=546, Avg=2780.32, 90=3877, 99=5419, 99.9=7167, 99.99=8703] 
2023-04-30 10:57:00:857 1710 sec: 101135053 operations; 62277.8 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=59366, Max=87295, Min=548, Avg=2994.52, 90=4523, 99=6815, 99.9=9087, 99.99=27407] [INSERT: Count=560823, Max=95487, Min=453, Avg=2342.62, 90=3319, 99=3967, 99.9=7771, 99.99=30063] [READ-FAILED: Count=2474, Max=8375, Min=515, Avg=2680.93, 90=3785, 99=5391, 99.9=7599, 99.99=8375] 
2023-04-30 10:57:10:857 1720 sec: 101773864 operations; 63881.1 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=61056, Max=123327, Min=541, Avg=2914.25, 90=4383, 99=6499, 99.9=9191, 99.99=76095] [INSERT: Count=575350, Max=139263, Min=464, Avg=2285.2, 90=3297, 99=4005, 99.9=7547, 99.99=54911] [READ-FAILED: Count=2557, Max=13807, Min=522, Avg=2628.63, 90=3803, 99=5087, 99.9=8703, 99.99=13807] 
2023-04-30 10:57:20:857 1730 sec: 102412361 operations; 63849.7 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=61688, Max=83711, Min=537, Avg=2902.29, 90=4363, 99=6595, 99.9=8703, 99.99=30303] [INSERT: Count=574398, Max=89023, Min=458, Avg=2285.5, 90=3287, 99=3925, 99.9=7595, 99.99=28943] [READ-FAILED: Count=2402, Max=8519, Min=522, Avg=2597.28, 90=3777, 99=5159, 99.9=7407, 99.99=8519] 
2023-04-30 10:57:30:857 1740 sec: 102959848 operations; 54748.7 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=53065, Max=18799, Min=557, Avg=3381.49, 90=5199, 99=7363, 99.9=10463, 99.99=16223] [INSERT: Count=491943, Max=46623, Min=476, Avg=2668.29, 90=3515, 99=4411, 99.9=7471, 99.99=15455] [READ-FAILED: Count=2077, Max=10607, Min=549, Avg=3018.24, 90=4047, 99=5795, 99.9=8463, 99.99=10607] 
2023-04-30 10:57:40:857 1750 sec: 103490617 operations; 53076.9 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=50992, Max=89215, Min=549, Avg=3470.28, 90=5367, 99=7503, 99.9=10519, 99.99=33503] [INSERT: Count=477783, Max=124927, Min=481, Avg=2753.46, 90=3579, 99=4403, 99.9=7483, 99.99=38143] [READ-FAILED: Count=2022, Max=9639, Min=537, Avg=3091.92, 90=4115, 99=5875, 99.9=8199, 99.99=9639] 
2023-04-30 10:57:50:857 1760 sec: 104037004 operations; 54638.7 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=52578, Max=35743, Min=550, Avg=3374.74, 90=5247, 99=7415, 99.9=10063, 99.99=27599] [INSERT: Count=491907, Max=46527, Min=476, Avg=2674.51, 90=3513, 99=4315, 99.9=7779, 99.99=22591] [READ-FAILED: Count=2063, Max=8871, Min=555, Avg=2978.01, 90=3951, 99=5503, 99.9=7995, 99.99=8871] 
2023-04-30 10:58:00:857 1770 sec: 104585840 operations; 54883.6 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=52715, Max=16255, Min=552, Avg=3373.37, 90=5183, 99=7415, 99.9=10359, 99.99=13863] [INSERT: Count=493952, Max=16007, Min=470, Avg=2661.2, 90=3479, 99=4059, 99.9=7327, 99.99=9319] [READ-FAILED: Count=2045, Max=8687, Min=554, Avg=2999.42, 90=3997, 99=5639, 99.9=8431, 99.99=8687] 
2023-04-30 10:58:10:857 1780 sec: 105163545 operations; 57770.5 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=55692, Max=109247, Min=538, Avg=3210.28, 90=4903, 99=7051, 99.9=9663, 99.99=29631] [INSERT: Count=520034, Max=166271, Min=464, Avg=2528.99, 90=3439, 99=4159, 99.9=7963, 99.99=69695] [READ-FAILED: Count=2163, Max=8111, Min=539, Avg=2844.31, 90=3851, 99=5239, 99.9=7103, 99.99=8111] 
2023-04-30 10:58:20:857 1790 sec: 105777259 operations; 61371.4 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=59198, Max=163071, Min=551, Avg=3038.23, 90=4543, 99=6691, 99.9=9575, 99.99=51711] [INSERT: Count=552515, Max=167551, Min=472, Avg=2374.5, 90=3385, 99=3953, 99.9=7399, 99.99=61631] [READ-FAILED: Count=2244, Max=138239, Min=531, Avg=2757.19, 90=3819, 99=5103, 99.9=8099, 99.99=138239] 
Maximum time elapsed. Requesting stop for the workload.
Stop requested for workload. Now Joining!
2023-04-30 10:58:30:857 1800 sec: 106418815 operations; 64155.6 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=62128, Max=42079, Min=544, Avg=2907.79, 90=4415, 99=6623, 99.9=9319, 99.99=22047] [INSERT: Count=576548, Max=45823, Min=458, Avg=2273.24, 90=3301, 99=3895, 99.9=7623, 99.99=22447] [READ-FAILED: Count=2335, Max=12679, Min=538, Avg=2597.2, 90=3757, 99=5271, 99.9=8319, 99.99=12679] 
Still waiting for thread Thread-61 to complete. Workload status: true
2023-04-30 10:58:33:096 1802 sec: 106419832 operations; 454.42 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=109, Max=6935, Min=656, Avg=2921.36, 90=4447, 99=5859, 99.9=6935, 99.99=6935] [CLEANUP: Count=150, Max=2220031, Min=0, Avg=14794.29, 90=1, 99=10, 99.9=2220031, 99.99=2220031] [INSERT: Count=0, Max=0, Min=9223372036854775807, Avg=?, 90=0, 99=0, 99.9=0, 99.99=0] [READ-FAILED: Count=0, Max=0, Min=9223372036854775807, Avg=?, 90=0, 99=0, 99.9=0, 99.99=0] 
[OVERALL], RunTime(ms), 1802237
[OVERALL], Throughput(ops/sec), 59048.74442151615
[TOTAL_GCS_PS_Scavenge], Count, 5662
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 18500
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0265020638240143
[TOTAL_GCS_PS_MarkSweep], Count, 4
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 139
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.007712637128191242
[TOTAL_GCs], Count, 5666
[TOTAL_GC_TIME], Time(ms), 18639
[TOTAL_GC_TIME_%], Time(%), 1.0342147009522054
[READ], Operations, 9655973
[READ], AverageLatency(us), 3030.742693978121
[READ], MinLatency(us), 504
[READ], MaxLatency(us), 180095
[READ], 95thPercentileLatency(us), 5451
[READ], 99thPercentileLatency(us), 6871
[READ], Return=OK, 9655973
[READ], Return=NOT_FOUND, 984735
[CLEANUP], Operations, 150
[CLEANUP], AverageLatency(us), 14794.286666666667
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2220031
[CLEANUP], 95thPercentileLatency(us), 3
[CLEANUP], 99thPercentileLatency(us), 10
[INSERT], Operations, 95779124
[INSERT], AverageLatency(us), 2463.6745125482666
[INSERT], MinLatency(us), 444
[INSERT], MaxLatency(us), 188543
[INSERT], 95thPercentileLatency(us), 3637
[INSERT], 99thPercentileLatency(us), 4215
[INSERT], Return=OK, 95779124
[READ-FAILED], Operations, 984735
[READ-FAILED], AverageLatency(us), 2666.063364255358
[READ-FAILED], MinLatency(us), 476
[READ-FAILED], MaxLatency(us), 138239
[READ-FAILED], 95thPercentileLatency(us), 4199
[READ-FAILED], 99thPercentileLatency(us), 5367
