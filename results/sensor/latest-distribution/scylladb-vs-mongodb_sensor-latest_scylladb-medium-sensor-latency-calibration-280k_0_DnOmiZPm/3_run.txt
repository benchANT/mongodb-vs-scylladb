bin/ycsb run scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=1000000000 -p operationcount=999900000 -target 70000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=875000000 -p insertcount=125000000 -p measurementtype=hdrhistogram  -p hdrhistogram.fileoutput=true  -p hdrhistogram.output.path=/home/developer/results/ 
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=1000000000 -p operationcount=999900000 -target 70000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=875000000 -p insertcount=125000000 -p measurementtype=hdrhistogram -p hdrhistogram.fileoutput=true -p hdrhistogram.output.path=/home/developer/results/ -t
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=QUORUM -p scylla.readconsistencylevel=QUORUM -p workload=site.ycsb.workloads.CoreWorkload -p maxexecutiontime=1800 -threads 150 -p recordcount=1000000000 -p operationcount=999900000 -target 70000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=875000000 -p insertcount=125000000 -p measurementtype=hdrhistogram -p hdrhistogram.fileoutput=true -p hdrhistogram.output.path=/home/developer/results/ -t
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
 (might take a few minutes for large data sets)
Starting test.
[Thread-8] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
Maximum execution time specified as: 1800 secs
2023-04-30 10:28:54:311 0 sec: 0 operations; est completion in 0 second 
[Thread-8] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
[Thread-8] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-8] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.224.14.50:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.25.70.101:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.236.216.15:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.155.229.124:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.166.69.220:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /34.214.116.240:9042 added
[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 04c1c4a5-1f5b-4be8-8b3b-2bc1e2431452

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.155.229.124; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.224.14.50; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /34.214.116.240; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.166.69.220; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.236.216.15; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.25.70.101; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: QUORUM

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='SELECT * FROM usertable WHERE y_id=? LIMIT 1;'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-04-30 10:29:04:295 10 sec: 644936 operations; 64493.6 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=40250, Max=42463, Min=594, Avg=2105.1, 90=3181, 99=5515, 99.9=15607, 99.99=29967] [INSERT: Count=582407, Max=73279, Min=487, Avg=1831.19, 90=2789, 99=5191, 99.9=19135, 99.99=62975] [READ-FAILED: Count=24845, Max=71295, Min=491, Avg=2080.73, 90=3105, 99=6327, 99.9=28687, 99.99=61951] 
2023-04-30 10:29:14:294 20 sec: 1344904 operations; 69996.8 current ops/sec; est completion in 4 hours 7 minutes [READ: Count=48024, Max=39967, Min=538, Avg=1971.44, 90=3117, 99=4447, 99.9=8215, 99.99=24207] [INSERT: Count=629271, Max=50527, Min=474, Avg=1678.79, 90=2787, 99=3567, 99.9=7423, 99.99=21119] [READ-FAILED: Count=21865, Max=38111, Min=508, Avg=1860.6, 90=3001, 99=3997, 99.9=6959, 99.99=16687] 
2023-04-30 10:29:24:294 30 sec: 2044923 operations; 70001.9 current ops/sec; est completion in 4 hours 4 minutes [READ: Count=50061, Max=38943, Min=540, Avg=2132.04, 90=3337, 99=5075, 99.9=9191, 99.99=25183] [INSERT: Count=629900, Max=50303, Min=478, Avg=1803.85, 90=2855, 99=3843, 99.9=8199, 99.99=22223] [READ-FAILED: Count=19932, Max=45727, Min=532, Avg=2028.64, 90=3187, 99=4479, 99.9=8583, 99.99=18175] 
2023-04-30 10:29:34:294 40 sec: 2744656 operations; 69973.3 current ops/sec; est completion in 4 hours 2 minutes [READ: Count=50920, Max=14639, Min=582, Avg=2213.98, 90=3397, 99=4867, 99.9=7495, 99.99=10911] [INSERT: Count=629869, Max=16767, Min=485, Avg=1878.78, 90=2857, 99=3811, 99.9=7051, 99.99=12663] [READ-FAILED: Count=18981, Max=14751, Min=534, Avg=2117.99, 90=3243, 99=4423, 99.9=7503, 99.99=12415] 
2023-04-30 10:29:44:294 50 sec: 3413808 operations; 66915.2 current ops/sec; est completion in 4 hours 3 minutes [READ: Count=49588, Max=39455, Min=586, Avg=2561.21, 90=3711, 99=5543, 99.9=8071, 99.99=21327] [INSERT: Count=602030, Max=40127, Min=470, Avg=2196.48, 90=3143, 99=3913, 99.9=7763, 99.99=21007] [READ-FAILED: Count=17237, Max=25135, Min=545, Avg=2445.37, 90=3559, 99=4627, 99.9=7767, 99.99=20799] 
2023-04-30 10:29:54:294 60 sec: 4060522 operations; 64671.4 current ops/sec; est completion in 4 hours 5 minutes [READ: Count=48518, Max=37215, Min=550, Avg=2644.01, 90=3773, 99=5771, 99.9=7935, 99.99=30303] [INSERT: Count=582248, Max=36543, Min=479, Avg=2283.81, 90=3253, 99=4043, 99.9=7391, 99.99=26095] [READ-FAILED: Count=16019, Max=44415, Min=515, Avg=2533.3, 90=3619, 99=4903, 99.9=7499, 99.99=9479] 
2023-04-30 10:30:04:294 70 sec: 4731537 operations; 67101.5 current ops/sec; est completion in 4 hours 5 minutes [READ: Count=50572, Max=15543, Min=576, Avg=2574.58, 90=3701, 99=5675, 99.9=7931, 99.99=10039] [INSERT: Count=604697, Max=16511, Min=485, Avg=2197.98, 90=3125, 99=3947, 99.9=7371, 99.99=9919] [READ-FAILED: Count=15969, Max=12871, Min=524, Avg=2464.61, 90=3561, 99=4819, 99.9=7959, 99.99=9471] 
2023-04-30 10:30:14:294 80 sec: 5435506 operations; 70396.9 current ops/sec; est completion in 4 hours 3 minutes [READ: Count=54081, Max=43263, Min=567, Avg=2462.69, 90=3641, 99=5571, 99.9=8079, 99.99=27471] [INSERT: Count=633499, Max=46687, Min=475, Avg=2093.87, 90=3103, 99=3933, 99.9=7423, 99.99=23327] [READ-FAILED: Count=16202, Max=48319, Min=519, Avg=2369.2, 90=3503, 99=4867, 99.9=8079, 99.99=24127] 
2023-04-30 10:30:24:294 90 sec: 6101888 operations; 66638.2 current ops/sec; est completion in 4 hours 4 minutes [READ: Count=51548, Max=33503, Min=557, Avg=2589.28, 90=3821, 99=5923, 99.9=8019, 99.99=16767] [INSERT: Count=600277, Max=48543, Min=460, Avg=2214.12, 90=3247, 99=4045, 99.9=7195, 99.99=21871] [READ-FAILED: Count=14681, Max=13103, Min=520, Avg=2467.18, 90=3659, 99=5003, 99.9=7227, 99.99=12743] 
2023-04-30 10:30:34:294 100 sec: 6769892 operations; 66800.4 current ops/sec; est completion in 4 hours 4 minutes [READ: Count=52236, Max=99583, Min=557, Avg=2582.47, 90=3773, 99=5855, 99.9=7939, 99.99=44575] [INSERT: Count=601051, Max=105919, Min=470, Avg=2207.68, 90=3235, 99=3999, 99.9=7163, 99.99=22383] [READ-FAILED: Count=14572, Max=71551, Min=534, Avg=2480.25, 90=3649, 99=4947, 99.9=7003, 99.99=16559] 
2023-04-30 10:30:44:294 110 sec: 7404747 operations; 63485.5 current ops/sec; est completion in 4 hours 5 minutes [READ: Count=49820, Max=84543, Min=520, Avg=2698.63, 90=3881, 99=6063, 99.9=8535, 99.99=32383] [INSERT: Count=571605, Max=91839, Min=476, Avg=2325.96, 90=3353, 99=4035, 99.9=7647, 99.99=26399] [READ-FAILED: Count=13505, Max=88447, Min=515, Avg=2584.64, 90=3743, 99=5263, 99.9=7771, 99.99=77311] 
2023-04-30 10:30:54:294 120 sec: 8020415 operations; 61566.8 current ops/sec; est completion in 4 hours 7 minutes [READ: Count=48774, Max=75775, Min=525, Avg=2766.94, 90=3951, 99=6135, 99.9=8671, 99.99=22527] [INSERT: Count=553859, Max=78015, Min=460, Avg=2399.68, 90=3373, 99=4199, 99.9=8343, 99.99=34591] [READ-FAILED: Count=12848, Max=30655, Min=512, Avg=2653.21, 90=3783, 99=5319, 99.9=8015, 99.99=29823] 
2023-04-30 10:31:04:294 130 sec: 8635279 operations; 61486.4 current ops/sec; est completion in 4 hours 8 minutes [READ: Count=48863, Max=11103, Min=531, Avg=2795.77, 90=3959, 99=6171, 99.9=7839, 99.99=9879] [INSERT: Count=553684, Max=16959, Min=464, Avg=2399.91, 90=3363, 99=4041, 99.9=6963, 99.99=8967] [READ-FAILED: Count=12477, Max=8719, Min=502, Avg=2680.4, 90=3775, 99=5171, 99.9=7403, 99.99=8303] 
2023-04-30 10:31:14:294 140 sec: 9298006 operations; 66272.7 current ops/sec; est completion in 4 hours 8 minutes [READ: Count=52989, Max=32991, Min=550, Avg=2618.45, 90=3785, 99=5899, 99.9=8471, 99.99=24927] [INSERT: Count=596397, Max=41759, Min=459, Avg=2223.16, 90=3199, 99=3911, 99.9=7599, 99.99=21263] [READ-FAILED: Count=13465, Max=21743, Min=510, Avg=2509.56, 90=3651, 99=4999, 99.9=8527, 99.99=18719] 
2023-04-30 10:31:24:294 150 sec: 9996924 operations; 69891.8 current ops/sec; est completion in 4 hours 7 minutes [READ: Count=56166, Max=50847, Min=543, Avg=2502.71, 90=3751, 99=5651, 99.9=8407, 99.99=23711] [INSERT: Count=629046, Max=39231, Min=459, Avg=2105.97, 90=3161, 99=3913, 99.9=7643, 99.99=20063] [READ-FAILED: Count=13742, Max=37503, Min=516, Avg=2408.15, 90=3633, 99=4975, 99.9=8043, 99.99=25039] 
2023-04-30 10:31:34:294 160 sec: 10688445 operations; 69152.1 current ops/sec; est completion in 4 hours 6 minutes [READ: Count=55764, Max=181759, Min=544, Avg=2533.29, 90=3791, 99=5743, 99.9=8139, 99.99=67327] [INSERT: Count=621779, Max=182143, Min=476, Avg=2130.83, 90=3199, 99=3979, 99.9=7803, 99.99=77631] [READ-FAILED: Count=13259, Max=17599, Min=519, Avg=2409.6, 90=3641, 99=5075, 99.9=8099, 99.99=17551] 
2023-04-30 10:31:44:294 170 sec: 11362369 operations; 67392.4 current ops/sec; est completion in 4 hours 6 minutes [READ: Count=54630, Max=29679, Min=542, Avg=2605.69, 90=3823, 99=5739, 99.9=8751, 99.99=27439] [INSERT: Count=606848, Max=36735, Min=473, Avg=2180.95, 90=3181, 99=3955, 99.9=7871, 99.99=22319] [READ-FAILED: Count=12992, Max=28575, Min=513, Avg=2494.89, 90=3679, 99=5035, 99.9=7843, 99.99=28399] 
2023-04-30 10:31:54:294 180 sec: 11965159 operations; 60279 current ops/sec; est completion in 4 hours 7 minutes [READ: Count=48823, Max=30575, Min=553, Avg=2864.48, 90=3979, 99=6099, 99.9=7899, 99.99=20463] [INSERT: Count=542711, Max=36127, Min=475, Avg=2447.31, 90=3339, 99=4123, 99.9=7247, 99.99=22287] [READ-FAILED: Count=10994, Max=16327, Min=540, Avg=2742.89, 90=3803, 99=5223, 99.9=8099, 99.99=15575] 
2023-04-30 10:32:04:294 190 sec: 12538350 operations; 57319.1 current ops/sec; est completion in 4 hours 9 minutes [READ: Count=46550, Max=80063, Min=560, Avg=3013.23, 90=4119, 99=6591, 99.9=8855, 99.99=22015] [INSERT: Count=516095, Max=83071, Min=472, Avg=2572.81, 90=3435, 99=4239, 99.9=7927, 99.99=22191] [READ-FAILED: Count=10548, Max=69503, Min=545, Avg=2876.82, 90=3885, 99=5567, 99.9=8199, 99.99=9695] 
2023-04-30 10:32:14:294 200 sec: 13130091 operations; 59174.1 current ops/sec; est completion in 4 hours 10 minutes [READ: Count=48577, Max=39071, Min=566, Avg=2948.53, 90=4063, 99=6411, 99.9=9015, 99.99=30159] [INSERT: Count=532067, Max=36959, Min=478, Avg=2490.68, 90=3351, 99=4147, 99.9=7975, 99.99=22527] [READ-FAILED: Count=10737, Max=16735, Min=522, Avg=2814.44, 90=3825, 99=5399, 99.9=8019, 99.99=15767] 
2023-04-30 10:32:24:294 210 sec: 13728260 operations; 59816.9 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=49162, Max=37215, Min=604, Avg=2925.1, 90=4047, 99=6311, 99.9=8527, 99.99=27967] [INSERT: Count=538772, Max=35615, Min=509, Avg=2459.11, 90=3311, 99=4191, 99.9=7699, 99.99=24143] [READ-FAILED: Count=10702, Max=24271, Min=699, Avg=2806.35, 90=3853, 99=5459, 99.9=8503, 99.99=21711] 
2023-04-30 10:32:34:294 220 sec: 14324233 operations; 59597.3 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=48734, Max=136703, Min=621, Avg=2933.97, 90=4093, 99=6367, 99.9=8711, 99.99=78079] [INSERT: Count=536858, Max=137727, Min=489, Avg=2470.89, 90=3381, 99=4247, 99.9=7607, 99.99=23375] [READ-FAILED: Count=10428, Max=91903, Min=557, Avg=2812.26, 90=3859, 99=5475, 99.9=8471, 99.99=65727] 
2023-04-30 10:32:44:294 230 sec: 14932586 operations; 60835.3 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=50583, Max=78911, Min=582, Avg=2863.67, 90=4037, 99=6295, 99.9=8919, 99.99=21839] [INSERT: Count=547289, Max=107007, Min=472, Avg=2420.29, 90=3363, 99=4215, 99.9=7919, 99.99=27743] [READ-FAILED: Count=10480, Max=20847, Min=548, Avg=2759.09, 90=3877, 99=5579, 99.9=9607, 99.99=20303] 
2023-04-30 10:32:54:294 240 sec: 15586279 operations; 65369.3 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=54229, Max=47007, Min=577, Avg=2677.86, 90=3869, 99=5967, 99.9=7947, 99.99=24959] [INSERT: Count=587679, Max=47551, Min=490, Avg=2253.4, 90=3191, 99=4033, 99.9=7335, 99.99=25743] [READ-FAILED: Count=11149, Max=23199, Min=539, Avg=2574.33, 90=3693, 99=5127, 99.9=8091, 99.99=12023] 
2023-04-30 10:33:04:294 250 sec: 16188462 operations; 60218.3 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=49958, Max=22655, Min=570, Avg=2873.43, 90=3985, 99=6107, 99.9=8047, 99.99=19071] [INSERT: Count=542559, Max=26703, Min=477, Avg=2445.41, 90=3367, 99=3937, 99.9=6691, 99.99=17103] [READ-FAILED: Count=10064, Max=16703, Min=576, Avg=2775.06, 90=3823, 99=5103, 99.9=7107, 99.99=8903] 
2023-04-30 10:33:14:294 260 sec: 16811531 operations; 62306.9 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=51893, Max=41887, Min=576, Avg=2766.12, 90=3929, 99=5927, 99.9=7831, 99.99=15911] [INSERT: Count=560855, Max=70335, Min=480, Avg=2366.66, 90=3345, 99=3953, 99.9=7091, 99.99=27839] [READ-FAILED: Count=10461, Max=30607, Min=506, Avg=2669.14, 90=3797, 99=5123, 99.9=9295, 99.99=27839] 
2023-04-30 10:33:24:294 270 sec: 17418286 operations; 60675.5 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=50658, Max=65343, Min=581, Avg=2855.99, 90=4005, 99=6127, 99.9=8423, 99.99=29455] [INSERT: Count=546058, Max=67455, Min=483, Avg=2428.96, 90=3367, 99=4131, 99.9=7627, 99.99=25631] [READ-FAILED: Count=10005, Max=54975, Min=536, Avg=2752.47, 90=3829, 99=5363, 99.9=9671, 99.99=29327] 
2023-04-30 10:33:34:294 280 sec: 18070341 operations; 65205.5 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=55279, Max=50047, Min=536, Avg=2657.17, 90=3847, 99=5947, 99.9=7923, 99.99=13823] [INSERT: Count=586344, Max=84159, Min=471, Avg=2258.73, 90=3251, 99=3951, 99.9=7431, 99.99=15167] [READ-FAILED: Count=10646, Max=11383, Min=540, Avg=2564.23, 90=3703, 99=4983, 99.9=7427, 99.99=9511] 
2023-04-30 10:33:44:294 290 sec: 18764686 operations; 69434.5 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=58310, Max=103295, Min=556, Avg=2503.69, 90=3733, 99=5691, 99.9=8447, 99.99=22527] [INSERT: Count=624996, Max=114431, Min=486, Avg=2121.44, 90=3203, 99=3939, 99.9=7919, 99.99=36511] [READ-FAILED: Count=11048, Max=111423, Min=529, Avg=2396.38, 90=3601, 99=4723, 99.9=7483, 99.99=39839] 
2023-04-30 10:33:54:294 300 sec: 19462336 operations; 69765 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=58500, Max=100095, Min=571, Avg=2491.89, 90=3747, 99=5687, 99.9=8367, 99.99=47263] [INSERT: Count=627584, Max=110975, Min=476, Avg=2112.35, 90=3197, 99=4025, 99.9=7943, 99.99=64799] [READ-FAILED: Count=11079, Max=35391, Min=539, Avg=2358.22, 90=3579, 99=4763, 99.9=7651, 99.99=9799] 
2023-04-30 10:34:04:294 310 sec: 20132189 operations; 66985.3 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=56856, Max=153087, Min=557, Avg=2585.04, 90=3747, 99=5819, 99.9=8655, 99.99=146815] [INSERT: Count=602964, Max=153599, Min=481, Avg=2197.7, 90=3169, 99=3923, 99.9=7695, 99.99=145023] [READ-FAILED: Count=10449, Max=75455, Min=514, Avg=2453.62, 90=3603, 99=5095, 99.9=8431, 99.99=67519] 
2023-04-30 10:34:14:294 320 sec: 20756396 operations; 62420.7 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=52789, Max=35839, Min=557, Avg=2753.34, 90=3895, 99=6055, 99.9=8479, 99.99=30015] [INSERT: Count=561489, Max=49471, Min=465, Avg=2363.38, 90=3297, 99=4069, 99.9=7859, 99.99=26831] [READ-FAILED: Count=9771, Max=26559, Min=513, Avg=2657.01, 90=3723, 99=5251, 99.9=8687, 99.99=24911] 
2023-04-30 10:34:24:294 330 sec: 21364898 operations; 60850.2 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=51679, Max=63295, Min=558, Avg=2843.06, 90=3975, 99=6243, 99.9=8687, 99.99=31951] [INSERT: Count=547688, Max=61759, Min=482, Avg=2422.49, 90=3361, 99=4049, 99.9=8295, 99.99=26159] [READ-FAILED: Count=9133, Max=23183, Min=541, Avg=2731.02, 90=3801, 99=5259, 99.9=9143, 99.99=14751] 
2023-04-30 10:34:34:294 340 sec: 21992506 operations; 62760.8 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=53538, Max=55615, Min=556, Avg=2774.55, 90=3899, 99=6251, 99.9=8423, 99.99=15663] [INSERT: Count=564747, Max=102655, Min=484, Avg=2346.02, 90=3211, 99=4089, 99.9=7563, 99.99=17503] [READ-FAILED: Count=9409, Max=83071, Min=534, Avg=2672.81, 90=3703, 99=5495, 99.9=8367, 99.99=10199] 
2023-04-30 10:34:44:298 350 sec: 22642345 operations; 64957.92 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=55226, Max=37375, Min=554, Avg=2708.09, 90=3869, 99=6011, 99.9=8407, 99.99=23775] [INSERT: Count=584883, Max=45919, Min=467, Avg=2263.8, 90=3193, 99=3991, 99.9=7571, 99.99=24671] [READ-FAILED: Count=9801, Max=37663, Min=534, Avg=2597.04, 90=3715, 99=5083, 99.9=8287, 99.99=21759] 
2023-04-30 10:34:54:294 360 sec: 23274645 operations; 63255.3 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=54190, Max=31999, Min=547, Avg=2768.9, 90=3989, 99=6091, 99.9=8159, 99.99=23935] [INSERT: Count=568644, Max=36095, Min=458, Avg=2326.51, 90=3293, 99=4099, 99.9=7375, 99.99=22847] [READ-FAILED: Count=9397, Max=18927, Min=528, Avg=2651, 90=3809, 99=5263, 99.9=7883, 99.99=12407] 
2023-04-30 10:35:04:294 370 sec: 23929657 operations; 65501.2 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=56153, Max=13767, Min=560, Avg=2687.26, 90=3927, 99=6107, 99.9=8295, 99.99=10327] [INSERT: Count=589638, Max=16023, Min=472, Avg=2244.66, 90=3239, 99=3985, 99.9=7687, 99.99=9871] [READ-FAILED: Count=9522, Max=12663, Min=510, Avg=2567.65, 90=3745, 99=5251, 99.9=8455, 99.99=9423] 
2023-04-30 10:35:14:294 380 sec: 24585404 operations; 65574.7 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=55826, Max=61887, Min=549, Avg=2675.06, 90=3877, 99=6223, 99.9=8711, 99.99=27439] [INSERT: Count=590493, Max=73151, Min=474, Avg=2244.32, 90=3233, 99=3957, 99.9=7651, 99.99=29919] [READ-FAILED: Count=9354, Max=36287, Min=519, Avg=2562.6, 90=3725, 99=5459, 99.9=8591, 99.99=32159] 
2023-04-30 10:35:24:294 390 sec: 25201554 operations; 61615 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=53017, Max=65599, Min=556, Avg=2823.19, 90=4019, 99=6199, 99.9=8623, 99.99=31759] [INSERT: Count=553915, Max=66943, Min=474, Avg=2390.64, 90=3347, 99=4061, 99.9=7731, 99.99=25471] [READ-FAILED: Count=8869, Max=25983, Min=531, Avg=2710.24, 90=3825, 99=5291, 99.9=7919, 99.99=16815] 
2023-04-30 10:35:34:294 400 sec: 25775344 operations; 57379 current ops/sec; est completion in 4 hours 11 minutes [READ: Count=49450, Max=155263, Min=550, Avg=3011.8, 90=4175, 99=6487, 99.9=8791, 99.99=56991] [INSERT: Count=516407, Max=158591, Min=463, Avg=2569.35, 90=3455, 99=4335, 99.9=7683, 99.99=64735] [READ-FAILED: Count=8083, Max=96447, Min=531, Avg=2891.46, 90=3975, 99=5467, 99.9=8479, 99.99=10823] 
2023-04-30 10:35:44:294 410 sec: 26385955 operations; 61061.1 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=52414, Max=40607, Min=556, Avg=2857.8, 90=4061, 99=6291, 99.9=8679, 99.99=23215] [INSERT: Count=549856, Max=79679, Min=464, Avg=2411.07, 90=3379, 99=4037, 99.9=7727, 99.99=26095] [READ-FAILED: Count=8445, Max=26143, Min=493, Avg=2735.78, 90=3847, 99=5355, 99.9=9503, 99.99=24479] 
2023-04-30 10:35:54:294 420 sec: 27005270 operations; 61931.5 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=53503, Max=54431, Min=563, Avg=2817.13, 90=4045, 99=6267, 99.9=9335, 99.99=33023] [INSERT: Count=556941, Max=73535, Min=478, Avg=2377.01, 90=3391, 99=4247, 99.9=8375, 99.99=26415] [READ-FAILED: Count=8721, Max=64159, Min=531, Avg=2687.66, 90=3847, 99=5431, 99.9=8295, 99.99=24319] 
2023-04-30 10:36:04:294 430 sec: 27625066 operations; 61979.6 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=53580, Max=61823, Min=555, Avg=2815.06, 90=4043, 99=6287, 99.9=8131, 99.99=14847] [INSERT: Count=557612, Max=69183, Min=466, Avg=2375.38, 90=3369, 99=4017, 99.9=7259, 99.99=14247] [READ-FAILED: Count=8562, Max=45567, Min=520, Avg=2688.54, 90=3827, 99=5199, 99.9=8639, 99.99=15807] 
2023-04-30 10:36:14:294 440 sec: 28252563 operations; 62749.7 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=54647, Max=36607, Min=538, Avg=2776.75, 90=4013, 99=6327, 99.9=8831, 99.99=25519] [INSERT: Count=563928, Max=66111, Min=478, Avg=2349.24, 90=3361, 99=3997, 99.9=8287, 99.99=27055] [READ-FAILED: Count=8550, Max=26431, Min=519, Avg=2649.29, 90=3797, 99=5443, 99.9=8519, 99.99=24255] 
2023-04-30 10:36:24:294 450 sec: 28855420 operations; 60285.7 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=52242, Max=85951, Min=553, Avg=2897.12, 90=4037, 99=6395, 99.9=9151, 99.99=32431] [INSERT: Count=542823, Max=95167, Min=466, Avg=2439.07, 90=3381, 99=3893, 99.9=7275, 99.99=42783] [READ-FAILED: Count=8076, Max=86143, Min=503, Avg=2773.24, 90=3803, 99=5171, 99.9=13247, 99.99=81663] 
2023-04-30 10:36:34:294 460 sec: 29432338 operations; 57691.8 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=50213, Max=124607, Min=570, Avg=3026.69, 90=4143, 99=6551, 99.9=8279, 99.99=73919] [INSERT: Count=519224, Max=129023, Min=471, Avg=2552.42, 90=3437, 99=3923, 99.9=7307, 99.99=34399] [READ-FAILED: Count=7551, Max=116543, Min=514, Avg=2879.93, 90=3879, 99=5235, 99.9=7979, 99.99=14727] 
2023-04-30 10:36:44:294 470 sec: 29979923 operations; 54758.5 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=47713, Max=30895, Min=587, Avg=3148.47, 90=4247, 99=6667, 99.9=8463, 99.99=26671] [INSERT: Count=492554, Max=34847, Min=467, Avg=2693.72, 90=3523, 99=3997, 99.9=6923, 99.99=25359] [READ-FAILED: Count=7286, Max=28895, Min=517, Avg=2993.49, 90=3957, 99=5411, 99.9=7347, 99.99=8263] 
2023-04-30 10:36:54:294 480 sec: 30511112 operations; 53118.9 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=46134, Max=33759, Min=578, Avg=3246.32, 90=4367, 99=6831, 99.9=9287, 99.99=28703] [INSERT: Count=478139, Max=48703, Min=500, Avg=2776.86, 90=3563, 99=4339, 99.9=7563, 99.99=25407] [READ-FAILED: Count=6853, Max=27023, Min=583, Avg=3086.14, 90=4085, 99=5623, 99.9=8399, 99.99=11039] 
2023-04-30 10:37:04:294 490 sec: 31042274 operations; 53116.2 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=46271, Max=16831, Min=657, Avg=3254.3, 90=4399, 99=6831, 99.9=8871, 99.99=11327] [INSERT: Count=477783, Max=16479, Min=493, Avg=2776.38, 90=3541, 99=4279, 99.9=7723, 99.99=9791] [READ-FAILED: Count=7034, Max=9559, Min=685, Avg=3081.34, 90=4049, 99=5603, 99.9=8319, 99.99=9247] 
2023-04-30 10:37:14:294 500 sec: 31557413 operations; 51513.9 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=45395, Max=94591, Min=584, Avg=3366.11, 90=4495, 99=7067, 99.9=10247, 99.99=34463] [INSERT: Count=463213, Max=92927, Min=508, Avg=2860.85, 90=3603, 99=4439, 99.9=7735, 99.99=30847] [READ-FAILED: Count=6463, Max=27647, Min=927, Avg=3190.24, 90=4135, 99=5663, 99.9=8535, 99.99=12087] 
2023-04-30 10:37:24:294 510 sec: 32071566 operations; 51415.3 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=44910, Max=98559, Min=542, Avg=3408.26, 90=4591, 99=7119, 99.9=9447, 99.99=60447] [INSERT: Count=462870, Max=91583, Min=490, Avg=2863.23, 90=3609, 99=4511, 99.9=7971, 99.99=39199] [READ-FAILED: Count=6408, Max=42303, Min=863, Avg=3220.3, 90=4183, 99=5951, 99.9=8615, 99.99=23807] 
2023-04-30 10:37:34:294 520 sec: 32621191 operations; 54962.5 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=47927, Max=75071, Min=613, Avg=3211.83, 90=4407, 99=6887, 99.9=9255, 99.99=18671] [INSERT: Count=495152, Max=75327, Min=498, Avg=2675.04, 90=3495, 99=4331, 99.9=7743, 99.99=15871] [READ-FAILED: Count=6754, Max=56447, Min=772, Avg=3053.7, 90=4081, 99=5991, 99.9=9231, 99.99=33631] 
2023-04-30 10:37:44:294 530 sec: 33195324 operations; 57413.3 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=50128, Max=44927, Min=585, Avg=3095, 90=4283, 99=6675, 99.9=9095, 99.99=29519] [INSERT: Count=517064, Max=63007, Min=480, Avg=2558.86, 90=3451, 99=4227, 99.9=7871, 99.99=26367] [READ-FAILED: Count=7035, Max=30431, Min=522, Avg=2935.83, 90=3985, 99=5511, 99.9=8959, 99.99=26975] 
2023-04-30 10:37:54:294 540 sec: 33780216 operations; 58489.2 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=51357, Max=40223, Min=594, Avg=3032.27, 90=4263, 99=6723, 99.9=9543, 99.99=26239] [INSERT: Count=526493, Max=43743, Min=478, Avg=2511.56, 90=3463, 99=4387, 99.9=8903, 99.99=27327] [READ-FAILED: Count=7096, Max=17231, Min=545, Avg=2868.64, 90=3983, 99=5731, 99.9=8171, 99.99=10871] 
2023-04-30 10:38:04:294 550 sec: 34350681 operations; 57046.5 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=49950, Max=17167, Min=586, Avg=3073.76, 90=4299, 99=6667, 99.9=8655, 99.99=12287] [INSERT: Count=513313, Max=15447, Min=474, Avg=2580.08, 90=3513, 99=4291, 99.9=7523, 99.99=9439] [READ-FAILED: Count=6894, Max=9391, Min=566, Avg=2931.13, 90=3999, 99=5595, 99.9=7871, 99.99=8807] 
2023-04-30 10:38:14:294 560 sec: 34904442 operations; 55376.1 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=48908, Max=34079, Min=548, Avg=3175.59, 90=4371, 99=6875, 99.9=8943, 99.99=24735] [INSERT: Count=498206, Max=39903, Min=468, Avg=2656.72, 90=3539, 99=4407, 99.9=7611, 99.99=23823] [READ-FAILED: Count=6590, Max=31711, Min=504, Avg=3006.98, 90=4023, 99=5675, 99.9=7903, 99.99=12727] 
2023-04-30 10:38:24:294 570 sec: 35462246 operations; 55780.4 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=48615, Max=68991, Min=643, Avg=3137.71, 90=4315, 99=6859, 99.9=9503, 99.99=25407] [INSERT: Count=502674, Max=83711, Min=481, Avg=2639.23, 90=3529, 99=4327, 99.9=8111, 99.99=33663] [READ-FAILED: Count=6739, Max=26879, Min=513, Avg=2958.16, 90=3943, 99=5399, 99.9=8199, 99.99=13159] 
2023-04-30 10:38:34:294 580 sec: 36047834 operations; 58558.8 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51476, Max=44447, Min=549, Avg=2992.48, 90=4187, 99=6539, 99.9=8847, 99.99=12207] [INSERT: Count=527142, Max=69759, Min=468, Avg=2513.35, 90=3467, 99=4091, 99.9=7787, 99.99=13951] [READ-FAILED: Count=7007, Max=10927, Min=513, Avg=2825.67, 90=3859, 99=5275, 99.9=8279, 99.99=9143] 
2023-04-30 10:38:44:294 590 sec: 36629547 operations; 58171.3 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51352, Max=39903, Min=553, Avg=3005.63, 90=4211, 99=6563, 99.9=9119, 99.99=19887] [INSERT: Count=523503, Max=40703, Min=467, Avg=2530.82, 90=3479, 99=4255, 99.9=8035, 99.99=21279] [READ-FAILED: Count=6704, Max=25919, Min=494, Avg=2828.32, 90=3839, 99=5351, 99.9=8399, 99.99=14271] 
2023-04-30 10:38:54:294 600 sec: 37213251 operations; 58370.4 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51638, Max=80127, Min=539, Avg=3002.88, 90=4223, 99=6659, 99.9=8983, 99.99=27135] [INSERT: Count=525314, Max=80639, Min=458, Avg=2521.41, 90=3453, 99=4239, 99.9=7787, 99.99=29311] [READ-FAILED: Count=6746, Max=81407, Min=530, Avg=2836.93, 90=3859, 99=5407, 99.9=8639, 99.99=30287] 
2023-04-30 10:39:04:294 610 sec: 37792556 operations; 57930.5 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51063, Max=51551, Min=542, Avg=3028.63, 90=4291, 99=6775, 99.9=9103, 99.99=12663] [INSERT: Count=521758, Max=57599, Min=470, Avg=2540.65, 90=3451, 99=4311, 99.9=7675, 99.99=12871] [READ-FAILED: Count=6626, Max=11735, Min=508, Avg=2820.81, 90=3855, 99=5399, 99.9=7347, 99.99=9031] 
2023-04-30 10:39:14:294 620 sec: 38377505 operations; 58494.9 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51722, Max=105279, Min=526, Avg=2973.71, 90=4227, 99=6731, 99.9=9135, 99.99=29743] [INSERT: Count=526485, Max=113919, Min=467, Avg=2518.81, 90=3407, 99=4183, 99.9=8051, 99.99=30975] [READ-FAILED: Count=6770, Max=21519, Min=540, Avg=2799.66, 90=3827, 99=5219, 99.9=8191, 99.99=20095] 
2023-04-30 10:39:24:294 630 sec: 38948987 operations; 57148.2 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=50670, Max=45023, Min=564, Avg=3051.98, 90=4251, 99=6695, 99.9=9255, 99.99=28639] [INSERT: Count=514259, Max=44287, Min=451, Avg=2577.64, 90=3427, 99=4291, 99.9=8027, 99.99=27919] [READ-FAILED: Count=6365, Max=13431, Min=499, Avg=2834.44, 90=3871, 99=5271, 99.9=8231, 99.99=12759] 
2023-04-30 10:39:34:294 640 sec: 39510670 operations; 56168.3 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=49832, Max=114879, Min=607, Avg=3109.07, 90=4355, 99=6783, 99.9=8887, 99.99=70527] [INSERT: Count=505664, Max=127679, Min=474, Avg=2622.15, 90=3451, 99=4239, 99.9=7707, 99.99=52799] [READ-FAILED: Count=6266, Max=17919, Min=566, Avg=2909.37, 90=3923, 99=5447, 99.9=8115, 99.99=9407] 
2023-04-30 10:39:44:294 650 sec: 40064326 operations; 55365.6 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=49307, Max=32239, Min=620, Avg=3153.56, 90=4375, 99=6887, 99.9=9679, 99.99=28991] [INSERT: Count=497888, Max=39295, Min=510, Avg=2660.69, 90=3535, 99=4323, 99.9=8055, 99.99=22911] [READ-FAILED: Count=6211, Max=29343, Min=700, Avg=2975.46, 90=4005, 99=5823, 99.9=9439, 99.99=26175] 
2023-04-30 10:39:54:294 660 sec: 40616407 operations; 55208.1 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=49430, Max=36127, Min=545, Avg=3159.79, 90=4407, 99=6819, 99.9=9103, 99.99=22335] [INSERT: Count=496772, Max=47295, Min=495, Avg=2665.63, 90=3517, 99=4339, 99.9=7707, 99.99=22623] [READ-FAILED: Count=6060, Max=33791, Min=528, Avg=2988.64, 90=4013, 99=5707, 99.9=12935, 99.99=33759] 
2023-04-30 10:40:04:294 670 sec: 41197805 operations; 58139.8 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=51476, Max=110591, Min=568, Avg=3009.32, 90=4299, 99=6675, 99.9=8519, 99.99=11039] [INSERT: Count=523604, Max=118655, Min=476, Avg=2531.89, 90=3429, 99=4235, 99.9=7491, 99.99=19951] [READ-FAILED: Count=6366, Max=100287, Min=557, Avg=2821.77, 90=3857, 99=5171, 99.9=8199, 99.99=9519] 
2023-04-30 10:40:14:294 680 sec: 41799649 operations; 60184.4 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=53345, Max=75007, Min=572, Avg=2904.86, 90=4175, 99=6515, 99.9=9215, 99.99=34335] [INSERT: Count=541903, Max=85567, Min=489, Avg=2446.11, 90=3341, 99=4139, 99.9=8075, 99.99=25807] [READ-FAILED: Count=6610, Max=83071, Min=549, Avg=2751.5, 90=3811, 99=5455, 99.9=8471, 99.99=24031] 
2023-04-30 10:40:24:294 690 sec: 42394768 operations; 59511.9 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=53350, Max=51839, Min=565, Avg=2952.97, 90=4235, 99=6567, 99.9=9031, 99.99=25135] [INSERT: Count=535256, Max=45631, Min=475, Avg=2471.9, 90=3339, 99=4135, 99.9=8099, 99.99=26207] [READ-FAILED: Count=6565, Max=19871, Min=529, Avg=2751.95, 90=3829, 99=5239, 99.9=8127, 99.99=10063] 
2023-04-30 10:40:34:294 700 sec: 42982480 operations; 58771.2 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=52825, Max=170239, Min=539, Avg=2977.98, 90=4255, 99=6567, 99.9=8959, 99.99=119167] [INSERT: Count=528553, Max=179327, Min=472, Avg=2504.55, 90=3391, 99=4203, 99.9=7799, 99.99=125375] [READ-FAILED: Count=6260, Max=13583, Min=538, Avg=2788.78, 90=3899, 99=5255, 99.9=7987, 99.99=9151] 
2023-04-30 10:40:44:294 710 sec: 43572361 operations; 58988.1 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=53184, Max=109183, Min=549, Avg=2988.44, 90=4223, 99=6443, 99.9=9087, 99.99=50623] [INSERT: Count=530382, Max=130815, Min=471, Avg=2492.81, 90=3389, 99=4095, 99.9=7747, 99.99=35487] [READ-FAILED: Count=6312, Max=20607, Min=523, Avg=2780.57, 90=3811, 99=4975, 99.9=7443, 99.99=19215] 
2023-04-30 10:40:54:294 720 sec: 44153753 operations; 58139.2 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=51914, Max=71871, Min=542, Avg=3040.48, 90=4279, 99=6587, 99.9=8935, 99.99=23999] [INSERT: Count=523345, Max=101311, Min=477, Avg=2528.51, 90=3361, 99=4183, 99.9=7767, 99.99=27951] [READ-FAILED: Count=6116, Max=11591, Min=561, Avg=2854.37, 90=3887, 99=5359, 99.9=8311, 99.99=8943] 
2023-04-30 10:41:04:294 730 sec: 44726221 operations; 57246.8 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=51806, Max=113471, Min=544, Avg=3093.93, 90=4375, 99=6735, 99.9=9039, 99.99=25711] [INSERT: Count=514780, Max=122047, Min=476, Avg=2568.24, 90=3411, 99=4295, 99.9=7547, 99.99=33855] [READ-FAILED: Count=5963, Max=16751, Min=505, Avg=2865.86, 90=3883, 99=5431, 99.9=9695, 99.99=11767] 
2023-04-30 10:41:14:294 740 sec: 45314182 operations; 58796.1 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=52769, Max=73535, Min=527, Avg=3018.13, 90=4287, 99=6743, 99.9=9575, 99.99=71423] [INSERT: Count=529249, Max=72703, Min=469, Avg=2497.9, 90=3393, 99=4211, 99.9=8079, 99.99=70911] [READ-FAILED: Count=5999, Max=72127, Min=505, Avg=2818.79, 90=3873, 99=5375, 99.9=7995, 99.99=71999] 
2023-04-30 10:41:24:294 750 sec: 45922477 operations; 60829.5 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=54330, Max=71423, Min=540, Avg=2923.02, 90=4227, 99=6575, 99.9=8959, 99.99=26591] [INSERT: Count=547728, Max=71551, Min=466, Avg=2415.16, 90=3317, 99=4171, 99.9=7767, 99.99=25759] [READ-FAILED: Count=6150, Max=73343, Min=508, Avg=2731.88, 90=3803, 99=5343, 99.9=8951, 99.99=15495] 
2023-04-30 10:41:34:294 760 sec: 46535245 operations; 61276.8 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=55184, Max=17279, Min=553, Avg=2889.99, 90=4183, 99=6439, 99.9=8647, 99.99=10815] [INSERT: Count=551344, Max=18463, Min=473, Avg=2398.48, 90=3291, 99=4023, 99.9=7491, 99.99=12135] [READ-FAILED: Count=6279, Max=9343, Min=525, Avg=2677.46, 90=3721, 99=5163, 99.9=7543, 99.99=8391] 
2023-04-30 10:41:44:294 770 sec: 47128079 operations; 59283.4 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=53350, Max=36031, Min=547, Avg=2983.5, 90=4271, 99=6487, 99.9=8607, 99.99=22415] [INSERT: Count=533458, Max=44927, Min=468, Avg=2479.95, 90=3391, 99=4267, 99.9=7575, 99.99=21775] [READ-FAILED: Count=5956, Max=15735, Min=512, Avg=2766.44, 90=3815, 99=5379, 99.9=8067, 99.99=8663] 
2023-04-30 10:41:54:294 780 sec: 47718079 operations; 59000 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=53241, Max=37823, Min=556, Avg=2988.34, 90=4255, 99=6547, 99.9=8807, 99.99=22751] [INSERT: Count=530963, Max=39231, Min=466, Avg=2492.49, 90=3407, 99=4167, 99.9=7799, 99.99=22031] [READ-FAILED: Count=5860, Max=30623, Min=551, Avg=2792.24, 90=3841, 99=5187, 99.9=8023, 99.99=19519] 
2023-04-30 10:42:04:294 790 sec: 48289414 operations; 57133.5 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=51389, Max=17311, Min=558, Avg=3096.27, 90=4395, 99=6707, 99.9=8559, 99.99=12279] [INSERT: Count=514408, Max=16655, Min=452, Avg=2573.21, 90=3461, 99=4247, 99.9=7263, 99.99=10543] [READ-FAILED: Count=5525, Max=9095, Min=539, Avg=2898.58, 90=3889, 99=5471, 99.9=7447, 99.99=8295] 
2023-04-30 10:42:14:294 800 sec: 48790762 operations; 50134.8 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=45261, Max=58015, Min=574, Avg=3553.38, 90=5071, 99=8127, 99.9=25647, 99.99=43295] [INSERT: Count=451033, Max=61535, Min=483, Avg=2930.94, 90=3639, 99=4803, 99.9=23599, 99.99=39199] [READ-FAILED: Count=4844, Max=36959, Min=573, Avg=3271.03, 90=4207, 99=6467, 99.9=25167, 99.99=36959] 
2023-04-30 10:42:24:294 810 sec: 49308915 operations; 51815.3 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=46962, Max=38015, Min=824, Avg=3445.93, 90=4939, 99=7379, 99.9=10143, 99.99=29119] [INSERT: Count=466045, Max=38271, Min=529, Avg=2833.57, 90=3623, 99=4499, 99.9=7759, 99.99=24383] [READ-FAILED: Count=5080, Max=13255, Min=940, Avg=3189.88, 90=4183, 99=5963, 99.9=8239, 99.99=10663] 
2023-04-30 10:42:34:294 820 sec: 49870738 operations; 56182.3 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=50663, Max=16783, Min=661, Avg=3220.93, 90=4591, 99=6963, 99.9=8927, 99.99=13183] [INSERT: Count=506112, Max=16991, Min=483, Avg=2608.21, 90=3537, 99=4323, 99.9=7291, 99.99=10383] [READ-FAILED: Count=5324, Max=9079, Min=756, Avg=2991.99, 90=4061, 99=5675, 99.9=8679, 99.99=8959] 
2023-04-30 10:42:44:294 830 sec: 50482425 operations; 61168.7 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=55597, Max=29679, Min=611, Avg=2982.07, 90=4343, 99=6767, 99.9=9679, 99.99=19455] [INSERT: Count=550296, Max=32511, Min=503, Avg=2392.53, 90=3317, 99=4275, 99.9=8543, 99.99=22175] [READ-FAILED: Count=5927, Max=29919, Min=629, Avg=2748.78, 90=3833, 99=5427, 99.9=8303, 99.99=16607] 
2023-04-30 10:42:54:294 840 sec: 51127982 operations; 64555.7 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=58321, Max=11823, Min=620, Avg=2818.53, 90=4143, 99=6515, 99.9=8511, 99.99=10095] [INSERT: Count=581172, Max=11007, Min=497, Avg=2268.16, 90=3185, 99=4095, 99.9=7591, 99.99=9367] [READ-FAILED: Count=6030, Max=10871, Min=678, Avg=2611.13, 90=3711, 99=5207, 99.9=8391, 99.99=10399] 
2023-04-30 10:43:04:294 850 sec: 51795137 operations; 66715.5 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=60824, Max=42655, Min=593, Avg=2725.17, 90=4045, 99=6323, 99.9=8999, 99.99=25503] [INSERT: Count=600314, Max=46047, Min=487, Avg=2194.43, 90=3085, 99=3959, 99.9=7827, 99.99=21647] [READ-FAILED: Count=6192, Max=25887, Min=670, Avg=2525.33, 90=3639, 99=5055, 99.9=8359, 99.99=20383] 
2023-04-30 10:43:14:294 860 sec: 52466141 operations; 67100.4 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=60825, Max=45695, Min=609, Avg=2711.68, 90=4027, 99=6323, 99.9=8639, 99.99=29599] [INSERT: Count=603975, Max=30943, Min=490, Avg=2182.05, 90=3065, 99=3939, 99.9=7551, 99.99=20735] [READ-FAILED: Count=6231, Max=13847, Min=541, Avg=2492.58, 90=3623, 99=5135, 99.9=7887, 99.99=10847] 
2023-04-30 10:43:24:294 870 sec: 53106364 operations; 64022.3 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=58138, Max=18607, Min=584, Avg=2810.49, 90=4183, 99=6615, 99.9=8599, 99.99=14175] [INSERT: Count=575966, Max=20783, Min=478, Avg=2291.8, 90=3201, 99=4073, 99.9=7667, 99.99=15271] [READ-FAILED: Count=5808, Max=18751, Min=557, Avg=2610.5, 90=3725, 99=5339, 99.9=7687, 99.99=12687] 
2023-04-30 10:43:34:294 880 sec: 53619914 operations; 51355 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=47204, Max=38655, Min=623, Avg=3414.51, 90=4931, 99=7135, 99.9=9119, 99.99=26303] [INSERT: Count=461243, Max=36735, Min=517, Avg=2866.3, 90=3609, 99=4455, 99.9=7891, 99.99=23215] [READ-FAILED: Count=4723, Max=9239, Min=710, Avg=3158.11, 90=4147, 99=5911, 99.9=8183, 99.99=9239] 
2023-04-30 10:43:44:294 890 sec: 54136916 operations; 51700.2 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=47447, Max=11887, Min=610, Avg=3393.82, 90=4935, 99=7155, 99.9=9119, 99.99=10759] [INSERT: Count=465182, Max=11647, Min=499, Avg=2845.41, 90=3633, 99=4403, 99.9=7615, 99.99=9911] [READ-FAILED: Count=4727, Max=10687, Min=577, Avg=3124.71, 90=4099, 99=5655, 99.9=8279, 99.99=10687] 
2023-04-30 10:43:54:294 900 sec: 54732015 operations; 59509.9 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=54322, Max=47135, Min=573, Avg=3009.62, 90=4435, 99=6811, 99.9=8919, 99.99=22959] [INSERT: Count=535662, Max=45631, Min=486, Avg=2465.35, 90=3405, 99=4239, 99.9=7599, 99.99=21279] [READ-FAILED: Count=5336, Max=10383, Min=571, Avg=2779.93, 90=3891, 99=5427, 99.9=8095, 99.99=8431] 
2023-04-30 10:44:04:294 910 sec: 55370516 operations; 63850.1 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=58211, Max=30095, Min=603, Avg=2842.58, 90=4219, 99=6599, 99.9=8695, 99.99=17183] [INSERT: Count=574487, Max=32399, Min=484, Avg=2293.93, 90=3219, 99=4039, 99.9=7543, 99.99=20767] [READ-FAILED: Count=5680, Max=11527, Min=535, Avg=2619.01, 90=3695, 99=5287, 99.9=7611, 99.99=9815] 
2023-04-30 10:44:14:294 920 sec: 56015164 operations; 64464.8 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=58998, Max=26735, Min=557, Avg=2813.46, 90=4167, 99=6527, 99.9=8607, 99.99=16767] [INSERT: Count=580076, Max=34591, Min=487, Avg=2272.03, 90=3205, 99=4045, 99.9=7471, 99.99=12399] [READ-FAILED: Count=5593, Max=9239, Min=555, Avg=2609.1, 90=3705, 99=5147, 99.9=7379, 99.99=8175] 
2023-04-30 10:44:24:294 930 sec: 56661386 operations; 64622.2 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=59096, Max=33311, Min=579, Avg=2796.91, 90=4111, 99=6447, 99.9=9183, 99.99=23327] [INSERT: Count=581485, Max=42879, Min=482, Avg=2267.65, 90=3209, 99=4135, 99.9=8147, 99.99=21071] [READ-FAILED: Count=5645, Max=11607, Min=529, Avg=2586.43, 90=3709, 99=5263, 99.9=8011, 99.99=9207] 
2023-04-30 10:44:34:295 940 sec: 57304316 operations; 64293 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=58687, Max=15295, Min=599, Avg=2822.01, 90=4167, 99=6407, 99.9=8319, 99.99=11463] [INSERT: Count=578605, Max=17199, Min=489, Avg=2278.38, 90=3203, 99=4031, 99.9=7287, 99.99=11047] [READ-FAILED: Count=5568, Max=11807, Min=543, Avg=2614.91, 90=3691, 99=5199, 99.9=7647, 99.99=10863] 
2023-04-30 10:44:44:294 950 sec: 57829881 operations; 52556.5 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=48167, Max=32575, Min=610, Avg=3383.49, 90=4923, 99=7267, 99.9=9767, 99.99=25583] [INSERT: Count=472609, Max=31583, Min=503, Avg=2796.83, 90=3583, 99=4407, 99.9=7423, 99.99=21759] [READ-FAILED: Count=4424, Max=9231, Min=618, Avg=3127.43, 90=4123, 99=5735, 99.9=7743, 99.99=9231] 
2023-04-30 10:44:54:294 960 sec: 58340710 operations; 51082.9 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=46518, Max=35359, Min=549, Avg=3447.68, 90=5019, 99=7147, 99.9=9447, 99.99=15239] [INSERT: Count=460171, Max=34367, Min=487, Avg=2879.43, 90=3637, 99=4471, 99.9=7663, 99.99=23423] [READ-FAILED: Count=4333, Max=27663, Min=541, Avg=3172.33, 90=4139, 99=5699, 99.9=8263, 99.99=27663] 
2023-04-30 10:45:04:294 970 sec: 58881212 operations; 54050.2 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=49191, Max=16167, Min=570, Avg=3326.98, 90=4859, 99=7215, 99.9=9383, 99.99=12543] [INSERT: Count=486377, Max=18191, Min=494, Avg=2716.24, 90=3525, 99=4395, 99.9=7763, 99.99=13415] [READ-FAILED: Count=4395, Max=10343, Min=580, Avg=3048.51, 90=4033, 99=5887, 99.9=7951, 99.99=10343] 
2023-04-30 10:45:14:294 980 sec: 59444880 operations; 56366.8 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51405, Max=70271, Min=581, Avg=3232.21, 90=4767, 99=7219, 99.9=10999, 99.99=28719] [INSERT: Count=508248, Max=70847, Min=488, Avg=2595.66, 90=3427, 99=4247, 99.9=8431, 99.99=27023] [READ-FAILED: Count=4609, Max=29071, Min=648, Avg=2984.75, 90=4009, 99=5955, 99.9=8295, 99.99=29071] 
2023-04-30 10:45:24:294 990 sec: 60024188 operations; 57930.8 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=53000, Max=86079, Min=572, Avg=3143.94, 90=4571, 99=6935, 99.9=9207, 99.99=48415] [INSERT: Count=521535, Max=86207, Min=492, Avg=2527.95, 90=3417, 99=4263, 99.9=7875, 99.99=17215] [READ-FAILED: Count=4797, Max=16815, Min=681, Avg=2871.37, 90=3935, 99=5615, 99.9=8455, 99.99=16815] 
2023-04-30 10:45:34:294 1000 sec: 60603711 operations; 57952.3 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=53463, Max=61567, Min=569, Avg=3137.51, 90=4555, 99=6939, 99.9=9919, 99.99=29263] [INSERT: Count=521321, Max=84735, Min=488, Avg=2526.81, 90=3405, 99=4279, 99.9=8191, 99.99=28543] [READ-FAILED: Count=4756, Max=41663, Min=551, Avg=2887.8, 90=3943, 99=5543, 99.9=8951, 99.99=41663] 
2023-04-30 10:45:44:294 1010 sec: 61190250 operations; 58653.9 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=53798, Max=33407, Min=547, Avg=3105.9, 90=4547, 99=6875, 99.9=9383, 99.99=26191] [INSERT: Count=528033, Max=33151, Min=486, Avg=2496.08, 90=3375, 99=4275, 99.9=7751, 99.99=24047] [READ-FAILED: Count=4747, Max=14191, Min=524, Avg=2850.07, 90=3953, 99=5671, 99.9=7631, 99.99=14191] 
2023-04-30 10:45:54:294 1020 sec: 61750220 operations; 55997 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=51405, Max=29935, Min=559, Avg=3225.6, 90=4763, 99=7099, 99.9=9127, 99.99=11671] [INSERT: Count=503814, Max=34399, Min=478, Avg=2619.67, 90=3515, 99=4207, 99.9=7811, 99.99=9847] [READ-FAILED: Count=4455, Max=9959, Min=570, Avg=2958.4, 90=3981, 99=5499, 99.9=8895, 99.99=9959] 
2023-04-30 10:46:04:294 1030 sec: 62239704 operations; 48948.4 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=44732, Max=37183, Min=626, Avg=3612.14, 90=5303, 99=7511, 99.9=10479, 99.99=26671] [INSERT: Count=440743, Max=36255, Min=515, Avg=3003.64, 90=3651, 99=4583, 99.9=7863, 99.99=21855] [READ-FAILED: Count=3947, Max=12287, Min=798, Avg=3311.47, 90=4211, 99=6023, 99.9=8551, 99.99=12287] 
2023-04-30 10:46:14:294 1040 sec: 62747515 operations; 50781.1 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=46703, Max=47871, Min=554, Avg=3523.03, 90=5263, 99=7495, 99.9=11079, 99.99=23007] [INSERT: Count=457294, Max=41087, Min=485, Avg=2890.59, 90=3601, 99=4483, 99.9=7903, 99.99=24079] [READ-FAILED: Count=3956, Max=35295, Min=556, Avg=3208.52, 90=4203, 99=5915, 99.9=9231, 99.99=35295] 
2023-04-30 10:46:24:294 1050 sec: 63278056 operations; 53054.1 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=49042, Max=17055, Min=586, Avg=3408.14, 90=5059, 99=7399, 99.9=10287, 99.99=12423] [INSERT: Count=477468, Max=17599, Min=500, Avg=2762.78, 90=3529, 99=4355, 99.9=7547, 99.99=12471] [READ-FAILED: Count=4066, Max=12599, Min=671, Avg=3094.62, 90=4081, 99=5823, 99.9=8119, 99.99=12599] 
2023-04-30 10:46:34:294 1060 sec: 63816983 operations; 53892.7 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=49500, Max=123455, Min=587, Avg=3355.4, 90=4947, 99=7339, 99.9=11031, 99.99=44287] [INSERT: Count=485284, Max=130751, Min=497, Avg=2719.68, 90=3511, 99=4427, 99.9=7983, 99.99=64479] [READ-FAILED: Count=4209, Max=52959, Min=561, Avg=3112.59, 90=4139, 99=6051, 99.9=13287, 99.99=52959] 
2023-04-30 10:46:44:294 1070 sec: 64363098 operations; 54611.5 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=50606, Max=43039, Min=596, Avg=3305.77, 90=4839, 99=7003, 99.9=9095, 99.99=11207] [INSERT: Count=491337, Max=53183, Min=485, Avg=2684.24, 90=3539, 99=4363, 99.9=7679, 99.99=9647] [READ-FAILED: Count=4121, Max=10575, Min=573, Avg=3028.5, 90=4135, 99=5655, 99.9=8887, 99.99=10575] 
2023-04-30 10:46:54:294 1080 sec: 64911840 operations; 54874.2 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=50663, Max=53567, Min=550, Avg=3309.06, 90=4851, 99=7143, 99.9=10351, 99.99=32335] [INSERT: Count=493865, Max=64127, Min=482, Avg=2669.47, 90=3539, 99=4403, 99.9=7707, 99.99=26287] [READ-FAILED: Count=4262, Max=28959, Min=552, Avg=3027.83, 90=4135, 99=5551, 99.9=8799, 99.99=28959] 
2023-04-30 10:47:04:294 1090 sec: 65469448 operations; 55760.8 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=51263, Max=79807, Min=553, Avg=3243.37, 90=4731, 99=6927, 99.9=8855, 99.99=15471] [INSERT: Count=502045, Max=84159, Min=482, Avg=2628.57, 90=3493, 99=4219, 99.9=7711, 99.99=15639] [READ-FAILED: Count=4272, Max=12703, Min=556, Avg=2982.43, 90=4007, 99=5679, 99.9=9423, 99.99=12703] 
2023-04-30 10:47:14:294 1100 sec: 65995811 operations; 52636.3 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=48464, Max=44799, Min=529, Avg=3401.91, 90=5055, 99=7207, 99.9=9847, 99.99=39647] [INSERT: Count=473835, Max=42623, Min=483, Avg=2789.26, 90=3561, 99=4399, 99.9=7939, 99.99=40831] [READ-FAILED: Count=3999, Max=30015, Min=570, Avg=3083.24, 90=4027, 99=5695, 99.9=8139, 99.99=30015] 
2023-04-30 10:47:24:294 1110 sec: 66500402 operations; 50459.1 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=46537, Max=29423, Min=582, Avg=3527.19, 90=5251, 99=7415, 99.9=10567, 99.99=15319] [INSERT: Count=453861, Max=29967, Min=498, Avg=2911.38, 90=3629, 99=4415, 99.9=7435, 99.99=17871] [READ-FAILED: Count=3806, Max=21439, Min=541, Avg=3217.06, 90=4191, 99=5747, 99.9=8239, 99.99=21439] 
2023-04-30 10:47:34:294 1120 sec: 67001020 operations; 50061.8 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=46905, Max=31247, Min=634, Avg=3558.58, 90=5347, 99=7491, 99.9=10783, 99.99=26319] [INSERT: Count=450324, Max=30799, Min=500, Avg=2933.64, 90=3633, 99=4447, 99.9=7575, 99.99=17135] [READ-FAILED: Count=3710, Max=16527, Min=656, Avg=3212.04, 90=4159, 99=5835, 99.9=7771, 99.99=16527] 
2023-04-30 10:47:44:294 1130 sec: 67546942 operations; 54592.2 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=50405, Max=43967, Min=548, Avg=3312.01, 90=4991, 99=7343, 99.9=10463, 99.99=26335] [INSERT: Count=491775, Max=33439, Min=477, Avg=2685.02, 90=3497, 99=4395, 99.9=7839, 99.99=25791] [READ-FAILED: Count=3873, Max=19599, Min=580, Avg=2982.22, 90=4023, 99=5647, 99.9=8407, 99.99=19599] 
2023-04-30 10:47:54:294 1140 sec: 68086268 operations; 53932.6 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=49651, Max=13239, Min=603, Avg=3351.82, 90=5031, 99=7335, 99.9=9703, 99.99=11647] [INSERT: Count=485590, Max=52639, Min=510, Avg=2718.45, 90=3525, 99=4399, 99.9=7467, 99.99=8991] [READ-FAILED: Count=4008, Max=8263, Min=917, Avg=3036.44, 90=4085, 99=5823, 99.9=7535, 99.99=8263] 
2023-04-30 10:48:04:294 1150 sec: 68616925 operations; 53065.7 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=49136, Max=41279, Min=583, Avg=3366.31, 90=4963, 99=7171, 99.9=9863, 99.99=30991] [INSERT: Count=477664, Max=70271, Min=503, Avg=2766.64, 90=3565, 99=4419, 99.9=7779, 99.99=30223] [READ-FAILED: Count=3859, Max=9239, Min=702, Avg=3090.45, 90=4131, 99=5719, 99.9=8167, 99.99=9239] 
2023-04-30 10:48:14:294 1160 sec: 69170137 operations; 55321.2 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=51379, Max=31839, Min=614, Avg=3253.72, 90=4823, 99=7099, 99.9=9287, 99.99=19807] [INSERT: Count=498078, Max=33247, Min=488, Avg=2650.41, 90=3481, 99=4335, 99.9=8019, 99.99=24815] [READ-FAILED: Count=3893, Max=24751, Min=648, Avg=2980.92, 90=4099, 99=5679, 99.9=8439, 99.99=24751] 
2023-04-30 10:48:24:294 1170 sec: 69729172 operations; 55903.5 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=52294, Max=18607, Min=589, Avg=3245.6, 90=4915, 99=7123, 99.9=9399, 99.99=12719] [INSERT: Count=502670, Max=17951, Min=492, Avg=2620.29, 90=3465, 99=4295, 99.9=7763, 99.99=12551] [READ-FAILED: Count=3972, Max=8527, Min=636, Avg=2966.32, 90=4005, 99=5619, 99.9=8095, 99.99=8527] 
2023-04-30 10:48:34:294 1180 sec: 70254066 operations; 52489.4 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=48681, Max=75839, Min=620, Avg=3404.67, 90=5059, 99=7291, 99.9=10503, 99.99=32287] [INSERT: Count=472384, Max=89535, Min=513, Avg=2798.01, 90=3555, 99=4403, 99.9=8075, 99.99=27327] [READ-FAILED: Count=3711, Max=18847, Min=822, Avg=3105.98, 90=4087, 99=5863, 99.9=7907, 99.99=18847] 
2023-04-30 10:48:44:294 1190 sec: 70767429 operations; 51336.3 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=47997, Max=61759, Min=633, Avg=3492.18, 90=5243, 99=7511, 99.9=10479, 99.99=13551] [INSERT: Count=461798, Max=66431, Min=510, Avg=2857.51, 90=3593, 99=4371, 99.9=7543, 99.99=10215] [READ-FAILED: Count=3611, Max=10559, Min=769, Avg=3145.17, 90=4119, 99=5827, 99.9=8695, 99.99=10559] 
2023-04-30 10:48:54:294 1200 sec: 71290209 operations; 52278 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=48967, Max=33503, Min=573, Avg=3453.29, 90=5211, 99=7483, 99.9=10591, 99.99=25487] [INSERT: Count=470286, Max=39263, Min=487, Avg=2803.81, 90=3591, 99=4411, 99.9=7895, 99.99=25375] [READ-FAILED: Count=3626, Max=32863, Min=743, Avg=3149.38, 90=4195, 99=5951, 99.9=8303, 99.99=32863] 
2023-04-30 10:49:04:294 1210 sec: 71831920 operations; 54171.1 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=50772, Max=15567, Min=590, Avg=3327.96, 90=5031, 99=7303, 99.9=9583, 99.99=12855] [INSERT: Count=487165, Max=15679, Min=495, Avg=2706.02, 90=3533, 99=4359, 99.9=7323, 99.99=8975] [READ-FAILED: Count=3789, Max=8647, Min=520, Avg=3039.22, 90=4071, 99=5839, 99.9=7511, 99.99=8647] 
2023-04-30 10:49:14:294 1220 sec: 72385386 operations; 55346.6 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=51566, Max=118783, Min=582, Avg=3282.51, 90=4919, 99=7355, 99.9=10951, 99.99=62399] [INSERT: Count=498201, Max=120063, Min=490, Avg=2646.22, 90=3479, 99=4319, 99.9=8103, 99.99=31695] [READ-FAILED: Count=3725, Max=94463, Min=572, Avg=2993.42, 90=3979, 99=5511, 99.9=10639, 99.99=94463] 
2023-04-30 10:49:24:294 1230 sec: 72926528 operations; 54114.2 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=50612, Max=121599, Min=599, Avg=3365.08, 90=5019, 99=7351, 99.9=13103, 99.99=99071] [INSERT: Count=486826, Max=125695, Min=487, Avg=2705.64, 90=3541, 99=4475, 99.9=8551, 99.99=34815] [READ-FAILED: Count=3642, Max=28287, Min=813, Avg=3019.62, 90=4063, 99=5707, 99.9=8383, 99.99=28287] 
2023-04-30 10:49:34:294 1240 sec: 73475569 operations; 54904.1 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=51347, Max=22223, Min=576, Avg=3294.29, 90=4919, 99=7063, 99.9=9783, 99.99=16367] [INSERT: Count=494067, Max=30335, Min=481, Avg=2668.75, 90=3525, 99=4371, 99.9=7995, 99.99=18783] [READ-FAILED: Count=3680, Max=7499, Min=588, Avg=2974.51, 90=3975, 99=5527, 99.9=7267, 99.99=7499] 
2023-04-30 10:49:44:294 1250 sec: 74011536 operations; 53596.7 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=49859, Max=44575, Min=572, Avg=3385.66, 90=5127, 99=7299, 99.9=10119, 99.99=19279] [INSERT: Count=482512, Max=48287, Min=473, Avg=2733.82, 90=3543, 99=4275, 99.9=7411, 99.99=21647] [READ-FAILED: Count=3503, Max=22671, Min=581, Avg=3069.04, 90=4059, 99=5891, 99.9=8159, 99.99=22671] 
2023-04-30 10:49:54:294 1260 sec: 74546824 operations; 53528.8 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=50073, Max=16959, Min=572, Avg=3382.93, 90=5103, 99=7251, 99.9=10015, 99.99=13095] [INSERT: Count=481843, Max=16607, Min=477, Avg=2737.74, 90=3551, 99=4303, 99.9=7611, 99.99=11799] [READ-FAILED: Count=3378, Max=9071, Min=545, Avg=3054.26, 90=4095, 99=5683, 99.9=7959, 99.99=9071] 
2023-04-30 10:50:04:294 1270 sec: 75054018 operations; 50719.4 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=47570, Max=114495, Min=583, Avg=3553.4, 90=5343, 99=7611, 99.9=11215, 99.99=30879] [INSERT: Count=456188, Max=129663, Min=486, Avg=2891.3, 90=3613, 99=4431, 99.9=8147, 99.99=69631] [READ-FAILED: Count=3370, Max=78079, Min=591, Avg=3230.87, 90=4187, 99=5951, 99.9=8391, 99.99=78079] 
2023-04-30 10:50:14:294 1280 sec: 75555565 operations; 50154.7 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=47525, Max=104383, Min=611, Avg=3598.03, 90=5383, 99=7539, 99.9=10383, 99.99=40063] [INSERT: Count=450831, Max=106239, Min=490, Avg=2922.09, 90=3621, 99=4411, 99.9=8107, 99.99=37343] [READ-FAILED: Count=3220, Max=21455, Min=956, Avg=3240.47, 90=4223, 99=5707, 99.9=8199, 99.99=21455] 
2023-04-30 10:50:24:294 1290 sec: 76069047 operations; 51348.2 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=48012, Max=60703, Min=581, Avg=3523.33, 90=5307, 99=7503, 99.9=10607, 99.99=33055] [INSERT: Count=462323, Max=83327, Min=475, Avg=2854.39, 90=3585, 99=4443, 99.9=7943, 99.99=23007] [READ-FAILED: Count=3220, Max=34879, Min=604, Avg=3181.77, 90=4115, 99=6027, 99.9=9239, 99.99=34879] 
2023-04-30 10:50:34:294 1300 sec: 76601424 operations; 53237.7 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=49858, Max=140159, Min=561, Avg=3423.99, 90=5135, 99=7431, 99.9=10871, 99.99=90367] [INSERT: Count=479134, Max=146303, Min=470, Avg=2750, 90=3537, 99=4427, 99.9=8663, 99.99=86399] [READ-FAILED: Count=3374, Max=28607, Min=548, Avg=3084.54, 90=4107, 99=5823, 99.9=9055, 99.99=28607] 
2023-04-30 10:50:44:294 1310 sec: 77137034 operations; 53561 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=49935, Max=37823, Min=533, Avg=3393.84, 90=5095, 99=7199, 99.9=9895, 99.99=18351] [INSERT: Count=482345, Max=34559, Min=472, Avg=2734.72, 90=3541, 99=4411, 99.9=7867, 99.99=23583] [READ-FAILED: Count=3333, Max=13991, Min=554, Avg=3079.31, 90=4127, 99=6131, 99.9=9007, 99.99=13991] 
2023-04-30 10:50:54:297 1320 sec: 77660483 operations; 52334.43 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=49038, Max=18783, Min=911, Avg=3464.94, 90=5183, 99=7295, 99.9=9559, 99.99=12631] [INSERT: Count=471081, Max=16815, Min=493, Avg=2799.76, 90=3575, 99=4407, 99.9=7659, 99.99=9767] [READ-FAILED: Count=3228, Max=8583, Min=767, Avg=3135.89, 90=4139, 99=5843, 99.9=7503, 99.99=8583] 
2023-04-30 10:51:04:294 1330 sec: 78174596 operations; 51421.58 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=48541, Max=94335, Min=586, Avg=3517.99, 90=5271, 99=7459, 99.9=11391, 99.99=53631] [INSERT: Count=462506, Max=112767, Min=487, Avg=2849.58, 90=3609, 99=4783, 99.9=8091, 99.99=70847] [READ-FAILED: Count=3150, Max=24767, Min=694, Avg=3184.74, 90=4191, 99=6183, 99.9=8647, 99.99=24767] 
2023-04-30 10:51:14:294 1340 sec: 78725929 operations; 55133.3 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=51828, Max=41471, Min=569, Avg=3274.04, 90=4895, 99=7159, 99.9=9623, 99.99=18911] [INSERT: Count=496094, Max=28031, Min=492, Avg=2658.94, 90=3551, 99=4911, 99.9=7975, 99.99=20991] [READ-FAILED: Count=3386, Max=14367, Min=567, Avg=2982.29, 90=4043, 99=5559, 99.9=8039, 99.99=14367] 
2023-04-30 10:51:24:294 1350 sec: 79247849 operations; 52192 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=48872, Max=13663, Min=570, Avg=3444.58, 90=5219, 99=7539, 99.9=10223, 99.99=12439] [INSERT: Count=469829, Max=18719, Min=493, Avg=2810.75, 90=3683, 99=5147, 99.9=7867, 99.99=13023] [READ-FAILED: Count=3154, Max=27695, Min=560, Avg=3124.19, 90=4191, 99=6351, 99.9=9783, 99.99=27695] 
2023-04-30 10:51:34:294 1360 sec: 79748789 operations; 50094 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=46931, Max=37567, Min=578, Avg=3577.96, 90=5395, 99=7583, 99.9=11767, 99.99=27967] [INSERT: Count=451030, Max=47935, Min=489, Avg=2929.62, 90=3643, 99=4399, 99.9=9351, 99.99=26207] [READ-FAILED: Count=2923, Max=28047, Min=553, Avg=3235.28, 90=4243, 99=5639, 99.9=9023, 99.99=28047] 
2023-04-30 10:51:44:294 1370 sec: 80305450 operations; 55666.1 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=52219, Max=58271, Min=549, Avg=3217.96, 90=4863, 99=7067, 99.9=9423, 99.99=16199] [INSERT: Count=501407, Max=126015, Min=443, Avg=2634.54, 90=3547, 99=4351, 99.9=7791, 99.99=68607] [READ-FAILED: Count=3299, Max=95167, Min=531, Avg=2940.66, 90=3965, 99=5487, 99.9=7491, 99.99=95167] 
2023-04-30 10:51:54:294 1380 sec: 80881052 operations; 57560.2 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=54039, Max=28431, Min=516, Avg=3161.99, 90=4783, 99=6939, 99.9=9271, 99.99=18223] [INSERT: Count=518219, Max=41823, Min=469, Avg=2543.37, 90=3469, 99=4359, 99.9=7775, 99.99=21295] [READ-FAILED: Count=3395, Max=18031, Min=524, Avg=2871.29, 90=4031, 99=5523, 99.9=8159, 99.99=18031] 
2023-04-30 10:52:04:294 1390 sec: 81462699 operations; 58164.7 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=54667, Max=44991, Min=543, Avg=3152.39, 90=4803, 99=7119, 99.9=10039, 99.99=20351] [INSERT: Count=523758, Max=45215, Min=478, Avg=2514.92, 90=3463, 99=4323, 99.9=7771, 99.99=22335] [READ-FAILED: Count=3245, Max=13831, Min=547, Avg=2842.1, 90=3905, 99=5271, 99.9=8039, 99.99=13831] 
2023-04-30 10:52:14:294 1400 sec: 82013629 operations; 55093 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=51746, Max=103167, Min=546, Avg=3317.8, 90=5035, 99=7335, 99.9=9975, 99.99=16079] [INSERT: Count=495886, Max=111359, Min=456, Avg=2656.87, 90=3511, 99=4363, 99.9=8063, 99.99=19247] [READ-FAILED: Count=3182, Max=18959, Min=507, Avg=2995.68, 90=4053, 99=5487, 99.9=9279, 99.99=18959] 
2023-04-30 10:52:24:294 1410 sec: 82589663 operations; 57603.4 current ops/sec; est completion in 4 hours 21 minutes [READ: Count=54165, Max=37023, Min=573, Avg=3181.01, 90=4751, 99=6931, 99.9=9615, 99.99=26639] [INSERT: Count=518684, Max=41439, Min=476, Avg=2538.45, 90=3443, 99=4243, 99.9=8019, 99.99=19983] [READ-FAILED: Count=3342, Max=31327, Min=522, Avg=2911.01, 90=3971, 99=5519, 99.9=10551, 99.99=31327] 
2023-04-30 10:52:34:294 1420 sec: 83213379 operations; 62371.6 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=58877, Max=74815, Min=517, Avg=2926.53, 90=4423, 99=6747, 99.9=9967, 99.99=48415] [INSERT: Count=561421, Max=105023, Min=470, Avg=2346.1, 90=3339, 99=4061, 99.9=8847, 99.99=48703] [READ-FAILED: Count=3423, Max=48415, Min=524, Avg=2684.98, 90=3787, 99=5123, 99.9=24767, 99.99=48415] 
2023-04-30 10:52:44:294 1430 sec: 83771316 operations; 55793.7 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=53072, Max=85119, Min=562, Avg=3229.51, 90=4931, 99=7263, 99.9=10007, 99.99=34271] [INSERT: Count=501629, Max=86783, Min=468, Avg=2628.43, 90=3487, 99=4251, 99.9=7983, 99.99=27967] [READ-FAILED: Count=3101, Max=30063, Min=532, Avg=2868.52, 90=3915, 99=5635, 99.9=9639, 99.99=30063] 
2023-04-30 10:52:54:294 1440 sec: 84320178 operations; 54886.2 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=51810, Max=42719, Min=667, Avg=3257.61, 90=4895, 99=7015, 99.9=9807, 99.99=31791] [INSERT: Count=494023, Max=39167, Min=509, Avg=2673.5, 90=3533, 99=4371, 99.9=7975, 99.99=24927] [READ-FAILED: Count=2984, Max=25823, Min=761, Avg=2969.27, 90=3997, 99=5603, 99.9=7955, 99.99=25823] 
2023-04-30 10:53:04:294 1450 sec: 84906578 operations; 58640 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=55321, Max=55743, Min=585, Avg=3095.28, 90=4679, 99=6919, 99.9=9239, 99.99=12143] [INSERT: Count=527982, Max=78975, Min=479, Avg=2497.42, 90=3425, 99=4029, 99.9=7747, 99.99=15991] [READ-FAILED: Count=3210, Max=9311, Min=557, Avg=2809.84, 90=3905, 99=5407, 99.9=7835, 99.99=9311] 
2023-04-30 10:53:14:294 1460 sec: 85537784 operations; 63120.6 current ops/sec; est completion in 4 hours 20 minutes [READ: Count=59539, Max=110271, Min=569, Avg=2919.95, 90=4435, 99=6795, 99.9=9199, 99.99=13111] [INSERT: Count=568767, Max=107199, Min=476, Avg=2314.74, 90=3279, 99=3969, 99.9=7675, 99.99=30015] [READ-FAILED: Count=3334, Max=105727, Min=543, Avg=2648.6, 90=3715, 99=5315, 99.9=7723, 99.99=105727] 
2023-04-30 10:53:24:294 1470 sec: 86189956 operations; 65217.2 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=61730, Max=50623, Min=531, Avg=2815.89, 90=4287, 99=6671, 99.9=9967, 99.99=34591] [INSERT: Count=586778, Max=85759, Min=472, Avg=2241.86, 90=3215, 99=3951, 99.9=7719, 99.99=27375] [READ-FAILED: Count=3404, Max=16399, Min=526, Avg=2552.75, 90=3691, 99=5247, 99.9=12823, 99.99=16399] 
2023-04-30 10:53:34:294 1480 sec: 86806514 operations; 61655.8 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=58055, Max=30655, Min=560, Avg=2970.52, 90=4467, 99=6611, 99.9=9879, 99.99=26511] [INSERT: Count=555205, Max=44735, Min=478, Avg=2372.48, 90=3281, 99=4207, 99.9=8439, 99.99=25231] [READ-FAILED: Count=3186, Max=22991, Min=527, Avg=2694.36, 90=3769, 99=5395, 99.9=8503, 99.99=22991] 
2023-04-30 10:53:44:294 1490 sec: 87412984 operations; 60647 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=57567, Max=61055, Min=765, Avg=3040.13, 90=4527, 99=6807, 99.9=8631, 99.99=21999] [INSERT: Count=545595, Max=54559, Min=499, Avg=2409.36, 90=3333, 99=4203, 99.9=7519, 99.99=9455] [READ-FAILED: Count=3223, Max=8119, Min=946, Avg=2766.75, 90=3901, 99=5427, 99.9=7911, 99.99=8119] 
2023-04-30 10:53:54:294 1500 sec: 87967604 operations; 55462 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=52681, Max=108991, Min=574, Avg=3299.63, 90=5047, 99=7227, 99.9=9623, 99.99=31615] [INSERT: Count=498937, Max=116415, Min=482, Avg=2638.83, 90=3507, 99=4375, 99.9=7691, 99.99=28991] [READ-FAILED: Count=2839, Max=9351, Min=578, Avg=2968.78, 90=4009, 99=6083, 99.9=8343, 99.99=9351] 
2023-04-30 10:54:04:294 1510 sec: 88457498 operations; 48989.4 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=46381, Max=50495, Min=644, Avg=3676.87, 90=5507, 99=7431, 99.9=9775, 99.99=13575] [INSERT: Count=440959, Max=52287, Min=493, Avg=2992.95, 90=3661, 99=4539, 99.9=7419, 99.99=13239] [READ-FAILED: Count=2571, Max=9415, Min=911, Avg=3335.24, 90=4275, 99=5783, 99.9=7387, 99.99=9415] 
2023-04-30 10:54:14:294 1520 sec: 89016697 operations; 55919.9 current ops/sec; est completion in 4 hours 19 minutes [READ: Count=53171, Max=34399, Min=574, Avg=3298.95, 90=4983, 99=7091, 99.9=9239, 99.99=30175] [INSERT: Count=503453, Max=33087, Min=484, Avg=2612.5, 90=3483, 99=4303, 99.9=7643, 99.99=24415] [READ-FAILED: Count=2881, Max=23583, Min=587, Avg=2964.84, 90=4007, 99=5511, 99.9=9087, 99.99=23583] 
2023-04-30 10:54:24:294 1530 sec: 89644751 operations; 62805.4 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=59495, Max=24655, Min=573, Avg=2971.39, 90=4507, 99=6847, 99.9=9135, 99.99=14447] [INSERT: Count=565561, Max=58655, Min=490, Avg=2322.19, 90=3219, 99=3985, 99.9=7763, 99.99=15687] [READ-FAILED: Count=3150, Max=33663, Min=564, Avg=2687.81, 90=3765, 99=5547, 99.9=8383, 99.99=33663] 
2023-04-30 10:54:34:294 1540 sec: 90311606 operations; 66685.5 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=63554, Max=81599, Min=578, Avg=2810.58, 90=4327, 99=6931, 99.9=10007, 99.99=31071] [INSERT: Count=600303, Max=78335, Min=483, Avg=2185.2, 90=3147, 99=3985, 99.9=7623, 99.99=26543] [READ-FAILED: Count=3211, Max=37567, Min=587, Avg=2573.2, 90=3733, 99=5571, 99.9=9055, 99.99=37567] 
2023-04-30 10:54:44:294 1550 sec: 91010895 operations; 69928.9 current ops/sec; est completion in 4 hours 18 minutes [READ: Count=66319, Max=130815, Min=545, Avg=2651.88, 90=4075, 99=6443, 99.9=9143, 99.99=47071] [INSERT: Count=629633, Max=123583, Min=464, Avg=2087.52, 90=3079, 99=3903, 99.9=8039, 99.99=33855] [READ-FAILED: Count=3330, Max=106431, Min=550, Avg=2420.87, 90=3591, 99=4931, 99.9=7267, 99.99=106431] 
2023-04-30 10:54:54:294 1560 sec: 91688347 operations; 67745.2 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=64276, Max=56703, Min=561, Avg=2755.99, 90=4231, 99=6603, 99.9=8767, 99.99=12775] [INSERT: Count=609878, Max=56607, Min=471, Avg=2153.26, 90=3107, 99=3955, 99.9=7567, 99.99=16167] [READ-FAILED: Count=3223, Max=7723, Min=540, Avg=2470.19, 90=3625, 99=4955, 99.9=7135, 99.99=7723] 
2023-04-30 10:55:04:294 1570 sec: 92289680 operations; 60133.3 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=57210, Max=48927, Min=561, Avg=3070.11, 90=4691, 99=7063, 99.9=9711, 99.99=30271] [INSERT: Count=540717, Max=46559, Min=484, Avg=2430.94, 90=3403, 99=4103, 99.9=7859, 99.99=25567] [READ-FAILED: Count=2848, Max=9559, Min=561, Avg=2766.91, 90=3891, 99=5435, 99.9=8083, 99.99=9559] 
2023-04-30 10:55:14:294 1580 sec: 92813368 operations; 52368.8 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=49861, Max=110591, Min=550, Avg=3456.18, 90=5239, 99=7163, 99.9=9719, 99.99=22575] [INSERT: Count=471429, Max=117631, Min=478, Avg=2797.71, 90=3585, 99=4399, 99.9=7751, 99.99=28447] [READ-FAILED: Count=2430, Max=14599, Min=555, Avg=3117.31, 90=4123, 99=5675, 99.9=7883, 99.99=14599] 
2023-04-30 10:55:24:294 1590 sec: 93392017 operations; 57864.9 current ops/sec; est completion in 4 hours 17 minutes [READ: Count=54954, Max=43871, Min=491, Avg=3162.64, 90=4839, 99=6895, 99.9=10183, 99.99=22655] [INSERT: Count=521194, Max=45215, Min=469, Avg=2527.76, 90=3469, 99=4343, 99.9=8711, 99.99=26335] [READ-FAILED: Count=2697, Max=16255, Min=539, Avg=2839.32, 90=3909, 99=5395, 99.9=7535, 99.99=16255] 
2023-04-30 10:55:34:294 1600 sec: 94005869 operations; 61385.2 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=58820, Max=75711, Min=549, Avg=3021.52, 90=4703, 99=7039, 99.9=9647, 99.99=30527] [INSERT: Count=552470, Max=110783, Min=480, Avg=2377.59, 90=3337, 99=4111, 99.9=7775, 99.99=33695] [READ-FAILED: Count=2832, Max=8775, Min=556, Avg=2693.5, 90=3789, 99=5619, 99.9=7467, 99.99=8775] 
2023-04-30 10:55:44:294 1610 sec: 94661713 operations; 65584.4 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=62630, Max=66687, Min=553, Avg=2836.79, 90=4391, 99=6771, 99.9=9039, 99.99=12311] [INSERT: Count=590383, Max=69823, Min=472, Avg=2224.74, 90=3193, 99=3987, 99.9=7695, 99.99=9815] [READ-FAILED: Count=2906, Max=9567, Min=547, Avg=2555.8, 90=3739, 99=5259, 99.9=7419, 99.99=9567] 
2023-04-30 10:55:54:294 1620 sec: 95320272 operations; 65855.9 current ops/sec; est completion in 4 hours 16 minutes [READ: Count=62762, Max=34943, Min=522, Avg=2822.01, 90=4383, 99=6687, 99.9=8855, 99.99=15143] [INSERT: Count=592605, Max=35103, Min=470, Avg=2216.18, 90=3201, 99=4061, 99.9=7395, 99.99=21343] [READ-FAILED: Count=2969, Max=20719, Min=526, Avg=2543.02, 90=3751, 99=5427, 99.9=8687, 99.99=20719] 
2023-04-30 10:56:04:294 1630 sec: 95977572 operations; 65730 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=62854, Max=53599, Min=531, Avg=2825.79, 90=4331, 99=6687, 99.9=9007, 99.99=14743] [INSERT: Count=591685, Max=61279, Min=479, Avg=2221.47, 90=3195, 99=3993, 99.9=7779, 99.99=14215] [READ-FAILED: Count=2769, Max=8655, Min=543, Avg=2563.53, 90=3725, 99=5195, 99.9=7771, 99.99=8655] 
2023-04-30 10:56:14:294 1640 sec: 96533271 operations; 55569.9 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=53046, Max=50079, Min=582, Avg=3287.05, 90=5011, 99=7039, 99.9=9031, 99.99=23567] [INSERT: Count=499732, Max=38431, Min=502, Avg=2633.64, 90=3549, 99=4443, 99.9=7667, 99.99=23679] [READ-FAILED: Count=2447, Max=8239, Min=611, Avg=2997.83, 90=4123, 99=5491, 99.9=7915, 99.99=8239] 
2023-04-30 10:56:24:294 1650 sec: 97018658 operations; 48538.7 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=46824, Max=82303, Min=590, Avg=3712.6, 90=5583, 99=7439, 99.9=9351, 99.99=17263] [INSERT: Count=435947, Max=82687, Min=479, Avg=3022.12, 90=3689, 99=4623, 99.9=7735, 99.99=18639] [READ-FAILED: Count=2099, Max=8295, Min=625, Avg=3330.67, 90=4239, 99=5867, 99.9=7455, 99.99=8295] 
2023-04-30 10:56:34:294 1660 sec: 97565380 operations; 54672.2 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=52414, Max=36319, Min=548, Avg=3384.8, 90=5191, 99=7351, 99.9=11495, 99.99=27263] [INSERT: Count=492669, Max=34879, Min=493, Avg=2669.11, 90=3511, 99=4391, 99.9=8247, 99.99=23711] [READ-FAILED: Count=2349, Max=15663, Min=586, Avg=3003.35, 90=4103, 99=5515, 99.9=7875, 99.99=15663] 
2023-04-30 10:56:44:294 1670 sec: 98144440 operations; 57906 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=55532, Max=101887, Min=561, Avg=3192.85, 90=4935, 99=7111, 99.9=9559, 99.99=24703] [INSERT: Count=521203, Max=137343, Min=478, Avg=2522.14, 90=3403, 99=4171, 99.9=7791, 99.99=48991] [READ-FAILED: Count=2384, Max=56543, Min=561, Avg=2880.5, 90=3891, 99=5507, 99.9=8367, 99.99=56543] 
2023-04-30 10:56:54:294 1680 sec: 98738031 operations; 59359.1 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=57152, Max=24191, Min=554, Avg=3128.66, 90=4739, 99=6951, 99.9=9111, 99.99=12159] [INSERT: Count=534022, Max=23935, Min=480, Avg=2458.29, 90=3379, 99=3969, 99.9=7535, 99.99=10055] [READ-FAILED: Count=2476, Max=10063, Min=530, Avg=2834.16, 90=3885, 99=5499, 99.9=8591, 99.99=10063] 
2023-04-30 10:57:04:294 1690 sec: 99359324 operations; 62129.3 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=59995, Max=87743, Min=539, Avg=3006.4, 90=4531, 99=6823, 99.9=9847, 99.99=39967] [INSERT: Count=558928, Max=87935, Min=481, Avg=2346.73, 90=3343, 99=4095, 99.9=8015, 99.99=30495] [READ-FAILED: Count=2559, Max=8783, Min=530, Avg=2721.56, 90=3869, 99=5255, 99.9=7187, 99.99=8783] 
2023-04-30 10:57:14:294 1700 sec: 99991836 operations; 63251.2 current ops/sec; est completion in 4 hours 15 minutes [READ: Count=60721, Max=125567, Min=565, Avg=2937.41, 90=4415, 99=6635, 99.9=9215, 99.99=47871] [INSERT: Count=569191, Max=136703, Min=480, Avg=2307.05, 90=3313, 99=4027, 99.9=8095, 99.99=47199] [READ-FAILED: Count=2657, Max=16303, Min=544, Avg=2650.76, 90=3813, 99=5307, 99.9=8927, 99.99=16303] 
2023-04-30 10:57:24:294 1710 sec: 100602780 operations; 61094.4 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=58682, Max=64159, Min=564, Avg=3028.17, 90=4539, 99=6799, 99.9=8943, 99.99=16751] [INSERT: Count=549436, Max=85567, Min=463, Avg=2390.79, 90=3363, 99=4061, 99.9=8003, 99.99=23839] [READ-FAILED: Count=2502, Max=76607, Min=550, Avg=2771.38, 90=3835, 99=5483, 99.9=9567, 99.99=76607] 
2023-04-30 10:57:34:294 1720 sec: 101121038 operations; 51825.8 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=49932, Max=61887, Min=567, Avg=3551.67, 90=5459, 99=7703, 99.9=11143, 99.99=25791] [INSERT: Count=466248, Max=124287, Min=500, Avg=2820.71, 90=3605, 99=4559, 99.9=8143, 99.99=47295] [READ-FAILED: Count=1993, Max=107199, Min=558, Avg=3188.89, 90=4159, 99=5527, 99.9=7287, 99.99=107199] 
2023-04-30 10:57:44:294 1730 sec: 101665606 operations; 54456.8 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=52273, Max=12959, Min=590, Avg=3393.89, 90=5259, 99=7303, 99.9=9175, 99.99=11759] [INSERT: Count=490067, Max=10175, Min=480, Avg=2682.17, 90=3563, 99=4367, 99.9=7455, 99.99=8799] [READ-FAILED: Count=2212, Max=9503, Min=572, Avg=3073.27, 90=4199, 99=5915, 99.9=7571, 99.99=9503] 
2023-04-30 10:57:54:294 1740 sec: 102199206 operations; 53360 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=50837, Max=44511, Min=565, Avg=3453.68, 90=5379, 99=7495, 99.9=9767, 99.99=17087] [INSERT: Count=480687, Max=37695, Min=459, Avg=2739.76, 90=3549, 99=4483, 99.9=7747, 99.99=25199] [READ-FAILED: Count=2046, Max=30207, Min=612, Avg=3084.19, 90=4023, 99=5895, 99.9=7955, 99.99=30207] 
2023-04-30 10:58:04:294 1750 sec: 102747581 operations; 54837.5 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=52950, Max=60959, Min=575, Avg=3385.32, 90=5215, 99=7535, 99.9=11047, 99.99=30479] [INSERT: Count=493511, Max=36383, Min=477, Avg=2661.55, 90=3509, 99=4259, 99.9=7947, 99.99=25151] [READ-FAILED: Count=2053, Max=9615, Min=561, Avg=3025.94, 90=4007, 99=5651, 99.9=8367, 99.99=9615] 
2023-04-30 10:58:14:294 1760 sec: 103334476 operations; 58689.5 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=56046, Max=163967, Min=546, Avg=3175.68, 90=4731, 99=7015, 99.9=10167, 99.99=140287] [INSERT: Count=528731, Max=178047, Min=460, Avg=2486.09, 90=3441, 99=4135, 99.9=8047, 99.99=100991] [READ-FAILED: Count=2233, Max=12239, Min=565, Avg=2808.84, 90=3857, 99=5535, 99.9=8687, 99.99=12239] 
2023-04-30 10:58:24:294 1770 sec: 103946197 operations; 61172.1 current ops/sec; est completion in 4 hours 14 minutes [READ: Count=58676, Max=169855, Min=559, Avg=3039.03, 90=4611, 99=6883, 99.9=9687, 99.99=31487] [INSERT: Count=550846, Max=172799, Min=472, Avg=2385.21, 90=3411, 99=4179, 99.9=8815, 99.99=108287] [READ-FAILED: Count=2266, Max=152319, Min=582, Avg=2799.46, 90=3841, 99=5275, 99.9=10943, 99.99=152319] 
2023-04-30 10:58:34:294 1780 sec: 104593500 operations; 64730.3 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=62780, Max=78335, Min=550, Avg=2894.04, 90=4419, 99=6647, 99.9=9135, 99.99=19391] [INSERT: Count=582318, Max=85439, Min=449, Avg=2251.06, 90=3287, 99=3933, 99.9=7463, 99.99=16831] [READ-FAILED: Count=2306, Max=42495, Min=520, Avg=2599.79, 90=3715, 99=5311, 99.9=8535, 99.99=42495] 
2023-04-30 10:58:44:294 1790 sec: 105302351 operations; 70885.1 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=68250, Max=34655, Min=546, Avg=2661.78, 90=4115, 99=6363, 99.9=9439, 99.99=33343] [INSERT: Count=638203, Max=34111, Min=453, Avg=2053.3, 90=3111, 99=3869, 99.9=7955, 99.99=31855] [READ-FAILED: Count=2556, Max=32527, Min=542, Avg=2396.24, 90=3503, 99=4739, 99.9=8111, 99.99=32527] 
Maximum time elapsed. Requesting stop for the workload.
Stop requested for workload. Now Joining!
2023-04-30 10:58:54:294 1800 sec: 106050916 operations; 74856.5 current ops/sec; est completion in 4 hours 12 minutes [READ: Count=72301, Max=37215, Min=511, Avg=2499.63, 90=3977, 99=6371, 99.9=9023, 99.99=16511] [INSERT: Count=673209, Max=32319, Min=450, Avg=1947.07, 90=3095, 99=3755, 99.9=8087, 99.99=17103] [READ-FAILED: Count=2612, Max=24207, Min=519, Avg=2253.28, 90=3439, 99=4415, 99.9=7491, 99.99=24207] 
Still waiting for thread Thread-85 to complete. Workload status: true
2023-04-30 10:58:56:538 1802 sec: 106052200 operations; 572.45 current ops/sec; est completion in 4 hours 13 minutes [READ: Count=125, Max=7171, Min=736, Avg=2629.19, 90=4199, 99=6651, 99.9=7171, 99.99=7171] [CLEANUP: Count=150, Max=2224127, Min=0, Avg=14822.25, 90=2, 99=25, 99.9=2224127, 99.99=2224127] [INSERT: Count=0, Max=0, Min=9223372036854775807, Avg=?, 90=0, 99=0, 99.9=0, 99.99=0] [READ-FAILED: Count=0, Max=0, Min=9223372036854775807, Avg=?, 90=0, 99=0, 99.9=0, 99.99=0] 
[OVERALL], RunTime(ms), 1802243
[OVERALL], Throughput(ops/sec), 58844.56202631943
[TOTAL_GCS_PS_Scavenge], Count, 5289
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 18427
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0224481382366308
[TOTAL_GCS_PS_MarkSweep], Count, 4
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 159
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.008822339717785004
[TOTAL_GCs], Count, 5293
[TOTAL_GC_TIME], Time(ms), 18586
[TOTAL_GC_TIME_%], Time(%), 1.0312704779544157
[READ], Operations, 9470422
[READ], AverageLatency(us), 3036.6517281912043
[READ], MinLatency(us), 491
[READ], MaxLatency(us), 181759
[READ], 95thPercentileLatency(us), 5403
[READ], 99thPercentileLatency(us), 6879
[READ], Return=OK, 9470422
[READ], Return=NOT_FOUND, 1135427
[CLEANUP], Operations, 150
[CLEANUP], AverageLatency(us), 14822.246666666666
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2224127
[CLEANUP], 95thPercentileLatency(us), 5
[CLEANUP], 99thPercentileLatency(us), 25
[INSERT], Operations, 95446351
[INSERT], AverageLatency(us), 2482.3067858508284
[INSERT], MinLatency(us), 443
[INSERT], MaxLatency(us), 182143
[INSERT], 95thPercentileLatency(us), 3651
[INSERT], 99thPercentileLatency(us), 4235
[INSERT], Return=OK, 95446351
[READ-FAILED], Operations, 1135427
[READ-FAILED], AverageLatency(us), 2714.1001684828702
[READ-FAILED], MinLatency(us), 491
[READ-FAILED], MaxLatency(us), 152319
[READ-FAILED], 95thPercentileLatency(us), 4227
[READ-FAILED], 99thPercentileLatency(us), 5399
