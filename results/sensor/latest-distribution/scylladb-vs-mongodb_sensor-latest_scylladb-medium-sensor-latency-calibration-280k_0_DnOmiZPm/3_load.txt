bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 150 -p recordcount=500000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=375000000 -p insertcount=125000000
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 150 -p recordcount=500000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=375000000 -p insertcount=125000000 -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 150 -p recordcount=500000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=375000000 -p insertcount=125000000 -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
 (might take a few minutes for large data sets)
Starting test.
[Thread-8] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
[Thread-8] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
2023-04-30 10:01:19:966 0 sec: 0 operations; est completion in 0 second 
[Thread-8] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-8] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.224.14.50:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.25.70.101:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.236.216.15:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.155.229.124:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.166.69.220:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /34.214.116.240:9042 added
[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 04c1c4a5-1f5b-4be8-8b3b-2bc1e2431452

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.155.229.124; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.224.14.50; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /34.214.116.240; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.166.69.220; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.236.216.15; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.25.70.101; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-04-30 10:01:29:947 10 sec: 1082307 operations; 108219.88 current ops/sec; est completion in 19 minutes [INSERT: Count=1082556, Max=68607, Min=215, Avg=1269.8, 90=1786, 99=5183, 99.9=20031, 99.99=52735] 
2023-04-30 10:01:39:947 20 sec: 2153004 operations; 107069.7 current ops/sec; est completion in 19 minutes [INSERT: Count=1070483, Max=26975, Min=217, Avg=1398.51, 90=1887, 99=2415, 99.9=5907, 99.99=18399] 
2023-04-30 10:01:49:947 30 sec: 3584771 operations; 143176.7 current ops/sec; est completion in 16 minutes [INSERT: Count=1431799, Max=15167, Min=226, Avg=1045.15, 90=1471, 99=2165, 99.9=6191, 99.99=13559] 
2023-04-30 10:01:59:947 40 sec: 4751852 operations; 116708.1 current ops/sec; est completion in 16 minutes [INSERT: Count=1167056, Max=30015, Min=203, Avg=1282.85, 90=1840, 99=2423, 99.9=9031, 99.99=20559] 
2023-04-30 10:02:09:947 50 sec: 5780543 operations; 102869.1 current ops/sec; est completion in 17 minutes [INSERT: Count=1028681, Max=33375, Min=232, Avg=1455.8, 90=1891, 99=2507, 99.9=9095, 99.99=22367] 
2023-04-30 10:02:19:947 60 sec: 6846176 operations; 106563.3 current ops/sec; est completion in 17 minutes [INSERT: Count=1065634, Max=22815, Min=224, Avg=1405.27, 90=1844, 99=2339, 99.9=7787, 99.99=10087] 
2023-04-30 10:02:29:947 70 sec: 7926607 operations; 108043.1 current ops/sec; est completion in 17 minutes [INSERT: Count=1080468, Max=30495, Min=212, Avg=1385.96, 90=1875, 99=2419, 99.9=8655, 99.99=22143] 
2023-04-30 10:02:39:947 80 sec: 9108171 operations; 118156.4 current ops/sec; est completion in 16 minutes [INSERT: Count=1181585, Max=43103, Min=210, Avg=1267.13, 90=1808, 99=2439, 99.9=8831, 99.99=29071] 
2023-04-30 10:02:49:947 90 sec: 10485762 operations; 137759.1 current ops/sec; est completion in 16 minutes [INSERT: Count=1377550, Max=101823, Min=195, Avg=1086.36, 90=1512, 99=2219, 99.9=8831, 99.99=19103] 
2023-04-30 10:02:59:947 100 sec: 11386346 operations; 90058.4 current ops/sec; est completion in 16 minutes [INSERT: Count=900559, Max=474367, Min=188, Avg=1663.08, 90=1948, 99=7471, 99.9=41695, 99.99=392447] 
2023-04-30 10:03:09:947 110 sec: 12209873 operations; 82352.7 current ops/sec; est completion in 16 minutes [INSERT: Count=823545, Max=495871, Min=177, Avg=1819.35, 90=1913, 99=7863, 99.9=69887, 99.99=396799] 
2023-04-30 10:03:19:947 120 sec: 13133934 operations; 92406.1 current ops/sec; est completion in 17 minutes [INSERT: Count=924099, Max=376831, Min=225, Avg=1620.95, 90=1873, 99=4191, 99.9=36223, 99.99=315391] 
2023-04-30 10:03:29:947 130 sec: 14162535 operations; 102860.1 current ops/sec; est completion in 16 minutes [INSERT: Count=1028550, Max=36351, Min=238, Avg=1455.98, 90=1867, 99=2285, 99.9=8255, 99.99=23039] 
2023-04-30 10:03:39:947 140 sec: 15195084 operations; 103254.9 current ops/sec; est completion in 16 minutes [INSERT: Count=1032571, Max=103743, Min=209, Avg=1450.38, 90=1870, 99=2409, 99.9=11439, 99.99=60799] 
2023-04-30 10:03:49:947 150 sec: 16286818 operations; 109173.4 current ops/sec; est completion in 16 minutes [INSERT: Count=1091730, Max=11711, Min=353, Avg=1371.59, 90=1861, 99=2347, 99.9=7187, 99.99=10047] 
2023-04-30 10:03:59:947 160 sec: 17351457 operations; 106463.9 current ops/sec; est completion in 16 minutes [INSERT: Count=1064635, Max=30671, Min=230, Avg=1406.59, 90=1876, 99=2493, 99.9=8199, 99.99=21759] 
2023-04-30 10:04:09:947 170 sec: 18407366 operations; 105590.9 current ops/sec; est completion in 16 minutes [INSERT: Count=1055891, Max=107903, Min=223, Avg=1418.24, 90=1891, 99=2503, 99.9=8155, 99.99=31551] 
2023-04-30 10:04:19:947 180 sec: 19415141 operations; 100777.5 current ops/sec; est completion in 16 minutes [INSERT: Count=1007810, Max=20447, Min=218, Avg=1486.1, 90=1922, 99=2805, 99.9=8735, 99.99=15031] 
2023-04-30 10:04:29:947 190 sec: 20420531 operations; 100539 current ops/sec; est completion in 16 minutes [INSERT: Count=1005362, Max=33983, Min=224, Avg=1489.64, 90=1920, 99=2881, 99.9=7579, 99.99=21471] 
2023-04-30 10:04:39:947 200 sec: 21387600 operations; 96706.9 current ops/sec; est completion in 16 minutes [INSERT: Count=967080, Max=38239, Min=223, Avg=1548.81, 90=1993, 99=3353, 99.9=7391, 99.99=23215] 
2023-04-30 10:04:49:947 210 sec: 22381909 operations; 99430.9 current ops/sec; est completion in 16 minutes [INSERT: Count=994307, Max=199551, Min=245, Avg=1506.29, 90=1899, 99=2545, 99.9=7431, 99.99=88639] 
2023-04-30 10:04:59:947 220 sec: 23382889 operations; 100098 current ops/sec; est completion in 15 minutes [INSERT: Count=1000958, Max=98111, Min=234, Avg=1492.9, 90=1898, 99=2595, 99.9=7895, 99.99=43039] 
2023-04-30 10:05:09:947 230 sec: 24390141 operations; 100725.2 current ops/sec; est completion in 15 minutes [INSERT: Count=1007291, Max=93247, Min=228, Avg=1490.17, 90=1899, 99=2571, 99.9=7495, 99.99=28175] 
2023-04-30 10:05:19:947 240 sec: 25436237 operations; 104609.6 current ops/sec; est completion in 15 minutes [INSERT: Count=1046063, Max=54239, Min=237, Avg=1431.57, 90=1901, 99=2593, 99.9=8015, 99.99=11287] 
2023-04-30 10:05:29:947 250 sec: 26501785 operations; 106554.8 current ops/sec; est completion in 15 minutes [INSERT: Count=1065565, Max=38719, Min=208, Avg=1405.35, 90=1915, 99=2821, 99.9=7963, 99.99=21071] 
2023-04-30 10:05:39:947 260 sec: 27515294 operations; 101350.9 current ops/sec; est completion in 15 minutes [INSERT: Count=1013504, Max=41695, Min=197, Avg=1477.67, 90=2049, 99=3549, 99.9=7395, 99.99=24895] 
2023-04-30 10:05:49:947 270 sec: 28559450 operations; 104415.6 current ops/sec; est completion in 15 minutes [INSERT: Count=1044175, Max=113471, Min=209, Avg=1434.18, 90=1890, 99=2411, 99.9=7575, 99.99=15447] 
2023-04-30 10:05:59:947 280 sec: 29563321 operations; 100387.1 current ops/sec; est completion in 15 minutes [INSERT: Count=1003855, Max=100543, Min=242, Avg=1491.89, 90=1899, 99=2669, 99.9=8647, 99.99=29567] 
2023-04-30 10:06:09:947 290 sec: 30564939 operations; 100161.8 current ops/sec; est completion in 14 minutes [INSERT: Count=1001610, Max=83839, Min=261, Avg=1495.24, 90=1906, 99=2717, 99.9=7723, 99.99=28031] 
2023-04-30 10:06:19:947 300 sec: 31581831 operations; 101689.2 current ops/sec; est completion in 14 minutes [INSERT: Count=1016902, Max=60191, Min=230, Avg=1472.69, 90=1882, 99=2257, 99.9=8463, 99.99=14551] 
2023-04-30 10:06:29:947 310 sec: 32585064 operations; 100323.3 current ops/sec; est completion in 14 minutes [INSERT: Count=1003237, Max=46271, Min=235, Avg=1492.85, 90=1911, 99=2875, 99.9=8375, 99.99=21967] 
2023-04-30 10:06:39:947 320 sec: 33557984 operations; 97292 current ops/sec; est completion in 14 minutes [INSERT: Count=972912, Max=111615, Min=200, Avg=1539.46, 90=1974, 99=3327, 99.9=7727, 99.99=34847] 
2023-04-30 10:06:49:947 330 sec: 34549338 operations; 99135.4 current ops/sec; est completion in 14 minutes [INSERT: Count=991366, Max=107071, Min=399, Avg=1510.77, 90=1918, 99=2867, 99.9=7827, 99.99=64959] 
2023-04-30 10:06:59:947 340 sec: 35555706 operations; 100636.8 current ops/sec; est completion in 14 minutes [INSERT: Count=1006362, Max=33439, Min=347, Avg=1488.12, 90=1907, 99=2737, 99.9=7055, 99.99=23583] 
2023-04-30 10:07:09:947 350 sec: 36541573 operations; 98586.7 current ops/sec; est completion in 14 minutes [INSERT: Count=985855, Max=34847, Min=345, Avg=1519.15, 90=1937, 99=3169, 99.9=8335, 99.99=22911] 
2023-04-30 10:07:19:947 360 sec: 37521333 operations; 97976 current ops/sec; est completion in 14 minutes [INSERT: Count=979745, Max=25135, Min=237, Avg=1528.71, 90=1951, 99=3173, 99.9=7395, 99.99=9567] 
2023-04-30 10:07:29:947 370 sec: 38474694 operations; 95336.1 current ops/sec; est completion in 13 minutes [INSERT: Count=953385, Max=31903, Min=212, Avg=1571.07, 90=2003, 99=3343, 99.9=7719, 99.99=24431] 
2023-04-30 10:07:39:947 380 sec: 39423484 operations; 94879 current ops/sec; est completion in 13 minutes [INSERT: Count=948779, Max=104575, Min=225, Avg=1578.68, 90=2010, 99=3431, 99.9=8911, 99.99=29823] 
2023-04-30 10:07:49:947 390 sec: 40392010 operations; 96852.6 current ops/sec; est completion in 13 minutes [INSERT: Count=968518, Max=11015, Min=368, Avg=1546.45, 90=1991, 99=3359, 99.9=7063, 99.99=9159] 
2023-04-30 10:07:59:947 400 sec: 41379340 operations; 98733 current ops/sec; est completion in 13 minutes [INSERT: Count=987329, Max=74879, Min=431, Avg=1516.87, 90=1923, 99=2835, 99.9=8591, 99.99=31807] 
2023-04-30 10:08:09:947 410 sec: 42369583 operations; 99024.3 current ops/sec; est completion in 13 minutes [INSERT: Count=990267, Max=115903, Min=398, Avg=1512.44, 90=1921, 99=2947, 99.9=8123, 99.99=33503] 
2023-04-30 10:08:19:947 420 sec: 43350991 operations; 98140.8 current ops/sec; est completion in 13 minutes [INSERT: Count=981405, Max=20415, Min=334, Avg=1526.1, 90=1965, 99=3261, 99.9=7495, 99.99=9271] 
2023-04-30 10:08:29:947 430 sec: 44328588 operations; 97759.7 current ops/sec; est completion in 13 minutes [INSERT: Count=977590, Max=41631, Min=364, Avg=1532.04, 90=1940, 99=3029, 99.9=7911, 99.99=25967] 
2023-04-30 10:08:39:947 440 sec: 45320736 operations; 99214.8 current ops/sec; est completion in 12 minutes [INSERT: Count=992142, Max=100735, Min=353, Avg=1509.53, 90=1919, 99=2847, 99.9=7999, 99.99=32927] 
2023-04-30 10:08:49:947 450 sec: 46306982 operations; 98624.6 current ops/sec; est completion in 12 minutes [INSERT: Count=986252, Max=114111, Min=226, Avg=1518.57, 90=1937, 99=3083, 99.9=8111, 99.99=43007] 
2023-04-30 10:08:59:947 460 sec: 47279338 operations; 97235.6 current ops/sec; est completion in 12 minutes [INSERT: Count=972349, Max=98559, Min=249, Avg=1540.34, 90=1955, 99=3209, 99.9=8655, 99.99=34175] 
2023-04-30 10:09:09:947 470 sec: 48270762 operations; 99142.4 current ops/sec; est completion in 12 minutes [INSERT: Count=991422, Max=39455, Min=359, Avg=1510.61, 90=1929, 99=2851, 99.9=7859, 99.99=22863] 
2023-04-30 10:09:19:947 480 sec: 49268623 operations; 99786.1 current ops/sec; est completion in 12 minutes [INSERT: Count=997868, Max=23919, Min=364, Avg=1500.84, 90=1929, 99=2907, 99.9=7579, 99.99=12295] 
2023-04-30 10:09:29:947 490 sec: 50235865 operations; 96724.2 current ops/sec; est completion in 12 minutes [INSERT: Count=967241, Max=39903, Min=406, Avg=1548.48, 90=1996, 99=3427, 99.9=7463, 99.99=23711] 
2023-04-30 10:09:39:947 500 sec: 51214304 operations; 97843.9 current ops/sec; est completion in 12 minutes [INSERT: Count=978422, Max=110271, Min=246, Avg=1530.75, 90=1931, 99=3083, 99.9=7871, 99.99=60351] 
2023-04-30 10:09:49:947 510 sec: 52219513 operations; 100520.9 current ops/sec; est completion in 11 minutes [INSERT: Count=1005222, Max=63551, Min=368, Avg=1489.87, 90=1905, 99=2603, 99.9=8631, 99.99=10999] 
2023-04-30 10:09:59:947 520 sec: 53188865 operations; 96935.2 current ops/sec; est completion in 11 minutes [INSERT: Count=969354, Max=92863, Min=367, Avg=1545.11, 90=1981, 99=3411, 99.9=8335, 99.99=35007] 
2023-04-30 10:10:09:947 530 sec: 54165404 operations; 97653.9 current ops/sec; est completion in 11 minutes [INSERT: Count=976531, Max=80191, Min=289, Avg=1533.75, 90=1947, 99=3311, 99.9=7819, 99.99=30479] 
2023-04-30 10:10:19:947 540 sec: 55167999 operations; 100259.5 current ops/sec; est completion in 11 minutes [INSERT: Count=1002609, Max=28751, Min=344, Avg=1493.78, 90=1901, 99=2583, 99.9=7687, 99.99=10415] 
2023-04-30 10:10:29:947 550 sec: 56152580 operations; 98458.1 current ops/sec; est completion in 11 minutes [INSERT: Count=984559, Max=33631, Min=375, Avg=1521.13, 90=1947, 99=3199, 99.9=7767, 99.99=21135] 
2023-04-30 10:10:39:947 560 sec: 57114011 operations; 96143.1 current ops/sec; est completion in 11 minutes [INSERT: Count=961445, Max=198271, Min=204, Avg=1557.89, 90=1971, 99=3371, 99.9=7903, 99.99=52351] 
2023-04-30 10:10:49:947 570 sec: 58123118 operations; 100910.7 current ops/sec; est completion in 10 minutes [INSERT: Count=1009115, Max=11871, Min=367, Avg=1484.07, 90=1892, 99=2433, 99.9=7195, 99.99=10455] 
2023-04-30 10:10:59:947 580 sec: 59110517 operations; 98739.9 current ops/sec; est completion in 10 minutes [INSERT: Count=987376, Max=62815, Min=349, Avg=1516.84, 90=1923, 99=2995, 99.9=8143, 99.99=29695] 
2023-04-30 10:11:09:947 590 sec: 60073685 operations; 96316.8 current ops/sec; est completion in 10 minutes [INSERT: Count=963171, Max=104447, Min=414, Avg=1555.05, 90=1987, 99=3443, 99.9=8223, 99.99=32399] 
2023-04-30 10:11:19:947 600 sec: 61073236 operations; 99955.1 current ops/sec; est completion in 10 minutes [INSERT: Count=999555, Max=121535, Min=336, Avg=1498.33, 90=1899, 99=2567, 99.9=8391, 99.99=18463] 
2023-04-30 10:11:29:947 610 sec: 62068118 operations; 99488.2 current ops/sec; est completion in 10 minutes [INSERT: Count=994898, Max=38335, Min=364, Avg=1505.4, 90=1909, 99=2765, 99.9=8511, 99.99=24927] 
2023-04-30 10:11:39:947 620 sec: 63029448 operations; 96133 current ops/sec; est completion in 10 minutes [INSERT: Count=961317, Max=118591, Min=210, Avg=1558.02, 90=1985, 99=3435, 99.9=7651, 99.99=71807] 
2023-04-30 10:11:49:947 630 sec: 64020338 operations; 99089 current ops/sec; est completion in 10 minutes [INSERT: Count=990893, Max=160383, Min=253, Avg=1511.5, 90=1917, 99=2797, 99.9=8119, 99.99=27151] 
2023-04-30 10:11:59:947 640 sec: 65016971 operations; 99663.3 current ops/sec; est completion in 9 minutes [INSERT: Count=996612, Max=105983, Min=246, Avg=1495.12, 90=1900, 99=2653, 99.9=8407, 99.99=22735] 
2023-04-30 10:12:09:947 650 sec: 65982679 operations; 96570.8 current ops/sec; est completion in 9 minutes [INSERT: Count=965729, Max=145023, Min=380, Avg=1558.82, 90=1977, 99=3495, 99.9=8215, 99.99=42719] 
2023-04-30 10:12:19:947 660 sec: 66960166 operations; 97748.7 current ops/sec; est completion in 9 minutes [INSERT: Count=977498, Max=137599, Min=349, Avg=1532.26, 90=1937, 99=3109, 99.9=8607, 99.99=73023] 
2023-04-30 10:12:29:947 670 sec: 67960314 operations; 100014.8 current ops/sec; est completion in 9 minutes [INSERT: Count=1000135, Max=41983, Min=221, Avg=1497.47, 90=1903, 99=2657, 99.9=8231, 99.99=24111] 
2023-04-30 10:12:39:947 680 sec: 68932982 operations; 97266.8 current ops/sec; est completion in 9 minutes [INSERT: Count=972678, Max=92031, Min=232, Avg=1539.81, 90=1953, 99=3421, 99.9=8359, 99.99=31999] 
2023-04-30 10:12:49:947 690 sec: 69909471 operations; 97648.9 current ops/sec; est completion in 9 minutes [INSERT: Count=976481, Max=41919, Min=395, Avg=1533.81, 90=1962, 99=3343, 99.9=6851, 99.99=9903] 
2023-04-30 10:12:59:947 700 sec: 70898182 operations; 98871.1 current ops/sec; est completion in 8 minutes [INSERT: Count=988710, Max=113279, Min=323, Avg=1514.8, 90=1914, 99=2917, 99.9=7475, 99.99=50943] 
2023-04-30 10:13:09:947 710 sec: 71872929 operations; 97474.7 current ops/sec; est completion in 8 minutes [INSERT: Count=974746, Max=122111, Min=220, Avg=1536.53, 90=1942, 99=3291, 99.9=9023, 99.99=56895] 
2023-04-30 10:13:19:947 720 sec: 72850615 operations; 97768.6 current ops/sec; est completion in 8 minutes [INSERT: Count=977694, Max=155135, Min=209, Avg=1531.86, 90=1972, 99=3441, 99.9=7871, 99.99=68735] 
2023-04-30 10:13:29:947 730 sec: 73835720 operations; 98510.5 current ops/sec; est completion in 8 minutes [INSERT: Count=985101, Max=38143, Min=216, Avg=1520.37, 90=1933, 99=3027, 99.9=8407, 99.99=26735] 
2023-04-30 10:13:39:947 740 sec: 74803716 operations; 96799.6 current ops/sec; est completion in 8 minutes [INSERT: Count=967982, Max=83007, Min=206, Avg=1547.23, 90=1938, 99=3591, 99.9=13799, 99.99=31823] 
2023-04-30 10:13:49:947 750 sec: 75784284 operations; 98056.8 current ops/sec; est completion in 8 minutes [INSERT: Count=980574, Max=44511, Min=367, Avg=1527.43, 90=1956, 99=3429, 99.9=7259, 99.99=9047] 
2023-04-30 10:13:59:947 760 sec: 76761061 operations; 97677.7 current ops/sec; est completion in 7 minutes [INSERT: Count=976770, Max=46047, Min=234, Avg=1533.36, 90=1945, 99=3151, 99.9=8303, 99.99=26063] 
2023-04-30 10:14:09:947 770 sec: 77741157 operations; 98009.6 current ops/sec; est completion in 7 minutes [INSERT: Count=980099, Max=47455, Min=241, Avg=1528.12, 90=1937, 99=3367, 99.9=7647, 99.99=26879] 
2023-04-30 10:14:19:947 780 sec: 78725384 operations; 98422.7 current ops/sec; est completion in 7 minutes [INSERT: Count=984228, Max=28703, Min=388, Avg=1521.72, 90=1947, 99=3369, 99.9=7747, 99.99=9383] 
2023-04-30 10:14:29:947 790 sec: 79706452 operations; 98106.8 current ops/sec; est completion in 7 minutes [INSERT: Count=981070, Max=37855, Min=401, Avg=1526.64, 90=1949, 99=3199, 99.9=7907, 99.99=24687] 
2023-04-30 10:14:39:947 800 sec: 80679531 operations; 97307.9 current ops/sec; est completion in 7 minutes [INSERT: Count=973074, Max=111679, Min=219, Avg=1539.18, 90=1942, 99=3217, 99.9=8687, 99.99=36703] 
2023-04-30 10:14:49:947 810 sec: 81659726 operations; 98019.5 current ops/sec; est completion in 7 minutes [INSERT: Count=980203, Max=154367, Min=266, Avg=1528.02, 90=1933, 99=3179, 99.9=8487, 99.99=52543] 
2023-04-30 10:14:59:947 820 sec: 82635568 operations; 97584.2 current ops/sec; est completion in 7 minutes [INSERT: Count=975821, Max=35263, Min=284, Avg=1527.08, 90=1947, 99=3267, 99.9=8463, 99.99=23375] 
2023-04-30 10:15:09:947 830 sec: 83605330 operations; 96976.2 current ops/sec; est completion in 6 minutes [INSERT: Count=969784, Max=147583, Min=334, Avg=1552.23, 90=1946, 99=3249, 99.9=8375, 99.99=99711] 
2023-04-30 10:15:19:947 840 sec: 84589538 operations; 98420.8 current ops/sec; est completion in 6 minutes [INSERT: Count=984205, Max=112255, Min=329, Avg=1521.73, 90=1929, 99=3211, 99.9=7515, 99.99=21263] 
2023-04-30 10:15:29:947 850 sec: 85571312 operations; 98177.4 current ops/sec; est completion in 6 minutes [INSERT: Count=981787, Max=33631, Min=342, Avg=1525.55, 90=1943, 99=3257, 99.9=7995, 99.99=23823] 
2023-04-30 10:15:39:947 860 sec: 86397806 operations; 82649.4 current ops/sec; est completion in 6 minutes [INSERT: Count=826472, Max=97407, Min=239, Avg=1812.69, 90=2741, 99=4791, 99.9=7983, 99.99=29807] 
2023-04-30 10:15:49:947 870 sec: 87132157 operations; 73435.1 current ops/sec; est completion in 6 minutes [INSERT: Count=734345, Max=17439, Min=394, Avg=2040.16, 90=3043, 99=5535, 99.9=8399, 99.99=10095] 
2023-04-30 10:15:59:947 880 sec: 87672524 operations; 54036.7 current ops/sec; est completion in 6 minutes [INSERT: Count=540362, Max=33663, Min=450, Avg=2773.36, 90=4979, 99=9295, 99.9=12655, 99.99=28431] 
2023-04-30 10:16:09:947 890 sec: 88229030 operations; 55650.6 current ops/sec; est completion in 6 minutes [INSERT: Count=556521, Max=209151, Min=233, Avg=2694.34, 90=4675, 99=9183, 99.9=13191, 99.99=110911] 
2023-04-30 10:16:19:947 900 sec: 88992168 operations; 76313.8 current ops/sec; est completion in 6 minutes [INSERT: Count=763143, Max=23135, Min=254, Avg=1963.59, 90=3041, 99=5171, 99.9=7535, 99.99=10951] 
2023-04-30 10:16:29:947 910 sec: 89979104 operations; 98693.6 current ops/sec; est completion in 5 minutes [INSERT: Count=986932, Max=41183, Min=403, Avg=1517.5, 90=1925, 99=2841, 99.9=9207, 99.99=21535] 
2023-04-30 10:16:39:947 920 sec: 90947254 operations; 96815 current ops/sec; est completion in 5 minutes [INSERT: Count=968150, Max=171519, Min=208, Avg=1547.02, 90=1957, 99=3397, 99.9=7931, 99.99=44095] 
2023-04-30 10:16:49:947 930 sec: 91922109 operations; 97485.5 current ops/sec; est completion in 5 minutes [INSERT: Count=974853, Max=82495, Min=383, Avg=1536.41, 90=1957, 99=3407, 99.9=7143, 99.99=10351] 
2023-04-30 10:16:59:947 940 sec: 92909373 operations; 98726.4 current ops/sec; est completion in 5 minutes [INSERT: Count=987257, Max=77567, Min=415, Avg=1517.01, 90=1915, 99=2973, 99.9=9111, 99.99=74687] 
2023-04-30 10:17:09:947 950 sec: 93890102 operations; 98072.9 current ops/sec; est completion in 5 minutes [INSERT: Count=980743, Max=57215, Min=385, Avg=1527.25, 90=1942, 99=3173, 99.9=8015, 99.99=31359] 
2023-04-30 10:17:19:947 960 sec: 94857765 operations; 96766.3 current ops/sec; est completion in 5 minutes [INSERT: Count=967658, Max=20415, Min=385, Avg=1547.9, 90=1979, 99=3617, 99.9=7115, 99.99=9239] 
2023-04-30 10:17:29:947 970 sec: 95844851 operations; 98708.6 current ops/sec; est completion in 4 minutes [INSERT: Count=987096, Max=35935, Min=385, Avg=1517.31, 90=1922, 99=3211, 99.9=7975, 99.99=24415] 
2023-04-30 10:17:39:947 980 sec: 96835215 operations; 99036.4 current ops/sec; est completion in 4 minutes [INSERT: Count=990353, Max=43679, Min=250, Avg=1512.33, 90=1929, 99=3079, 99.9=7399, 99.99=24015] 
2023-04-30 10:17:49:947 990 sec: 97803959 operations; 96874.4 current ops/sec; est completion in 4 minutes [INSERT: Count=968750, Max=11575, Min=367, Avg=1546.15, 90=1976, 99=3531, 99.9=7579, 99.99=9511] 
2023-04-30 10:17:59:947 1000 sec: 98786813 operations; 98285.4 current ops/sec; est completion in 4 minutes [INSERT: Count=982867, Max=42431, Min=387, Avg=1523.9, 90=1930, 99=3221, 99.9=8527, 99.99=25359] 
2023-04-30 10:18:09:947 1010 sec: 99781344 operations; 99453.1 current ops/sec; est completion in 4 minutes [INSERT: Count=994517, Max=89791, Min=397, Avg=1505.96, 90=1915, 99=2929, 99.9=8035, 99.99=31423] 
2023-04-30 10:18:19:947 1020 sec: 100751604 operations; 97026 current ops/sec; est completion in 4 minutes [INSERT: Count=970255, Max=21935, Min=427, Avg=1543.75, 90=1978, 99=3553, 99.9=7535, 99.99=10095] 
2023-04-30 10:18:29:947 1030 sec: 101727490 operations; 97588.6 current ops/sec; est completion in 3 minutes [INSERT: Count=975899, Max=39487, Min=383, Avg=1534.81, 90=1947, 99=3375, 99.9=7223, 99.99=24431] 
2023-04-30 10:18:39:947 1040 sec: 102720397 operations; 99290.7 current ops/sec; est completion in 3 minutes [INSERT: Count=992888, Max=84031, Min=209, Avg=1508.48, 90=1913, 99=2877, 99.9=8615, 99.99=29791] 
2023-04-30 10:18:49:947 1050 sec: 103694989 operations; 97459.2 current ops/sec; est completion in 3 minutes [INSERT: Count=974599, Max=104127, Min=365, Avg=1536.87, 90=1966, 99=3517, 99.9=7091, 99.99=22495] 
2023-04-30 10:18:59:947 1060 sec: 104663865 operations; 96887.6 current ops/sec; est completion in 3 minutes [INSERT: Count=968874, Max=39327, Min=405, Avg=1545.94, 90=1962, 99=3491, 99.9=7587, 99.99=25887] 
2023-04-30 10:19:09:947 1070 sec: 105655057 operations; 99119.2 current ops/sec; est completion in 3 minutes [INSERT: Count=991204, Max=40223, Min=384, Avg=1511.07, 90=1916, 99=2839, 99.9=8655, 99.99=25039] 
2023-04-30 10:19:19:947 1080 sec: 106627581 operations; 97252.4 current ops/sec; est completion in 3 minutes [INSERT: Count=972520, Max=122111, Min=231, Avg=1540.16, 90=1958, 99=3563, 99.9=7399, 99.99=33119] 
2023-04-30 10:19:29:947 1090 sec: 107593326 operations; 96574.5 current ops/sec; est completion in 2 minutes [INSERT: Count=965734, Max=40639, Min=368, Avg=1550.94, 90=1972, 99=3585, 99.9=8711, 99.99=24127] 
2023-04-30 10:19:39:947 1100 sec: 108573927 operations; 98060.1 current ops/sec; est completion in 2 minutes [INSERT: Count=980600, Max=103167, Min=241, Avg=1527.45, 90=1929, 99=3029, 99.9=8063, 99.99=32799] 
2023-04-30 10:19:49:947 1110 sec: 109552157 operations; 97823 current ops/sec; est completion in 2 minutes [INSERT: Count=978235, Max=85567, Min=387, Avg=1531.09, 90=1947, 99=3421, 99.9=7779, 99.99=11063] 
2023-04-30 10:19:59:947 1120 sec: 110510782 operations; 95862.5 current ops/sec; est completion in 2 minutes [INSERT: Count=958627, Max=184191, Min=275, Avg=1562.51, 90=1973, 99=3671, 99.9=7959, 99.99=90303] 
2023-04-30 10:20:09:947 1130 sec: 111485494 operations; 97471.2 current ops/sec; est completion in 2 minutes [INSERT: Count=974705, Max=94399, Min=330, Avg=1536.67, 90=1943, 99=3303, 99.9=7767, 99.99=29631] 
2023-04-30 10:20:19:947 1140 sec: 112463675 operations; 97818.1 current ops/sec; est completion in 2 minutes [INSERT: Count=978192, Max=117759, Min=340, Avg=1531.13, 90=1940, 99=3319, 99.9=7547, 99.99=19183] 
2023-04-30 10:20:29:947 1150 sec: 113435531 operations; 97185.6 current ops/sec; est completion in 1 minute [INSERT: Count=971857, Max=54495, Min=372, Avg=1541.22, 90=1965, 99=3569, 99.9=7883, 99.99=24911] 
2023-04-30 10:20:39:947 1160 sec: 114410028 operations; 97449.7 current ops/sec; est completion in 1 minute [INSERT: Count=974500, Max=133119, Min=208, Avg=1537.02, 90=1952, 99=3285, 99.9=8895, 99.99=37791] 
2023-04-30 10:20:49:947 1170 sec: 115386546 operations; 97651.8 current ops/sec; est completion in 1 minute [INSERT: Count=976517, Max=75327, Min=423, Avg=1533.82, 90=1945, 99=3323, 99.9=7775, 99.99=13703] 
2023-04-30 10:20:59:947 1180 sec: 116356666 operations; 97012 current ops/sec; est completion in 1 minute [INSERT: Count=970120, Max=79039, Min=363, Avg=1543.98, 90=1969, 99=3547, 99.9=7543, 99.99=30527] 
2023-04-30 10:21:09:947 1190 sec: 117324445 operations; 96777.9 current ops/sec; est completion in 1 minute [INSERT: Count=967771, Max=120127, Min=408, Avg=1547.66, 90=1967, 99=3487, 99.9=7319, 99.99=38783] 
2023-04-30 10:21:19:947 1200 sec: 118335294 operations; 101084.9 current ops/sec; est completion in 1 minute [INSERT: Count=1010859, Max=139775, Min=236, Avg=1481.63, 90=1887, 99=2527, 99.9=8351, 99.99=33791] 
2023-04-30 10:21:29:947 1210 sec: 119373201 operations; 103790.7 current ops/sec; est completion in 58 seconds [INSERT: Count=1037902, Max=34815, Min=227, Avg=1442.88, 90=1872, 99=2287, 99.9=8143, 99.99=21487] 
2023-04-30 10:21:39:947 1220 sec: 120452537 operations; 107933.6 current ops/sec; est completion in 47 seconds [INSERT: Count=1079351, Max=119807, Min=227, Avg=1387.44, 90=1846, 99=2135, 99.9=7903, 99.99=26319] 
2023-04-30 10:21:49:947 1230 sec: 121587356 operations; 113481.9 current ops/sec; est completion in 35 seconds [INSERT: Count=1134794, Max=67327, Min=222, Avg=1319.41, 90=1799, 99=2091, 99.9=8059, 99.99=10839] 
2023-04-30 10:21:59:947 1240 sec: 122729969 operations; 114261.3 current ops/sec; est completion in 23 seconds [INSERT: Count=1142625, Max=138239, Min=211, Avg=1310.42, 90=1794, 99=2117, 99.9=8935, 99.99=27583] 
2023-04-30 10:22:09:947 1250 sec: 123871426 operations; 114145.7 current ops/sec; est completion in 12 seconds [INSERT: Count=1141446, Max=31615, Min=227, Avg=1311.79, 90=1800, 99=2107, 99.9=8135, 99.99=17711] 
2023-04-30 10:22:19:947 1260 sec: 124978986 operations; 110756 current ops/sec; est completion in 1 second [CLEANUP: Count=81, Max=14, Min=1, Avg=2.43, 90=4, 99=9, 99.9=14, 99.99=14] [INSERT: Count=1107555, Max=166783, Min=223, Avg=1317.01, 90=1817, 99=2133, 99.9=7731, 99.99=15767] 
2023-04-30 10:22:23:320 1263 sec: 125000000 operations; 6230.06 current ops/sec; [CLEANUP: Count=69, Max=2222079, Min=1, Avg=32191.01, 90=3, 99=3, 99.9=2222079, 99.99=2222079] [INSERT: Count=21006, Max=16479, Min=221, Avg=1157.19, 90=1711, 99=2009, 99.9=2613, 99.99=4223] 
[OVERALL], RunTime(ms), 1263373
[OVERALL], Throughput(ops/sec), 98941.48442304846
[TOTAL_GCS_PS_Scavenge], Count, 2736
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 13101
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0369859099410863
[TOTAL_GCS_PS_MarkSweep], Count, 1
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 65
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.00514495718999852
[TOTAL_GCs], Count, 2737
[TOTAL_GC_TIME], Time(ms), 13166
[TOTAL_GC_TIME_%], Time(%), 1.0421308671310847
[CLEANUP], Operations, 150
[CLEANUP], AverageLatency(us), 14809.18
[CLEANUP], MinLatency(us), 1
[CLEANUP], MaxLatency(us), 2222079
[CLEANUP], 95thPercentileLatency(us), 4
[CLEANUP], 99thPercentileLatency(us), 14
[INSERT], Operations, 125000000
[INSERT], AverageLatency(us), 1508.586791472
[INSERT], MinLatency(us), 177
[INSERT], MaxLatency(us), 495871
[INSERT], 95thPercentileLatency(us), 2113
[INSERT], 99thPercentileLatency(us), 3435
[INSERT], Return=OK, 125000000
