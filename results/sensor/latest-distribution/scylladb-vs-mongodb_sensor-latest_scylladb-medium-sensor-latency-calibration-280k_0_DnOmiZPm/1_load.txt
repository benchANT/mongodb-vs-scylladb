bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 150 -p recordcount=250000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=125000000 -p insertcount=125000000
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 150 -p recordcount=250000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=125000000 -p insertcount=125000000 -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=35.166.69.220,44.224.14.50,44.236.216.15 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=3gbGuBn2ko0OaQX -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 150 -p recordcount=250000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=125000000 -p insertcount=125000000 -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
 (might take a few minutes for large data sets)
Starting test.
[Thread-8] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
[Thread-8] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
2023-04-30 10:00:58:251 0 sec: 0 operations; est completion in 0 second 
[Thread-8] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-8] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.224.14.50:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.25.70.101:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /44.236.216.15:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.155.229.124:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /35.166.69.220:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /34.214.116.240:9042 added
[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 04c1c4a5-1f5b-4be8-8b3b-2bc1e2431452

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.155.229.124; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.224.14.50; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /34.214.116.240; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /35.166.69.220; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /44.236.216.15; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.25.70.101; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-04-30 10:01:08:235 10 sec: 1290045 operations; 129004.5 current ops/sec; est completion in 15 minutes [INSERT: Count=1290213, Max=57183, Min=198, Avg=1070.3, 90=1399, 99=5243, 99.9=18351, 99.99=41119] 
2023-04-30 10:01:18:235 20 sec: 2870228 operations; 158018.3 current ops/sec; est completion in 14 minutes [INSERT: Count=1580081, Max=20703, Min=217, Avg=946.83, 90=1319, 99=1864, 99.9=7423, 99.99=12951] 
2023-04-30 10:01:28:235 30 sec: 4343072 operations; 147284.4 current ops/sec; est completion in 13 minutes [INSERT: Count=1472843, Max=28975, Min=204, Avg=1016.09, 90=1464, 99=2097, 99.9=9431, 99.99=19743] 
2023-04-30 10:01:38:234 40 sec: 5447513 operations; 110444.1 current ops/sec; est completion in 14 minutes [INSERT: Count=1104407, Max=27215, Min=219, Avg=1355.9, 90=1854, 99=2411, 99.9=7843, 99.99=18623] 
2023-04-30 10:01:48:235 50 sec: 6834111 operations; 138659.8 current ops/sec; est completion in 14 minutes [INSERT: Count=1386619, Max=16671, Min=226, Avg=1079.47, 90=1581, 99=2243, 99.9=7911, 99.99=13727] 
2023-04-30 10:01:58:235 60 sec: 8101967 operations; 126785.6 current ops/sec; est completion in 14 minutes [INSERT: Count=1267840, Max=29519, Min=205, Avg=1180.78, 90=1765, 99=2291, 99.9=7371, 99.99=19935] 
2023-04-30 10:02:08:235 70 sec: 9128760 operations; 102679.3 current ops/sec; est completion in 14 minutes [INSERT: Count=1026806, Max=38943, Min=218, Avg=1458.65, 90=1884, 99=2543, 99.9=7875, 99.99=22687] 
2023-04-30 10:02:18:235 80 sec: 10203028 operations; 107426.8 current ops/sec; est completion in 15 minutes [INSERT: Count=1074267, Max=10711, Min=228, Avg=1394.08, 90=1826, 99=2319, 99.9=6871, 99.99=9343] 
2023-04-30 10:02:28:235 90 sec: 11281617 operations; 107858.9 current ops/sec; est completion in 15 minutes [INSERT: Count=1078589, Max=31759, Min=206, Avg=1388.46, 90=1854, 99=2487, 99.9=7795, 99.99=21647] 
2023-04-30 10:02:38:235 100 sec: 12422654 operations; 114103.7 current ops/sec; est completion in 15 minutes [INSERT: Count=1141044, Max=44927, Min=209, Avg=1312.36, 90=1845, 99=2451, 99.9=8975, 99.99=29999] 
2023-04-30 10:02:48:235 110 sec: 13832061 operations; 140940.7 current ops/sec; est completion in 14 minutes [INSERT: Count=1409426, Max=100927, Min=203, Avg=1061.93, 90=1425, 99=2137, 99.9=8871, 99.99=20655] 
2023-04-30 10:02:58:235 120 sec: 14871513 operations; 103945.2 current ops/sec; est completion in 14 minutes [INSERT: Count=1039412, Max=469759, Min=177, Avg=1440.76, 90=1861, 99=5359, 99.9=27391, 99.99=327423] 
2023-04-30 10:03:08:235 130 sec: 15639951 operations; 76843.8 current ops/sec; est completion in 15 minutes [INSERT: Count=768441, Max=494591, Min=182, Avg=1949.91, 90=1941, 99=11047, 99.9=81791, 99.99=401663] 
2023-04-30 10:03:18:235 140 sec: 16605043 operations; 96509.2 current ops/sec; est completion in 15 minutes [INSERT: Count=965091, Max=375295, Min=227, Avg=1550, 90=1849, 99=3893, 99.9=25919, 99.99=263679] 
2023-04-30 10:03:28:235 150 sec: 17615866 operations; 101082.3 current ops/sec; est completion in 15 minutes [INSERT: Count=1010846, Max=384767, Min=220, Avg=1483.67, 90=1844, 99=2335, 99.9=10487, 99.99=255999] 
2023-04-30 10:03:38:235 160 sec: 18656249 operations; 104038.3 current ops/sec; est completion in 15 minutes [INSERT: Count=1040361, Max=111615, Min=205, Avg=1439.56, 90=1847, 99=2345, 99.9=10135, 99.99=60127] 
2023-04-30 10:03:48:235 170 sec: 19758755 operations; 110250.6 current ops/sec; est completion in 15 minutes [INSERT: Count=1102542, Max=9991, Min=340, Avg=1358.25, 90=1835, 99=2335, 99.9=6591, 99.99=8839] 
2023-04-30 10:03:58:235 180 sec: 20838886 operations; 108013.1 current ops/sec; est completion in 15 minutes [INSERT: Count=1080117, Max=32431, Min=233, Avg=1386.48, 90=1851, 99=2447, 99.9=7763, 99.99=23807] 
2023-04-30 10:04:08:235 190 sec: 21921108 operations; 108222.2 current ops/sec; est completion in 14 minutes [INSERT: Count=1082227, Max=37983, Min=219, Avg=1383.79, 90=1859, 99=2443, 99.9=7463, 99.99=21519] 
2023-04-30 10:04:18:235 200 sec: 22930982 operations; 100987.4 current ops/sec; est completion in 14 minutes [INSERT: Count=1009873, Max=105407, Min=219, Avg=1483.14, 90=1905, 99=2881, 99.9=7955, 99.99=27903] 
2023-04-30 10:04:28:235 210 sec: 23953356 operations; 102237.4 current ops/sec; est completion in 14 minutes [INSERT: Count=1022349, Max=33663, Min=211, Avg=1464.92, 90=1888, 99=2651, 99.9=7883, 99.99=21151] 
2023-04-30 10:04:38:235 220 sec: 24930815 operations; 97745.9 current ops/sec; est completion in 14 minutes [INSERT: Count=977468, Max=37727, Min=220, Avg=1532.43, 90=1969, 99=3353, 99.9=7231, 99.99=24415] 
2023-04-30 10:04:48:235 230 sec: 25927076 operations; 99626.1 current ops/sec; est completion in 14 minutes [INSERT: Count=996275, Max=222207, Min=236, Avg=1503.44, 90=1885, 99=2663, 99.9=7551, 99.99=105471] 
2023-04-30 10:04:58:235 240 sec: 26942920 operations; 101584.4 current ops/sec; est completion in 14 minutes [INSERT: Count=1015826, Max=103551, Min=224, Avg=1474.39, 90=1871, 99=2431, 99.9=8335, 99.99=31871] 
2023-04-30 10:05:08:235 250 sec: 27960528 operations; 101760.8 current ops/sec; est completion in 14 minutes [INSERT: Count=1017603, Max=92415, Min=244, Avg=1471.83, 90=1874, 99=2591, 99.9=7795, 99.99=29439] 
2023-04-30 10:05:18:235 260 sec: 29002454 operations; 104192.6 current ops/sec; est completion in 14 minutes [INSERT: Count=1041920, Max=58239, Min=217, Avg=1437.43, 90=1880, 99=2585, 99.9=6963, 99.99=9039] 
2023-04-30 10:05:28:235 270 sec: 30084779 operations; 108232.5 current ops/sec; est completion in 14 minutes [INSERT: Count=1082339, Max=43007, Min=206, Avg=1383.64, 90=1884, 99=2681, 99.9=7923, 99.99=21487] 
2023-04-30 10:05:38:235 280 sec: 31106666 operations; 102188.7 current ops/sec; est completion in 14 minutes [INSERT: Count=1021881, Max=38431, Min=205, Avg=1465.68, 90=2028, 99=3523, 99.9=7407, 99.99=24847] 
2023-04-30 10:05:48:235 290 sec: 32163713 operations; 105704.7 current ops/sec; est completion in 13 minutes [INSERT: Count=1057050, Max=123391, Min=210, Avg=1416.83, 90=1883, 99=2511, 99.9=7435, 99.99=14559] 
2023-04-30 10:05:58:235 300 sec: 33184250 operations; 102053.7 current ops/sec; est completion in 13 minutes [INSERT: Count=1020557, Max=34527, Min=221, Avg=1467.6, 90=1872, 99=2529, 99.9=7171, 99.99=22463] 
2023-04-30 10:06:08:235 310 sec: 34190331 operations; 100608.1 current ops/sec; est completion in 13 minutes [INSERT: Count=1006043, Max=110783, Min=225, Avg=1488.71, 90=1891, 99=2803, 99.9=7223, 99.99=29295] 
2023-04-30 10:06:18:235 320 sec: 35211230 operations; 102089.9 current ops/sec; est completion in 13 minutes [INSERT: Count=1020929, Max=76991, Min=241, Avg=1467.08, 90=1867, 99=2315, 99.9=7111, 99.99=18319] 
2023-04-30 10:06:28:235 330 sec: 36226893 operations; 101566.3 current ops/sec; est completion in 13 minutes [INSERT: Count=1015637, Max=43359, Min=225, Avg=1474.65, 90=1879, 99=2669, 99.9=8719, 99.99=21391] 
2023-04-30 10:06:38:235 340 sec: 37210557 operations; 98366.4 current ops/sec; est completion in 13 minutes [INSERT: Count=983654, Max=124223, Min=199, Avg=1522.77, 90=1943, 99=3245, 99.9=7623, 99.99=34239] 
2023-04-30 10:06:48:235 350 sec: 38200800 operations; 99024.3 current ops/sec; est completion in 13 minutes [INSERT: Count=990244, Max=92799, Min=310, Avg=1512.57, 90=1915, 99=3123, 99.9=7479, 99.99=50527] 
2023-04-30 10:06:58:235 360 sec: 39215616 operations; 101481.6 current ops/sec; est completion in 13 minutes [INSERT: Count=1014821, Max=33695, Min=331, Avg=1475.89, 90=1882, 99=2621, 99.9=8011, 99.99=23151] 
2023-04-30 10:07:08:235 370 sec: 40213559 operations; 99794.3 current ops/sec; est completion in 13 minutes [INSERT: Count=997965, Max=37183, Min=339, Avg=1500.9, 90=1909, 99=3123, 99.9=7775, 99.99=23791] 
2023-04-30 10:07:18:234 380 sec: 41195084 operations; 98152.5 current ops/sec; est completion in 12 minutes [INSERT: Count=981502, Max=11975, Min=227, Avg=1526.03, 90=1945, 99=3215, 99.9=7467, 99.99=9607] 
2023-04-30 10:07:28:235 390 sec: 42205174 operations; 101009 current ops/sec; est completion in 12 minutes [INSERT: Count=1010098, Max=32927, Min=233, Avg=1482.84, 90=1886, 99=2605, 99.9=7643, 99.99=23119] 
2023-04-30 10:07:38:234 400 sec: 43205661 operations; 100048.7 current ops/sec; est completion in 12 minutes [INSERT: Count=1000469, Max=109375, Min=204, Avg=1497.07, 90=1900, 99=2977, 99.9=8023, 99.99=32239] 
2023-04-30 10:07:48:235 410 sec: 44183924 operations; 97826.3 current ops/sec; est completion in 12 minutes [INSERT: Count=978291, Max=10911, Min=402, Avg=1531.18, 90=1967, 99=3303, 99.9=7563, 99.99=9031] 
2023-04-30 10:07:58:235 420 sec: 45177274 operations; 99335 current ops/sec; est completion in 12 minutes [INSERT: Count=993334, Max=41247, Min=399, Avg=1507.88, 90=1912, 99=2931, 99.9=7243, 99.99=28527] 
2023-04-30 10:08:08:234 430 sec: 46176899 operations; 99962.5 current ops/sec; est completion in 12 minutes [INSERT: Count=999621, Max=84479, Min=371, Avg=1498.34, 90=1903, 99=2885, 99.9=8327, 99.99=28591] 
2023-04-30 10:08:18:234 440 sec: 47166594 operations; 98969.5 current ops/sec; est completion in 12 minutes [INSERT: Count=989703, Max=137087, Min=341, Avg=1513.43, 90=1936, 99=3133, 99.9=7459, 99.99=19727] 
2023-04-30 10:08:28:235 450 sec: 48146640 operations; 98004.6 current ops/sec; est completion in 11 minutes [INSERT: Count=980046, Max=41247, Min=381, Avg=1528.34, 90=1934, 99=3129, 99.9=7655, 99.99=25855] 
2023-04-30 10:08:38:234 460 sec: 49140644 operations; 99400.4 current ops/sec; est completion in 11 minutes [INSERT: Count=994003, Max=102015, Min=342, Avg=1506.83, 90=1910, 99=2933, 99.9=7307, 99.99=32287] 
2023-04-30 10:08:48:235 470 sec: 50135803 operations; 99515.9 current ops/sec; est completion in 11 minutes [INSERT: Count=995156, Max=116671, Min=233, Avg=1505.11, 90=1914, 99=2999, 99.9=7463, 99.99=45759] 
2023-04-30 10:08:58:234 480 sec: 51116587 operations; 98078.4 current ops/sec; est completion in 11 minutes [INSERT: Count=980785, Max=39487, Min=239, Avg=1527.18, 90=1947, 99=3249, 99.9=7591, 99.99=22959] 
2023-04-30 10:09:08:234 490 sec: 52106691 operations; 99010.4 current ops/sec; est completion in 11 minutes [INSERT: Count=990099, Max=108031, Min=344, Avg=1512.79, 90=1916, 99=2965, 99.9=7667, 99.99=30783] 
2023-04-30 10:09:18:235 500 sec: 53115843 operations; 100915.2 current ops/sec; est completion in 11 minutes [INSERT: Count=1009194, Max=26655, Min=364, Avg=1484.22, 90=1902, 99=2709, 99.9=7615, 99.99=12351] 
2023-04-30 10:09:28:235 510 sec: 54088276 operations; 97243.3 current ops/sec; est completion in 11 minutes [INSERT: Count=972404, Max=39679, Min=376, Avg=1540.32, 90=1978, 99=3477, 99.9=7407, 99.99=24751] 
2023-04-30 10:09:38:234 520 sec: 55070015 operations; 98173.9 current ops/sec; est completion in 11 minutes [INSERT: Count=981724, Max=123135, Min=215, Avg=1525.71, 90=1921, 99=3117, 99.9=8135, 99.99=64959] 
2023-04-30 10:09:48:234 530 sec: 56077426 operations; 100741.1 current ops/sec; est completion in 10 minutes [INSERT: Count=1007397, Max=63743, Min=356, Avg=1486.75, 90=1890, 99=2643, 99.9=7443, 99.99=11527] 
2023-04-30 10:09:58:234 540 sec: 57065107 operations; 98768.1 current ops/sec; est completion in 10 minutes [INSERT: Count=987703, Max=35263, Min=347, Avg=1516.49, 90=1945, 99=3291, 99.9=7347, 99.99=22559] 
2023-04-30 10:10:08:234 550 sec: 58039317 operations; 97421 current ops/sec; est completion in 10 minutes [INSERT: Count=974202, Max=100095, Min=272, Avg=1537.55, 90=1946, 99=3399, 99.9=7631, 99.99=38111] 
2023-04-30 10:10:18:235 560 sec: 59049577 operations; 101026 current ops/sec; est completion in 10 minutes [INSERT: Count=1010264, Max=84927, Min=332, Avg=1482.53, 90=1879, 99=2517, 99.9=8003, 99.99=11831] 
2023-04-30 10:10:28:234 570 sec: 60048058 operations; 99848.1 current ops/sec; est completion in 10 minutes [INSERT: Count=998480, Max=33439, Min=355, Avg=1500.07, 90=1910, 99=3001, 99.9=7495, 99.99=21615] 
2023-04-30 10:10:38:235 580 sec: 61008738 operations; 96068 current ops/sec; est completion in 10 minutes [INSERT: Count=960681, Max=202879, Min=211, Avg=1559.25, 90=1973, 99=3433, 99.9=7783, 99.99=85183] 
2023-04-30 10:10:48:235 590 sec: 62022659 operations; 101392.1 current ops/sec; est completion in 10 minutes [INSERT: Count=1013925, Max=10935, Min=372, Avg=1477.14, 90=1878, 99=2433, 99.9=7755, 99.99=9223] 
2023-04-30 10:10:58:235 600 sec: 63020864 operations; 99820.5 current ops/sec; est completion in 9 minutes [INSERT: Count=998206, Max=41279, Min=352, Avg=1500.48, 90=1898, 99=2821, 99.9=8131, 99.99=21663] 
2023-04-30 10:11:08:235 610 sec: 63992157 operations; 97129.3 current ops/sec; est completion in 9 minutes [INSERT: Count=971284, Max=65791, Min=388, Avg=1542.18, 90=1972, 99=3387, 99.9=8775, 99.99=30687] 
2023-04-30 10:11:18:235 620 sec: 64991639 operations; 99948.2 current ops/sec; est completion in 9 minutes [INSERT: Count=999484, Max=115135, Min=342, Avg=1498.58, 90=1892, 99=2719, 99.9=7207, 99.99=67519] 
2023-04-30 10:11:28:235 630 sec: 65997321 operations; 100568.2 current ops/sec; est completion in 9 minutes [INSERT: Count=1005684, Max=38591, Min=363, Avg=1489.34, 90=1882, 99=2617, 99.9=8271, 99.99=23791] 
2023-04-30 10:11:38:235 640 sec: 66966905 operations; 96958.4 current ops/sec; est completion in 9 minutes [INSERT: Count=969584, Max=123967, Min=213, Avg=1544.87, 90=1958, 99=3385, 99.9=7855, 99.99=66239] 
2023-04-30 10:11:48:235 650 sec: 67956287 operations; 98938.2 current ops/sec; est completion in 9 minutes [INSERT: Count=989373, Max=164223, Min=230, Avg=1513.92, 90=1912, 99=3041, 99.9=7415, 99.99=58719] 
2023-04-30 10:11:58:235 660 sec: 68967232 operations; 101094.5 current ops/sec; est completion in 8 minutes [INSERT: Count=1010949, Max=39775, Min=226, Avg=1481.54, 90=1878, 99=2553, 99.9=8383, 99.99=21983] 
2023-04-30 10:12:08:235 670 sec: 69939347 operations; 97211.5 current ops/sec; est completion in 8 minutes [INSERT: Count=972127, Max=147967, Min=354, Avg=1540.85, 90=1943, 99=3417, 99.9=7719, 99.99=47199] 
2023-04-30 10:12:18:235 680 sec: 70920292 operations; 98094.5 current ops/sec; est completion in 8 minutes [INSERT: Count=980927, Max=146559, Min=350, Avg=1526.98, 90=1934, 99=3247, 99.9=6947, 99.99=79295] 
2023-04-30 10:12:28:234 690 sec: 71926108 operations; 100581.6 current ops/sec; est completion in 8 minutes [INSERT: Count=1005841, Max=37503, Min=242, Avg=1489.1, 90=1884, 99=2651, 99.9=7795, 99.99=21295] 
2023-04-30 10:12:38:235 700 sec: 72912978 operations; 98687 current ops/sec; est completion in 8 minutes [INSERT: Count=986853, Max=87039, Min=236, Avg=1517.76, 90=1920, 99=3255, 99.9=8151, 99.99=31231] 
2023-04-30 10:12:48:235 710 sec: 73896182 operations; 98320.4 current ops/sec; est completion in 8 minutes [INSERT: Count=983209, Max=41631, Min=354, Avg=1523.44, 90=1945, 99=3283, 99.9=7011, 99.99=9055] 
2023-04-30 10:12:58:235 720 sec: 74894892 operations; 99871 current ops/sec; est completion in 8 minutes [INSERT: Count=998704, Max=44543, Min=343, Avg=1499.73, 90=1898, 99=2919, 99.9=7575, 99.99=25183] 
2023-04-30 10:13:08:235 730 sec: 75882627 operations; 98773.5 current ops/sec; est completion in 7 minutes [INSERT: Count=987739, Max=110271, Min=230, Avg=1516.41, 90=1911, 99=3157, 99.9=8631, 99.99=44319] 
2023-04-30 10:13:18:235 740 sec: 76864183 operations; 98155.6 current ops/sec; est completion in 7 minutes [INSERT: Count=981566, Max=160639, Min=211, Avg=1525.99, 90=1947, 99=3431, 99.9=7695, 99.99=96575] 
2023-04-30 10:13:28:235 750 sec: 77856102 operations; 99191.9 current ops/sec; est completion in 7 minutes [INSERT: Count=991905, Max=39263, Min=208, Avg=1510.05, 90=1918, 99=3133, 99.9=7607, 99.99=25727] 
2023-04-30 10:13:38:235 760 sec: 78836782 operations; 98068 current ops/sec; est completion in 7 minutes [INSERT: Count=980678, Max=76735, Min=230, Avg=1527.35, 90=1909, 99=3263, 99.9=13839, 99.99=29951] 
2023-04-30 10:13:48:235 770 sec: 79826748 operations; 98996.6 current ops/sec; est completion in 7 minutes [INSERT: Count=989960, Max=42623, Min=372, Avg=1513, 90=1931, 99=3357, 99.9=7199, 99.99=9111] 
2023-04-30 10:13:58:234 780 sec: 80810753 operations; 98400.5 current ops/sec; est completion in 7 minutes [INSERT: Count=984014, Max=43327, Min=222, Avg=1522.21, 90=1930, 99=3219, 99.9=7799, 99.99=22175] 
2023-04-30 10:14:08:234 790 sec: 81801705 operations; 99095.2 current ops/sec; est completion in 6 minutes [INSERT: Count=990943, Max=47935, Min=224, Avg=1511.5, 90=1914, 99=3185, 99.9=7167, 99.99=26687] 
2023-04-30 10:14:18:235 800 sec: 82789440 operations; 98773.5 current ops/sec; est completion in 6 minutes [INSERT: Count=987743, Max=41791, Min=406, Avg=1516.36, 90=1925, 99=3365, 99.9=7803, 99.99=37343] 
2023-04-30 10:14:28:234 810 sec: 83776648 operations; 98720.8 current ops/sec; est completion in 6 minutes [INSERT: Count=987201, Max=38783, Min=381, Avg=1517.18, 90=1929, 99=3217, 99.9=8043, 99.99=24543] 
2023-04-30 10:14:38:234 820 sec: 84759496 operations; 98284.8 current ops/sec; est completion in 6 minutes [INSERT: Count=982857, Max=99071, Min=201, Avg=1523.97, 90=1920, 99=3179, 99.9=7831, 99.99=34847] 
2023-04-30 10:14:48:234 830 sec: 85746726 operations; 98723 current ops/sec; est completion in 6 minutes [INSERT: Count=987221, Max=144639, Min=259, Avg=1517.18, 90=1914, 99=3225, 99.9=8159, 99.99=30351] 
2023-04-30 10:14:58:235 840 sec: 86736149 operations; 98942.3 current ops/sec; est completion in 6 minutes [INSERT: Count=989445, Max=36479, Min=292, Avg=1513.83, 90=1923, 99=3217, 99.9=7915, 99.99=23055] 
2023-04-30 10:15:08:235 850 sec: 87713119 operations; 97697 current ops/sec; est completion in 6 minutes [INSERT: Count=976974, Max=158591, Min=355, Avg=1533.13, 90=1929, 99=3271, 99.9=7775, 99.99=37855] 
2023-04-30 10:15:18:235 860 sec: 88693251 operations; 98013.2 current ops/sec; est completion in 5 minutes [INSERT: Count=980125, Max=135167, Min=335, Avg=1528.18, 90=1914, 99=3257, 99.9=8079, 99.99=83903] 
2023-04-30 10:15:28:235 870 sec: 89685071 operations; 99182 current ops/sec; est completion in 5 minutes [INSERT: Count=991819, Max=33279, Min=398, Avg=1510.09, 90=1917, 99=3151, 99.9=8327, 99.99=23551] 
2023-04-30 10:15:38:235 880 sec: 90666743 operations; 98167.2 current ops/sec; est completion in 5 minutes [INSERT: Count=981665, Max=103743, Min=208, Avg=1525.77, 90=1936, 99=3355, 99.9=7467, 99.99=32511] 
2023-04-30 10:15:48:235 890 sec: 91671880 operations; 100513.7 current ops/sec; est completion in 5 minutes [INSERT: Count=1005149, Max=15199, Min=272, Avg=1490.08, 90=1892, 99=2809, 99.9=8535, 99.99=10295] 
2023-04-30 10:15:58:235 900 sec: 92686306 operations; 101442.6 current ops/sec; est completion in 5 minutes [INSERT: Count=1014419, Max=32927, Min=346, Avg=1476.43, 90=1876, 99=2651, 99.9=7299, 99.99=24239] 
2023-04-30 10:16:08:234 910 sec: 93690078 operations; 100377.2 current ops/sec; est completion in 5 minutes [INSERT: Count=1003768, Max=45791, Min=271, Avg=1492.11, 90=1892, 99=2869, 99.9=7731, 99.99=25311] 
2023-04-30 10:16:18:235 920 sec: 94697094 operations; 100701.6 current ops/sec; est completion in 4 minutes [INSERT: Count=1007009, Max=11263, Min=230, Avg=1487.31, 90=1895, 99=2841, 99.9=7471, 99.99=9551] 
2023-04-30 10:16:28:235 930 sec: 95699608 operations; 100251.4 current ops/sec; est completion in 4 minutes [INSERT: Count=1002525, Max=41759, Min=416, Avg=1493.98, 90=1889, 99=2777, 99.9=7971, 99.99=23039] 
2023-04-30 10:16:38:234 940 sec: 96679039 operations; 97943.1 current ops/sec; est completion in 4 minutes [INSERT: Count=979411, Max=178815, Min=204, Avg=1529.32, 90=1928, 99=3277, 99.9=7759, 99.99=53503] 
2023-04-30 10:16:48:234 950 sec: 97658458 operations; 97941.9 current ops/sec; est completion in 4 minutes [INSERT: Count=979425, Max=79999, Min=363, Avg=1529.28, 90=1944, 99=3439, 99.9=6571, 99.99=10207] 
2023-04-30 10:16:58:234 960 sec: 98653568 operations; 99511 current ops/sec; est completion in 4 minutes [INSERT: Count=995111, Max=42399, Min=375, Avg=1505.15, 90=1902, 99=3199, 99.9=7671, 99.99=24399] 
2023-04-30 10:17:08:234 970 sec: 99646859 operations; 99329.1 current ops/sec; est completion in 4 minutes [INSERT: Count=993286, Max=42559, Min=394, Avg=1507.85, 90=1917, 99=3073, 99.9=7575, 99.99=25327] 
2023-04-30 10:17:18:234 980 sec: 100617992 operations; 97113.3 current ops/sec; est completion in 3 minutes [INSERT: Count=971148, Max=59423, Min=397, Avg=1542.37, 90=1962, 99=3581, 99.9=7219, 99.99=11247] 
2023-04-30 10:17:28:234 990 sec: 101606450 operations; 98845.8 current ops/sec; est completion in 3 minutes [INSERT: Count=988454, Max=39135, Min=384, Avg=1515.3, 90=1913, 99=3353, 99.9=7419, 99.99=24815] 
2023-04-30 10:17:38:235 1000 sec: 102610043 operations; 100359.3 current ops/sec; est completion in 3 minutes [INSERT: Count=1003609, Max=44159, Min=257, Avg=1492.42, 90=1899, 99=2925, 99.9=7803, 99.99=23951] 
2023-04-30 10:17:48:234 1010 sec: 103584102 operations; 97405.9 current ops/sec; est completion in 3 minutes [INSERT: Count=974037, Max=14263, Min=397, Avg=1537.73, 90=1958, 99=3527, 99.9=7187, 99.99=9439] 
2023-04-30 10:17:58:235 1020 sec: 104567619 operations; 98351.7 current ops/sec; est completion in 3 minutes [INSERT: Count=983518, Max=42911, Min=365, Avg=1522.91, 90=1921, 99=3385, 99.9=8071, 99.99=25119] 
2023-04-30 10:18:08:235 1030 sec: 105574586 operations; 100696.7 current ops/sec; est completion in 3 minutes [INSERT: Count=1006995, Max=46207, Min=387, Avg=1487.38, 90=1889, 99=2741, 99.9=8479, 99.99=27647] 
2023-04-30 10:18:18:235 1040 sec: 106551665 operations; 97707.9 current ops/sec; est completion in 3 minutes [INSERT: Count=977054, Max=96575, Min=390, Avg=1532.98, 90=1948, 99=3539, 99.9=7119, 99.99=13359] 
2023-04-30 10:18:28:234 1050 sec: 107527342 operations; 97567.7 current ops/sec; est completion in 2 minutes [INSERT: Count=975670, Max=40607, Min=341, Avg=1535.17, 90=1936, 99=3531, 99.9=7575, 99.99=26095] 
2023-04-30 10:18:38:235 1060 sec: 108528499 operations; 100115.7 current ops/sec; est completion in 2 minutes [INSERT: Count=1001164, Max=77119, Min=207, Avg=1496.03, 90=1890, 99=2797, 99.9=7827, 99.99=30575] 
2023-04-30 10:18:48:234 1070 sec: 109510716 operations; 98221.7 current ops/sec; est completion in 2 minutes [INSERT: Count=982210, Max=109439, Min=343, Avg=1524.91, 90=1937, 99=3501, 99.9=7375, 99.99=9959] 
2023-04-30 10:18:58:235 1080 sec: 110484308 operations; 97359.2 current ops/sec; est completion in 2 minutes [INSERT: Count=973604, Max=38015, Min=429, Avg=1538.46, 90=1948, 99=3561, 99.9=7683, 99.99=26655] 
2023-04-30 10:19:08:234 1090 sec: 111479991 operations; 99568.3 current ops/sec; est completion in 2 minutes [INSERT: Count=995670, Max=42591, Min=389, Avg=1504.26, 90=1901, 99=2939, 99.9=7611, 99.99=25103] 
2023-04-30 10:19:18:234 1100 sec: 112466166 operations; 98617.5 current ops/sec; est completion in 2 minutes [INSERT: Count=986174, Max=130431, Min=233, Avg=1518.8, 90=1927, 99=3373, 99.9=7107, 99.99=28159] 
2023-04-30 10:19:28:234 1110 sec: 113438116 operations; 97195 current ops/sec; est completion in 1 minute [INSERT: Count=971949, Max=36671, Min=289, Avg=1541.09, 90=1957, 99=3637, 99.9=7979, 99.99=25487] 
2023-04-30 10:19:38:234 1120 sec: 114422330 operations; 98421.4 current ops/sec; est completion in 1 minute [INSERT: Count=984219, Max=89791, Min=250, Avg=1521.8, 90=1916, 99=3097, 99.9=8035, 99.99=30895] 
2023-04-30 10:19:48:234 1130 sec: 115409805 operations; 98747.5 current ops/sec; est completion in 1 minute [INSERT: Count=987469, Max=95231, Min=362, Avg=1516.79, 90=1921, 99=3243, 99.9=7991, 99.99=11079] 
2023-04-30 10:19:58:234 1140 sec: 116385165 operations; 97536 current ops/sec; est completion in 1 minute [INSERT: Count=975366, Max=37759, Min=375, Avg=1535.67, 90=1954, 99=3637, 99.9=7847, 99.99=24175] 
2023-04-30 10:20:08:234 1150 sec: 117360170 operations; 97500.5 current ops/sec; est completion in 1 minute [INSERT: Count=975002, Max=174975, Min=299, Avg=1536.25, 90=1927, 99=3281, 99.9=8127, 99.99=85119] 
2023-04-30 10:20:18:234 1160 sec: 118344001 operations; 98383.1 current ops/sec; est completion in 1 minute [INSERT: Count=983828, Max=120127, Min=345, Avg=1522.42, 90=1916, 99=3181, 99.9=7583, 99.99=55071] 
2023-04-30 10:20:28:234 1170 sec: 119318063 operations; 97406.2 current ops/sec; est completion in 56 seconds [INSERT: Count=974061, Max=54303, Min=349, Avg=1537.71, 90=1947, 99=3545, 99.9=8583, 99.99=45695] 
2023-04-30 10:20:38:234 1180 sec: 120300218 operations; 98215.5 current ops/sec; est completion in 47 seconds [INSERT: Count=982160, Max=116095, Min=199, Avg=1525.03, 90=1933, 99=3355, 99.9=7687, 99.99=37919] 
2023-04-30 10:20:48:234 1190 sec: 121285449 operations; 98523.1 current ops/sec; est completion in 37 seconds [INSERT: Count=985232, Max=74879, Min=412, Avg=1520.2, 90=1925, 99=3281, 99.9=7803, 99.99=13127] 
2023-04-30 10:20:58:234 1200 sec: 122264571 operations; 97912.2 current ops/sec; est completion in 27 seconds [INSERT: Count=979116, Max=51135, Min=351, Avg=1529.75, 90=1946, 99=3535, 99.9=7363, 99.99=22767] 
2023-04-30 10:21:08:234 1210 sec: 123245951 operations; 98138 current ops/sec; est completion in 18 seconds [INSERT: Count=981381, Max=86591, Min=375, Avg=1526.25, 90=1939, 99=3343, 99.9=7823, 99.99=31759] 
2023-04-30 10:21:18:235 1220 sec: 124251185 operations; 100523.4 current ops/sec; est completion in 8 second [INSERT: Count=1005244, Max=150527, Min=232, Avg=1489.94, 90=1881, 99=2781, 99.9=7627, 99.99=83583] 
2023-04-30 10:21:28:234 1230 sec: 125000000 operations; 74881.5 current ops/sec; [CLEANUP: Count=149, Max=7, Min=0, Avg=1.56, 90=3, 99=4, 99.9=7, 99.99=7] [INSERT: Count=748796, Max=34399, Min=343, Avg=1443.95, 90=1851, 99=2411, 99.9=6855, 99.99=26047] 
2023-04-30 10:21:29:175 1230 sec: 125000000 operations; 0 current ops/sec; [CLEANUP: Count=1, Max=2215935, Min=2213888, Avg=2214912, 90=2215935, 99=2215935, 99.9=2215935, 99.99=2215935] [INSERT: Count=0, Max=0, Min=9223372036854775807, Avg=?, 90=0, 99=0, 99.9=0, 99.99=0] 
[OVERALL], RunTime(ms), 1230940
[OVERALL], Throughput(ops/sec), 101548.41015809057
[TOTAL_GCS_PS_Scavenge], Count, 2715
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 12739
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0349001576031325
[TOTAL_GCS_PS_MarkSweep], Count, 2
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 68
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.005524233512600126
[TOTAL_GCs], Count, 2717
[TOTAL_GC_TIME], Time(ms), 12807
[TOTAL_GC_TIME_%], Time(%), 1.0404243911157327
[CLEANUP], Operations, 150
[CLEANUP], AverageLatency(us), 14767.633333333333
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2215935
[CLEANUP], 95thPercentileLatency(us), 3
[CLEANUP], 99thPercentileLatency(us), 7
[INSERT], Operations, 125000000
[INSERT], AverageLatency(us), 1469.508146408
[INSERT], MinLatency(us), 177
[INSERT], MaxLatency(us), 494591
[INSERT], 95thPercentileLatency(us), 2027
[INSERT], 99thPercentileLatency(us), 3079
[INSERT], Return=OK, 125000000
