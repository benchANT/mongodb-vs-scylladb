bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=100.21.117.95,54.70.120.72,52.12.131.139 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=MGnf3tPLo10ESUu -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 100 -p recordcount=125000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertcount=125000000
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=100.21.117.95,54.70.120.72,52.12.131.139 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=MGnf3tPLo10ESUu -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 100 -p recordcount=125000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertcount=125000000 -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=100.21.117.95,54.70.120.72,52.12.131.139 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=MGnf3tPLo10ESUu -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 100 -p recordcount=125000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertcount=125000000 -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
 (might take a few minutes for large data sets)
Starting test.
[Thread-8] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
[Thread-8] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
2023-05-01 11:44:03:988 0 sec: 0 operations; est completion in 0 second 
[Thread-8] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-8] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /100.21.117.95:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.12.131.139:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.70.120.72:9042 added
[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 93930dd5-7692-4b9e-8db9-5c21bc61b4c3

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.12.131.139; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /100.21.117.95; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /54.70.120.72; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-05-01 11:44:13:973 10 sec: 1048387 operations; 104828.22 current ops/sec; est completion in 19 minutes [INSERT: Count=1048519, Max=41439, Min=291, Avg=889.57, 90=1160, 99=2041, 99.9=12599, 99.99=29487] 
2023-05-01 11:44:23:973 20 sec: 2098399 operations; 105001.2 current ops/sec; est completion in 19 minutes [INSERT: Count=1049920, Max=23359, Min=285, Avg=950.09, 90=1316, 99=2167, 99.9=5027, 99.99=17071] 
2023-05-01 11:44:33:973 30 sec: 2947737 operations; 84933.8 current ops/sec; est completion in 20 minutes [INSERT: Count=849334, Max=26031, Min=298, Avg=1175.26, 90=1707, 99=2339, 99.9=4463, 99.99=21311] 
2023-05-01 11:44:43:973 40 sec: 3723100 operations; 77536.3 current ops/sec; est completion in 21 minutes [INSERT: Count=775368, Max=10655, Min=287, Avg=1287.7, 90=1831, 99=2685, 99.9=5615, 99.99=7855] 
2023-05-01 11:44:53:973 50 sec: 4509440 operations; 78634 current ops/sec; est completion in 22 minutes [INSERT: Count=786331, Max=32351, Min=288, Avg=1269.61, 90=1757, 99=2409, 99.9=6143, 99.99=21039] 
2023-05-01 11:45:03:973 60 sec: 5196795 operations; 68735.5 current ops/sec; est completion in 23 minutes [INSERT: Count=687379, Max=38847, Min=297, Avg=1452.8, 90=1861, 99=2841, 99.9=6023, 99.99=27967] 
2023-05-01 11:45:13:973 70 sec: 5903518 operations; 70672.3 current ops/sec; est completion in 23 minutes [INSERT: Count=706683, Max=22447, Min=289, Avg=1412.89, 90=1838, 99=2625, 99.9=5763, 99.99=7231] 
2023-05-01 11:45:23:973 80 sec: 6603295 operations; 69977.7 current ops/sec; est completion in 23 minutes [INSERT: Count=699799, Max=48799, Min=285, Avg=1427.01, 90=1840, 99=2721, 99.9=6295, 99.99=27983] 
2023-05-01 11:45:33:973 90 sec: 7294107 operations; 69081.2 current ops/sec; est completion in 24 minutes [INSERT: Count=690805, Max=49407, Min=288, Avg=1445.55, 90=2199, 99=4987, 99.9=12871, 99.99=33471] 
2023-05-01 11:45:43:973 100 sec: 7893091 operations; 59898.4 current ops/sec; est completion in 24 minutes [INSERT: Count=598979, Max=204543, Min=294, Avg=1667.48, 90=1942, 99=5883, 99.9=33631, 99.99=158463] 
2023-05-01 11:45:53:973 110 sec: 8492549 operations; 59945.8 current ops/sec; est completion in 25 minutes [INSERT: Count=599467, Max=178175, Min=299, Avg=1666.09, 90=1869, 99=6587, 99.9=43487, 99.99=140031] 
2023-05-01 11:46:03:973 120 sec: 9191528 operations; 69897.9 current ops/sec; est completion in 25 minutes [INSERT: Count=698969, Max=30751, Min=284, Avg=1428.61, 90=1816, 99=2405, 99.9=6147, 99.99=23903] 
2023-05-01 11:46:13:973 130 sec: 9890233 operations; 69870.5 current ops/sec; est completion in 25 minutes [INSERT: Count=698699, Max=22319, Min=310, Avg=1429.14, 90=1812, 99=2465, 99.9=5959, 99.99=8631] 
2023-05-01 11:46:23:973 140 sec: 10604416 operations; 71418.3 current ops/sec; est completion in 25 minutes [INSERT: Count=714191, Max=32239, Min=292, Avg=1398.12, 90=1824, 99=2597, 99.9=5851, 99.99=25247] 
2023-05-01 11:46:33:973 150 sec: 11306754 operations; 70233.8 current ops/sec; est completion in 25 minutes [INSERT: Count=702339, Max=48511, Min=298, Avg=1421.74, 90=1857, 99=2917, 99.9=6451, 99.99=31103] 
2023-05-01 11:46:43:973 160 sec: 11974731 operations; 66797.7 current ops/sec; est completion in 25 minutes [INSERT: Count=667969, Max=8687, Min=290, Avg=1495.03, 90=1930, 99=3365, 99.9=5427, 99.99=6519] 
2023-05-01 11:46:53:973 170 sec: 12652015 operations; 67728.4 current ops/sec; est completion in 25 minutes [INSERT: Count=677291, Max=30767, Min=314, Avg=1474.44, 90=1887, 99=3047, 99.9=6299, 99.99=26447] 
2023-05-01 11:47:03:973 180 sec: 13282928 operations; 63091.3 current ops/sec; est completion in 25 minutes [INSERT: Count=630915, Max=46655, Min=479, Avg=1582.99, 90=2147, 99=4045, 99.9=5991, 99.99=31311] 
2023-05-01 11:47:13:973 190 sec: 13946473 operations; 66354.5 current ops/sec; est completion in 25 minutes [INSERT: Count=663548, Max=25535, Min=335, Avg=1504.97, 90=1939, 99=3565, 99.9=5839, 99.99=8383] 
2023-05-01 11:47:23:973 200 sec: 14617808 operations; 67133.5 current ops/sec; est completion in 25 minutes [INSERT: Count=671328, Max=34335, Min=363, Avg=1487.55, 90=1906, 99=3355, 99.9=5783, 99.99=26463] 
2023-05-01 11:47:33:973 210 sec: 15267478 operations; 64967 current ops/sec; est completion in 25 minutes [INSERT: Count=649681, Max=36831, Min=445, Avg=1537.19, 90=2008, 99=3675, 99.9=5707, 99.99=30383] 
2023-05-01 11:47:43:973 220 sec: 15949203 operations; 68172.5 current ops/sec; est completion in 25 minutes [INSERT: Count=681720, Max=10855, Min=432, Avg=1464.8, 90=1881, 99=2995, 99.9=5831, 99.99=7803] 
2023-05-01 11:47:53:973 230 sec: 16591697 operations; 64249.4 current ops/sec; est completion in 25 minutes [INSERT: Count=642483, Max=37023, Min=286, Avg=1554.43, 90=2061, 99=3797, 99.9=6039, 99.99=27567] 
2023-05-01 11:48:03:973 240 sec: 17249825 operations; 65812.8 current ops/sec; est completion in 25 minutes [INSERT: Count=658131, Max=31375, Min=411, Avg=1517.41, 90=1944, 99=3611, 99.9=5903, 99.99=25615] 
2023-05-01 11:48:13:973 250 sec: 17911011 operations; 66118.6 current ops/sec; est completion in 24 minutes [INSERT: Count=661175, Max=27119, Min=478, Avg=1510.4, 90=1934, 99=3515, 99.9=6095, 99.99=10751] 
2023-05-01 11:48:23:973 260 sec: 18531108 operations; 62009.7 current ops/sec; est completion in 24 minutes [INSERT: Count=620101, Max=38559, Min=465, Avg=1610.66, 90=2253, 99=4131, 99.9=6255, 99.99=30079] 
2023-05-01 11:48:33:973 270 sec: 19200557 operations; 66944.9 current ops/sec; est completion in 24 minutes [INSERT: Count=669470, Max=40959, Min=294, Avg=1491.72, 90=1906, 99=3257, 99.9=6123, 99.99=28319] 
2023-05-01 11:48:43:973 280 sec: 19832756 operations; 63219.9 current ops/sec; est completion in 24 minutes [INSERT: Count=632175, Max=63903, Min=473, Avg=1579.79, 90=2147, 99=3951, 99.9=5779, 99.99=48287] 
2023-05-01 11:48:53:973 290 sec: 20481158 operations; 64840.2 current ops/sec; est completion in 24 minutes [INSERT: Count=648418, Max=36831, Min=484, Avg=1540.24, 90=2010, 99=3807, 99.9=5835, 99.99=30255] 
2023-05-01 11:49:03:973 300 sec: 21134461 operations; 65330.3 current ops/sec; est completion in 24 minutes [INSERT: Count=653299, Max=46879, Min=451, Avg=1528.62, 90=1966, 99=3711, 99.9=6335, 99.99=28271] 
2023-05-01 11:49:13:973 310 sec: 21753676 operations; 61921.5 current ops/sec; est completion in 24 minutes [INSERT: Count=619197, Max=27231, Min=475, Avg=1612.92, 90=2325, 99=4151, 99.9=5663, 99.99=8463] 
2023-05-01 11:49:23:973 320 sec: 22418339 operations; 66466.3 current ops/sec; est completion in 24 minutes [INSERT: Count=664670, Max=40575, Min=416, Avg=1502.47, 90=1925, 99=3533, 99.9=6363, 99.99=27327] 
2023-05-01 11:49:33:973 330 sec: 23052882 operations; 63454.3 current ops/sec; est completion in 24 minutes [INSERT: Count=634549, Max=38591, Min=484, Avg=1573.92, 90=2127, 99=3951, 99.9=6063, 99.99=31407] 
2023-05-01 11:49:43:973 340 sec: 23690816 operations; 63793.4 current ops/sec; est completion in 24 minutes [INSERT: Count=637929, Max=9447, Min=460, Avg=1565.57, 90=2113, 99=4131, 99.9=5955, 99.99=7407] 
2023-05-01 11:49:53:973 350 sec: 24347332 operations; 65651.6 current ops/sec; est completion in 24 minutes [INSERT: Count=656511, Max=34399, Min=448, Avg=1521.11, 90=1972, 99=3649, 99.9=5679, 99.99=27071] 
2023-05-01 11:50:03:973 360 sec: 24968085 operations; 62075.3 current ops/sec; est completion in 24 minutes [INSERT: Count=620766, Max=38207, Min=463, Avg=1608.91, 90=2257, 99=4107, 99.9=6323, 99.99=32447] 
2023-05-01 11:50:13:973 370 sec: 25627879 operations; 65979.4 current ops/sec; est completion in 23 minutes [INSERT: Count=659807, Max=28159, Min=481, Avg=1513.54, 90=1953, 99=3885, 99.9=6063, 99.99=7967] 
2023-05-01 11:50:23:973 380 sec: 26262541 operations; 63466.2 current ops/sec; est completion in 23 minutes [INSERT: Count=634649, Max=36767, Min=458, Avg=1573.62, 90=2117, 99=3967, 99.9=6223, 99.99=27791] 
2023-05-01 11:50:33:973 390 sec: 26898525 operations; 63598.4 current ops/sec; est completion in 23 minutes [INSERT: Count=635978, Max=41151, Min=461, Avg=1570.32, 90=2097, 99=4115, 99.9=6255, 99.99=28735] 
2023-05-01 11:50:43:973 400 sec: 27560089 operations; 66156.4 current ops/sec; est completion in 23 minutes [INSERT: Count=661561, Max=8727, Min=440, Avg=1509.51, 90=1947, 99=3679, 99.9=5787, 99.99=7247] 
2023-05-01 11:50:53:973 410 sec: 28175404 operations; 61531.5 current ops/sec; est completion in 23 minutes [INSERT: Count=615317, Max=40383, Min=472, Avg=1623.16, 90=2311, 99=4171, 99.9=6123, 99.99=30415] 
2023-05-01 11:51:03:973 420 sec: 28829644 operations; 65424 current ops/sec; est completion in 23 minutes [INSERT: Count=654248, Max=36351, Min=441, Avg=1526.47, 90=1960, 99=3903, 99.9=6523, 99.99=29391] 
2023-05-01 11:51:13:973 430 sec: 29469200 operations; 63955.6 current ops/sec; est completion in 23 minutes [INSERT: Count=639543, Max=21551, Min=457, Avg=1561.51, 90=2075, 99=3899, 99.9=6283, 99.99=8671] 
2023-05-01 11:51:23:973 440 sec: 30090943 operations; 62174.3 current ops/sec; est completion in 23 minutes [INSERT: Count=621737, Max=38719, Min=460, Avg=1606.39, 90=2233, 99=4207, 99.9=6639, 99.99=31439] 
2023-05-01 11:51:33:973 450 sec: 30753438 operations; 66249.5 current ops/sec; est completion in 23 minutes [INSERT: Count=662499, Max=38815, Min=455, Avg=1507.39, 90=1927, 99=3601, 99.9=6043, 99.99=26559] 
2023-05-01 11:51:43:973 460 sec: 31369722 operations; 61628.4 current ops/sec; est completion in 22 minutes [INSERT: Count=616293, Max=9519, Min=478, Avg=1620.64, 90=2317, 99=4175, 99.9=5991, 99.99=7567] 
2023-05-01 11:51:53:973 470 sec: 32021125 operations; 65140.3 current ops/sec; est completion in 22 minutes [INSERT: Count=651403, Max=38943, Min=430, Avg=1533.14, 90=1971, 99=3919, 99.9=6427, 99.99=29983] 
2023-05-01 11:52:03:973 480 sec: 32664526 operations; 64340.1 current ops/sec; est completion in 22 minutes [INSERT: Count=643399, Max=41439, Min=473, Avg=1552.17, 90=2018, 99=3891, 99.9=6079, 99.99=29247] 
2023-05-01 11:52:13:973 490 sec: 33281285 operations; 61675.9 current ops/sec; est completion in 22 minutes [INSERT: Count=616761, Max=26287, Min=451, Avg=1619.43, 90=2315, 99=4167, 99.9=5899, 99.99=8179] 
2023-05-01 11:52:23:973 500 sec: 33946294 operations; 66500.9 current ops/sec; est completion in 22 minutes [INSERT: Count=665011, Max=33407, Min=474, Avg=1501.72, 90=1905, 99=3607, 99.9=6075, 99.99=26879] 
2023-05-01 11:52:33:973 510 sec: 34563115 operations; 61682.1 current ops/sec; est completion in 22 minutes [INSERT: Count=616807, Max=37631, Min=402, Avg=1619.24, 90=2275, 99=4119, 99.9=6059, 99.99=30671] 
2023-05-01 11:52:43:973 520 sec: 35204538 operations; 64142.3 current ops/sec; est completion in 22 minutes [INSERT: Count=641435, Max=13207, Min=454, Avg=1556.98, 90=2075, 99=4127, 99.9=6043, 99.99=7779] 
2023-05-01 11:52:53:973 530 sec: 35856634 operations; 65209.6 current ops/sec; est completion in 21 minutes [INSERT: Count=652115, Max=33375, Min=465, Avg=1531.48, 90=1957, 99=3697, 99.9=6119, 99.99=25423] 
2023-05-01 11:53:03:973 540 sec: 36460245 operations; 60361.1 current ops/sec; est completion in 21 minutes [INSERT: Count=603618, Max=48063, Min=458, Avg=1654.68, 90=2373, 99=4351, 99.9=6979, 99.99=39231] 
2023-05-01 11:53:13:973 550 sec: 37122152 operations; 66190.7 current ops/sec; est completion in 21 minutes [INSERT: Count=661887, Max=26879, Min=462, Avg=1508.73, 90=1923, 99=3749, 99.9=6031, 99.99=8879] 
2023-05-01 11:53:23:973 560 sec: 37750713 operations; 62856.1 current ops/sec; est completion in 21 minutes [INSERT: Count=628549, Max=40223, Min=477, Avg=1588.92, 90=2161, 99=4019, 99.9=6155, 99.99=27727] 
2023-05-01 11:53:33:973 570 sec: 38371929 operations; 62121.6 current ops/sec; est completion in 21 minutes [INSERT: Count=621220, Max=42879, Min=441, Avg=1607.73, 90=2223, 99=4367, 99.9=6275, 99.99=32799] 
2023-05-01 11:53:43:973 580 sec: 39030047 operations; 65811.8 current ops/sec; est completion in 21 minutes [INSERT: Count=658114, Max=9935, Min=459, Avg=1517.43, 90=1950, 99=3707, 99.9=6195, 99.99=8543] 
2023-05-01 11:53:53:973 590 sec: 39644611 operations; 61456.4 current ops/sec; est completion in 21 minutes [INSERT: Count=614565, Max=36863, Min=462, Avg=1625.15, 90=2319, 99=4111, 99.9=6119, 99.99=30367] 
2023-05-01 11:54:03:973 600 sec: 40290468 operations; 64585.7 current ops/sec; est completion in 21 minutes [INSERT: Count=645867, Max=36639, Min=466, Avg=1546.33, 90=1993, 99=4195, 99.9=6579, 99.99=28463] 
2023-05-01 11:54:13:973 610 sec: 40930826 operations; 64035.8 current ops/sec; est completion in 20 minutes [INSERT: Count=640335, Max=23023, Min=511, Avg=1559.61, 90=2077, 99=3903, 99.9=5883, 99.99=7967] 
2023-05-01 11:54:23:973 620 sec: 41545893 operations; 61506.7 current ops/sec; est completion in 20 minutes [INSERT: Count=615074, Max=36063, Min=474, Avg=1623.81, 90=2313, 99=4287, 99.9=6791, 99.99=31727] 
2023-05-01 11:54:33:973 630 sec: 42197409 operations; 65151.6 current ops/sec; est completion in 20 minutes [INSERT: Count=651522, Max=57439, Min=311, Avg=1532.85, 90=1967, 99=4001, 99.9=6503, 99.99=33375] 
2023-05-01 11:54:43:973 640 sec: 42812912 operations; 61550.3 current ops/sec; est completion in 20 minutes [INSERT: Count=615496, Max=34207, Min=445, Avg=1622.7, 90=2299, 99=4199, 99.9=5935, 99.99=8911] 
2023-05-01 11:54:53:973 650 sec: 43434436 operations; 62152.4 current ops/sec; est completion in 20 minutes [INSERT: Count=621544, Max=39167, Min=477, Avg=1606.88, 90=2211, 99=4515, 99.9=6767, 99.99=30831] 
2023-05-01 11:55:03:973 660 sec: 44076389 operations; 64195.3 current ops/sec; est completion in 20 minutes [INSERT: Count=641938, Max=38687, Min=442, Avg=1555.77, 90=2020, 99=3973, 99.9=6295, 99.99=29135] 
2023-05-01 11:55:13:973 670 sec: 44685492 operations; 60910.3 current ops/sec; est completion in 20 minutes [INSERT: Count=609098, Max=23663, Min=389, Avg=1639.75, 90=2379, 99=4283, 99.9=5895, 99.99=7691] 
2023-05-01 11:55:23:973 680 sec: 45321197 operations; 63570.5 current ops/sec; est completion in 19 minutes [INSERT: Count=635712, Max=68543, Min=414, Avg=1571.05, 90=2047, 99=4447, 99.9=6731, 99.99=41727] 
2023-05-01 11:55:33:973 690 sec: 45947209 operations; 62601.2 current ops/sec; est completion in 19 minutes [INSERT: Count=626009, Max=35711, Min=463, Avg=1595.38, 90=2183, 99=4065, 99.9=6551, 99.99=29391] 
2023-05-01 11:55:43:973 700 sec: 46564004 operations; 61679.5 current ops/sec; est completion in 19 minutes [INSERT: Count=616795, Max=10479, Min=423, Avg=1619.24, 90=2305, 99=4459, 99.9=6167, 99.99=7771] 
2023-05-01 11:55:53:973 710 sec: 47201654 operations; 63765 current ops/sec; est completion in 19 minutes [INSERT: Count=637658, Max=40255, Min=434, Avg=1566.27, 90=2044, 99=4247, 99.9=6219, 99.99=26239] 
2023-05-01 11:56:03:973 720 sec: 47815010 operations; 61335.6 current ops/sec; est completion in 19 minutes [INSERT: Count=613342, Max=43487, Min=460, Avg=1628.35, 90=2291, 99=4155, 99.9=6383, 99.99=33535] 
2023-05-01 11:56:13:973 730 sec: 48445305 operations; 63029.5 current ops/sec; est completion in 19 minutes [INSERT: Count=630321, Max=28863, Min=450, Avg=1584.61, 90=2145, 99=4455, 99.9=6079, 99.99=11551] 
2023-05-01 11:56:23:973 740 sec: 49072576 operations; 62727.1 current ops/sec; est completion in 19 minutes [INSERT: Count=627270, Max=39039, Min=340, Avg=1592.19, 90=2143, 99=4251, 99.9=6499, 99.99=28703] 
2023-05-01 11:56:33:973 750 sec: 49686082 operations; 61350.6 current ops/sec; est completion in 18 minutes [INSERT: Count=613492, Max=40639, Min=471, Avg=1627.94, 90=2311, 99=4403, 99.9=6443, 99.99=32575] 
2023-05-01 11:56:43:973 760 sec: 50310509 operations; 62442.7 current ops/sec; est completion in 18 minutes [INSERT: Count=624436, Max=15191, Min=457, Avg=1599.47, 90=2191, 99=4691, 99.9=6435, 99.99=8311] 
2023-05-01 11:56:53:973 770 sec: 50923778 operations; 61326.9 current ops/sec; est completion in 18 minutes [INSERT: Count=613254, Max=41471, Min=447, Avg=1628.59, 90=2305, 99=4311, 99.9=6279, 99.99=29935] 
2023-05-01 11:57:03:973 780 sec: 51545035 operations; 62125.7 current ops/sec; est completion in 18 minutes [INSERT: Count=621250, Max=41183, Min=455, Avg=1607.64, 90=2221, 99=4539, 99.9=6731, 99.99=29375] 
2023-05-01 11:57:13:973 790 sec: 52166108 operations; 62107.3 current ops/sec; est completion in 18 minutes [INSERT: Count=621083, Max=28303, Min=437, Avg=1608.05, 90=2267, 99=4587, 99.9=6423, 99.99=8727] 
2023-05-01 11:57:23:973 800 sec: 52774369 operations; 60826.1 current ops/sec; est completion in 18 minutes [INSERT: Count=608258, Max=37119, Min=415, Avg=1642.08, 90=2371, 99=4399, 99.9=6751, 99.99=29759] 
2023-05-01 11:57:33:973 810 sec: 53404799 operations; 63043 current ops/sec; est completion in 18 minutes [INSERT: Count=630426, Max=37151, Min=414, Avg=1584.21, 90=2157, 99=4507, 99.9=6679, 99.99=26863] 
2023-05-01 11:57:43:973 820 sec: 54019314 operations; 61451.5 current ops/sec; est completion in 17 minutes [INSERT: Count=614515, Max=24655, Min=444, Avg=1625.29, 90=2317, 99=4515, 99.9=6399, 99.99=9727] 
2023-05-01 11:57:53:973 830 sec: 54629620 operations; 61030.6 current ops/sec; est completion in 17 minutes [INSERT: Count=610310, Max=41567, Min=436, Avg=1636.53, 90=2337, 99=4491, 99.9=6515, 99.99=31135] 
2023-05-01 11:58:03:973 840 sec: 55253703 operations; 62408.3 current ops/sec; est completion in 17 minutes [INSERT: Count=624080, Max=50815, Min=456, Avg=1600.36, 90=2173, 99=4559, 99.9=6911, 99.99=34207] 
2023-05-01 11:58:13:973 850 sec: 55859910 operations; 60620.7 current ops/sec; est completion in 17 minutes [INSERT: Count=606219, Max=23631, Min=472, Avg=1647.55, 90=2427, 99=4443, 99.9=6035, 99.99=8231] 
2023-05-01 11:58:23:973 860 sec: 56478631 operations; 61872.1 current ops/sec; est completion in 17 minutes [INSERT: Count=618709, Max=44607, Min=445, Avg=1614.3, 90=2251, 99=4455, 99.9=6783, 99.99=34399] 
2023-05-01 11:58:33:973 870 sec: 57101046 operations; 62241.5 current ops/sec; est completion in 17 minutes [INSERT: Count=622430, Max=38463, Min=321, Avg=1604.61, 90=2219, 99=4387, 99.9=6203, 99.99=28639] 
2023-05-01 11:58:43:973 880 sec: 57702892 operations; 60184.6 current ops/sec; est completion in 17 minutes [INSERT: Count=601837, Max=11815, Min=432, Avg=1659.54, 90=2471, 99=4479, 99.9=6047, 99.99=7487] 
2023-05-01 11:58:53:973 890 sec: 58329295 operations; 62640.3 current ops/sec; est completion in 16 minutes [INSERT: Count=626414, Max=43583, Min=469, Avg=1594.42, 90=2171, 99=4307, 99.9=6655, 99.99=29183] 
2023-05-01 11:59:03:973 900 sec: 58943651 operations; 61435.6 current ops/sec; est completion in 16 minutes [INSERT: Count=614342, Max=43647, Min=432, Avg=1625.74, 90=2289, 99=4375, 99.9=7087, 99.99=32399] 
2023-05-01 11:59:13:973 910 sec: 59547438 operations; 60378.7 current ops/sec; est completion in 16 minutes [INSERT: Count=603787, Max=24607, Min=457, Avg=1654.23, 90=2445, 99=4531, 99.9=6363, 99.99=10711] 
2023-05-01 11:59:23:973 920 sec: 60169631 operations; 62219.3 current ops/sec; est completion in 16 minutes [INSERT: Count=622206, Max=61759, Min=450, Avg=1605.19, 90=2179, 99=4383, 99.9=6627, 99.99=58687] 
2023-05-01 11:59:33:973 930 sec: 60774964 operations; 60533.3 current ops/sec; est completion in 16 minutes [INSERT: Count=605323, Max=36639, Min=468, Avg=1650.09, 90=2417, 99=4447, 99.9=6227, 99.99=30767] 
2023-05-01 11:59:43:973 940 sec: 61384360 operations; 60939.6 current ops/sec; est completion in 16 minutes [INSERT: Count=609401, Max=15343, Min=439, Avg=1638.98, 90=2377, 99=4467, 99.9=6163, 99.99=9607] 
2023-05-01 11:59:53:973 950 sec: 62003338 operations; 61897.8 current ops/sec; est completion in 16 minutes [INSERT: Count=618968, Max=42239, Min=421, Avg=1613.66, 90=2291, 99=4483, 99.9=6439, 99.99=27279] 
2023-05-01 12:00:03:973 960 sec: 62597436 operations; 59409.8 current ops/sec; est completion in 15 minutes [INSERT: Count=594104, Max=44447, Min=483, Avg=1681.21, 90=2521, 99=4507, 99.9=6463, 99.99=33375] 
2023-05-01 12:00:13:973 970 sec: 63212394 operations; 61495.8 current ops/sec; est completion in 15 minutes [INSERT: Count=614948, Max=23327, Min=466, Avg=1624.24, 90=2287, 99=4479, 99.9=6147, 99.99=8335] 
2023-05-01 12:00:23:973 980 sec: 63823142 operations; 61074.8 current ops/sec; est completion in 15 minutes [INSERT: Count=610754, Max=45631, Min=413, Avg=1635.36, 90=2339, 99=4419, 99.9=6519, 99.99=35039] 
2023-05-01 12:00:33:973 990 sec: 64418291 operations; 59514.9 current ops/sec; est completion in 15 minutes [INSERT: Count=595158, Max=39743, Min=423, Avg=1678.37, 90=2509, 99=4531, 99.9=6519, 99.99=32447] 
2023-05-01 12:00:43:973 1000 sec: 65037391 operations; 61910 current ops/sec; est completion in 15 minutes [INSERT: Count=619103, Max=9055, Min=460, Avg=1613.31, 90=2227, 99=4511, 99.9=6267, 99.99=7607] 
2023-05-01 12:00:53:973 1010 sec: 65639466 operations; 60207.5 current ops/sec; est completion in 15 minutes [INSERT: Count=602066, Max=40287, Min=445, Avg=1658.97, 90=2419, 99=4479, 99.9=6575, 99.99=30015] 
2023-05-01 12:01:03:973 1020 sec: 66237447 operations; 59798.1 current ops/sec; est completion in 15 minutes [INSERT: Count=597972, Max=51327, Min=453, Avg=1670.34, 90=2437, 99=4547, 99.9=6771, 99.99=34623] 
2023-05-01 12:01:13:975 1030 sec: 66855055 operations; 61748.45 current ops/sec; est completion in 14 minutes [INSERT: Count=617656, Max=21343, Min=334, Avg=1617.46, 90=2289, 99=4499, 99.9=6375, 99.99=8359] 
2023-05-01 12:01:23:973 1040 sec: 67444510 operations; 58957.29 current ops/sec; est completion in 14 minutes [INSERT: Count=589411, Max=78719, Min=457, Avg=1694.27, 90=2529, 99=4627, 99.9=6723, 99.99=56543] 
2023-05-01 12:01:33:973 1050 sec: 68046467 operations; 60195.7 current ops/sec; est completion in 14 minutes [INSERT: Count=601956, Max=45471, Min=434, Avg=1659.31, 90=2409, 99=4687, 99.9=6975, 99.99=31679] 
2023-05-01 12:01:43:973 1060 sec: 68658745 operations; 61227.8 current ops/sec; est completion in 14 minutes [INSERT: Count=612276, Max=34719, Min=490, Avg=1631.29, 90=2339, 99=4491, 99.9=6175, 99.99=9095] 
2023-05-01 12:01:53:973 1070 sec: 69252224 operations; 59347.9 current ops/sec; est completion in 14 minutes [INSERT: Count=593494, Max=38527, Min=408, Avg=1683, 90=2517, 99=4615, 99.9=6723, 99.99=31087] 
2023-05-01 12:02:03:973 1080 sec: 69853159 operations; 60093.5 current ops/sec; est completion in 14 minutes [INSERT: Count=600918, Max=52831, Min=463, Avg=1662.14, 90=2417, 99=4643, 99.9=6711, 99.99=36479] 
2023-05-01 12:02:13:973 1090 sec: 70462799 operations; 60964 current ops/sec; est completion in 14 minutes [INSERT: Count=609648, Max=21695, Min=460, Avg=1638.39, 90=2383, 99=4487, 99.9=6335, 99.99=8415] 
2023-05-01 12:02:23:973 1100 sec: 71061551 operations; 59875.2 current ops/sec; est completion in 13 minutes [INSERT: Count=598751, Max=38975, Min=476, Avg=1668.19, 90=2489, 99=4595, 99.9=6779, 99.99=29999] 
2023-05-01 12:02:33:973 1110 sec: 71665095 operations; 60354.4 current ops/sec; est completion in 13 minutes [INSERT: Count=603555, Max=43263, Min=309, Avg=1654.88, 90=2431, 99=4651, 99.9=6651, 99.99=29615] 
2023-05-01 12:02:43:973 1120 sec: 72272406 operations; 60731.1 current ops/sec; est completion in 13 minutes [INSERT: Count=607304, Max=18015, Min=450, Avg=1644.62, 90=2405, 99=4467, 99.9=6263, 99.99=8111] 
2023-05-01 12:02:53:973 1130 sec: 72869908 operations; 59750.2 current ops/sec; est completion in 13 minutes [INSERT: Count=597497, Max=40703, Min=457, Avg=1671.73, 90=2493, 99=4647, 99.9=6403, 99.99=32575] 
2023-05-01 12:03:03:973 1140 sec: 73472369 operations; 60246.1 current ops/sec; est completion in 13 minutes [INSERT: Count=602467, Max=43871, Min=464, Avg=1657.92, 90=2445, 99=4599, 99.9=6555, 99.99=30863] 
2023-05-01 12:03:13:973 1150 sec: 74084974 operations; 61260.5 current ops/sec; est completion in 13 minutes [INSERT: Count=612599, Max=27631, Min=450, Avg=1630.36, 90=2353, 99=4443, 99.9=6167, 99.99=8551] 
2023-05-01 12:03:23:973 1160 sec: 74681143 operations; 59616.9 current ops/sec; est completion in 13 minutes [INSERT: Count=596166, Max=45311, Min=483, Avg=1675.53, 90=2475, 99=4675, 99.9=7635, 99.99=34623] 
2023-05-01 12:03:33:973 1170 sec: 75284757 operations; 60361.4 current ops/sec; est completion in 12 minutes [INSERT: Count=603616, Max=41887, Min=450, Avg=1654.72, 90=2413, 99=4499, 99.9=6631, 99.99=28287] 
2023-05-01 12:03:43:973 1180 sec: 75897812 operations; 61305.5 current ops/sec; est completion in 12 minutes [INSERT: Count=613057, Max=10983, Min=435, Avg=1629.24, 90=2335, 99=4439, 99.9=6315, 99.99=8223] 
2023-05-01 12:03:53:973 1190 sec: 76495693 operations; 59788.1 current ops/sec; est completion in 12 minutes [INSERT: Count=597876, Max=38335, Min=426, Avg=1670.62, 90=2489, 99=4687, 99.9=6567, 99.99=30703] 
2023-05-01 12:04:03:973 1200 sec: 77101856 operations; 60616.3 current ops/sec; est completion in 12 minutes [INSERT: Count=606169, Max=41727, Min=452, Avg=1647.79, 90=2415, 99=4447, 99.9=6615, 99.99=33343] 
2023-05-01 12:04:13:973 1210 sec: 77716836 operations; 61498 current ops/sec; est completion in 12 minutes [INSERT: Count=614978, Max=25167, Min=477, Avg=1624.16, 90=2311, 99=4435, 99.9=6283, 99.99=10215] 
2023-05-01 12:04:23:973 1220 sec: 78314978 operations; 59814.2 current ops/sec; est completion in 12 minutes [INSERT: Count=598146, Max=41631, Min=470, Avg=1669.95, 90=2491, 99=4603, 99.9=6651, 99.99=31263] 
2023-05-01 12:04:33:973 1230 sec: 78924726 operations; 60974.8 current ops/sec; est completion in 11 minutes [INSERT: Count=609753, Max=37855, Min=452, Avg=1638.02, 90=2383, 99=4455, 99.9=6651, 99.99=30047] 
2023-05-01 12:04:43:973 1240 sec: 79539534 operations; 61480.8 current ops/sec; est completion in 11 minutes [INSERT: Count=614801, Max=11535, Min=454, Avg=1624.6, 90=2327, 99=4395, 99.9=6075, 99.99=7907] 
2023-05-01 12:04:53:973 1250 sec: 80134725 operations; 59519.1 current ops/sec; est completion in 11 minutes [INSERT: Count=595188, Max=42367, Min=473, Avg=1678.25, 90=2561, 99=4623, 99.9=6603, 99.99=31503] 
2023-05-01 12:05:03:973 1260 sec: 80746471 operations; 61174.6 current ops/sec; est completion in 11 minutes [INSERT: Count=611743, Max=41759, Min=440, Avg=1632.72, 90=2303, 99=4435, 99.9=6639, 99.99=31487] 
2023-05-01 12:05:13:973 1270 sec: 81356254 operations; 60978.3 current ops/sec; est completion in 11 minutes [INSERT: Count=609786, Max=21887, Min=482, Avg=1637.99, 90=2367, 99=4455, 99.9=6295, 99.99=8975] 
2023-05-01 12:05:23:973 1280 sec: 81949768 operations; 59351.4 current ops/sec; est completion in 11 minutes [INSERT: Count=593519, Max=37855, Min=333, Avg=1682.95, 90=2575, 99=4691, 99.9=6611, 99.99=29535] 
2023-05-01 12:05:33:973 1290 sec: 82562882 operations; 61311.4 current ops/sec; est completion in 11 minutes [INSERT: Count=613123, Max=42719, Min=477, Avg=1629.13, 90=2289, 99=4443, 99.9=6547, 99.99=30159] 
2023-05-01 12:05:43:973 1300 sec: 83169064 operations; 60618.2 current ops/sec; est completion in 10 minutes [INSERT: Count=606166, Max=24335, Min=453, Avg=1647.63, 90=2421, 99=4439, 99.9=6123, 99.99=9719] 
2023-05-01 12:05:53:973 1310 sec: 83765919 operations; 59685.5 current ops/sec; est completion in 10 minutes [INSERT: Count=596854, Max=40191, Min=463, Avg=1673.52, 90=2535, 99=4659, 99.9=6843, 99.99=28575] 
2023-05-01 12:06:03:973 1320 sec: 84380765 operations; 61484.6 current ops/sec; est completion in 10 minutes [INSERT: Count=614850, Max=40671, Min=455, Avg=1624.54, 90=2259, 99=4439, 99.9=6471, 99.99=32799] 
2023-05-01 12:06:13:973 1330 sec: 84983596 operations; 60283.1 current ops/sec; est completion in 10 minutes [INSERT: Count=602832, Max=25151, Min=474, Avg=1656.85, 90=2473, 99=4475, 99.9=6295, 99.99=8775] 
2023-05-01 12:06:23:973 1340 sec: 85580471 operations; 59687.5 current ops/sec; est completion in 10 minutes [INSERT: Count=596885, Max=42591, Min=471, Avg=1673.47, 90=2513, 99=4671, 99.9=6683, 99.99=30655] 
2023-05-01 12:06:33:973 1350 sec: 86194518 operations; 61404.7 current ops/sec; est completion in 10 minutes [INSERT: Count=614034, Max=41823, Min=458, Avg=1626.63, 90=2285, 99=4463, 99.9=6539, 99.99=29215] 
2023-05-01 12:06:43:973 1360 sec: 86796231 operations; 60171.3 current ops/sec; est completion in 9 minutes [INSERT: Count=601719, Max=8927, Min=481, Avg=1659.97, 90=2503, 99=4459, 99.9=5967, 99.99=7351] 
2023-05-01 12:06:53:973 1370 sec: 87398705 operations; 60247.4 current ops/sec; est completion in 9 minutes [INSERT: Count=602463, Max=43455, Min=464, Avg=1657.89, 90=2445, 99=4655, 99.9=6519, 99.99=30527] 
2023-05-01 12:07:03:973 1380 sec: 88007625 operations; 60892 current ops/sec; est completion in 9 minutes [INSERT: Count=608930, Max=44191, Min=328, Avg=1640.21, 90=2337, 99=4431, 99.9=6707, 99.99=33311] 
2023-05-01 12:07:13:973 1390 sec: 88606395 operations; 59877 current ops/sec; est completion in 9 minutes [INSERT: Count=598780, Max=23919, Min=455, Avg=1668.12, 90=2509, 99=4611, 99.9=6247, 99.99=8919] 
2023-05-01 12:07:23:973 1400 sec: 89210822 operations; 60442.7 current ops/sec; est completion in 9 minutes [INSERT: Count=604423, Max=41951, Min=446, Avg=1652.59, 90=2431, 99=4595, 99.9=6495, 99.99=31231] 
2023-05-01 12:07:33:973 1410 sec: 89822699 operations; 61187.7 current ops/sec; est completion in 9 minutes [INSERT: Count=611870, Max=39615, Min=461, Avg=1632.4, 90=2325, 99=4343, 99.9=6287, 99.99=30975] 
2023-05-01 12:07:43:973 1420 sec: 90426965 operations; 60426.6 current ops/sec; est completion in 9 minutes [INSERT: Count=604273, Max=10439, Min=419, Avg=1652.97, 90=2449, 99=4515, 99.9=6243, 99.99=8223] 
2023-05-01 12:07:53:973 1430 sec: 91030270 operations; 60330.5 current ops/sec; est completion in 8 minutes [INSERT: Count=603299, Max=44447, Min=388, Avg=1655.53, 90=2433, 99=4675, 99.9=6871, 99.99=28479] 
2023-05-01 12:08:03:973 1440 sec: 91640931 operations; 61066.1 current ops/sec; est completion in 8 minutes [INSERT: Count=610654, Max=44959, Min=447, Avg=1635.64, 90=2337, 99=4343, 99.9=6583, 99.99=33119] 
2023-05-01 12:08:13:973 1450 sec: 92246753 operations; 60582.2 current ops/sec; est completion in 8 minutes [INSERT: Count=605832, Max=28223, Min=434, Avg=1648.68, 90=2431, 99=4575, 99.9=6451, 99.99=10247] 
2023-05-01 12:08:23:973 1460 sec: 92847853 operations; 60110 current ops/sec; est completion in 8 minutes [INSERT: Count=601098, Max=50495, Min=413, Avg=1661.7, 90=2433, 99=4599, 99.9=6791, 99.99=33119] 
2023-05-01 12:08:33:973 1470 sec: 93460849 operations; 61299.6 current ops/sec; est completion in 8 minutes [INSERT: Count=612989, Max=41311, Min=462, Avg=1629.42, 90=2315, 99=4411, 99.9=6575, 99.99=29791] 
2023-05-01 12:08:43:973 1480 sec: 94068752 operations; 60790.3 current ops/sec; est completion in 8 minutes [INSERT: Count=607915, Max=11951, Min=432, Avg=1642.99, 90=2393, 99=4531, 99.9=6191, 99.99=8415] 
2023-05-01 12:08:53:973 1490 sec: 94672819 operations; 60406.7 current ops/sec; est completion in 7 minutes [INSERT: Count=604063, Max=41951, Min=440, Avg=1653.54, 90=2421, 99=4543, 99.9=6527, 99.99=29711] 
2023-05-01 12:09:03:973 1500 sec: 95286939 operations; 61412 current ops/sec; est completion in 7 minutes [INSERT: Count=614119, Max=42463, Min=452, Avg=1626.41, 90=2297, 99=4515, 99.9=6739, 99.99=29727] 
2023-05-01 12:09:13:973 1510 sec: 95890510 operations; 60357.1 current ops/sec; est completion in 7 minutes [INSERT: Count=603564, Max=30271, Min=477, Avg=1654.88, 90=2457, 99=4559, 99.9=6395, 99.99=9895] 
2023-05-01 12:09:23:973 1520 sec: 96495207 operations; 60469.7 current ops/sec; est completion in 7 minutes [INSERT: Count=604700, Max=42175, Min=479, Avg=1651.77, 90=2421, 99=4607, 99.9=6607, 99.99=31791] 
2023-05-01 12:09:33:973 1530 sec: 97097892 operations; 60268.5 current ops/sec; est completion in 7 minutes [INSERT: Count=602689, Max=37599, Min=467, Avg=1657.28, 90=2407, 99=4763, 99.9=7011, 99.99=28783] 
2023-05-01 12:09:43:973 1540 sec: 97698742 operations; 60085 current ops/sec; est completion in 7 minutes [INSERT: Count=600847, Max=12063, Min=477, Avg=1662.32, 90=2467, 99=4487, 99.9=6363, 99.99=8663] 
2023-05-01 12:09:53:973 1550 sec: 98298826 operations; 60008.4 current ops/sec; est completion in 7 minutes [INSERT: Count=600077, Max=40767, Min=472, Avg=1664.53, 90=2427, 99=4711, 99.9=6775, 99.99=28319] 
2023-05-01 12:10:03:973 1560 sec: 98896056 operations; 59723 current ops/sec; est completion in 6 minutes [INSERT: Count=597241, Max=51743, Min=464, Avg=1672.48, 90=2475, 99=4799, 99.9=7011, 99.99=35999] 
2023-05-01 12:10:13:973 1570 sec: 99499654 operations; 60359.8 current ops/sec; est completion in 6 minutes [INSERT: Count=603590, Max=21487, Min=485, Avg=1654.78, 90=2411, 99=4535, 99.9=6383, 99.99=11591] 
2023-05-01 12:10:23:973 1580 sec: 100104863 operations; 60520.9 current ops/sec; est completion in 6 minutes [INSERT: Count=605212, Max=43839, Min=485, Avg=1650.39, 90=2399, 99=4671, 99.9=6739, 99.99=26863] 
2023-05-01 12:10:33:973 1590 sec: 100700818 operations; 59595.5 current ops/sec; est completion in 6 minutes [INSERT: Count=595967, Max=41343, Min=415, Avg=1676.02, 90=2547, 99=4819, 99.9=6907, 99.99=28879] 
2023-05-01 12:10:43:973 1600 sec: 101311463 operations; 61064.5 current ops/sec; est completion in 6 minutes [INSERT: Count=610632, Max=12543, Min=448, Avg=1635.63, 90=2349, 99=4471, 99.9=6123, 99.99=8919] 
2023-05-01 12:10:53:973 1610 sec: 101910304 operations; 59884.1 current ops/sec; est completion in 6 minutes [INSERT: Count=598839, Max=45407, Min=460, Avg=1668, 90=2485, 99=4799, 99.9=7331, 99.99=28143] 
2023-05-01 12:11:03:973 1620 sec: 102503884 operations; 59358 current ops/sec; est completion in 5 minutes [INSERT: Count=593583, Max=47135, Min=441, Avg=1682.75, 90=2573, 99=4903, 99.9=7019, 99.99=35551] 
2023-05-01 12:11:13:973 1630 sec: 103118010 operations; 61412.6 current ops/sec; est completion in 5 minutes [INSERT: Count=614125, Max=25871, Min=338, Avg=1626.32, 90=2329, 99=4503, 99.9=6187, 99.99=8647] 
2023-05-01 12:11:23:973 1640 sec: 103712923 operations; 59491.3 current ops/sec; est completion in 5 minutes [INSERT: Count=594913, Max=40543, Min=462, Avg=1679.02, 90=2539, 99=4747, 99.9=7059, 99.99=31007] 
2023-05-01 12:11:33:973 1650 sec: 104306487 operations; 59356.4 current ops/sec; est completion in 5 minutes [INSERT: Count=593560, Max=40287, Min=344, Avg=1682.84, 90=2569, 99=4823, 99.9=6759, 99.99=30655] 
2023-05-01 12:11:43:973 1660 sec: 104913401 operations; 60691.4 current ops/sec; est completion in 5 minutes [INSERT: Count=606916, Max=16655, Min=475, Avg=1645.73, 90=2405, 99=4519, 99.9=6099, 99.99=8095] 
2023-05-01 12:11:53:973 1670 sec: 105503045 operations; 58964.4 current ops/sec; est completion in 5 minutes [INSERT: Count=589644, Max=42303, Min=326, Avg=1693.97, 90=2603, 99=4743, 99.9=6987, 99.99=31951] 
2023-05-01 12:12:03:973 1680 sec: 106091858 operations; 58881.3 current ops/sec; est completion in 5 minutes [INSERT: Count=588818, Max=52255, Min=469, Avg=1696.43, 90=2571, 99=4803, 99.9=7115, 99.99=39359] 
2023-05-01 12:12:13:973 1690 sec: 106693573 operations; 60171.5 current ops/sec; est completion in 4 minutes [INSERT: Count=601711, Max=22687, Min=425, Avg=1659.95, 90=2433, 99=4455, 99.9=6087, 99.99=8199] 
2023-05-01 12:12:23:973 1700 sec: 107279614 operations; 58604.1 current ops/sec; est completion in 4 minutes [INSERT: Count=586064, Max=40991, Min=492, Avg=1704.03, 90=2623, 99=4723, 99.9=6823, 99.99=32319] 
2023-05-01 12:12:33:973 1710 sec: 107868434 operations; 58882 current ops/sec; est completion in 4 minutes [INSERT: Count=588802, Max=45439, Min=298, Avg=1696.76, 90=2551, 99=4739, 99.9=6611, 99.99=34207] 
2023-05-01 12:12:43:973 1720 sec: 108467443 operations; 59900.9 current ops/sec; est completion in 4 minutes [INSERT: Count=599013, Max=9791, Min=443, Avg=1667.5, 90=2457, 99=4439, 99.9=6471, 99.99=8039] 
2023-05-01 12:12:53:973 1730 sec: 109052072 operations; 58462.9 current ops/sec; est completion in 4 minutes [INSERT: Count=584620, Max=45855, Min=468, Avg=1708.5, 90=2617, 99=4715, 99.9=6779, 99.99=34367] 
2023-05-01 12:13:03:973 1740 sec: 109633462 operations; 58139 current ops/sec; est completion in 4 minutes [INSERT: Count=581387, Max=48863, Min=414, Avg=1718.07, 90=2619, 99=4895, 99.9=7303, 99.99=36095] 
2023-05-01 12:13:13:973 1750 sec: 110230543 operations; 59708.1 current ops/sec; est completion in 3 minutes [INSERT: Count=597081, Max=38271, Min=459, Avg=1672.88, 90=2505, 99=4575, 99.9=6347, 99.99=11575] 
2023-05-01 12:13:23:973 1760 sec: 110812554 operations; 58201.1 current ops/sec; est completion in 3 minutes [INSERT: Count=582016, Max=67903, Min=456, Avg=1716.25, 90=2633, 99=4763, 99.9=7343, 99.99=45855] 
2023-05-01 12:13:33:973 1770 sec: 111392968 operations; 58041.4 current ops/sec; est completion in 3 minutes [INSERT: Count=580412, Max=54975, Min=406, Avg=1721, 90=2663, 99=4899, 99.9=7103, 99.99=35647] 
2023-05-01 12:13:43:973 1780 sec: 111992360 operations; 59939.2 current ops/sec; est completion in 3 minutes [INSERT: Count=599393, Max=9775, Min=484, Avg=1666.41, 90=2471, 99=4543, 99.9=6391, 99.99=8279] 
2023-05-01 12:13:53:973 1790 sec: 112578871 operations; 58651.1 current ops/sec; est completion in 3 minutes [INSERT: Count=586511, Max=45087, Min=466, Avg=1703.07, 90=2601, 99=4727, 99.9=6551, 99.99=35551] 
2023-05-01 12:14:03:973 1800 sec: 113154954 operations; 57608.3 current ops/sec; est completion in 3 minutes [INSERT: Count=576080, Max=45599, Min=447, Avg=1733.87, 90=2709, 99=4979, 99.9=7703, 99.99=33503] 
2023-05-01 12:14:13:973 1810 sec: 113755767 operations; 60081.3 current ops/sec; est completion in 2 minutes [INSERT: Count=600817, Max=28271, Min=482, Avg=1662.52, 90=2431, 99=4619, 99.9=6331, 99.99=8559] 
2023-05-01 12:14:23:973 1820 sec: 114340481 operations; 58471.4 current ops/sec; est completion in 2 minutes [INSERT: Count=584719, Max=46047, Min=429, Avg=1708.31, 90=2585, 99=4731, 99.9=7971, 99.99=42847] 
2023-05-01 12:14:33:973 1830 sec: 114920086 operations; 57960.5 current ops/sec; est completion in 2 minutes [INSERT: Count=579606, Max=45055, Min=470, Avg=1723.39, 90=2711, 99=4819, 99.9=6755, 99.99=32591] 
2023-05-01 12:14:43:973 1840 sec: 115510022 operations; 58993.6 current ops/sec; est completion in 2 minutes [INSERT: Count=589930, Max=15127, Min=416, Avg=1693.1, 90=2575, 99=4939, 99.9=6791, 99.99=9463] 
2023-05-01 12:14:53:973 1850 sec: 116096952 operations; 58693 current ops/sec; est completion in 2 minutes [INSERT: Count=586936, Max=40191, Min=471, Avg=1701.82, 90=2615, 99=4747, 99.9=6703, 99.99=32735] 
2023-05-01 12:15:03:973 1860 sec: 116678187 operations; 58123.5 current ops/sec; est completion in 2 minutes [INSERT: Count=581226, Max=41823, Min=443, Avg=1718.56, 90=2679, 99=4807, 99.9=6835, 99.99=35935] 
2023-05-01 12:15:13:973 1870 sec: 117264949 operations; 58676.2 current ops/sec; est completion in 2 minutes [INSERT: Count=586770, Max=32271, Min=468, Avg=1702.16, 90=2615, 99=4983, 99.9=6919, 99.99=14415] 
2023-05-01 12:15:23:973 1880 sec: 117850630 operations; 58568.1 current ops/sec; est completion in 1 minute [INSERT: Count=585672, Max=42431, Min=460, Avg=1705.53, 90=2619, 99=4883, 99.9=6875, 99.99=32319] 
2023-05-01 12:15:33:973 1890 sec: 118438572 operations; 58794.2 current ops/sec; est completion in 1 minute [INSERT: Count=587939, Max=45695, Min=434, Avg=1698.86, 90=2621, 99=4835, 99.9=6847, 99.99=31503] 
2023-05-01 12:15:43:973 1900 sec: 119026710 operations; 58813.8 current ops/sec; est completion in 1 minute [INSERT: Count=588149, Max=15839, Min=464, Avg=1698.42, 90=2615, 99=4887, 99.9=6719, 99.99=10551] 
2023-05-01 12:15:53:973 1910 sec: 119612331 operations; 58562.1 current ops/sec; est completion in 1 minute [INSERT: Count=585613, Max=40479, Min=454, Avg=1705.54, 90=2633, 99=4835, 99.9=6835, 99.99=33023] 
2023-05-01 12:16:03:973 1920 sec: 120193465 operations; 58113.4 current ops/sec; est completion in 1 minute [INSERT: Count=581143, Max=43711, Min=458, Avg=1718.86, 90=2711, 99=4943, 99.9=7183, 99.99=35295] 
2023-05-01 12:16:13:973 1930 sec: 120786905 operations; 59344 current ops/sec; est completion in 1 minute [INSERT: Count=593430, Max=22479, Min=413, Avg=1683.11, 90=2563, 99=4735, 99.9=6423, 99.99=10047] 
2023-05-01 12:16:23:973 1940 sec: 121367850 operations; 58094.5 current ops/sec; est completion in 59 seconds [INSERT: Count=580943, Max=42879, Min=429, Avg=1719.34, 90=2665, 99=4911, 99.9=6955, 99.99=33855] 
2023-05-01 12:16:33:973 1950 sec: 121949201 operations; 58135.1 current ops/sec; est completion in 49 seconds [INSERT: Count=581354, Max=41471, Min=398, Avg=1718.24, 90=2739, 99=4943, 99.9=7011, 99.99=33279] 
2023-05-01 12:16:43:973 1960 sec: 122545755 operations; 59655.4 current ops/sec; est completion in 40 seconds [INSERT: Count=596558, Max=14527, Min=447, Avg=1674.31, 90=2529, 99=4663, 99.9=6363, 99.99=8687] 
2023-05-01 12:16:53:973 1970 sec: 123129167 operations; 58341.2 current ops/sec; est completion in 30 seconds [INSERT: Count=583408, Max=41279, Min=443, Avg=1712.09, 90=2667, 99=4799, 99.9=6823, 99.99=32559] 
2023-05-01 12:17:03:973 1980 sec: 123708189 operations; 57902.2 current ops/sec; est completion in 21 seconds [INSERT: Count=579031, Max=44735, Min=484, Avg=1725, 90=2773, 99=4951, 99.9=7115, 99.99=33791] 
2023-05-01 12:17:13:973 1990 sec: 124300428 operations; 59223.9 current ops/sec; est completion in 12 seconds [INSERT: Count=592231, Max=22511, Min=459, Avg=1686.58, 90=2549, 99=4743, 99.9=6675, 99.99=10007] 
2023-05-01 12:17:23:973 2000 sec: 124885906 operations; 58547.8 current ops/sec; est completion in 2 second [INSERT: Count=585481, Max=41695, Min=491, Avg=1705.92, 90=2641, 99=4787, 99.9=6795, 99.99=31135] 
2023-05-01 12:17:29:070 2005 sec: 125000000 operations; 22384.54 current ops/sec; [CLEANUP: Count=100, Max=2215935, Min=1, Avg=22150.58, 90=2, 99=14, 99.9=2215935, 99.99=2215935] [INSERT: Count=114086, Max=10647, Min=447, Avg=1631.16, 90=2425, 99=4663, 99.9=6191, 99.99=8503] 
[OVERALL], RunTime(ms), 2005097
[OVERALL], Throughput(ops/sec), 62341.12364638718
[TOTAL_GCS_PS_Scavenge], Count, 6627
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 20820
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0383537554542248
[TOTAL_GCS_PS_MarkSweep], Count, 3
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 106
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.005286527285213633
[TOTAL_GCs], Count, 6630
[TOTAL_GC_TIME], Time(ms), 20926
[TOTAL_GC_TIME_%], Time(%), 1.0436402827394384
[CLEANUP], Operations, 100
[CLEANUP], AverageLatency(us), 22150.58
[CLEANUP], MinLatency(us), 1
[CLEANUP], MaxLatency(us), 2215935
[CLEANUP], 95thPercentileLatency(us), 3
[CLEANUP], 99thPercentileLatency(us), 14
[INSERT], Operations, 125000000
[INSERT], AverageLatency(us), 1598.980184384
[INSERT], MinLatency(us), 284
[INSERT], MaxLatency(us), 204543
[INSERT], 95thPercentileLatency(us), 2925
[INSERT], 99thPercentileLatency(us), 4435
[INSERT], Return=OK, 125000000
