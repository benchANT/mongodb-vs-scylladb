bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=100.21.117.95,54.70.120.72,52.12.131.139 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=MGnf3tPLo10ESUu -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 100 -p recordcount=250000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=125000000 -p insertcount=125000000
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=100.21.117.95,54.70.120.72,52.12.131.139 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=MGnf3tPLo10ESUu -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 100 -p recordcount=250000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=125000000 -p insertcount=125000000 -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=100.21.117.95,54.70.120.72,52.12.131.139 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=MGnf3tPLo10ESUu -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 100 -p recordcount=250000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -p insertstart=125000000 -p insertcount=125000000 -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
 (might take a few minutes for large data sets)
Starting test.
[Thread-8] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
[Thread-8] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
2023-05-01 11:44:14:871 0 sec: 0 operations; est completion in 0 second 
[Thread-8] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-8] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-8] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_2' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /100.21.117.95:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /52.12.131.139:9042 added
[Thread-8] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.70.120.72:9042 added
[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 93930dd5-7692-4b9e-8db9-5c21bc61b4c3

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /52.12.131.139; Rack: us-west-2c

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /100.21.117.95; Rack: us-west-2a

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_2; Host: /54.70.120.72; Rack: us-west-2b

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-8] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-05-01 11:44:24:853 10 sec: 858379 operations; 85837.9 current ops/sec; est completion in 24 minutes [INSERT: Count=858476, Max=51519, Min=231, Avg=1079.6, 90=1479, 99=3281, 99.9=14391, 99.99=39071] 
2023-05-01 11:44:34:853 20 sec: 1678400 operations; 82002.1 current ops/sec; est completion in 24 minutes [INSERT: Count=819974, Max=26831, Min=231, Avg=1216.95, 90=1780, 99=2425, 99.9=5555, 99.99=20751] 
2023-05-01 11:44:44:853 30 sec: 2462757 operations; 78435.7 current ops/sec; est completion in 24 minutes [INSERT: Count=784343, Max=32991, Min=223, Avg=1272.58, 90=1864, 99=2763, 99.9=6259, 99.99=21663] 
2023-05-01 11:44:54:853 40 sec: 3217232 operations; 75447.5 current ops/sec; est completion in 25 minutes [INSERT: Count=754459, Max=9775, Min=221, Avg=1322.96, 90=1830, 99=2493, 99.9=6247, 99.99=7687] 
2023-05-01 11:45:04:853 50 sec: 3904450 operations; 68721.8 current ops/sec; est completion in 25 minutes [INSERT: Count=687265, Max=39583, Min=225, Avg=1452.78, 90=1906, 99=2791, 99.9=6947, 99.99=27455] 
2023-05-01 11:45:14:853 60 sec: 4608033 operations; 70358.3 current ops/sec; est completion in 26 minutes [INSERT: Count=703535, Max=29743, Min=229, Avg=1419, 90=1884, 99=2623, 99.9=6635, 99.99=25391] 
2023-05-01 11:45:24:853 70 sec: 5309782 operations; 70174.9 current ops/sec; est completion in 26 minutes [INSERT: Count=701757, Max=49791, Min=226, Avg=1422.61, 90=1881, 99=2667, 99.9=6811, 99.99=15063] 
2023-05-01 11:45:34:853 80 sec: 6001210 operations; 69142.8 current ops/sec; est completion in 26 minutes [INSERT: Count=691424, Max=50303, Min=211, Avg=1443.95, 90=2275, 99=5131, 99.9=12671, 99.99=33983] 
2023-05-01 11:45:44:853 90 sec: 6554341 operations; 55313.1 current ops/sec; est completion in 27 minutes [INSERT: Count=553127, Max=205567, Min=238, Avg=1805.61, 90=2005, 99=8583, 99.9=60351, 99.99=165119] 
2023-05-01 11:45:54:853 100 sec: 7190316 operations; 63597.5 current ops/sec; est completion in 27 minutes [INSERT: Count=635981, Max=181631, Min=230, Avg=1570.06, 90=1911, 99=4927, 99.9=28303, 99.99=127871] 
2023-05-01 11:46:04:853 110 sec: 7886362 operations; 69604.6 current ops/sec; est completion in 27 minutes [INSERT: Count=696036, Max=32095, Min=230, Avg=1434.34, 90=1874, 99=2429, 99.9=6527, 99.99=25423] 
2023-05-01 11:46:14:853 120 sec: 8580613 operations; 69425.1 current ops/sec; est completion in 27 minutes [INSERT: Count=694264, Max=32527, Min=230, Avg=1438.03, 90=1877, 99=2527, 99.9=6487, 99.99=23951] 
2023-05-01 11:46:24:853 130 sec: 9294815 operations; 71420.2 current ops/sec; est completion in 26 minutes [INSERT: Count=714216, Max=10527, Min=225, Avg=1397.76, 90=1880, 99=2603, 99.9=6215, 99.99=7439] 
2023-05-01 11:46:34:853 140 sec: 9986591 operations; 69177.6 current ops/sec; est completion in 26 minutes [INSERT: Count=691791, Max=49311, Min=222, Avg=1443.2, 90=1931, 99=3119, 99.9=5783, 99.99=32447] 
2023-05-01 11:46:44:853 150 sec: 10649265 operations; 66267.4 current ops/sec; est completion in 26 minutes [INSERT: Count=662642, Max=35007, Min=233, Avg=1506.7, 90=1978, 99=3329, 99.9=6359, 99.99=26719] 
2023-05-01 11:46:54:853 160 sec: 11323460 operations; 67419.5 current ops/sec; est completion in 26 minutes [INSERT: Count=674186, Max=10927, Min=395, Avg=1480.97, 90=1939, 99=3185, 99.9=5755, 99.99=8791] 
2023-05-01 11:47:04:853 170 sec: 11948254 operations; 62479.4 current ops/sec; est completion in 26 minutes [INSERT: Count=624794, Max=42495, Min=340, Avg=1598.2, 90=2215, 99=4093, 99.9=6435, 99.99=31183] 
2023-05-01 11:47:14:853 180 sec: 12613152 operations; 66489.8 current ops/sec; est completion in 26 minutes [INSERT: Count=664898, Max=32991, Min=256, Avg=1501.67, 90=1960, 99=3485, 99.9=6463, 99.99=26079] 
2023-05-01 11:47:24:857 190 sec: 13281791 operations; 66843.85 current ops/sec; est completion in 26 minutes [INSERT: Count=668673, Max=8599, Min=425, Avg=1493.73, 90=1959, 99=3383, 99.9=5787, 99.99=7339] 
2023-05-01 11:47:34:853 200 sec: 13933664 operations; 65206.86 current ops/sec; est completion in 26 minutes [INSERT: Count=651843, Max=36479, Min=415, Avg=1531.21, 90=2016, 99=3655, 99.9=6323, 99.99=28991] 
2023-05-01 11:47:44:853 210 sec: 14607712 operations; 67404.8 current ops/sec; est completion in 26 minutes [INSERT: Count=674059, Max=36799, Min=217, Avg=1481.22, 90=1926, 99=3031, 99.9=6751, 99.99=27583] 
2023-05-01 11:47:54:853 220 sec: 15246864 operations; 63915.2 current ops/sec; est completion in 26 minutes [INSERT: Count=639160, Max=9431, Min=382, Avg=1562.27, 90=2117, 99=3851, 99.9=6247, 99.99=7731] 
2023-05-01 11:48:04:853 230 sec: 15905996 operations; 65913.2 current ops/sec; est completion in 26 minutes [INSERT: Count=659117, Max=34687, Min=408, Avg=1514.86, 90=1976, 99=3479, 99.9=6679, 99.99=25951] 
2023-05-01 11:48:14:853 240 sec: 16557499 operations; 65150.3 current ops/sec; est completion in 26 minutes [INSERT: Count=651505, Max=39295, Min=385, Avg=1532.64, 90=1993, 99=3683, 99.9=6679, 99.99=30207] 
2023-05-01 11:48:24:853 250 sec: 17183566 operations; 62606.7 current ops/sec; est completion in 26 minutes [INSERT: Count=626065, Max=9959, Min=391, Avg=1594.99, 90=2229, 99=4055, 99.9=6231, 99.99=7827] 
2023-05-01 11:48:34:853 260 sec: 17849909 operations; 66634.3 current ops/sec; est completion in 26 minutes [INSERT: Count=666339, Max=42815, Min=232, Avg=1498.39, 90=1955, 99=3321, 99.9=6539, 99.99=28175] 
2023-05-01 11:48:44:853 270 sec: 18473444 operations; 62353.5 current ops/sec; est completion in 25 minutes [INSERT: Count=623535, Max=68607, Min=413, Avg=1601.43, 90=2207, 99=4039, 99.9=6395, 99.99=38431] 
2023-05-01 11:48:54:853 280 sec: 19128000 operations; 65455.6 current ops/sec; est completion in 25 minutes [INSERT: Count=654568, Max=10335, Min=424, Avg=1525.46, 90=2021, 99=3777, 99.9=6111, 99.99=8187] 
2023-05-01 11:49:04:853 290 sec: 19775129 operations; 64712.9 current ops/sec; est completion in 25 minutes [INSERT: Count=647123, Max=46751, Min=417, Avg=1543.01, 90=2035, 99=3761, 99.9=6435, 99.99=28255] 
2023-05-01 11:49:14:853 300 sec: 20392840 operations; 61771.1 current ops/sec; est completion in 25 minutes [INSERT: Count=617708, Max=43327, Min=413, Avg=1616.58, 90=2313, 99=4263, 99.9=6715, 99.99=27039] 
2023-05-01 11:49:24:853 310 sec: 21058710 operations; 66587 current ops/sec; est completion in 25 minutes [INSERT: Count=665864, Max=9063, Min=414, Avg=1499.47, 90=1978, 99=3461, 99.9=6131, 99.99=7583] 
2023-05-01 11:49:34:853 320 sec: 21687443 operations; 62873.3 current ops/sec; est completion in 25 minutes [INSERT: Count=628733, Max=35935, Min=380, Avg=1588.13, 90=2185, 99=3989, 99.9=6251, 99.99=30655] 
2023-05-01 11:49:44:853 330 sec: 22325534 operations; 63809.1 current ops/sec; est completion in 25 minutes [INSERT: Count=638094, Max=34047, Min=394, Avg=1564.88, 90=2099, 99=4163, 99.9=6711, 99.99=26959] 
2023-05-01 11:49:54:853 340 sec: 22977081 operations; 65154.7 current ops/sec; est completion in 25 minutes [INSERT: Count=651562, Max=9343, Min=396, Avg=1532.42, 90=2035, 99=3627, 99.9=6363, 99.99=7539] 
2023-05-01 11:50:04:853 350 sec: 23595689 operations; 61860.8 current ops/sec; est completion in 25 minutes [INSERT: Count=618593, Max=36799, Min=395, Avg=1614.25, 90=2279, 99=4163, 99.9=6803, 99.99=31471] 
2023-05-01 11:50:14:853 360 sec: 24252813 operations; 65712.4 current ops/sec; est completion in 24 minutes [INSERT: Count=657129, Max=36287, Min=407, Avg=1519.47, 90=1999, 99=3803, 99.9=6831, 99.99=28383] 
2023-05-01 11:50:24:853 370 sec: 24883889 operations; 63107.6 current ops/sec; est completion in 24 minutes [INSERT: Count=631064, Max=11223, Min=440, Avg=1582.26, 90=2167, 99=3975, 99.9=6079, 99.99=7459] 
2023-05-01 11:50:34:853 380 sec: 25522817 operations; 63892.8 current ops/sec; est completion in 24 minutes [INSERT: Count=638937, Max=42399, Min=404, Avg=1562.77, 90=2091, 99=4049, 99.9=6503, 99.99=28559] 
2023-05-01 11:50:44:853 390 sec: 26173335 operations; 65051.8 current ops/sec; est completion in 24 minutes [INSERT: Count=650513, Max=39327, Min=443, Avg=1534.95, 90=2011, 99=3787, 99.9=6459, 99.99=30559] 
2023-05-01 11:50:54:853 400 sec: 26788494 operations; 61515.9 current ops/sec; est completion in 24 minutes [INSERT: Count=615170, Max=10383, Min=430, Avg=1623.2, 90=2345, 99=4247, 99.9=6067, 99.99=7795] 
2023-05-01 11:51:04:853 410 sec: 27443704 operations; 65521 current ops/sec; est completion in 24 minutes [INSERT: Count=655210, Max=35647, Min=419, Avg=1523.94, 90=1990, 99=3821, 99.9=6867, 99.99=27983] 
2023-05-01 11:51:14:853 420 sec: 28070286 operations; 62658.2 current ops/sec; est completion in 24 minutes [INSERT: Count=626591, Max=39519, Min=395, Avg=1593.64, 90=2141, 99=4087, 99.9=6691, 99.99=30927] 
2023-05-01 11:51:24:853 430 sec: 28696561 operations; 62627.5 current ops/sec; est completion in 24 minutes [INSERT: Count=626255, Max=10527, Min=378, Avg=1594.45, 90=2199, 99=4115, 99.9=6443, 99.99=7943] 
2023-05-01 11:51:34:853 440 sec: 29352772 operations; 65621.1 current ops/sec; est completion in 23 minutes [INSERT: Count=656215, Max=39359, Min=444, Avg=1521.53, 90=1982, 99=3633, 99.9=6651, 99.99=26671] 
2023-05-01 11:51:44:853 450 sec: 29961964 operations; 60919.2 current ops/sec; est completion in 23 minutes [INSERT: Count=609188, Max=38559, Min=421, Avg=1639.26, 90=2361, 99=4279, 99.9=6971, 99.99=29375] 
2023-05-01 11:51:54:853 460 sec: 30618659 operations; 65669.5 current ops/sec; est completion in 23 minutes [INSERT: Count=656706, Max=10927, Min=416, Avg=1520.48, 90=1992, 99=3849, 99.9=5963, 99.99=7847] 
2023-05-01 11:52:04:853 470 sec: 31255563 operations; 63690.4 current ops/sec; est completion in 23 minutes [INSERT: Count=636888, Max=46111, Min=392, Avg=1567.78, 90=2077, 99=3947, 99.9=6579, 99.99=27551] 
2023-05-01 11:52:14:853 480 sec: 31871930 operations; 61636.7 current ops/sec; est completion in 23 minutes [INSERT: Count=616370, Max=33567, Min=387, Avg=1620.14, 90=2291, 99=4227, 99.9=6895, 99.99=27391] 
2023-05-01 11:52:24:853 490 sec: 32538086 operations; 66615.6 current ops/sec; est completion in 23 minutes [INSERT: Count=666163, Max=10295, Min=380, Avg=1498.84, 90=1951, 99=3511, 99.9=5719, 99.99=7027] 
2023-05-01 11:52:34:853 500 sec: 33148847 operations; 61076.1 current ops/sec; est completion in 23 minutes [INSERT: Count=610752, Max=37503, Min=366, Avg=1634.95, 90=2327, 99=4175, 99.9=6755, 99.99=31919] 
2023-05-01 11:52:44:853 510 sec: 33793599 operations; 64475.2 current ops/sec; est completion in 22 minutes [INSERT: Count=644756, Max=31935, Min=402, Avg=1548.71, 90=2043, 99=4103, 99.9=6735, 99.99=26303] 
2023-05-01 11:52:54:853 520 sec: 34444606 operations; 65100.7 current ops/sec; est completion in 22 minutes [INSERT: Count=651008, Max=10927, Min=398, Avg=1533.79, 90=2009, 99=3633, 99.9=6355, 99.99=7879] 
2023-05-01 11:53:04:853 530 sec: 35048128 operations; 60352.2 current ops/sec; est completion in 22 minutes [INSERT: Count=603525, Max=51423, Min=410, Avg=1654.63, 90=2381, 99=4423, 99.9=7559, 99.99=40479] 
2023-05-01 11:53:14:853 540 sec: 35707638 operations; 65951 current ops/sec; est completion in 22 minutes [INSERT: Count=659519, Max=36063, Min=418, Avg=1514, 90=1950, 99=3639, 99.9=7087, 99.99=27631] 
2023-05-01 11:53:24:853 550 sec: 36333128 operations; 62549 current ops/sec; est completion in 22 minutes [INSERT: Count=625478, Max=10455, Min=389, Avg=1596.41, 90=2211, 99=3949, 99.9=6479, 99.99=8067] 
2023-05-01 11:53:34:853 560 sec: 36958939 operations; 62581.1 current ops/sec; est completion in 22 minutes [INSERT: Count=625798, Max=43199, Min=423, Avg=1595.63, 90=2167, 99=4339, 99.9=6459, 99.99=32479] 
2023-05-01 11:53:44:853 570 sec: 37608992 operations; 65005.3 current ops/sec; est completion in 22 minutes [INSERT: Count=650054, Max=35807, Min=363, Avg=1536.03, 90=1996, 99=3735, 99.9=6763, 99.99=29695] 
2023-05-01 11:53:54:853 580 sec: 38221684 operations; 61269.2 current ops/sec; est completion in 21 minutes [INSERT: Count=612698, Max=20271, Min=398, Avg=1629.9, 90=2367, 99=4207, 99.9=6171, 99.99=7959] 
2023-05-01 11:54:04:853 590 sec: 38870366 operations; 64868.2 current ops/sec; est completion in 21 minutes [INSERT: Count=648677, Max=38655, Min=393, Avg=1539.25, 90=2010, 99=4031, 99.9=6851, 99.99=28415] 
2023-05-01 11:54:14:853 600 sec: 39498673 operations; 62830.7 current ops/sec; est completion in 21 minutes [INSERT: Count=628303, Max=35711, Min=393, Avg=1589.17, 90=2133, 99=4043, 99.9=6635, 99.99=31711] 
2023-05-01 11:54:24:853 610 sec: 40115266 operations; 61659.3 current ops/sec; est completion in 21 minutes [INSERT: Count=616609, Max=35583, Min=399, Avg=1619.51, 90=2315, 99=4379, 99.9=6655, 99.99=13383] 
2023-05-01 11:54:34:853 620 sec: 40766089 operations; 65082.3 current ops/sec; est completion in 21 minutes [INSERT: Count=650825, Max=53631, Min=236, Avg=1534.2, 90=2012, 99=3921, 99.9=6327, 99.99=30895] 
2023-05-01 11:54:44:855 630 sec: 41375132 operations; 60892.12 current ops/sec; est completion in 21 minutes [INSERT: Count=609041, Max=40735, Min=445, Avg=1639.84, 90=2361, 99=4267, 99.9=7187, 99.99=32383] 
2023-05-01 11:54:54:853 640 sec: 42005454 operations; 63044.81 current ops/sec; est completion in 21 minutes [INSERT: Count=630319, Max=10943, Min=426, Avg=1584.02, 90=2159, 99=4455, 99.9=6251, 99.99=7995] 
2023-05-01 11:55:04:853 650 sec: 42644456 operations; 63900.2 current ops/sec; est completion in 20 minutes [INSERT: Count=639015, Max=40543, Min=354, Avg=1562.63, 90=2077, 99=3977, 99.9=6431, 99.99=27263] 
2023-05-01 11:55:14:853 660 sec: 43249298 operations; 60484.2 current ops/sec; est completion in 20 minutes [INSERT: Count=604819, Max=46751, Min=425, Avg=1651.08, 90=2417, 99=4427, 99.9=7019, 99.99=33119] 
2023-05-01 11:55:24:853 670 sec: 43890425 operations; 64112.7 current ops/sec; est completion in 20 minutes [INSERT: Count=641136, Max=64191, Min=374, Avg=1557.48, 90=2063, 99=4343, 99.9=6355, 99.99=38303] 
2023-05-01 11:55:34:853 680 sec: 44512663 operations; 62223.8 current ops/sec; est completion in 20 minutes [INSERT: Count=622240, Max=37631, Min=388, Avg=1604.76, 90=2221, 99=4135, 99.9=6723, 99.99=31023] 
2023-05-01 11:55:44:853 690 sec: 45128627 operations; 61596.4 current ops/sec; est completion in 20 minutes [INSERT: Count=615960, Max=41599, Min=381, Avg=1621.27, 90=2303, 99=4579, 99.9=6867, 99.99=27855] 
2023-05-01 11:55:54:853 700 sec: 45768465 operations; 63983.8 current ops/sec; est completion in 20 minutes [INSERT: Count=639835, Max=12327, Min=363, Avg=1560.62, 90=2081, 99=4127, 99.9=6735, 99.99=8575] 
2023-05-01 11:56:04:853 710 sec: 46379443 operations; 61097.8 current ops/sec; est completion in 20 minutes [INSERT: Count=610979, Max=49695, Min=370, Avg=1634.47, 90=2325, 99=4267, 99.9=6499, 99.99=34367] 
2023-05-01 11:56:14:853 720 sec: 47009351 operations; 62990.8 current ops/sec; est completion in 19 minutes [INSERT: Count=629902, Max=39871, Min=356, Avg=1585.23, 90=2139, 99=4531, 99.9=7115, 99.99=29439] 
2023-05-01 11:56:24:853 730 sec: 47636318 operations; 62696.7 current ops/sec; est completion in 19 minutes [INSERT: Count=626981, Max=14215, Min=262, Avg=1592.65, 90=2181, 99=4227, 99.9=6307, 99.99=8439] 
2023-05-01 11:56:34:853 740 sec: 48250024 operations; 61370.6 current ops/sec; est completion in 19 minutes [INSERT: Count=613693, Max=40799, Min=367, Avg=1627.14, 90=2317, 99=4459, 99.9=6807, 99.99=30895] 
2023-05-01 11:56:44:853 750 sec: 48871108 operations; 62108.4 current ops/sec; est completion in 19 minutes [INSERT: Count=621083, Max=39583, Min=414, Avg=1607.73, 90=2203, 99=4747, 99.9=6787, 99.99=30703] 
2023-05-01 11:56:54:853 760 sec: 49485413 operations; 61430.5 current ops/sec; est completion in 19 minutes [INSERT: Count=614322, Max=10031, Min=390, Avg=1625.63, 90=2325, 99=4283, 99.9=5959, 99.99=7587] 
2023-05-01 11:57:04:853 770 sec: 50106808 operations; 62139.5 current ops/sec; est completion in 19 minutes [INSERT: Count=621386, Max=43743, Min=383, Avg=1607.04, 90=2225, 99=4567, 99.9=6895, 99.99=28687] 
2023-05-01 11:57:14:853 780 sec: 50723528 operations; 61672 current ops/sec; est completion in 19 minutes [INSERT: Count=616719, Max=41439, Min=380, Avg=1619.22, 90=2275, 99=4627, 99.9=6891, 99.99=31087] 
2023-05-01 11:57:24:853 790 sec: 51332673 operations; 60914.5 current ops/sec; est completion in 18 minutes [INSERT: Count=609148, Max=10015, Min=361, Avg=1639.39, 90=2399, 99=4447, 99.9=6647, 99.99=8131] 
2023-05-01 11:57:34:853 800 sec: 51963017 operations; 63034.4 current ops/sec; est completion in 18 minutes [INSERT: Count=630335, Max=37727, Min=410, Avg=1584.13, 90=2155, 99=4543, 99.9=6891, 99.99=27839] 
2023-05-01 11:57:44:853 810 sec: 52569777 operations; 60676 current ops/sec; est completion in 18 minutes [INSERT: Count=606770, Max=41151, Min=407, Avg=1645.83, 90=2369, 99=4587, 99.9=7023, 99.99=31471] 
2023-05-01 11:57:54:853 820 sec: 53185492 operations; 61571.5 current ops/sec; est completion in 18 minutes [INSERT: Count=615714, Max=11479, Min=367, Avg=1621.9, 90=2347, 99=4411, 99.9=6351, 99.99=8027] 
2023-05-01 11:58:04:853 830 sec: 53809705 operations; 62421.3 current ops/sec; est completion in 18 minutes [INSERT: Count=624204, Max=46111, Min=404, Avg=1599.75, 90=2191, 99=4579, 99.9=7275, 99.99=32655] 
2023-05-01 11:58:14:853 840 sec: 54409751 operations; 60004.6 current ops/sec; est completion in 18 minutes [INSERT: Count=600051, Max=48895, Min=427, Avg=1664.29, 90=2449, 99=4535, 99.9=6859, 99.99=33663] 
2023-05-01 11:58:24:853 850 sec: 55034338 operations; 62458.7 current ops/sec; est completion in 18 minutes [INSERT: Count=624593, Max=10031, Min=444, Avg=1598.77, 90=2243, 99=4447, 99.9=6355, 99.99=7927] 
2023-05-01 11:58:34:853 860 sec: 55654624 operations; 62028.6 current ops/sec; est completion in 17 minutes [INSERT: Count=620277, Max=36255, Min=229, Avg=1609.87, 90=2233, 99=4435, 99.9=6703, 99.99=29695] 
2023-05-01 11:58:44:853 870 sec: 56254754 operations; 60013 current ops/sec; est completion in 17 minutes [INSERT: Count=600130, Max=44351, Min=392, Avg=1664.07, 90=2463, 99=4519, 99.9=6583, 99.99=31407] 
2023-05-01 11:58:54:853 880 sec: 56886097 operations; 63134.3 current ops/sec; est completion in 17 minutes [INSERT: Count=631344, Max=10383, Min=353, Avg=1581.62, 90=2157, 99=4263, 99.9=6891, 99.99=8767] 
2023-05-01 11:59:04:857 890 sec: 57496959 operations; 61067.88 current ops/sec; est completion in 17 minutes [INSERT: Count=610867, Max=44191, Min=437, Avg=1635.46, 90=2333, 99=4475, 99.9=6895, 99.99=32751] 
2023-05-01 11:59:14:853 900 sec: 58097375 operations; 60059.62 current ops/sec; est completion in 17 minutes [INSERT: Count=600421, Max=37503, Min=361, Avg=1662.58, 90=2447, 99=4615, 99.9=7175, 99.99=29951] 
2023-05-01 11:59:24:853 910 sec: 58723055 operations; 62568 current ops/sec; est completion in 17 minutes [INSERT: Count=625667, Max=12935, Min=407, Avg=1595.92, 90=2205, 99=4415, 99.9=6335, 99.99=8087] 
2023-05-01 11:59:34:853 920 sec: 59325273 operations; 60221.8 current ops/sec; est completion in 16 minutes [INSERT: Count=602230, Max=37279, Min=396, Avg=1658.26, 90=2439, 99=4455, 99.9=6647, 99.99=30495] 
2023-05-01 11:59:44:853 930 sec: 59933243 operations; 60797 current ops/sec; est completion in 16 minutes [INSERT: Count=607964, Max=44639, Min=390, Avg=1642.58, 90=2355, 99=4551, 99.9=7471, 99.99=26959] 
2023-05-01 11:59:54:853 940 sec: 60553208 operations; 61996.5 current ops/sec; est completion in 16 minutes [INSERT: Count=619971, Max=9943, Min=403, Avg=1610.67, 90=2307, 99=4459, 99.9=6247, 99.99=8231] 
2023-05-01 12:00:04:853 950 sec: 61146920 operations; 59371.2 current ops/sec; est completion in 16 minutes [INSERT: Count=593708, Max=43903, Min=430, Avg=1682.12, 90=2521, 99=4615, 99.9=6923, 99.99=32623] 
2023-05-01 12:00:14:853 960 sec: 61761014 operations; 61409.4 current ops/sec; est completion in 16 minutes [INSERT: Count=614085, Max=45567, Min=456, Avg=1626.15, 90=2269, 99=4547, 99.9=7067, 99.99=29551] 
2023-05-01 12:00:24:853 970 sec: 62371349 operations; 61033.5 current ops/sec; est completion in 16 minutes [INSERT: Count=610353, Max=43679, Min=347, Avg=1636.15, 90=2373, 99=4451, 99.9=6703, 99.99=20687] 
2023-05-01 12:00:34:853 980 sec: 62965481 operations; 59413.2 current ops/sec; est completion in 16 minutes [INSERT: Count=594121, Max=41087, Min=414, Avg=1680.91, 90=2513, 99=4615, 99.9=6959, 99.99=31855] 
2023-05-01 12:00:44:853 990 sec: 63582728 operations; 61724.7 current ops/sec; est completion in 15 minutes [INSERT: Count=617249, Max=41567, Min=430, Avg=1617.82, 90=2233, 99=4591, 99.9=6771, 99.99=29439] 
2023-05-01 12:00:54:853 1000 sec: 64185731 operations; 60300.3 current ops/sec; est completion in 15 minutes [INSERT: Count=602995, Max=17951, Min=404, Avg=1656.09, 90=2437, 99=4471, 99.9=6899, 99.99=9247] 
2023-05-01 12:01:04:853 1010 sec: 64786905 operations; 60117.4 current ops/sec; est completion in 15 minutes [INSERT: Count=601172, Max=49759, Min=394, Avg=1661.15, 90=2407, 99=4655, 99.9=7099, 99.99=33567] 
2023-05-01 12:01:14:853 1020 sec: 65403608 operations; 61670.3 current ops/sec; est completion in 15 minutes [INSERT: Count=616704, Max=38783, Min=239, Avg=1619.21, 90=2297, 99=4531, 99.9=6751, 99.99=28271] 
2023-05-01 12:01:24:853 1030 sec: 65997173 operations; 59356.5 current ops/sec; est completion in 15 minutes [INSERT: Count=593580, Max=83455, Min=412, Avg=1682.46, 90=2533, 99=4655, 99.9=6507, 99.99=58751] 
2023-05-01 12:01:34:853 1040 sec: 66600991 operations; 60381.8 current ops/sec; est completion in 15 minutes [INSERT: Count=603809, Max=62943, Min=383, Avg=1653.96, 90=2367, 99=4595, 99.9=7239, 99.99=60895] 
2023-05-01 12:01:44:853 1050 sec: 67210542 operations; 60955.1 current ops/sec; est completion in 15 minutes [INSERT: Count=609556, Max=39807, Min=386, Avg=1638.28, 90=2361, 99=4603, 99.9=6779, 99.99=31807] 
2023-05-01 12:01:54:853 1060 sec: 67808031 operations; 59748.9 current ops/sec; est completion in 14 minutes [INSERT: Count=597500, Max=12903, Min=417, Avg=1671.48, 90=2519, 99=4643, 99.9=6511, 99.99=9447] 
2023-05-01 12:02:04:853 1070 sec: 68410178 operations; 60214.7 current ops/sec; est completion in 14 minutes [INSERT: Count=602133, Max=49439, Min=401, Avg=1658.55, 90=2413, 99=4687, 99.9=7079, 99.99=36895] 
2023-05-01 12:02:14:853 1080 sec: 69016745 operations; 60656.7 current ops/sec; est completion in 14 minutes [INSERT: Count=606560, Max=37855, Min=361, Avg=1646.38, 90=2391, 99=4563, 99.9=7083, 99.99=30271] 
2023-05-01 12:02:24:853 1090 sec: 69620457 operations; 60371.2 current ops/sec; est completion in 14 minutes [INSERT: Count=603719, Max=13175, Min=382, Avg=1654.16, 90=2469, 99=4611, 99.9=6475, 99.99=9599] 
2023-05-01 12:02:34:853 1100 sec: 70224434 operations; 60397.7 current ops/sec; est completion in 14 minutes [INSERT: Count=603980, Max=41823, Min=224, Avg=1653.41, 90=2419, 99=4647, 99.9=6939, 99.99=31871] 
2023-05-01 12:02:44:853 1110 sec: 70829974 operations; 60554 current ops/sec; est completion in 14 minutes [INSERT: Count=605533, Max=40671, Min=392, Avg=1649.26, 90=2395, 99=4555, 99.9=6647, 99.99=32159] 
2023-05-01 12:02:54:853 1120 sec: 71430266 operations; 60029.2 current ops/sec; est completion in 14 minutes [INSERT: Count=600285, Max=10023, Min=405, Avg=1663.57, 90=2483, 99=4699, 99.9=6383, 99.99=7691] 
2023-05-01 12:03:04:853 1130 sec: 72033092 operations; 60282.6 current ops/sec; est completion in 13 minutes [INSERT: Count=602845, Max=42111, Min=413, Avg=1656.66, 90=2437, 99=4607, 99.9=6911, 99.99=30271] 
2023-05-01 12:03:14:853 1140 sec: 72640960 operations; 60786.8 current ops/sec; est completion in 13 minutes [INSERT: Count=607871, Max=44639, Min=398, Avg=1642.77, 90=2373, 99=4507, 99.9=7043, 99.99=35615] 
2023-05-01 12:03:24:853 1150 sec: 73240818 operations; 59985.8 current ops/sec; est completion in 13 minutes [INSERT: Count=599845, Max=31455, Min=355, Avg=1664.93, 90=2457, 99=4659, 99.9=6863, 99.99=15127] 
2023-05-01 12:03:34:853 1160 sec: 73847841 operations; 60702.3 current ops/sec; est completion in 13 minutes [INSERT: Count=607019, Max=40543, Min=408, Avg=1645.15, 90=2381, 99=4491, 99.9=6535, 99.99=28751] 
2023-05-01 12:03:44:853 1170 sec: 74457824 operations; 60998.3 current ops/sec; est completion in 13 minutes [INSERT: Count=609985, Max=38239, Min=390, Avg=1637.11, 90=2347, 99=4491, 99.9=6555, 99.99=30303] 
2023-05-01 12:03:54:853 1180 sec: 75057916 operations; 60009.2 current ops/sec; est completion in 13 minutes [INSERT: Count=600087, Max=12287, Min=405, Avg=1664.24, 90=2497, 99=4587, 99.9=6439, 99.99=8359] 
2023-05-01 12:04:04:853 1190 sec: 75661919 operations; 60400.3 current ops/sec; est completion in 12 minutes [INSERT: Count=604005, Max=44575, Min=395, Avg=1653.32, 90=2411, 99=4503, 99.9=6939, 99.99=33055] 
2023-05-01 12:04:14:853 1200 sec: 76272471 operations; 61055.2 current ops/sec; est completion in 12 minutes [INSERT: Count=610552, Max=40927, Min=379, Avg=1635.67, 90=2309, 99=4539, 99.9=6683, 99.99=30287] 
2023-05-01 12:04:24:853 1210 sec: 76870215 operations; 59774.4 current ops/sec; est completion in 12 minutes [INSERT: Count=597743, Max=10367, Min=402, Avg=1670.71, 90=2507, 99=4599, 99.9=6431, 99.99=8415] 
2023-05-01 12:04:34:853 1220 sec: 77479583 operations; 60936.8 current ops/sec; est completion in 12 minutes [INSERT: Count=609386, Max=37535, Min=409, Avg=1638.84, 90=2363, 99=4491, 99.9=6991, 99.99=28879] 
2023-05-01 12:04:44:853 1230 sec: 78087807 operations; 60822.4 current ops/sec; est completion in 12 minutes [INSERT: Count=608220, Max=43551, Min=348, Avg=1641.85, 90=2337, 99=4459, 99.9=6703, 99.99=33631] 
2023-05-01 12:04:54:853 1240 sec: 78684772 operations; 59696.5 current ops/sec; est completion in 12 minutes [INSERT: Count=596955, Max=11927, Min=400, Avg=1672.96, 90=2567, 99=4643, 99.9=6291, 99.99=7883] 
2023-05-01 12:05:04:853 1250 sec: 79299647 operations; 61487.5 current ops/sec; est completion in 12 minutes [INSERT: Count=614879, Max=41087, Min=432, Avg=1624.13, 90=2267, 99=4411, 99.9=7027, 99.99=32351] 
2023-05-01 12:05:14:853 1260 sec: 79905148 operations; 60550.1 current ops/sec; est completion in 11 minutes [INSERT: Count=605491, Max=40799, Min=417, Avg=1649.3, 90=2373, 99=4515, 99.9=6827, 99.99=31071] 
2023-05-01 12:05:24:853 1270 sec: 80501604 operations; 59645.6 current ops/sec; est completion in 11 minutes [INSERT: Count=596462, Max=9967, Min=320, Avg=1674.36, 90=2573, 99=4667, 99.9=6291, 99.99=7999] 
2023-05-01 12:05:34:853 1280 sec: 81116506 operations; 61490.2 current ops/sec; est completion in 11 minutes [INSERT: Count=614906, Max=42783, Min=400, Avg=1623.98, 90=2261, 99=4375, 99.9=6979, 99.99=29439] 
2023-05-01 12:05:44:853 1290 sec: 81715457 operations; 59895.1 current ops/sec; est completion in 11 minutes [INSERT: Count=598946, Max=41631, Min=389, Avg=1667.32, 90=2449, 99=4527, 99.9=6751, 99.99=29823] 
2023-05-01 12:05:54:853 1300 sec: 82312587 operations; 59713 current ops/sec; est completion in 11 minutes [INSERT: Count=597126, Max=14375, Min=401, Avg=1672.46, 90=2541, 99=4703, 99.9=6379, 99.99=10391] 
2023-05-01 12:06:04:853 1310 sec: 82927230 operations; 61464.3 current ops/sec; est completion in 11 minutes [INSERT: Count=614644, Max=41215, Min=399, Avg=1624.71, 90=2237, 99=4447, 99.9=6815, 99.99=33119] 
2023-05-01 12:06:14:853 1320 sec: 83524132 operations; 59690.2 current ops/sec; est completion in 10 minutes [INSERT: Count=596908, Max=44223, Min=405, Avg=1673.06, 90=2499, 99=4543, 99.9=6915, 99.99=29503] 
2023-05-01 12:06:24:853 1330 sec: 84124494 operations; 60036.2 current ops/sec; est completion in 10 minutes [INSERT: Count=600359, Max=16719, Min=392, Avg=1663.5, 90=2499, 99=4699, 99.9=6371, 99.99=8007] 
2023-05-01 12:06:34:853 1340 sec: 84737531 operations; 61303.7 current ops/sec; est completion in 10 minutes [INSERT: Count=613042, Max=41759, Min=423, Avg=1628.97, 90=2287, 99=4475, 99.9=6863, 99.99=29407] 
2023-05-01 12:06:44:853 1350 sec: 85336521 operations; 59899 current ops/sec; est completion in 10 minutes [INSERT: Count=598985, Max=40287, Min=430, Avg=1667.26, 90=2505, 99=4539, 99.9=6763, 99.99=30127] 
2023-05-01 12:06:54:853 1360 sec: 85941791 operations; 60527 current ops/sec; est completion in 10 minutes [INSERT: Count=605266, Max=9887, Min=375, Avg=1649.92, 90=2423, 99=4671, 99.9=6491, 99.99=7899] 
2023-05-01 12:07:04:853 1370 sec: 86553805 operations; 61201.4 current ops/sec; est completion in 10 minutes [INSERT: Count=612011, Max=45279, Min=259, Avg=1631.68, 90=2305, 99=4379, 99.9=6939, 99.99=34623] 
2023-05-01 12:07:14:853 1380 sec: 87148613 operations; 59480.8 current ops/sec; est completion in 10 minutes [INSERT: Count=594824, Max=43103, Min=394, Avg=1678.98, 90=2541, 99=4719, 99.9=7043, 99.99=31599] 
2023-05-01 12:07:24:853 1390 sec: 87756971 operations; 60835.8 current ops/sec; est completion in 9 minutes [INSERT: Count=608349, Max=12823, Min=357, Avg=1641.52, 90=2403, 99=4627, 99.9=6259, 99.99=8003] 
2023-05-01 12:07:34:853 1400 sec: 88369025 operations; 61205.4 current ops/sec; est completion in 9 minutes [INSERT: Count=612055, Max=39007, Min=402, Avg=1631.63, 90=2333, 99=4379, 99.9=6739, 99.99=32527] 
2023-05-01 12:07:44:853 1410 sec: 88971241 operations; 60221.6 current ops/sec; est completion in 9 minutes [INSERT: Count=602214, Max=42335, Min=437, Avg=1658.33, 90=2453, 99=4607, 99.9=6995, 99.99=31391] 
2023-05-01 12:07:54:853 1420 sec: 89579528 operations; 60828.7 current ops/sec; est completion in 9 minutes [INSERT: Count=608293, Max=10407, Min=329, Avg=1641.74, 90=2399, 99=4615, 99.9=6691, 99.99=8439] 
2023-05-01 12:08:04:853 1430 sec: 90189875 operations; 61034.7 current ops/sec; est completion in 9 minutes [INSERT: Count=610341, Max=47135, Min=383, Avg=1636.12, 90=2355, 99=4475, 99.9=7143, 99.99=34271] 
2023-05-01 12:08:14:853 1440 sec: 90791626 operations; 60175.1 current ops/sec; est completion in 9 minutes [INSERT: Count=601754, Max=51871, Min=403, Avg=1659.63, 90=2435, 99=4683, 99.9=7151, 99.99=34559] 
2023-05-01 12:08:24:853 1450 sec: 91397893 operations; 60626.7 current ops/sec; est completion in 8 minutes [INSERT: Count=606270, Max=11455, Min=387, Avg=1647.2, 90=2421, 99=4575, 99.9=6411, 99.99=8375] 
2023-05-01 12:08:34:853 1460 sec: 92012073 operations; 61418 current ops/sec; est completion in 8 minutes [INSERT: Count=614171, Max=40799, Min=396, Avg=1625.96, 90=2307, 99=4423, 99.9=6667, 99.99=30319] 
2023-05-01 12:08:44:853 1470 sec: 92617323 operations; 60525 current ops/sec; est completion in 8 minutes [INSERT: Count=605255, Max=39327, Min=405, Avg=1650.02, 90=2393, 99=4595, 99.9=6971, 99.99=31087] 
2023-05-01 12:08:54:853 1480 sec: 93225713 operations; 60839 current ops/sec; est completion in 8 minutes [INSERT: Count=608386, Max=9863, Min=399, Avg=1641.43, 90=2395, 99=4515, 99.9=6523, 99.99=8175] 
2023-05-01 12:09:04:853 1490 sec: 93841212 operations; 61549.9 current ops/sec; est completion in 8 minutes [INSERT: Count=615499, Max=42783, Min=417, Avg=1622.53, 90=2287, 99=4523, 99.9=7083, 99.99=31519] 
2023-05-01 12:09:14:853 1500 sec: 94442019 operations; 60080.7 current ops/sec; est completion in 8 minutes [INSERT: Count=600813, Max=42815, Min=429, Avg=1662.2, 90=2469, 99=4659, 99.9=6847, 99.99=31791] 
2023-05-01 12:09:24:853 1510 sec: 95050210 operations; 60819.1 current ops/sec; est completion in 7 minutes [INSERT: Count=608188, Max=15015, Min=414, Avg=1642, 90=2427, 99=4643, 99.9=6487, 99.99=8471] 
2023-05-01 12:09:34:853 1520 sec: 95654764 operations; 60455.4 current ops/sec; est completion in 7 minutes [INSERT: Count=604548, Max=40703, Min=446, Avg=1651.86, 90=2391, 99=4755, 99.9=7175, 99.99=30063] 
2023-05-01 12:09:44:853 1530 sec: 96253328 operations; 59856.4 current ops/sec; est completion in 7 minutes [INSERT: Count=598569, Max=41471, Min=407, Avg=1668.44, 90=2473, 99=4659, 99.9=6959, 99.99=30063] 
2023-05-01 12:09:54:853 1540 sec: 96859360 operations; 60603.2 current ops/sec; est completion in 7 minutes [INSERT: Count=606027, Max=11295, Min=386, Avg=1647.72, 90=2401, 99=4671, 99.9=6551, 99.99=8559] 
2023-05-01 12:10:04:853 1550 sec: 97457313 operations; 59795.3 current ops/sec; est completion in 7 minutes [INSERT: Count=597964, Max=48127, Min=400, Avg=1670.2, 90=2489, 99=4811, 99.9=6975, 99.99=37215] 
2023-05-01 12:10:14:853 1560 sec: 98061152 operations; 60383.9 current ops/sec; est completion in 7 minutes [INSERT: Count=603851, Max=44031, Min=388, Avg=1653.84, 90=2377, 99=4563, 99.9=7047, 99.99=31183] 
2023-05-01 12:10:24:853 1570 sec: 98667562 operations; 60641 current ops/sec; est completion in 7 minutes [INSERT: Count=606390, Max=26975, Min=427, Avg=1646.84, 90=2423, 99=4743, 99.9=6583, 99.99=9767] 
2023-05-01 12:10:34:853 1580 sec: 99265267 operations; 59770.5 current ops/sec; est completion in 6 minutes [INSERT: Count=597702, Max=42847, Min=443, Avg=1670.89, 90=2541, 99=4879, 99.9=7211, 99.99=30175] 
2023-05-01 12:10:44:853 1590 sec: 99873776 operations; 60850.9 current ops/sec; est completion in 6 minutes [INSERT: Count=608510, Max=43583, Min=349, Avg=1641.06, 90=2361, 99=4559, 99.9=7039, 99.99=28367] 
2023-05-01 12:10:54:853 1600 sec: 100473787 operations; 60001.1 current ops/sec; est completion in 6 minutes [INSERT: Count=600014, Max=14183, Min=354, Avg=1664.44, 90=2515, 99=4807, 99.9=6783, 99.99=9919] 
2023-05-01 12:11:04:853 1610 sec: 101069938 operations; 59615.1 current ops/sec; est completion in 6 minutes [INSERT: Count=596149, Max=44127, Min=391, Avg=1675.22, 90=2571, 99=4859, 99.9=7139, 99.99=34239] 
2023-05-01 12:11:14:853 1620 sec: 101681133 operations; 61119.5 current ops/sec; est completion in 6 minutes [INSERT: Count=611194, Max=41119, Min=331, Avg=1633.99, 90=2325, 99=4651, 99.9=6875, 99.99=30927] 
2023-05-01 12:11:24:853 1630 sec: 102276657 operations; 59552.4 current ops/sec; est completion in 6 minutes [INSERT: Count=595526, Max=13919, Min=420, Avg=1676.88, 90=2575, 99=4855, 99.9=6707, 99.99=9503] 
2023-05-01 12:11:34:853 1640 sec: 102872860 operations; 59620.3 current ops/sec; est completion in 5 minutes [INSERT: Count=596212, Max=40607, Min=238, Avg=1675.18, 90=2551, 99=4807, 99.9=7123, 99.99=28639] 
2023-05-01 12:11:44:853 1650 sec: 103477632 operations; 60477.2 current ops/sec; est completion in 5 minutes [INSERT: Count=604759, Max=44799, Min=464, Avg=1651.25, 90=2399, 99=4611, 99.9=7019, 99.99=32191] 
2023-05-01 12:11:54:853 1660 sec: 104069691 operations; 59205.9 current ops/sec; est completion in 5 minutes [INSERT: Count=592062, Max=12471, Min=264, Avg=1686.81, 90=2629, 99=4731, 99.9=6455, 99.99=8663] 
2023-05-01 12:12:04:853 1670 sec: 104660543 operations; 59085.2 current ops/sec; est completion in 5 minutes [INSERT: Count=590862, Max=49439, Min=399, Avg=1690.33, 90=2551, 99=4859, 99.9=7119, 99.99=41375] 
2023-05-01 12:12:14:853 1680 sec: 105257534 operations; 59699.1 current ops/sec; est completion in 5 minutes [INSERT: Count=596982, Max=42463, Min=344, Avg=1672.82, 90=2453, 99=4539, 99.9=6723, 99.99=33791] 
2023-05-01 12:12:24:853 1690 sec: 105845978 operations; 58844.4 current ops/sec; est completion in 5 minutes [INSERT: Count=588446, Max=12615, Min=406, Avg=1697.28, 90=2631, 99=4711, 99.9=6931, 99.99=8951] 
2023-05-01 12:12:34:853 1700 sec: 106435732 operations; 58975.4 current ops/sec; est completion in 4 minutes [INSERT: Count=589756, Max=45055, Min=239, Avg=1693.43, 90=2533, 99=4711, 99.9=6931, 99.99=35967] 
2023-05-01 12:12:44:853 1710 sec: 107029195 operations; 59346.3 current ops/sec; est completion in 4 minutes [INSERT: Count=593461, Max=45631, Min=315, Avg=1682.79, 90=2487, 99=4519, 99.9=6903, 99.99=34111] 
2023-05-01 12:12:54:853 1720 sec: 107617631 operations; 58843.6 current ops/sec; est completion in 4 minutes [INSERT: Count=588435, Max=9703, Min=385, Avg=1697.16, 90=2619, 99=4735, 99.9=6479, 99.99=7843] 
2023-05-01 12:13:04:853 1730 sec: 108199842 operations; 58221.1 current ops/sec; est completion in 4 minutes [INSERT: Count=582212, Max=47167, Min=402, Avg=1715.45, 90=2623, 99=4903, 99.9=7567, 99.99=32527] 
2023-05-01 12:13:14:853 1740 sec: 108790611 operations; 59076.9 current ops/sec; est completion in 4 minutes [INSERT: Count=590777, Max=44735, Min=390, Avg=1690.45, 90=2529, 99=4627, 99.9=7459, 99.99=35103] 
2023-05-01 12:13:24:853 1750 sec: 109374162 operations; 58355.1 current ops/sec; est completion in 4 minutes [INSERT: Count=583549, Max=65343, Min=352, Avg=1711.54, 90=2645, 99=4799, 99.9=6643, 99.99=40831] 
2023-05-01 12:13:34:853 1760 sec: 109956299 operations; 58213.7 current ops/sec; est completion in 4 minutes [INSERT: Count=582132, Max=53631, Min=366, Avg=1715.62, 90=2631, 99=4871, 99.9=7291, 99.99=35967] 
2023-05-01 12:13:44:853 1770 sec: 110552006 operations; 59570.7 current ops/sec; est completion in 3 minutes [INSERT: Count=595711, Max=42591, Min=442, Avg=1676.48, 90=2465, 99=4643, 99.9=7327, 99.99=33183] 
2023-05-01 12:13:54:853 1780 sec: 111140400 operations; 58839.4 current ops/sec; est completion in 3 minutes [INSERT: Count=588400, Max=10167, Min=393, Avg=1697.32, 90=2613, 99=4767, 99.9=6439, 99.99=8015] 
2023-05-01 12:14:04:853 1790 sec: 111716786 operations; 57638.6 current ops/sec; est completion in 3 minutes [INSERT: Count=576371, Max=47423, Min=372, Avg=1732.73, 90=2689, 99=5071, 99.9=7903, 99.99=33215] 
2023-05-01 12:14:14:853 1800 sec: 112314840 operations; 59805.4 current ops/sec; est completion in 3 minutes [INSERT: Count=598052, Max=41695, Min=427, Avg=1669.98, 90=2421, 99=4635, 99.9=6723, 99.99=31759] 
2023-05-01 12:14:24:853 1810 sec: 112901004 operations; 58616.4 current ops/sec; est completion in 3 minutes [INSERT: Count=586177, Max=16015, Min=435, Avg=1703.78, 90=2617, 99=4755, 99.9=6707, 99.99=11615] 
2023-05-01 12:14:34:853 1820 sec: 113478856 operations; 57785.2 current ops/sec; est completion in 3 minutes [INSERT: Count=577839, Max=43679, Min=408, Avg=1728.27, 90=2717, 99=4899, 99.9=7043, 99.99=33983] 
2023-05-01 12:14:44:853 1830 sec: 114065599 operations; 58674.3 current ops/sec; est completion in 2 minutes [INSERT: Count=586752, Max=39839, Min=368, Avg=1702.16, 90=2575, 99=5007, 99.9=7427, 99.99=32863] 
2023-05-01 12:14:54:853 1840 sec: 114656864 operations; 59126.5 current ops/sec; est completion in 2 minutes [INSERT: Count=591266, Max=16143, Min=390, Avg=1689.18, 90=2609, 99=4679, 99.9=6319, 99.99=8519] 
2023-05-01 12:15:04:853 1850 sec: 115239339 operations; 58247.5 current ops/sec; est completion in 2 minutes [INSERT: Count=582472, Max=42111, Min=403, Avg=1714.65, 90=2665, 99=4891, 99.9=7435, 99.99=33311] 
2023-05-01 12:15:14:853 1860 sec: 115823296 operations; 58395.7 current ops/sec; est completion in 2 minutes [INSERT: Count=583955, Max=40575, Min=383, Avg=1710.23, 90=2621, 99=5071, 99.9=7567, 99.99=32447] 
2023-05-01 12:15:24:853 1870 sec: 116410561 operations; 58726.5 current ops/sec; est completion in 2 minutes [INSERT: Count=587275, Max=10407, Min=394, Avg=1700.59, 90=2637, 99=4939, 99.9=6567, 99.99=7963] 
2023-05-01 12:15:34:853 1880 sec: 117000340 operations; 58977.9 current ops/sec; est completion in 2 minutes [INSERT: Count=589768, Max=45983, Min=352, Avg=1693.38, 90=2605, 99=4807, 99.9=6691, 99.99=31919] 
2023-05-01 12:15:44:853 1890 sec: 117584724 operations; 58438.4 current ops/sec; est completion in 2 minutes [INSERT: Count=584387, Max=40223, Min=395, Avg=1709.08, 90=2623, 99=5003, 99.9=7363, 99.99=33087] 
2023-05-01 12:15:54:853 1900 sec: 118172386 operations; 58766.2 current ops/sec; est completion in 1 minute [INSERT: Count=587658, Max=9807, Min=401, Avg=1699.46, 90=2647, 99=4819, 99.9=6571, 99.99=8191] 
2023-05-01 12:16:04:853 1910 sec: 118755536 operations; 58315 current ops/sec; est completion in 1 minute [INSERT: Count=583150, Max=43551, Min=372, Avg=1712.57, 90=2693, 99=4955, 99.9=7427, 99.99=34975] 
2023-05-01 12:16:14:853 1920 sec: 119346177 operations; 59064.1 current ops/sec; est completion in 1 minute [INSERT: Count=590653, Max=41919, Min=439, Avg=1690.83, 90=2573, 99=4811, 99.9=7163, 99.99=33535] 
2023-05-01 12:16:24:853 1930 sec: 119931070 operations; 58489.3 current ops/sec; est completion in 1 minute [INSERT: Count=584885, Max=15079, Min=403, Avg=1707.53, 90=2681, 99=4955, 99.9=6731, 99.99=9135] 
2023-05-01 12:16:34:853 1940 sec: 120512006 operations; 58093.6 current ops/sec; est completion in 1 minute [INSERT: Count=580937, Max=41183, Min=336, Avg=1719.21, 90=2759, 99=5035, 99.9=7355, 99.99=33279] 
2023-05-01 12:16:44:853 1950 sec: 121106947 operations; 59494.1 current ops/sec; est completion in 1 minute [INSERT: Count=594945, Max=42911, Min=417, Avg=1678.63, 90=2525, 99=4691, 99.9=7095, 99.99=32559] 
2023-05-01 12:16:54:853 1960 sec: 121693505 operations; 58655.8 current ops/sec; est completion in 54 seconds [INSERT: Count=586549, Max=13159, Min=436, Avg=1702.62, 90=2683, 99=4875, 99.9=6759, 99.99=9319] 
2023-05-01 12:17:04:853 1970 sec: 122273866 operations; 58036.1 current ops/sec; est completion in 44 seconds [INSERT: Count=580369, Max=44703, Min=436, Avg=1720.85, 90=2765, 99=5019, 99.9=7375, 99.99=35103] 
2023-05-01 12:17:14:853 1980 sec: 122865125 operations; 59125.9 current ops/sec; est completion in 35 seconds [INSERT: Count=591249, Max=40063, Min=379, Avg=1689.1, 90=2549, 99=4763, 99.9=7415, 99.99=32479] 
2023-05-01 12:17:24:853 1990 sec: 123453785 operations; 58866 current ops/sec; est completion in 25 seconds [INSERT: Count=588666, Max=10031, Min=420, Avg=1696.61, 90=2655, 99=4823, 99.9=6523, 99.99=8327] 
2023-05-01 12:17:34:853 2000 sec: 124143072 operations; 68928.7 current ops/sec; est completion in 14 seconds [INSERT: Count=689287, Max=36767, Min=387, Avg=1448.5, 90=1859, 99=3067, 99.9=6759, 99.99=33247] 
2023-05-01 12:17:44:853 2010 sec: 124852424 operations; 70935.2 current ops/sec; est completion in 3 second [INSERT: Count=709351, Max=30511, Min=240, Avg=1407.41, 90=1837, 99=2159, 99.9=6243, 99.99=24495] 
2023-05-01 12:17:50:868 2016 sec: 125000000 operations; 24534.66 current ops/sec; [CLEANUP: Count=100, Max=2215935, Min=1, Avg=22151.81, 90=4, 99=20, 99.9=2215935, 99.99=2215935] [INSERT: Count=147569, Max=9263, Min=238, Avg=1373.59, 90=1830, 99=2141, 99.9=6259, 99.99=8511] 
[OVERALL], RunTime(ms), 2016015
[OVERALL], Throughput(ops/sec), 62003.506918351304
[TOTAL_GCS_PS_Scavenge], Count, 6060
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 21038
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0435438228386198
[TOTAL_GCS_PS_MarkSweep], Count, 3
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 107
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.005307500192210872
[TOTAL_GCs], Count, 6063
[TOTAL_GC_TIME], Time(ms), 21145
[TOTAL_GC_TIME_%], Time(%), 1.0488513230308307
[CLEANUP], Operations, 100
[CLEANUP], AverageLatency(us), 22151.81
[CLEANUP], MinLatency(us), 1
[CLEANUP], MaxLatency(us), 2215935
[CLEANUP], 95thPercentileLatency(us), 4
[CLEANUP], 99thPercentileLatency(us), 20
[INSERT], Operations, 125000000
[INSERT], AverageLatency(us), 1606.78834872
[INSERT], MinLatency(us), 211
[INSERT], MaxLatency(us), 205567
[INSERT], 95thPercentileLatency(us), 2925
[INSERT], 99thPercentileLatency(us), 4467
[INSERT], Return=OK, 125000000
