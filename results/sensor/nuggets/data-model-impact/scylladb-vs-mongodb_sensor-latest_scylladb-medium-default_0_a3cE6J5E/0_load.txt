bin/ycsb load scylla -s -jvm-args=-XX:MaxRAMPercentage=85.0  -p scylla.hosts=184.72.48.92,13.57.80.218,13.52.113.149 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=zp4WRQ6vL0MbSKl -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=500000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform
/usr/java/bin/java -XX:MaxRAMPercentage=85.0 -cp /binary/ycsb/scylla-binding/conf:/binary/ycsb/conf:/binary/ycsb/lib/jackson-mapper-asl-1.9.4.jar:/binary/ycsb/lib/jackson-core-asl-1.9.4.jar:/binary/ycsb/lib/HdrHistogram-2.1.4.jar:/binary/ycsb/lib/core-0.18.0-SNAPSHOT.jar:/binary/ycsb/lib/htrace-core4-4.1.0-incubating.jar:/binary/ycsb/scylla-binding/lib/asm-commons-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16-native.jar:/binary/ycsb/scylla-binding/lib/asm-tree-5.0.3.jar:/binary/ycsb/scylla-binding/lib/slf4j-api-1.7.25.jar:/binary/ycsb/scylla-binding/lib/asm-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jnr-posix-3.0.44.jar:/binary/ycsb/scylla-binding/lib/jackson-databind-2.7.9.3.jar:/binary/ycsb/scylla-binding/lib/jnr-ffi-2.1.7.jar:/binary/ycsb/scylla-binding/lib/netty-transport-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jffi-1.2.16.jar:/binary/ycsb/scylla-binding/lib/jnr-constants-0.9.9.jar:/binary/ycsb/scylla-binding/lib/netty-buffer-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/jnr-x86asm-1.0.2.jar:/binary/ycsb/scylla-binding/lib/netty-codec-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-util-5.0.3.jar:/binary/ycsb/scylla-binding/lib/jackson-annotations-2.7.0.jar:/binary/ycsb/scylla-binding/lib/scylla-driver-core-3.10.2-scylla-1.jar:/binary/ycsb/scylla-binding/lib/jackson-core-2.7.9.jar:/binary/ycsb/scylla-binding/lib/scylla-binding-0.18.0-SNAPSHOT.jar:/binary/ycsb/scylla-binding/lib/netty-common-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/metrics-core-3.2.2.jar:/binary/ycsb/scylla-binding/lib/netty-handler-4.0.56.Final.jar:/binary/ycsb/scylla-binding/lib/asm-analysis-5.0.3.jar:/binary/ycsb/scylla-binding/lib/slf4j-simple-1.7.25.jar:/binary/ycsb/scylla-binding/lib/guava-19.0.jar site.ycsb.Client -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=184.72.48.92,13.57.80.218,13.52.113.149 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=zp4WRQ6vL0MbSKl -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=500000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -load
Command line: -db site.ycsb.db.scylla.ScyllaCQLClient -s -p scylla.hosts=184.72.48.92,13.57.80.218,13.52.113.149 -p scylla.keyspace=ycsb -p scylla.username=scylla -p scylla.password=zp4WRQ6vL0MbSKl -p scylla.writeconsistencylevel=ONE -p workload=site.ycsb.workloads.CoreWorkload -threads 400 -p recordcount=500000000 -p operationcount=999900000 -p fieldcount=10 -p fieldlength=100 -p requestdistribution=latest -p insertorder=ordered -p readproportion=0.1 -p updateproportion=0.0 -p insertproportion=0.9 -p scanproportion=0.0 -p maxscanlength=1000 -p scanlengthdistribution=uniform -load
YCSB Client 0.18.0-SNAPSHOT

Loading workload...
 (might take a few minutes for large data sets)
Starting test.
[Thread-50] INFO com.datastax.driver.core - DataStax Java driver 3.10.2-scylla-1 for Apache Cassandra
[Thread-50] INFO com.datastax.driver.core.GuavaCompatibility - Detected Guava >= 19 in the classpath, using modern compatibility layer
2023-02-27 10:36:19:283 0 sec: 0 operations; est completion in 0 second 
[Thread-50] INFO com.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.
===== Using optimized driver!!! =====
[Thread-50] INFO com.datastax.driver.core.Cluster - ===== Using optimized driver!!! =====
[Thread-50] INFO com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.
[Thread-50] INFO com.datastax.driver.core.policies.DCAwareRoundRobinPolicy - Using data-center name 'AWS_US_WEST_1' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)
[Thread-50] INFO com.datastax.driver.core.Cluster - New Cassandra host /184.72.48.92:9042 added
[Thread-50] INFO com.datastax.driver.core.Cluster - New Cassandra host /13.52.113.149:9042 added
[Thread-50] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.151.104.194:9042 added
[Thread-50] INFO com.datastax.driver.core.Cluster - New Cassandra host /13.57.80.218:9042 added
[Thread-50] INFO com.datastax.driver.core.Cluster - New Cassandra host /54.177.78.13:9042 added
[Thread-50] INFO com.datastax.driver.core.Cluster - New Cassandra host /13.57.172.12:9042 added
[Thread-50] INFO site.ycsb.db.scylla.ScyllaCQLClient - Connected to cluster: 0ca31b80-e144-40e9-9660-63c0b117bdc6

[Thread-50] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /13.52.113.149; Rack: us-west-1c

[Thread-50] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.151.104.194; Rack: us-west-1a-virtual1

[Thread-50] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /13.57.80.218; Rack: us-west-1a-virtual1

[Thread-50] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /184.72.48.92; Rack: us-west-1a

[Thread-50] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /13.57.172.12; Rack: us-west-1c

[Thread-50] INFO site.ycsb.db.scylla.ScyllaCQLClient - Datacenter: AWS_US_WEST_1; Host: /54.177.78.13; Rack: us-west-1a

[Thread-50] INFO site.ycsb.db.scylla.ScyllaCQLClient - Not using LWT

[Thread-50] INFO site.ycsb.db.scylla.ScyllaCQLClient - Read consistency: QUORUM, Write consistency: ONE

DBWrapper: report latency for each error is false and specific error codes to track for latency are: []
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-9] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-4] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-2] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-6] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-7] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-5] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-0] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-15] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-8] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-11] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-1] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-10] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-12] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-3] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-14] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
[cluster1-worker-13] WARN com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='INSERT INTO usertable (y_id,field1,field0,field7,field6,field9,field8,field3,field2,field5,field4) VALUES (?,?,?,?,?,?,?,?,?,?,?);'
2023-02-27 10:36:29:264 10 sec: 1487908 operations; 148775.92 current ops/sec; est completion in 55 minutes [INSERT: Count=1487977, Max=311807, Min=202, Avg=2493.11, 90=4891, 99=22863, 99.9=63295, 99.99=189055] 
2023-02-27 10:36:39:264 20 sec: 3728971 operations; 224128.71 current ops/sec; est completion in 44 minutes [INSERT: Count=2241106, Max=53247, Min=191, Avg=1783.66, 90=3403, 99=13959, 99.9=26079, 99.99=38591] 
2023-02-27 10:36:49:264 30 sec: 6070248 operations; 234127.7 current ops/sec; est completion in 40 minutes [INSERT: Count=2341253, Max=46623, Min=205, Avg=1706.23, 90=3213, 99=11615, 99.9=24479, 99.99=34527] 
2023-02-27 10:36:59:264 40 sec: 8350637 operations; 228038.9 current ops/sec; est completion in 39 minutes [INSERT: Count=2280404, Max=49567, Min=196, Avg=1751.93, 90=3371, 99=12207, 99.9=26079, 99.99=39231] 
2023-02-27 10:37:09:264 50 sec: 10626155 operations; 227551.8 current ops/sec; est completion in 38 minutes [INSERT: Count=2275513, Max=54719, Min=201, Avg=1755.29, 90=3307, 99=12655, 99.9=29279, 99.99=41535] 
2023-02-27 10:37:19:264 60 sec: 12938024 operations; 231186.9 current ops/sec; est completion in 37 minutes [INSERT: Count=2311870, Max=51263, Min=199, Avg=1728.16, 90=3305, 99=11007, 99.9=22127, 99.99=35103] 
2023-02-27 10:37:29:264 70 sec: 15191546 operations; 225352.2 current ops/sec; est completion in 37 minutes [INSERT: Count=2253504, Max=38847, Min=206, Avg=1772.63, 90=2911, 99=7675, 99.9=17679, 99.99=28175] 
2023-02-27 10:37:39:264 80 sec: 17470080 operations; 227853.4 current ops/sec; est completion in 36 minutes [INSERT: Count=2278554, Max=46431, Min=192, Avg=1753.3, 90=3205, 99=11455, 99.9=22383, 99.99=33887] 
2023-02-27 10:37:49:264 90 sec: 19810069 operations; 233998.9 current ops/sec; est completion in 36 minutes [INSERT: Count=2339983, Max=50335, Min=194, Avg=1707.14, 90=3247, 99=11063, 99.9=21647, 99.99=32639] 
2023-02-27 10:37:59:264 100 sec: 22108936 operations; 229886.7 current ops/sec; est completion in 36 minutes [INSERT: Count=2298859, Max=65183, Min=198, Avg=1737.74, 90=3341, 99=11399, 99.9=26111, 99.99=37823] 
2023-02-27 10:38:09:264 110 sec: 24432010 operations; 232307.4 current ops/sec; est completion in 35 minutes [INSERT: Count=2323066, Max=46399, Min=199, Avg=1719.3, 90=3279, 99=11287, 99.9=22575, 99.99=31039] 
2023-02-27 10:38:19:264 120 sec: 26706644 operations; 227463.4 current ops/sec; est completion in 35 minutes [INSERT: Count=2274760, Max=46303, Min=198, Avg=1756.52, 90=3173, 99=10743, 99.9=23167, 99.99=34271] 
2023-02-27 10:38:29:264 130 sec: 28946870 operations; 224022.6 current ops/sec; est completion in 35 minutes [INSERT: Count=2240023, Max=33951, Min=214, Avg=1780.78, 90=2925, 99=7991, 99.9=18623, 99.99=27903] 
2023-02-27 10:38:39:264 140 sec: 31142832 operations; 219574.24 current ops/sec; est completion in 35 minutes [INSERT: Count=2196042, Max=39615, Min=224, Avg=1821.54, 90=2877, 99=8471, 99.9=22303, 99.99=31071] 
2023-02-27 10:38:49:264 150 sec: 33397250 operations; 225464.35 current ops/sec; est completion in 34 minutes [INSERT: Count=2254419, Max=35071, Min=196, Avg=1770.46, 90=3141, 99=11055, 99.9=21775, 99.99=28159] 
2023-02-27 10:38:59:264 160 sec: 35694274 operations; 229702.4 current ops/sec; est completion in 34 minutes [INSERT: Count=2297022, Max=80831, Min=196, Avg=1740.64, 90=3313, 99=11823, 99.9=23215, 99.99=37663] 
2023-02-27 10:39:09:264 170 sec: 38031207 operations; 233693.3 current ops/sec; est completion in 34 minutes [INSERT: Count=2336950, Max=50559, Min=202, Avg=1709.49, 90=3207, 99=11391, 99.9=21535, 99.99=29151] 
2023-02-27 10:39:19:264 180 sec: 40309493 operations; 227805.82 current ops/sec; est completion in 34 minutes [INSERT: Count=2278277, Max=36959, Min=202, Avg=1753.39, 90=3101, 99=9791, 99.9=19487, 99.99=28751] 
2023-02-27 10:39:29:264 190 sec: 42601158 operations; 229189.42 current ops/sec; est completion in 34 minutes [INSERT: Count=2291768, Max=61599, Min=202, Avg=1743.17, 90=3147, 99=10071, 99.9=20335, 99.99=35423] 
2023-02-27 10:39:39:264 200 sec: 44883018 operations; 228186 current ops/sec; est completion in 33 minutes [INSERT: Count=2281756, Max=88895, Min=191, Avg=1750.59, 90=3135, 99=10431, 99.9=24335, 99.99=58239] 
2023-02-27 10:39:49:264 210 sec: 47198956 operations; 231570.64 current ops/sec; est completion in 33 minutes [INSERT: Count=2315942, Max=78975, Min=201, Avg=1724.88, 90=3303, 99=11127, 99.9=22271, 99.99=40511] 
2023-02-27 10:39:59:264 220 sec: 49501560 operations; 230283.43 current ops/sec; est completion in 33 minutes [INSERT: Count=2302585, Max=90623, Min=196, Avg=1734.84, 90=3239, 99=11423, 99.9=27007, 99.99=42111] 
2023-02-27 10:40:09:264 230 sec: 51738539 operations; 223697.9 current ops/sec; est completion in 33 minutes [INSERT: Count=2236946, Max=45599, Min=193, Avg=1785.33, 90=3377, 99=12799, 99.9=24367, 99.99=35007] 
2023-02-27 10:40:19:264 240 sec: 53850439 operations; 211190 current ops/sec; est completion in 33 minutes [INSERT: Count=2111963, Max=340223, Min=175, Avg=1892.43, 90=3011, 99=11679, 99.9=46847, 99.99=226943] 
2023-02-27 10:40:29:264 250 sec: 56052857 operations; 220241.8 current ops/sec; est completion in 33 minutes [INSERT: Count=2202401, Max=148479, Min=203, Avg=1813.87, 90=2931, 99=9223, 99.9=38239, 99.99=121151] 
2023-02-27 10:40:39:264 260 sec: 58213984 operations; 216112.7 current ops/sec; est completion in 32 minutes [INSERT: Count=2161114, Max=86207, Min=214, Avg=1848.63, 90=2869, 99=8047, 99.9=19823, 99.99=47615] 
2023-02-27 10:40:49:264 270 sec: 60394134 operations; 217993.2 current ops/sec; est completion in 32 minutes [INSERT: Count=2180157, Max=184575, Min=225, Avg=1831.2, 90=2855, 99=7615, 99.9=22927, 99.99=125055] 
2023-02-27 10:40:59:264 280 sec: 62631569 operations; 223765.88 current ops/sec; est completion in 32 minutes [INSERT: Count=2237430, Max=32959, Min=228, Avg=1786.72, 90=2867, 99=7539, 99.9=19663, 99.99=25567] 
2023-02-27 10:41:09:264 290 sec: 64880457 operations; 224888.8 current ops/sec; est completion in 32 minutes [INSERT: Count=2248918, Max=48927, Min=192, Avg=1776.49, 90=2881, 99=9439, 99.9=18671, 99.99=26111] 
2023-02-27 10:41:19:264 300 sec: 67107262 operations; 222658.23 current ops/sec; est completion in 32 minutes [INSERT: Count=2226786, Max=45023, Min=189, Avg=1794.03, 90=3063, 99=9439, 99.9=21135, 99.99=29135] 
2023-02-27 10:41:29:264 310 sec: 69346109 operations; 223907.09 current ops/sec; est completion in 32 minutes [INSERT: Count=2239008, Max=57023, Min=191, Avg=1784.23, 90=2955, 99=10399, 99.9=18831, 99.99=28159] 
2023-02-27 10:41:39:264 320 sec: 71613472 operations; 226736.3 current ops/sec; est completion in 31 minutes [INSERT: Count=2267197, Max=165247, Min=190, Avg=1761.94, 90=3235, 99=12151, 99.9=25791, 99.99=78591] 
2023-02-27 10:41:49:264 330 sec: 73883131 operations; 226965.9 current ops/sec; est completion in 31 minutes [INSERT: Count=2269659, Max=44383, Min=201, Avg=1760.12, 90=3063, 99=10327, 99.9=21247, 99.99=30175] 
2023-02-27 10:41:59:264 340 sec: 76206304 operations; 232317.3 current ops/sec; est completion in 31 minutes [INSERT: Count=2323151, Max=43647, Min=198, Avg=1719.45, 90=3259, 99=10103, 99.9=20799, 99.99=29839] 
2023-02-27 10:42:09:264 350 sec: 78540004 operations; 233370 current ops/sec; est completion in 31 minutes [INSERT: Count=2333700, Max=48351, Min=190, Avg=1711.56, 90=3251, 99=10583, 99.9=21887, 99.99=33631] 
2023-02-27 10:42:19:264 360 sec: 80825392 operations; 228538.8 current ops/sec; est completion in 31 minutes [INSERT: Count=2285394, Max=50495, Min=199, Avg=1748.17, 90=3305, 99=11295, 99.9=22095, 99.99=35711] 
2023-02-27 10:42:29:264 370 sec: 83056335 operations; 223094.3 current ops/sec; est completion in 30 minutes [INSERT: Count=2230962, Max=47775, Min=205, Avg=1790.75, 90=3209, 99=10903, 99.9=24127, 99.99=35903] 
2023-02-27 10:42:39:264 380 sec: 85320093 operations; 226353.16 current ops/sec; est completion in 30 minutes [INSERT: Count=2263716, Max=34399, Min=203, Avg=1764.47, 90=2971, 99=8855, 99.9=17487, 99.99=28399] 
2023-02-27 10:42:49:264 390 sec: 87592481 operations; 227261.53 current ops/sec; est completion in 30 minutes [INSERT: Count=2272408, Max=91967, Min=193, Avg=1758.01, 90=3045, 99=9671, 99.9=19727, 99.99=47039] 
2023-02-27 10:42:59:264 400 sec: 89835361 operations; 224288 current ops/sec; est completion in 30 minutes [INSERT: Count=2242874, Max=35487, Min=196, Avg=1781.39, 90=2955, 99=8511, 99.9=19391, 99.99=29519] 
2023-02-27 10:43:09:264 410 sec: 92073153 operations; 223779.2 current ops/sec; est completion in 30 minutes [INSERT: Count=2237801, Max=63743, Min=202, Avg=1785.16, 90=3049, 99=9639, 99.9=20255, 99.99=31151] 
2023-02-27 10:43:19:264 420 sec: 94319706 operations; 224655.3 current ops/sec; est completion in 30 minutes [INSERT: Count=2246552, Max=40927, Min=197, Avg=1778.09, 90=3131, 99=9647, 99.9=19439, 99.99=28207] 
2023-02-27 10:43:29:264 430 sec: 96579809 operations; 226010.3 current ops/sec; est completion in 29 minutes [INSERT: Count=2260101, Max=47711, Min=199, Avg=1767.35, 90=3233, 99=10455, 99.9=20383, 99.99=27087] 
2023-02-27 10:43:39:264 440 sec: 98826697 operations; 224688.8 current ops/sec; est completion in 29 minutes [INSERT: Count=2246890, Max=92287, Min=197, Avg=1778.26, 90=3185, 99=11903, 99.9=23903, 99.99=46335] 
2023-02-27 10:43:49:264 450 sec: 101106987 operations; 228006.2 current ops/sec; est completion in 29 minutes [INSERT: Count=2280292, Max=89535, Min=201, Avg=1751.27, 90=3101, 99=10559, 99.9=22303, 99.99=35615] 
2023-02-27 10:43:59:264 460 sec: 103377894 operations; 227113.41 current ops/sec; est completion in 29 minutes [INSERT: Count=2270880, Max=44191, Min=196, Avg=1759.61, 90=3345, 99=11823, 99.9=26255, 99.99=34495] 
2023-02-27 10:44:09:264 470 sec: 105669155 operations; 229103.19 current ops/sec; est completion in 29 minutes [INSERT: Count=2291281, Max=49471, Min=199, Avg=1743.54, 90=3135, 99=10111, 99.9=21807, 99.99=32239] 
2023-02-27 10:44:19:264 480 sec: 107938806 operations; 226987.8 current ops/sec; est completion in 29 minutes [INSERT: Count=2269653, Max=43231, Min=205, Avg=1760, 90=3083, 99=10111, 99.9=22143, 99.99=31919] 
2023-02-27 10:44:29:264 490 sec: 110233467 operations; 229466.1 current ops/sec; est completion in 28 minutes [INSERT: Count=2294655, Max=44543, Min=189, Avg=1740.57, 90=3235, 99=10695, 99.9=21967, 99.99=31487] 
2023-02-27 10:44:39:264 500 sec: 112505715 operations; 227202.08 current ops/sec; est completion in 28 minutes [INSERT: Count=2272260, Max=51999, Min=188, Avg=1758.52, 90=3235, 99=10903, 99.9=23087, 99.99=42783] 
2023-02-27 10:44:49:264 510 sec: 114760933 operations; 225544.35 current ops/sec; est completion in 28 minutes [INSERT: Count=2255258, Max=48703, Min=206, Avg=1771.35, 90=3025, 99=9999, 99.9=21775, 99.99=32255] 
2023-02-27 10:44:59:264 520 sec: 116985627 operations; 222469.4 current ops/sec; est completion in 28 minutes [INSERT: Count=2224659, Max=53503, Min=197, Avg=1795.82, 90=3041, 99=9663, 99.9=21487, 99.99=33055] 
2023-02-27 10:45:09:264 530 sec: 119241636 operations; 225578.34 current ops/sec; est completion in 28 minutes [INSERT: Count=2255989, Max=63263, Min=206, Avg=1770.41, 90=3051, 99=9815, 99.9=20399, 99.99=32111] 
2023-02-27 10:45:19:264 540 sec: 121499269 operations; 225785.88 current ops/sec; est completion in 28 minutes [INSERT: Count=2257639, Max=41823, Min=208, Avg=1769.81, 90=2969, 99=8895, 99.9=18815, 99.99=27615] 
2023-02-27 10:45:29:264 550 sec: 123705592 operations; 220632.3 current ops/sec; est completion in 27 minutes [INSERT: Count=2206327, Max=33823, Min=205, Avg=1810.67, 90=2853, 99=7743, 99.9=17295, 99.99=25551] 
2023-02-27 10:45:39:264 560 sec: 125910468 operations; 220487.6 current ops/sec; est completion in 27 minutes [INSERT: Count=2204864, Max=109055, Min=222, Avg=1811.9, 90=2819, 99=7691, 99.9=17183, 99.99=39071] 
2023-02-27 10:45:49:274 570 sec: 128143081 operations; 223038.26 current ops/sec; est completion in 27 minutes [INSERT: Count=2232626, Max=32751, Min=221, Avg=1788.77, 90=2845, 99=7615, 99.9=15839, 99.99=22991] 
2023-02-27 10:45:59:264 580 sec: 130372297 operations; 223144.74 current ops/sec; est completion in 27 minutes [INSERT: Count=2229199, Max=30031, Min=224, Avg=1792.47, 90=2851, 99=7283, 99.9=18095, 99.99=22399] 
2023-02-27 10:46:09:264 590 sec: 132576336 operations; 220403.9 current ops/sec; est completion in 27 minutes [INSERT: Count=2204045, Max=45791, Min=222, Avg=1812.58, 90=2839, 99=8263, 99.9=19151, 99.99=36095] 
2023-02-27 10:46:19:264 600 sec: 134792719 operations; 221638.3 current ops/sec; est completion in 27 minutes [INSERT: Count=2216379, Max=138879, Min=217, Avg=1802.44, 90=2851, 99=7439, 99.9=18543, 99.99=127103] 
2023-02-27 10:46:29:264 610 sec: 137008002 operations; 221506.15 current ops/sec; est completion in 26 minutes [INSERT: Count=2215282, Max=47519, Min=219, Avg=1803.45, 90=2859, 99=7879, 99.9=17615, 99.99=31535] 
2023-02-27 10:46:39:264 620 sec: 139249255 operations; 224147.71 current ops/sec; est completion in 26 minutes [INSERT: Count=2241240, Max=84095, Min=224, Avg=1782.42, 90=2803, 99=6907, 99.9=16383, 99.99=24191] 
2023-02-27 10:46:49:264 630 sec: 141459974 operations; 221071.9 current ops/sec; est completion in 26 minutes [INSERT: Count=2210717, Max=155775, Min=223, Avg=1800.1, 90=2759, 99=7495, 99.9=17183, 99.99=28543] 
2023-02-27 10:46:59:264 640 sec: 143677932 operations; 221795.8 current ops/sec; est completion in 26 minutes [INSERT: Count=2217969, Max=128895, Min=222, Avg=1808.2, 90=2809, 99=8055, 99.9=20143, 99.99=33439] 
2023-02-27 10:47:09:264 650 sec: 145885908 operations; 220797.6 current ops/sec; est completion in 26 minutes [INSERT: Count=2207982, Max=29615, Min=217, Avg=1809.27, 90=2901, 99=8139, 99.9=16719, 99.99=21695] 
2023-02-27 10:47:19:264 660 sec: 148112255 operations; 222634.7 current ops/sec; est completion in 26 minutes [INSERT: Count=2226352, Max=40255, Min=210, Avg=1794.46, 90=2781, 99=7271, 99.9=17583, 99.99=24543] 
2023-02-27 10:47:29:264 670 sec: 150297477 operations; 218500.35 current ops/sec; est completion in 25 minutes [INSERT: Count=2185224, Max=33823, Min=229, Avg=1828.19, 90=2769, 99=7995, 99.9=18847, 99.99=26079] 
2023-02-27 10:47:39:264 680 sec: 152489777 operations; 219251.93 current ops/sec; est completion in 25 minutes [INSERT: Count=2192285, Max=149375, Min=219, Avg=1822.22, 90=2751, 99=7895, 99.9=18703, 99.99=85183] 
2023-02-27 10:47:49:264 690 sec: 154680017 operations; 219024 current ops/sec; est completion in 25 minutes [INSERT: Count=2190269, Max=104959, Min=222, Avg=1824.04, 90=2829, 99=10215, 99.9=23183, 99.99=71231] 
2023-02-27 10:47:59:264 700 sec: 156902779 operations; 222276.2 current ops/sec; est completion in 25 minutes [INSERT: Count=2222729, Max=41439, Min=198, Avg=1797.28, 90=2895, 99=8135, 99.9=19407, 99.99=29679] 
2023-02-27 10:48:09:264 710 sec: 159155544 operations; 225276.5 current ops/sec; est completion in 25 minutes [INSERT: Count=2252769, Max=90623, Min=210, Avg=1773.1, 90=3021, 99=9327, 99.9=18175, 99.99=27935] 
2023-02-27 10:48:19:264 720 sec: 161370527 operations; 221498.3 current ops/sec; est completion in 25 minutes [INSERT: Count=2214982, Max=60031, Min=211, Avg=1803.74, 90=2845, 99=7771, 99.9=18879, 99.99=32927] 
2023-02-27 10:48:29:264 730 sec: 163591712 operations; 222118.5 current ops/sec; est completion in 25 minutes [INSERT: Count=2221181, Max=53183, Min=196, Avg=1798.66, 90=3045, 99=9783, 99.9=23983, 99.99=39071] 
2023-02-27 10:48:39:264 740 sec: 165850150 operations; 225843.8 current ops/sec; est completion in 24 minutes [INSERT: Count=2258457, Max=114815, Min=201, Avg=1768.67, 90=3055, 99=10335, 99.9=24895, 99.99=72511] 
2023-02-27 10:48:49:264 750 sec: 168138388 operations; 228823.8 current ops/sec; est completion in 24 minutes [INSERT: Count=2288225, Max=43903, Min=194, Avg=1745.82, 90=3143, 99=11143, 99.9=22303, 99.99=31695] 
2023-02-27 10:48:59:264 760 sec: 170413652 operations; 227526.4 current ops/sec; est completion in 24 minutes [INSERT: Count=2275265, Max=44383, Min=189, Avg=1755.7, 90=3225, 99=9823, 99.9=21279, 99.99=32527] 
2023-02-27 10:49:09:264 770 sec: 172697955 operations; 228430.3 current ops/sec; est completion in 24 minutes [INSERT: Count=2284309, Max=42431, Min=200, Avg=1748.93, 90=3097, 99=8551, 99.9=17727, 99.99=28127] 
2023-02-27 10:49:19:264 780 sec: 174954643 operations; 225668.8 current ops/sec; est completion in 24 minutes [INSERT: Count=2256694, Max=107007, Min=205, Avg=1770.25, 90=3069, 99=9271, 99.9=21551, 99.99=38559] 
2023-02-27 10:49:29:264 790 sec: 177205087 operations; 225044.4 current ops/sec; est completion in 24 minutes [INSERT: Count=2250425, Max=64831, Min=208, Avg=1775.11, 90=2951, 99=8983, 99.9=19247, 99.99=27567] 
2023-02-27 10:49:39:264 800 sec: 179465638 operations; 226055.1 current ops/sec; est completion in 23 minutes [INSERT: Count=2260561, Max=67583, Min=208, Avg=1767.15, 90=2985, 99=9623, 99.9=20015, 99.99=37375] 
2023-02-27 10:49:49:264 810 sec: 181709688 operations; 224405 current ops/sec; est completion in 23 minutes [INSERT: Count=2244044, Max=84031, Min=195, Avg=1775.32, 90=3045, 99=10055, 99.9=22063, 99.99=36127] 
2023-02-27 10:49:59:264 820 sec: 183972486 operations; 226257.17 current ops/sec; est completion in 23 minutes [INSERT: Count=2262812, Max=97279, Min=202, Avg=1770.27, 90=3055, 99=9495, 99.9=19231, 99.99=33055] 
2023-02-27 10:50:09:264 830 sec: 186203795 operations; 223153.22 current ops/sec; est completion in 23 minutes [INSERT: Count=2231294, Max=60799, Min=196, Avg=1790.54, 90=3011, 99=10015, 99.9=19535, 99.99=30911] 
2023-02-27 10:50:19:264 840 sec: 188380359 operations; 217656.4 current ops/sec; est completion in 23 minutes [INSERT: Count=2176577, Max=90751, Min=209, Avg=1835.47, 90=2891, 99=9471, 99.9=25711, 99.99=37887] 
2023-02-27 10:50:29:264 850 sec: 190642426 operations; 226206.7 current ops/sec; est completion in 23 minutes [INSERT: Count=2262097, Max=41087, Min=213, Avg=1766, 90=2811, 99=7239, 99.9=16287, 99.99=22447] 
2023-02-27 10:50:39:264 860 sec: 192835952 operations; 219352.6 current ops/sec; est completion in 22 minutes [INSERT: Count=2193489, Max=144639, Min=206, Avg=1821.25, 90=2771, 99=7395, 99.9=19855, 99.99=98175] 
2023-02-27 10:50:49:264 870 sec: 195086774 operations; 225082.2 current ops/sec; est completion in 22 minutes [INSERT: Count=2250822, Max=39327, Min=198, Avg=1774.85, 90=3009, 99=8607, 99.9=18559, 99.99=26223] 
2023-02-27 10:50:59:264 880 sec: 197371946 operations; 228517.2 current ops/sec; est completion in 22 minutes [INSERT: Count=2285172, Max=41983, Min=195, Avg=1748.14, 90=3071, 99=8535, 99.9=18719, 99.99=27071] 
2023-02-27 10:51:09:264 890 sec: 199625589 operations; 225364.3 current ops/sec; est completion in 22 minutes [INSERT: Count=2253627, Max=44447, Min=190, Avg=1772.45, 90=3023, 99=9527, 99.9=20191, 99.99=30623] 
2023-02-27 10:51:19:264 900 sec: 201865117 operations; 223952.8 current ops/sec; est completion in 22 minutes [INSERT: Count=2239546, Max=46335, Min=197, Avg=1784.11, 90=3051, 99=8511, 99.9=20303, 99.99=33151] 
2023-02-27 10:51:29:264 910 sec: 204129412 operations; 226429.5 current ops/sec; est completion in 21 minutes [INSERT: Count=2264282, Max=30431, Min=197, Avg=1764.12, 90=3023, 99=8279, 99.9=17263, 99.99=24927] 
2023-02-27 10:51:39:264 920 sec: 206325880 operations; 219646.8 current ops/sec; est completion in 21 minutes [INSERT: Count=2196483, Max=172927, Min=176, Avg=1819.02, 90=2945, 99=9639, 99.9=19727, 99.99=126847] 
2023-02-27 10:51:49:264 930 sec: 208542477 operations; 221637.54 current ops/sec; est completion in 21 minutes [INSERT: Count=2216599, Max=194175, Min=186, Avg=1802.31, 90=2867, 99=9519, 99.9=18591, 99.99=100671] 
2023-02-27 10:51:59:264 940 sec: 210795622 operations; 225337.03 current ops/sec; est completion in 21 minutes [INSERT: Count=2253129, Max=48511, Min=194, Avg=1772.97, 90=3025, 99=10895, 99.9=20287, 99.99=29775] 
2023-02-27 10:52:09:264 950 sec: 213079480 operations; 228385.8 current ops/sec; est completion in 21 minutes [INSERT: Count=2283864, Max=80767, Min=207, Avg=1749.09, 90=3125, 99=10047, 99.9=22463, 99.99=37919] 
2023-02-27 10:52:19:264 960 sec: 215331764 operations; 225228.4 current ops/sec; est completion in 21 minutes [INSERT: Count=2252276, Max=45887, Min=189, Avg=1773.53, 90=3271, 99=11599, 99.9=24431, 99.99=37567] 
2023-02-27 10:52:29:264 970 sec: 217631729 operations; 229996.5 current ops/sec; est completion in 20 minutes [INSERT: Count=2299969, Max=48799, Min=204, Avg=1736.93, 90=3227, 99=11271, 99.9=22527, 99.99=34847] 
2023-02-27 10:52:39:264 980 sec: 219947938 operations; 231620.9 current ops/sec; est completion in 20 minutes [INSERT: Count=2316217, Max=89727, Min=204, Avg=1724.79, 90=3097, 99=9639, 99.9=20639, 99.99=43103] 
2023-02-27 10:52:49:264 990 sec: 222225905 operations; 227796.7 current ops/sec; est completion in 20 minutes [INSERT: Count=2277982, Max=35871, Min=199, Avg=1753.8, 90=2915, 99=7707, 99.9=17327, 99.99=22463] 
2023-02-27 10:52:59:264 1000 sec: 224471263 operations; 224513.35 current ops/sec; est completion in 20 minutes [INSERT: Count=2245341, Max=42367, Min=210, Avg=1779.17, 90=2903, 99=8075, 99.9=17711, 99.99=25055] 
2023-02-27 10:53:09:264 1010 sec: 226731193 operations; 226015.6 current ops/sec; est completion in 20 minutes [INSERT: Count=2259928, Max=37247, Min=207, Avg=1767.56, 90=3093, 99=9719, 99.9=20655, 99.99=29711] 
2023-02-27 10:53:19:264 1020 sec: 229024178 operations; 229298.5 current ops/sec; est completion in 20 minutes [INSERT: Count=2292988, Max=49599, Min=198, Avg=1742.2, 90=3217, 99=9775, 99.9=21311, 99.99=31743] 
2023-02-27 10:53:29:264 1030 sec: 231311909 operations; 228773.1 current ops/sec; est completion in 19 minutes [INSERT: Count=2287750, Max=89471, Min=198, Avg=1746.13, 90=3165, 99=10263, 99.9=20911, 99.99=40479] 
2023-02-27 10:53:39:264 1040 sec: 233579730 operations; 226782.1 current ops/sec; est completion in 19 minutes [INSERT: Count=2267795, Max=110015, Min=198, Avg=1761.66, 90=3215, 99=10391, 99.9=25775, 99.99=102719] 
2023-02-27 10:53:49:264 1050 sec: 235874237 operations; 229450.7 current ops/sec; est completion in 19 minutes [INSERT: Count=2294503, Max=92287, Min=189, Avg=1740.76, 90=3129, 99=9079, 99.9=21183, 99.99=53791] 
2023-02-27 10:53:59:264 1060 sec: 238124621 operations; 225038.4 current ops/sec; est completion in 19 minutes [INSERT: Count=2250383, Max=31263, Min=212, Avg=1775.51, 90=2877, 99=7835, 99.9=17295, 99.99=23519] 
2023-02-27 10:54:09:264 1070 sec: 240342709 operations; 221808.8 current ops/sec; est completion in 19 minutes [INSERT: Count=2218090, Max=43103, Min=204, Avg=1800.82, 90=2923, 99=9111, 99.9=19663, 99.99=34431] 
2023-02-27 10:54:19:264 1080 sec: 242568363 operations; 222543.15 current ops/sec; est completion in 19 minutes [INSERT: Count=2225663, Max=83583, Min=197, Avg=1794.92, 90=2965, 99=9279, 99.9=19375, 99.99=28239] 
2023-02-27 10:54:29:264 1090 sec: 244818141 operations; 225000.3 current ops/sec; est completion in 18 minutes [INSERT: Count=2249777, Max=42111, Min=206, Avg=1775.83, 90=3073, 99=9519, 99.9=21167, 99.99=31039] 
2023-02-27 10:54:39:264 1100 sec: 247087359 operations; 226921.8 current ops/sec; est completion in 18 minutes [INSERT: Count=2269206, Max=102591, Min=209, Avg=1760.39, 90=3021, 99=9247, 99.9=20111, 99.99=63775] 
2023-02-27 10:54:49:264 1110 sec: 249372166 operations; 228480.7 current ops/sec; est completion in 18 minutes [INSERT: Count=2284822, Max=32287, Min=207, Avg=1748.46, 90=2993, 99=9175, 99.9=17871, 99.99=24751] 
2023-02-27 10:54:59:264 1120 sec: 251608069 operations; 223590.3 current ops/sec; est completion in 18 minutes [INSERT: Count=2235898, Max=43967, Min=193, Avg=1786.69, 90=3033, 99=9391, 99.9=20271, 99.99=29759] 
2023-02-27 10:55:09:264 1130 sec: 253854781 operations; 224671.2 current ops/sec; est completion in 18 minutes [INSERT: Count=2246709, Max=36095, Min=214, Avg=1778.16, 90=2859, 99=7279, 99.9=17263, 99.99=27407] 
2023-02-27 10:55:19:264 1140 sec: 256073354 operations; 221857.3 current ops/sec; est completion in 18 minutes [INSERT: Count=2218574, Max=50111, Min=210, Avg=1800.72, 90=2861, 99=7559, 99.9=16719, 99.99=30719] 
2023-02-27 10:55:29:264 1150 sec: 258278703 operations; 220534.9 current ops/sec; est completion in 17 minutes [INSERT: Count=2205344, Max=33023, Min=216, Avg=1811.46, 90=2787, 99=7583, 99.9=16767, 99.99=29151] 
2023-02-27 10:55:39:264 1160 sec: 260467844 operations; 218914.1 current ops/sec; est completion in 17 minutes [INSERT: Count=2189127, Max=111807, Min=216, Avg=1816.95, 90=2779, 99=7259, 99.9=18447, 99.99=46271] 
2023-02-27 10:55:49:264 1170 sec: 262643571 operations; 217572.7 current ops/sec; est completion in 17 minutes [INSERT: Count=2175734, Max=128639, Min=227, Avg=1842.23, 90=2785, 99=7623, 99.9=19103, 99.99=67199] 
2023-02-27 10:55:59:264 1180 sec: 264846771 operations; 220297.97 current ops/sec; est completion in 17 minutes [INSERT: Count=2203216, Max=178943, Min=214, Avg=1815.16, 90=2807, 99=7511, 99.9=17887, 99.99=133887] 
2023-02-27 10:56:09:264 1190 sec: 267070070 operations; 222352.14 current ops/sec; est completion in 17 minutes [INSERT: Count=2223306, Max=105407, Min=222, Avg=1796.93, 90=2805, 99=6979, 99.9=17455, 99.99=32991] 
2023-02-27 10:56:19:264 1200 sec: 269276108 operations; 220581.74 current ops/sec; est completion in 17 minutes [INSERT: Count=2206044, Max=36351, Min=224, Avg=1810.89, 90=2795, 99=6983, 99.9=17631, 99.99=23439] 
2023-02-27 10:56:29:264 1210 sec: 271500269 operations; 222416.1 current ops/sec; est completion in 16 minutes [INSERT: Count=2224150, Max=35839, Min=222, Avg=1796.14, 90=2789, 99=7435, 99.9=17727, 99.99=24783] 
2023-02-27 10:56:39:264 1220 sec: 273666625 operations; 216635.6 current ops/sec; est completion in 16 minutes [INSERT: Count=2166342, Max=225663, Min=207, Avg=1844.12, 90=2809, 99=7855, 99.9=20335, 99.99=132095] 
2023-02-27 10:56:49:264 1230 sec: 275885929 operations; 221952.6 current ops/sec; est completion in 16 minutes [INSERT: Count=2219332, Max=143743, Min=202, Avg=1800.13, 90=2763, 99=6867, 99.9=15351, 99.99=78591] 
2023-02-27 10:56:59:264 1240 sec: 278082715 operations; 219656.63 current ops/sec; est completion in 16 minutes [INSERT: Count=2196771, Max=33407, Min=232, Avg=1818.51, 90=2733, 99=6959, 99.9=17839, 99.99=26575] 
2023-02-27 10:57:09:264 1250 sec: 280272920 operations; 219020.5 current ops/sec; est completion in 16 minutes [INSERT: Count=2190206, Max=41279, Min=223, Avg=1824.09, 90=2781, 99=7167, 99.9=17503, 99.99=31599] 
2023-02-27 10:57:19:264 1260 sec: 282455043 operations; 218234.12 current ops/sec; est completion in 16 minutes [INSERT: Count=2182079, Max=42655, Min=227, Avg=1829.4, 90=2829, 99=7471, 99.9=18655, 99.99=37343] 
2023-02-27 10:57:29:264 1270 sec: 284671879 operations; 221683.6 current ops/sec; est completion in 16 minutes [INSERT: Count=2216901, Max=24655, Min=230, Avg=1803.55, 90=2787, 99=6671, 99.9=15271, 99.99=19135] 
2023-02-27 10:57:39:264 1280 sec: 286860462 operations; 218858.3 current ops/sec; est completion in 15 minutes [INSERT: Count=2188564, Max=158591, Min=218, Avg=1825.34, 90=2805, 99=8231, 99.9=17663, 99.99=116415] 
2023-02-27 10:57:49:264 1290 sec: 289032561 operations; 217209.9 current ops/sec; est completion in 15 minutes [INSERT: Count=2172087, Max=41663, Min=217, Avg=1835.1, 90=2867, 99=7987, 99.9=19375, 99.99=33055] 
2023-02-27 10:57:59:264 1300 sec: 291241788 operations; 220900.61 current ops/sec; est completion in 15 minutes [INSERT: Count=2209231, Max=97855, Min=227, Avg=1812.41, 90=2775, 99=6967, 99.9=17455, 99.99=32303] 
2023-02-27 10:58:09:264 1310 sec: 293431078 operations; 218950.9 current ops/sec; est completion in 15 minutes [INSERT: Count=2189296, Max=214271, Min=217, Avg=1824.79, 90=2721, 99=6627, 99.9=16863, 99.99=143999] 
2023-02-27 10:58:19:264 1320 sec: 295640125 operations; 220904.7 current ops/sec; est completion in 15 minutes [INSERT: Count=2209040, Max=48191, Min=221, Avg=1808.53, 90=2753, 99=6799, 99.9=17231, 99.99=38847] 
2023-02-27 10:58:29:264 1330 sec: 297854883 operations; 221475.8 current ops/sec; est completion in 15 minutes [INSERT: Count=2214755, Max=38271, Min=216, Avg=1803.8, 90=2785, 99=6947, 99.9=16959, 99.99=25631] 
2023-02-27 10:58:39:264 1340 sec: 300052226 operations; 219734.3 current ops/sec; est completion in 14 minutes [INSERT: Count=2197341, Max=131711, Min=217, Avg=1818.04, 90=2767, 99=7075, 99.9=18495, 99.99=100351] 
2023-02-27 10:58:49:264 1350 sec: 302236625 operations; 218439.9 current ops/sec; est completion in 14 minutes [INSERT: Count=2184406, Max=41791, Min=225, Avg=1828.94, 90=2795, 99=8003, 99.9=17503, 99.99=26495] 
2023-02-27 10:58:59:264 1360 sec: 304422191 operations; 218556.6 current ops/sec; est completion in 14 minutes [INSERT: Count=2185567, Max=43135, Min=200, Avg=1827.9, 90=2807, 99=8711, 99.9=17839, 99.99=25583] 
2023-02-27 10:59:09:264 1370 sec: 306624411 operations; 220222 current ops/sec; est completion in 14 minutes [INSERT: Count=2202211, Max=39263, Min=230, Avg=1814.07, 90=2803, 99=7155, 99.9=17759, 99.99=31791] 
2023-02-27 10:59:19:264 1380 sec: 308775870 operations; 215145.9 current ops/sec; est completion in 14 minutes [INSERT: Count=2151461, Max=217599, Min=196, Avg=1856.93, 90=2747, 99=7311, 99.9=24095, 99.99=166399] 
2023-02-27 10:59:29:264 1390 sec: 310973363 operations; 219727.33 current ops/sec; est completion in 14 minutes [INSERT: Count=2197496, Max=35807, Min=225, Avg=1817.9, 90=2781, 99=7215, 99.9=17679, 99.99=25023] 
2023-02-27 10:59:39:264 1400 sec: 313119470 operations; 214632.16 current ops/sec; est completion in 13 minutes [INSERT: Count=2146109, Max=190079, Min=219, Avg=1861.67, 90=2751, 99=8123, 99.9=21727, 99.99=131007] 
2023-02-27 10:59:49:264 1410 sec: 315301960 operations; 218249 current ops/sec; est completion in 13 minutes [INSERT: Count=2182489, Max=216063, Min=204, Avg=1830.49, 90=2761, 99=7283, 99.9=25599, 99.99=142847] 
2023-02-27 10:59:59:264 1420 sec: 317509036 operations; 220685.53 current ops/sec; est completion in 13 minutes [INSERT: Count=2207076, Max=133503, Min=209, Avg=1810.07, 90=2747, 99=7019, 99.9=19343, 99.99=55903] 
2023-02-27 11:00:09:264 1430 sec: 319697212 operations; 218817.6 current ops/sec; est completion in 13 minutes [INSERT: Count=2188172, Max=40799, Min=230, Avg=1825.71, 90=2859, 99=7495, 99.9=18175, 99.99=33535] 
2023-02-27 11:00:19:264 1440 sec: 321922542 operations; 222555.26 current ops/sec; est completion in 13 minutes [INSERT: Count=2225333, Max=35711, Min=227, Avg=1795.23, 90=2767, 99=6867, 99.9=17199, 99.99=25327] 
2023-02-27 11:00:29:264 1450 sec: 324136509 operations; 221396.7 current ops/sec; est completion in 13 minutes [INSERT: Count=2213961, Max=45599, Min=230, Avg=1804.4, 90=2765, 99=7059, 99.9=17823, 99.99=33951] 
2023-02-27 11:00:39:264 1460 sec: 326338603 operations; 220187.38 current ops/sec; est completion in 12 minutes [INSERT: Count=2202095, Max=33503, Min=226, Avg=1814.24, 90=2757, 99=6859, 99.9=16895, 99.99=21231] 
2023-02-27 11:00:49:264 1470 sec: 328525633 operations; 218724.87 current ops/sec; est completion in 12 minutes [INSERT: Count=2187026, Max=43871, Min=227, Avg=1826.7, 90=2771, 99=6835, 99.9=18623, 99.99=31919] 
2023-02-27 11:00:59:264 1480 sec: 330739989 operations; 221435.6 current ops/sec; est completion in 12 minutes [INSERT: Count=2214359, Max=35423, Min=226, Avg=1803.9, 90=2805, 99=7275, 99.9=18543, 99.99=27599] 
2023-02-27 11:01:09:264 1490 sec: 332969609 operations; 222939.71 current ops/sec; est completion in 12 minutes [INSERT: Count=2229626, Max=102975, Min=216, Avg=1791.99, 90=2751, 99=6935, 99.9=17775, 99.99=30831] 
2023-02-27 11:01:19:264 1500 sec: 335194844 operations; 222545.75 current ops/sec; est completion in 12 minutes [INSERT: Count=2225232, Max=40095, Min=212, Avg=1795.27, 90=2729, 99=7079, 99.9=16351, 99.99=24831] 
2023-02-27 11:01:29:264 1510 sec: 337429537 operations; 223469.3 current ops/sec; est completion in 12 minutes [INSERT: Count=2234694, Max=74047, Min=235, Avg=1787.59, 90=2773, 99=7283, 99.9=17919, 99.99=36831] 
2023-02-27 11:01:39:264 1520 sec: 339685322 operations; 225555.94 current ops/sec; est completion in 11 minutes [INSERT: Count=2255786, Max=33855, Min=220, Avg=1771, 90=2803, 99=7399, 99.9=17967, 99.99=27551] 
2023-02-27 11:01:49:264 1530 sec: 341947521 operations; 226242.52 current ops/sec; est completion in 11 minutes [INSERT: Count=2262203, Max=41183, Min=216, Avg=1765.98, 90=2893, 99=8179, 99.9=19999, 99.99=34879] 
2023-02-27 11:01:59:264 1540 sec: 344177830 operations; 223030.9 current ops/sec; est completion in 11 minutes [INSERT: Count=2230299, Max=166655, Min=184, Avg=1791.17, 90=2891, 99=8727, 99.9=24639, 99.99=111807] 
2023-02-27 11:02:09:264 1550 sec: 346403333 operations; 222550.3 current ops/sec; est completion in 11 minutes [INSERT: Count=2225513, Max=117695, Min=212, Avg=1795, 90=2829, 99=7903, 99.9=18479, 99.99=55391] 
2023-02-27 11:02:19:264 1560 sec: 348654096 operations; 225076.3 current ops/sec; est completion in 11 minutes [INSERT: Count=2250756, Max=39103, Min=212, Avg=1774.94, 90=2937, 99=7527, 99.9=20079, 99.99=31823] 
2023-02-27 11:02:29:264 1570 sec: 350939381 operations; 228505.65 current ops/sec; est completion in 11 minutes [INSERT: Count=2285281, Max=99263, Min=209, Avg=1748.11, 90=2963, 99=7507, 99.9=17903, 99.99=41823] 
2023-02-27 11:02:39:264 1580 sec: 353193735 operations; 225435.4 current ops/sec; est completion in 10 minutes [INSERT: Count=2254352, Max=110335, Min=202, Avg=1771.99, 90=2967, 99=8775, 99.9=18895, 99.99=29407] 
2023-02-27 11:02:49:264 1590 sec: 355444630 operations; 225112.01 current ops/sec; est completion in 10 minutes [INSERT: Count=2250906, Max=120895, Min=208, Avg=1774.98, 90=2963, 99=8231, 99.9=18655, 99.99=106495] 
2023-02-27 11:02:59:264 1600 sec: 357698312 operations; 225368.2 current ops/sec; est completion in 10 minutes [INSERT: Count=2253679, Max=40735, Min=207, Avg=1772.82, 90=2941, 99=7735, 99.9=19295, 99.99=26495] 
2023-02-27 11:03:09:264 1610 sec: 359909260 operations; 221094.8 current ops/sec; est completion in 10 minutes [INSERT: Count=2210951, Max=56031, Min=215, Avg=1806.98, 90=2877, 99=8471, 99.9=21919, 99.99=30783] 
2023-02-27 11:03:19:264 1620 sec: 362133260 operations; 222377.76 current ops/sec; est completion in 10 minutes [INSERT: Count=2223991, Max=35647, Min=225, Avg=1796.45, 90=2825, 99=7659, 99.9=18143, 99.99=25615] 
2023-02-27 11:03:29:264 1630 sec: 364346667 operations; 221362.84 current ops/sec; est completion in 10 minutes [INSERT: Count=2213419, Max=137983, Min=198, Avg=1805.01, 90=2815, 99=8639, 99.9=18623, 99.99=85119] 
2023-02-27 11:03:39:264 1640 sec: 366571192 operations; 222452.5 current ops/sec; est completion in 9 minutes [INSERT: Count=2224517, Max=83519, Min=214, Avg=1795.94, 90=2839, 99=7871, 99.9=23455, 99.99=38943] 
2023-02-27 11:03:49:264 1650 sec: 368824979 operations; 225378.7 current ops/sec; est completion in 9 minutes [INSERT: Count=2253794, Max=34975, Min=211, Avg=1772.59, 90=2899, 99=8131, 99.9=16799, 99.99=25567] 
2023-02-27 11:03:59:264 1660 sec: 371072388 operations; 224740.9 current ops/sec; est completion in 9 minutes [INSERT: Count=2247405, Max=111487, Min=202, Avg=1777.67, 90=2987, 99=8799, 99.9=20319, 99.99=47999] 
2023-02-27 11:04:09:264 1670 sec: 373323789 operations; 225140.1 current ops/sec; est completion in 9 minutes [INSERT: Count=2251400, Max=108799, Min=209, Avg=1774.52, 90=2905, 99=8543, 99.9=20895, 99.99=36927] 
2023-02-27 11:04:19:264 1680 sec: 375560018 operations; 223600.54 current ops/sec; est completion in 9 minutes [INSERT: Count=2236240, Max=87423, Min=214, Avg=1786.68, 90=2907, 99=8999, 99.9=24335, 99.99=31039] 
2023-02-27 11:04:29:264 1690 sec: 377849336 operations; 228931.8 current ops/sec; est completion in 9 minutes [INSERT: Count=2289323, Max=101503, Min=207, Avg=1744.96, 90=2963, 99=8383, 99.9=19055, 99.99=35071] 
2023-02-27 11:04:39:264 1700 sec: 380127148 operations; 227803.98 current ops/sec; est completion in 8 minutes [INSERT: Count=2277794, Max=41087, Min=211, Avg=1754.05, 90=2987, 99=8631, 99.9=19615, 99.99=29695] 
2023-02-27 11:04:49:264 1710 sec: 382343252 operations; 221610.4 current ops/sec; est completion in 8 minutes [INSERT: Count=2216097, Max=55679, Min=207, Avg=1802.76, 90=2947, 99=8799, 99.9=20767, 99.99=36959] 
2023-02-27 11:04:59:264 1720 sec: 384572264 operations; 222878.91 current ops/sec; est completion in 8 minutes [INSERT: Count=2229015, Max=49311, Min=214, Avg=1792.33, 90=2831, 99=7519, 99.9=18223, 99.99=40159] 
2023-02-27 11:05:09:264 1730 sec: 386813306 operations; 224126.61 current ops/sec; est completion in 8 minutes [INSERT: Count=2241037, Max=30623, Min=218, Avg=1782.87, 90=2819, 99=7255, 99.9=17807, 99.99=24399] 
2023-02-27 11:05:19:264 1740 sec: 389047227 operations; 223392.1 current ops/sec; est completion in 8 minutes [INSERT: Count=2233931, Max=37983, Min=207, Avg=1788.38, 90=2815, 99=7651, 99.9=19055, 99.99=27215] 
2023-02-27 11:05:29:264 1750 sec: 391252471 operations; 220524.4 current ops/sec; est completion in 8 minutes [INSERT: Count=2205237, Max=203903, Min=213, Avg=1811.76, 90=2747, 99=6915, 99.9=19679, 99.99=161023] 
2023-02-27 11:05:39:264 1760 sec: 393468653 operations; 221618.2 current ops/sec; est completion in 7 minutes [INSERT: Count=2216192, Max=46559, Min=228, Avg=1802.65, 90=2771, 99=6783, 99.9=18335, 99.99=30975] 
2023-02-27 11:05:49:264 1770 sec: 395709863 operations; 224121 current ops/sec; est completion in 7 minutes [INSERT: Count=2241210, Max=48927, Min=228, Avg=1782.67, 90=2771, 99=7579, 99.9=17919, 99.99=29759] 
2023-02-27 11:05:59:264 1780 sec: 397924429 operations; 221456.6 current ops/sec; est completion in 7 minutes [INSERT: Count=2214558, Max=43295, Min=231, Avg=1804.02, 90=2777, 99=7499, 99.9=19295, 99.99=39391] 
2023-02-27 11:06:09:264 1790 sec: 400162317 operations; 223766.42 current ops/sec; est completion in 7 minutes [INSERT: Count=2237888, Max=47199, Min=201, Avg=1785.15, 90=2831, 99=7763, 99.9=18399, 99.99=26847] 
2023-02-27 11:06:19:264 1800 sec: 402411005 operations; 224891.29 current ops/sec; est completion in 7 minutes [INSERT: Count=2248697, Max=117503, Min=210, Avg=1776.71, 90=2837, 99=7915, 99.9=20287, 99.99=45151] 
2023-02-27 11:06:29:264 1810 sec: 404633186 operations; 222218.1 current ops/sec; est completion in 7 minutes [INSERT: Count=2222180, Max=300031, Min=188, Avg=1797.95, 90=2891, 99=8099, 99.9=19247, 99.99=241407] 
2023-02-27 11:06:39:264 1820 sec: 406869194 operations; 223578.44 current ops/sec; est completion in 6 minutes [INSERT: Count=2236002, Max=91007, Min=206, Avg=1786.76, 90=2891, 99=7927, 99.9=18719, 99.99=31999] 
2023-02-27 11:06:49:264 1830 sec: 409122878 operations; 225390.94 current ops/sec; est completion in 6 minutes [INSERT: Count=2253687, Max=37151, Min=206, Avg=1772.69, 90=2857, 99=7679, 99.9=15919, 99.99=23295] 
2023-02-27 11:06:59:264 1840 sec: 411349158 operations; 222628 current ops/sec; est completion in 6 minutes [INSERT: Count=2226275, Max=126527, Min=193, Avg=1794.67, 90=2969, 99=8879, 99.9=23903, 99.99=74943] 
2023-02-27 11:07:09:264 1850 sec: 413597153 operations; 224799.5 current ops/sec; est completion in 6 minutes [INSERT: Count=2247993, Max=110655, Min=202, Avg=1775.9, 90=2969, 99=8519, 99.9=20015, 99.99=104959] 
2023-02-27 11:07:19:264 1860 sec: 415855656 operations; 225850.3 current ops/sec; est completion in 6 minutes [INSERT: Count=2258503, Max=201599, Min=197, Avg=1770.1, 90=2939, 99=8091, 99.9=18959, 99.99=128639] 
2023-02-27 11:07:29:264 1870 sec: 418109296 operations; 225364 current ops/sec; est completion in 6 minutes [INSERT: Count=2253639, Max=105983, Min=206, Avg=1772.9, 90=2897, 99=7971, 99.9=17135, 99.99=41631] 
2023-02-27 11:07:39:264 1880 sec: 420329190 operations; 221989.4 current ops/sec; est completion in 5 minutes [INSERT: Count=2219899, Max=100799, Min=210, Avg=1799.75, 90=2809, 99=7247, 99.9=21455, 99.99=38975] 
2023-02-27 11:07:49:264 1890 sec: 422564049 operations; 223485.9 current ops/sec; est completion in 5 minutes [INSERT: Count=2234861, Max=36095, Min=208, Avg=1787.67, 90=2741, 99=6451, 99.9=15375, 99.99=23151] 
2023-02-27 11:07:59:264 1900 sec: 424783079 operations; 221880.81 current ops/sec; est completion in 5 minutes [INSERT: Count=2219020, Max=139263, Min=202, Avg=1800.39, 90=2799, 99=7687, 99.9=17759, 99.99=50687] 
2023-02-27 11:08:09:264 1910 sec: 427037668 operations; 225481.45 current ops/sec; est completion in 5 minutes [INSERT: Count=2254597, Max=53375, Min=219, Avg=1772.11, 90=2901, 99=8719, 99.9=20063, 99.99=32639] 
2023-02-27 11:08:19:264 1920 sec: 429232408 operations; 219474 current ops/sec; est completion in 5 minutes [INSERT: Count=2194742, Max=314879, Min=185, Avg=1820.35, 90=2973, 99=9383, 99.9=23407, 99.99=226175] 
2023-02-27 11:08:29:264 1930 sec: 431468954 operations; 223654.6 current ops/sec; est completion in 5 minutes [INSERT: Count=2236543, Max=109055, Min=197, Avg=1786.28, 90=2823, 99=8695, 99.9=25823, 99.99=69567] 
2023-02-27 11:08:39:264 1940 sec: 433732173 operations; 226321.9 current ops/sec; est completion in 4 minutes [INSERT: Count=2263221, Max=99519, Min=196, Avg=1765.26, 90=2873, 99=8039, 99.9=17871, 99.99=36415] 
2023-02-27 11:08:49:264 1950 sec: 436019878 operations; 228770.5 current ops/sec; est completion in 4 minutes [INSERT: Count=2287704, Max=41471, Min=207, Avg=1746.33, 90=2969, 99=8367, 99.9=18399, 99.99=32495] 
2023-02-27 11:08:59:264 1960 sec: 438264200 operations; 224409.76 current ops/sec; est completion in 4 minutes [INSERT: Count=2244324, Max=219391, Min=201, Avg=1780.12, 90=3019, 99=8535, 99.9=19791, 99.99=147839] 
2023-02-27 11:09:09:264 1970 sec: 440506533 operations; 224255.73 current ops/sec; est completion in 4 minutes [INSERT: Count=2242332, Max=46783, Min=202, Avg=1781.66, 90=3105, 99=9735, 99.9=24287, 99.99=37023] 
2023-02-27 11:09:19:264 1980 sec: 442826136 operations; 231960.3 current ops/sec; est completion in 4 minutes [INSERT: Count=2319601, Max=42975, Min=203, Avg=1721.75, 90=3173, 99=10143, 99.9=20543, 99.99=30751] 
2023-02-27 11:09:29:264 1990 sec: 445129876 operations; 230374 current ops/sec; est completion in 4 minutes [INSERT: Count=2303740, Max=111231, Min=187, Avg=1734.23, 90=3237, 99=10791, 99.9=25855, 99.99=63519] 
2023-02-27 11:09:39:264 2000 sec: 447454185 operations; 232430.9 current ops/sec; est completion in 3 minutes [INSERT: Count=2324280, Max=49503, Min=211, Avg=1718.07, 90=3117, 99=9399, 99.9=22127, 99.99=32863] 
2023-02-27 11:09:49:264 2010 sec: 449745741 operations; 229155.6 current ops/sec; est completion in 3 minutes [INSERT: Count=2291589, Max=50303, Min=209, Avg=1744.7, 90=2933, 99=9063, 99.9=23087, 99.99=31567] 
2023-02-27 11:09:59:264 2020 sec: 452042201 operations; 229646 current ops/sec; est completion in 3 minutes [INSERT: Count=2296449, Max=33183, Min=208, Avg=1739.72, 90=2899, 99=7367, 99.9=15607, 99.99=24223] 
2023-02-27 11:10:09:264 2030 sec: 454298270 operations; 225606.9 current ops/sec; est completion in 3 minutes [INSERT: Count=2256077, Max=46015, Min=212, Avg=1770.89, 90=2837, 99=7327, 99.9=17583, 99.99=31823] 
2023-02-27 11:10:19:264 2040 sec: 456575728 operations; 227745.8 current ops/sec; est completion in 3 minutes [INSERT: Count=2277451, Max=93567, Min=194, Avg=1754.16, 90=2819, 99=7451, 99.9=17007, 99.99=43039] 
2023-02-27 11:10:29:264 2050 sec: 458864856 operations; 228912.8 current ops/sec; est completion in 3 minutes [INSERT: Count=2289138, Max=95039, Min=212, Avg=1745.25, 90=2841, 99=7783, 99.9=19615, 99.99=39199] 
2023-02-27 11:10:39:264 2060 sec: 461147455 operations; 228259.9 current ops/sec; est completion in 2 minutes [INSERT: Count=2282593, Max=101119, Min=195, Avg=1750.19, 90=3007, 99=9175, 99.9=19039, 99.99=29807] 
2023-02-27 11:10:49:264 2070 sec: 463422739 operations; 227505.65 current ops/sec; est completion in 2 minutes [INSERT: Count=2275293, Max=39551, Min=213, Avg=1755.89, 90=2927, 99=9015, 99.9=22511, 99.99=28319] 
2023-02-27 11:10:59:264 2080 sec: 465681086 operations; 225857.29 current ops/sec; est completion in 2 minutes [INSERT: Count=2258342, Max=94847, Min=200, Avg=1769.11, 90=2899, 99=8375, 99.9=18751, 99.99=40255] 
2023-02-27 11:11:09:264 2090 sec: 467919544 operations; 223845.8 current ops/sec; est completion in 2 minutes [INSERT: Count=2238456, Max=107199, Min=201, Avg=1784.78, 90=2969, 99=8487, 99.9=24591, 99.99=85631] 
2023-02-27 11:11:19:264 2100 sec: 470200582 operations; 228103.8 current ops/sec; est completion in 2 minutes [INSERT: Count=2281039, Max=108095, Min=204, Avg=1751.42, 90=2951, 99=8463, 99.9=22447, 99.99=35167] 
2023-02-27 11:11:29:264 2110 sec: 472463041 operations; 226245.9 current ops/sec; est completion in 2 minutes [INSERT: Count=2262453, Max=70847, Min=198, Avg=1765.82, 90=3117, 99=10407, 99.9=21823, 99.99=36895] 
2023-02-27 11:11:39:264 2120 sec: 474748159 operations; 228488.95 current ops/sec; est completion in 1 minute [INSERT: Count=2285120, Max=100031, Min=197, Avg=1748.38, 90=3125, 99=10007, 99.9=21935, 99.99=40927] 
2023-02-27 11:11:49:264 2130 sec: 477048918 operations; 230098.91 current ops/sec; est completion in 1 minute [INSERT: Count=2300756, Max=44671, Min=198, Avg=1736.36, 90=3155, 99=10799, 99.9=23423, 99.99=31119] 
2023-02-27 11:11:59:264 2140 sec: 479349641 operations; 230072.3 current ops/sec; est completion in 1 minute [INSERT: Count=2300727, Max=97663, Min=205, Avg=1736.4, 90=3109, 99=9767, 99.9=18959, 99.99=31103] 
2023-02-27 11:12:09:264 2150 sec: 481636461 operations; 228682 current ops/sec; est completion in 1 minute [INSERT: Count=2286812, Max=34111, Min=211, Avg=1747.05, 90=2931, 99=7951, 99.9=18447, 99.99=28479] 
2023-02-27 11:12:19:264 2160 sec: 483895386 operations; 225892.5 current ops/sec; est completion in 1 minute [INSERT: Count=2258927, Max=43903, Min=206, Avg=1768.64, 90=2847, 99=7935, 99.9=18127, 99.99=28543] 
2023-02-27 11:12:29:264 2170 sec: 486167153 operations; 227176.7 current ops/sec; est completion in 1 minute [INSERT: Count=2271765, Max=36735, Min=204, Avg=1758.46, 90=2791, 99=7447, 99.9=16655, 99.99=29983] 
2023-02-27 11:12:39:264 2180 sec: 488425424 operations; 225827.1 current ops/sec; est completion in 52 seconds [INSERT: Count=2258280, Max=43743, Min=205, Avg=1769.3, 90=2925, 99=8059, 99.9=18143, 99.99=29631] 
2023-02-27 11:12:49:264 2190 sec: 490649758 operations; 222433.4 current ops/sec; est completion in 42 seconds [INSERT: Count=2224340, Max=41823, Min=207, Avg=1796.16, 90=2919, 99=8131, 99.9=17791, 99.99=34335] 
2023-02-27 11:12:59:264 2200 sec: 492893895 operations; 224413.7 current ops/sec; est completion in 32 seconds [INSERT: Count=2244136, Max=37215, Min=206, Avg=1780.3, 90=2905, 99=8655, 99.9=17551, 99.99=25839] 
2023-02-27 11:13:09:264 2210 sec: 495169585 operations; 227569 current ops/sec; est completion in 22 seconds [INSERT: Count=2275683, Max=96703, Min=210, Avg=1755.54, 90=2887, 99=7611, 99.9=16687, 99.99=32623] 
2023-02-27 11:13:19:264 2220 sec: 497436853 operations; 226726.8 current ops/sec; est completion in 12 seconds [INSERT: Count=2267276, Max=117759, Min=207, Avg=1762.05, 90=2871, 99=8011, 99.9=16735, 99.99=54079] 
2023-02-27 11:13:29:264 2230 sec: 499661046 operations; 222419.3 current ops/sec; est completion in 2 second [CLEANUP: Count=97, Max=22, Min=1, Avg=3.53, 90=4, 99=14, 99.9=22, 99.99=22] [INSERT: Count=2224199, Max=178047, Min=190, Avg=1743.07, 90=2853, 99=7811, 99.9=20111, 99.99=122815] 
2023-02-27 11:13:34:697 2235 sec: 500000000 operations; 62376.52 current ops/sec; [CLEANUP: Count=303, Max=2220031, Min=0, Avg=7324.6, 90=2, 99=12, 99.9=2220031, 99.99=2220031] [INSERT: Count=338914, Max=16815, Min=174, Avg=1100.07, 90=1940, 99=3249, 99.9=6723, 99.99=9015] 
[OVERALL], RunTime(ms), 2235432
[OVERALL], Throughput(ops/sec), 223670.4135934352
[TOTAL_GCS_PS_Scavenge], Count, 2508
[TOTAL_GC_TIME_PS_Scavenge], Time(ms), 23545
[TOTAL_GC_TIME_%_PS_Scavenge], Time(%), 1.0532639776114863
[TOTAL_GCS_PS_MarkSweep], Count, 5
[TOTAL_GC_TIME_PS_MarkSweep], Time(ms), 424
[TOTAL_GC_TIME_%_PS_MarkSweep], Time(%), 0.018967251072723304
[TOTAL_GCs], Count, 2513
[TOTAL_GC_TIME], Time(ms), 23969
[TOTAL_GC_TIME_%], Time(%), 1.0722312286842097
[CLEANUP], Operations, 400
[CLEANUP], AverageLatency(us), 5549.24
[CLEANUP], MinLatency(us), 0
[CLEANUP], MaxLatency(us), 2220031
[CLEANUP], 95thPercentileLatency(us), 4
[CLEANUP], 99thPercentileLatency(us), 14
[INSERT], Operations, 500000000
[INSERT], AverageLatency(us), 1781.703002104
[INSERT], MinLatency(us), 174
[INSERT], MaxLatency(us), 340223
[INSERT], 95thPercentileLatency(us), 4089
[INSERT], 99thPercentileLatency(us), 8935
[INSERT], Return=OK, 500000000
